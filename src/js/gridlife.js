if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2760";
cljs.core._STAR_unchecked_if_STAR_ = false;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__11191__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__11190 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__11190) : cljs.core.into_array.call(null, G__11190);
      }());
    };
    var G__11191 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__11192__i = 0, G__11192__a = new Array(arguments.length - 0);
        while (G__11192__i < G__11192__a.length) {
          G__11192__a[G__11192__i] = arguments[G__11192__i + 0];
          ++G__11192__i;
        }
        args = new cljs.core.IndexedSeq(G__11192__a, 0);
      }
      return G__11191__delegate.call(this, args);
    };
    G__11191.cljs$lang$maxFixedArity = 0;
    G__11191.cljs$lang$applyTo = function(arglist__11193) {
      var args = cljs.core.seq(arglist__11193);
      return G__11191__delegate(args);
    };
    G__11191.cljs$core$IFn$_invoke$arity$variadic = G__11191__delegate;
    return G__11191;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var G__11195 = x;
  return goog.isString(G__11195);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__11197 = x__$1;
    return goog.typeOf(G__11197);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3756__auto__ = ty;
    if (cljs.core.truth_(and__3756__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3756__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__11199 = obj;
    return goog.typeOf(G__11199);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.importScript_(file);
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__11201 = Symbol;
  return goog.typeOf(G__11201);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.cljs$core$IFn$_invoke$arity$1(size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4655__auto___11203 = len;
  var i_11204 = 0;
  while (true) {
    if (i_11204 < n__4655__auto___11203) {
      new_arr[i_11204] = arr[i_11204];
      var G__11205 = i_11204 + 1;
      i_11204 = G__11205;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__11206 = i + 1;
      i = G__11206;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__11215__delegate = function(array, i, idxs) {
      var G__11212 = aget;
      var G__11213 = aget.cljs$core$IFn$_invoke$arity$2(array, i);
      var G__11214 = idxs;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__11212, G__11213, G__11214) : cljs.core.apply.call(null, G__11212, G__11213, G__11214);
    };
    var G__11215 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        var G__11216__i = 0, G__11216__a = new Array(arguments.length - 2);
        while (G__11216__i < G__11216__a.length) {
          G__11216__a[G__11216__i] = arguments[G__11216__i + 2];
          ++G__11216__i;
        }
        idxs = new cljs.core.IndexedSeq(G__11216__a, 0);
      }
      return G__11215__delegate.call(this, array, i, idxs);
    };
    G__11215.cljs$lang$maxFixedArity = 2;
    G__11215.cljs$lang$applyTo = function(arglist__11217) {
      var array = cljs.core.first(arglist__11217);
      arglist__11217 = cljs.core.next(arglist__11217);
      var i = cljs.core.first(arglist__11217);
      var idxs = cljs.core.rest(arglist__11217);
      return G__11215__delegate(array, i, idxs);
    };
    G__11215.cljs$core$IFn$_invoke$arity$variadic = G__11215__delegate;
    return G__11215;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        var G__11218 = null;
        if (arguments.length > 2) {
          var G__11219__i = 0, G__11219__a = new Array(arguments.length - 2);
          while (G__11219__i < G__11219__a.length) {
            G__11219__a[G__11219__i] = arguments[G__11219__i + 2];
            ++G__11219__i;
          }
          G__11218 = new cljs.core.IndexedSeq(G__11219__a, 0);
        }
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, G__11218);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__11228__delegate = function(array, idx, idx2, idxv) {
      var G__11224 = aset;
      var G__11225 = array[idx];
      var G__11226 = idx2;
      var G__11227 = idxv;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__11224, G__11225, G__11226, G__11227) : cljs.core.apply.call(null, G__11224, G__11225, G__11226, G__11227);
    };
    var G__11228 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        var G__11229__i = 0, G__11229__a = new Array(arguments.length - 3);
        while (G__11229__i < G__11229__a.length) {
          G__11229__a[G__11229__i] = arguments[G__11229__i + 3];
          ++G__11229__i;
        }
        idxv = new cljs.core.IndexedSeq(G__11229__a, 0);
      }
      return G__11228__delegate.call(this, array, idx, idx2, idxv);
    };
    G__11228.cljs$lang$maxFixedArity = 3;
    G__11228.cljs$lang$applyTo = function(arglist__11230) {
      var array = cljs.core.first(arglist__11230);
      arglist__11230 = cljs.core.next(arglist__11230);
      var idx = cljs.core.first(arglist__11230);
      arglist__11230 = cljs.core.next(arglist__11230);
      var idx2 = cljs.core.first(arglist__11230);
      var idxv = cljs.core.rest(arglist__11230);
      return G__11228__delegate(array, idx, idx2, idxv);
    };
    G__11228.cljs$core$IFn$_invoke$arity$variadic = G__11228__delegate;
    return G__11228;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        var G__11231 = null;
        if (arguments.length > 3) {
          var G__11232__i = 0, G__11232__a = new Array(arguments.length - 3);
          while (G__11232__i < G__11232__a.length) {
            G__11232__a[G__11232__i] = arguments[G__11232__i + 3];
            ++G__11232__i;
          }
          G__11231 = new cljs.core.IndexedSeq(G__11232__a, 0);
        }
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, G__11231);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    var G__11238 = function(a, x) {
      a.push(x);
      return a;
    };
    var G__11239 = [];
    var G__11240 = aseq;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__11238, G__11239, G__11240) : cljs.core.reduce.call(null, G__11238, G__11239, G__11240);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.js_invoke = function() {
  var js_invoke__delegate = function(obj, s, args) {
    return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
  };
  var js_invoke = function(obj, s, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__11241__i = 0, G__11241__a = new Array(arguments.length - 2);
      while (G__11241__i < G__11241__a.length) {
        G__11241__a[G__11241__i] = arguments[G__11241__i + 2];
        ++G__11241__i;
      }
      args = new cljs.core.IndexedSeq(G__11241__a, 0);
    }
    return js_invoke__delegate.call(this, obj, s, args);
  };
  js_invoke.cljs$lang$maxFixedArity = 2;
  js_invoke.cljs$lang$applyTo = function(arglist__11242) {
    var obj = cljs.core.first(arglist__11242);
    arglist__11242 = cljs.core.next(arglist__11242);
    var s = cljs.core.first(arglist__11242);
    var args = cljs.core.rest(arglist__11242);
    return js_invoke__delegate(obj, s, args);
  };
  js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
  return js_invoke;
}();
cljs.core.Fn = function() {
  var obj11244 = {};
  return obj11244;
}();
cljs.core.IFn = function() {
  var obj11246 = {};
  return obj11246;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11292 = x__4412__auto__;
          return goog.typeOf(G__11292);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11294 = x__4412__auto__;
          return goog.typeOf(G__11294);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11296 = x__4412__auto__;
          return goog.typeOf(G__11296);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11298 = x__4412__auto__;
          return goog.typeOf(G__11298);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11300 = x__4412__auto__;
          return goog.typeOf(G__11300);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11302 = x__4412__auto__;
          return goog.typeOf(G__11302);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11304 = x__4412__auto__;
          return goog.typeOf(G__11304);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11306 = x__4412__auto__;
          return goog.typeOf(G__11306);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11308 = x__4412__auto__;
          return goog.typeOf(G__11308);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11310 = x__4412__auto__;
          return goog.typeOf(G__11310);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11312 = x__4412__auto__;
          return goog.typeOf(G__11312);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11314 = x__4412__auto__;
          return goog.typeOf(G__11314);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11316 = x__4412__auto__;
          return goog.typeOf(G__11316);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11318 = x__4412__auto__;
          return goog.typeOf(G__11318);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11320 = x__4412__auto__;
          return goog.typeOf(G__11320);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11322 = x__4412__auto__;
          return goog.typeOf(G__11322);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11324 = x__4412__auto__;
          return goog.typeOf(G__11324);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11326 = x__4412__auto__;
          return goog.typeOf(G__11326);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11328 = x__4412__auto__;
          return goog.typeOf(G__11328);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11330 = x__4412__auto__;
          return goog.typeOf(G__11330);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11332 = x__4412__auto__;
          return goog.typeOf(G__11332);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var _invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11334 = x__4412__auto__;
          return goog.typeOf(G__11334);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return _invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  _invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj11336 = {};
  return obj11336;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3756__auto__ = value;
    if (and__3756__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4412__auto__ = value == null ? null : value;
    return function() {
      var or__3768__auto__ = cljs.core._clone[function() {
        var G__11340 = x__4412__auto__;
        return goog.typeOf(G__11340);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._clone["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj11342 = {};
  return obj11342;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._count[function() {
        var G__11346 = x__4412__auto__;
        return goog.typeOf(G__11346);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._count["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj11348 = {};
  return obj11348;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._empty[function() {
        var G__11352 = x__4412__auto__;
        return goog.typeOf(G__11352);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._empty["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj11354 = {};
  return obj11354;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._conj[function() {
        var G__11358 = x__4412__auto__;
        return goog.typeOf(G__11358);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._conj["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj11360 = {};
  return obj11360;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3756__auto__ = coll;
      if (and__3756__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4412__auto__ = coll == null ? null : coll;
      return function() {
        var or__3768__auto__ = cljs.core._nth[function() {
          var G__11366 = x__4412__auto__;
          return goog.typeOf(G__11366);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._nth["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3756__auto__ = coll;
      if (and__3756__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4412__auto__ = coll == null ? null : coll;
      return function() {
        var or__3768__auto__ = cljs.core._nth[function() {
          var G__11368 = x__4412__auto__;
          return goog.typeOf(G__11368);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._nth["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj11370 = {};
  return obj11370;
}();
cljs.core.ISeq = function() {
  var obj11372 = {};
  return obj11372;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._first[function() {
        var G__11376 = x__4412__auto__;
        return goog.typeOf(G__11376);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._first["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._rest[function() {
        var G__11380 = x__4412__auto__;
        return goog.typeOf(G__11380);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._rest["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj11382 = {};
  return obj11382;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._next[function() {
        var G__11386 = x__4412__auto__;
        return goog.typeOf(G__11386);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._next["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj11388 = {};
  return obj11388;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3756__auto__ = o;
      if (and__3756__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4412__auto__ = o == null ? null : o;
      return function() {
        var or__3768__auto__ = cljs.core._lookup[function() {
          var G__11394 = x__4412__auto__;
          return goog.typeOf(G__11394);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._lookup["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3756__auto__ = o;
      if (and__3756__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4412__auto__ = o == null ? null : o;
      return function() {
        var or__3768__auto__ = cljs.core._lookup[function() {
          var G__11396 = x__4412__auto__;
          return goog.typeOf(G__11396);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._lookup["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj11398 = {};
  return obj11398;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__11402 = x__4412__auto__;
        return goog.typeOf(G__11402);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._assoc[function() {
        var G__11406 = x__4412__auto__;
        return goog.typeOf(G__11406);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._assoc["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj11408 = {};
  return obj11408;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._dissoc[function() {
        var G__11412 = x__4412__auto__;
        return goog.typeOf(G__11412);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._dissoc["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj11414 = {};
  return obj11414;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._key[function() {
        var G__11418 = x__4412__auto__;
        return goog.typeOf(G__11418);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._key["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._val[function() {
        var G__11422 = x__4412__auto__;
        return goog.typeOf(G__11422);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._val["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj11424 = {};
  return obj11424;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._disjoin[function() {
        var G__11428 = x__4412__auto__;
        return goog.typeOf(G__11428);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._disjoin["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj11430 = {};
  return obj11430;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._peek[function() {
        var G__11434 = x__4412__auto__;
        return goog.typeOf(G__11434);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._peek["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._pop[function() {
        var G__11438 = x__4412__auto__;
        return goog.typeOf(G__11438);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._pop["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj11440 = {};
  return obj11440;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._assoc_n[function() {
        var G__11444 = x__4412__auto__;
        return goog.typeOf(G__11444);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj11446 = {};
  return obj11446;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3756__auto__ = o;
    if (and__3756__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4412__auto__ = o == null ? null : o;
    return function() {
      var or__3768__auto__ = cljs.core._deref[function() {
        var G__11450 = x__4412__auto__;
        return goog.typeOf(G__11450);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._deref["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj11452 = {};
  return obj11452;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3756__auto__ = o;
    if (and__3756__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4412__auto__ = o == null ? null : o;
    return function() {
      var or__3768__auto__ = cljs.core._deref_with_timeout[function() {
        var G__11456 = x__4412__auto__;
        return goog.typeOf(G__11456);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj11458 = {};
  return obj11458;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3756__auto__ = o;
    if (and__3756__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4412__auto__ = o == null ? null : o;
    return function() {
      var or__3768__auto__ = cljs.core._meta[function() {
        var G__11462 = x__4412__auto__;
        return goog.typeOf(G__11462);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._meta["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj11464 = {};
  return obj11464;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3756__auto__ = o;
    if (and__3756__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4412__auto__ = o == null ? null : o;
    return function() {
      var or__3768__auto__ = cljs.core._with_meta[function() {
        var G__11468 = x__4412__auto__;
        return goog.typeOf(G__11468);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._with_meta["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj11470 = {};
  return obj11470;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3756__auto__ = coll;
      if (and__3756__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4412__auto__ = coll == null ? null : coll;
      return function() {
        var or__3768__auto__ = cljs.core._reduce[function() {
          var G__11476 = x__4412__auto__;
          return goog.typeOf(G__11476);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._reduce["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3756__auto__ = coll;
      if (and__3756__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4412__auto__ = coll == null ? null : coll;
      return function() {
        var or__3768__auto__ = cljs.core._reduce[function() {
          var G__11478 = x__4412__auto__;
          return goog.typeOf(G__11478);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._reduce["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj11480 = {};
  return obj11480;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._kv_reduce[function() {
        var G__11484 = x__4412__auto__;
        return goog.typeOf(G__11484);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj11486 = {};
  return obj11486;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3756__auto__ = o;
    if (and__3756__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4412__auto__ = o == null ? null : o;
    return function() {
      var or__3768__auto__ = cljs.core._equiv[function() {
        var G__11490 = x__4412__auto__;
        return goog.typeOf(G__11490);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._equiv["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj11492 = {};
  return obj11492;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3756__auto__ = o;
    if (and__3756__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4412__auto__ = o == null ? null : o;
    return function() {
      var or__3768__auto__ = cljs.core._hash[function() {
        var G__11496 = x__4412__auto__;
        return goog.typeOf(G__11496);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._hash["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj11498 = {};
  return obj11498;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3756__auto__ = o;
    if (and__3756__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4412__auto__ = o == null ? null : o;
    return function() {
      var or__3768__auto__ = cljs.core._seq[function() {
        var G__11502 = x__4412__auto__;
        return goog.typeOf(G__11502);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._seq["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj11504 = {};
  return obj11504;
}();
cljs.core.IList = function() {
  var obj11506 = {};
  return obj11506;
}();
cljs.core.IRecord = function() {
  var obj11508 = {};
  return obj11508;
}();
cljs.core.IReversible = function() {
  var obj11510 = {};
  return obj11510;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._rseq[function() {
        var G__11514 = x__4412__auto__;
        return goog.typeOf(G__11514);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._rseq["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj11516 = {};
  return obj11516;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._sorted_seq[function() {
        var G__11520 = x__4412__auto__;
        return goog.typeOf(G__11520);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._sorted_seq_from[function() {
        var G__11524 = x__4412__auto__;
        return goog.typeOf(G__11524);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._entry_key[function() {
        var G__11528 = x__4412__auto__;
        return goog.typeOf(G__11528);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._entry_key["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._comparator[function() {
        var G__11532 = x__4412__auto__;
        return goog.typeOf(G__11532);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._comparator["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj11534 = {};
  return obj11534;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3756__auto__ = writer;
    if (and__3756__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4412__auto__ = writer == null ? null : writer;
    return function() {
      var or__3768__auto__ = cljs.core._write[function() {
        var G__11538 = x__4412__auto__;
        return goog.typeOf(G__11538);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._write["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3756__auto__ = writer;
    if (and__3756__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4412__auto__ = writer == null ? null : writer;
    return function() {
      var or__3768__auto__ = cljs.core._flush[function() {
        var G__11542 = x__4412__auto__;
        return goog.typeOf(G__11542);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._flush["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj11544 = {};
  return obj11544;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3756__auto__ = o;
    if (and__3756__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4412__auto__ = o == null ? null : o;
    return function() {
      var or__3768__auto__ = cljs.core._pr_writer[function() {
        var G__11548 = x__4412__auto__;
        return goog.typeOf(G__11548);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj11550 = {};
  return obj11550;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3756__auto__ = d;
    if (and__3756__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4412__auto__ = d == null ? null : d;
    return function() {
      var or__3768__auto__ = cljs.core._realized_QMARK_[function() {
        var G__11554 = x__4412__auto__;
        return goog.typeOf(G__11554);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj11556 = {};
  return obj11556;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = cljs.core._notify_watches[function() {
        var G__11560 = x__4412__auto__;
        return goog.typeOf(G__11560);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = cljs.core._add_watch[function() {
        var G__11564 = x__4412__auto__;
        return goog.typeOf(G__11564);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._add_watch["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = cljs.core._remove_watch[function() {
        var G__11568 = x__4412__auto__;
        return goog.typeOf(G__11568);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj11570 = {};
  return obj11570;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._as_transient[function() {
        var G__11574 = x__4412__auto__;
        return goog.typeOf(G__11574);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._as_transient["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj11576 = {};
  return obj11576;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3756__auto__ = tcoll;
    if (and__3756__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4412__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3768__auto__ = cljs.core._conj_BANG_[function() {
        var G__11580 = x__4412__auto__;
        return goog.typeOf(G__11580);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3756__auto__ = tcoll;
    if (and__3756__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4412__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3768__auto__ = cljs.core._persistent_BANG_[function() {
        var G__11584 = x__4412__auto__;
        return goog.typeOf(G__11584);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj11586 = {};
  return obj11586;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3756__auto__ = tcoll;
    if (and__3756__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4412__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3768__auto__ = cljs.core._assoc_BANG_[function() {
        var G__11590 = x__4412__auto__;
        return goog.typeOf(G__11590);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj11592 = {};
  return obj11592;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3756__auto__ = tcoll;
    if (and__3756__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4412__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3768__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__11596 = x__4412__auto__;
        return goog.typeOf(G__11596);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj11598 = {};
  return obj11598;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3756__auto__ = tcoll;
    if (and__3756__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4412__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3768__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__11602 = x__4412__auto__;
        return goog.typeOf(G__11602);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3756__auto__ = tcoll;
    if (and__3756__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4412__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3768__auto__ = cljs.core._pop_BANG_[function() {
        var G__11606 = x__4412__auto__;
        return goog.typeOf(G__11606);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj11608 = {};
  return obj11608;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3756__auto__ = tcoll;
    if (and__3756__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4412__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3768__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__11612 = x__4412__auto__;
        return goog.typeOf(G__11612);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj11614 = {};
  return obj11614;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3756__auto__ = x;
    if (and__3756__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4412__auto__ = x == null ? null : x;
    return function() {
      var or__3768__auto__ = cljs.core._compare[function() {
        var G__11618 = x__4412__auto__;
        return goog.typeOf(G__11618);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._compare["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj11620 = {};
  return obj11620;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._drop_first[function() {
        var G__11624 = x__4412__auto__;
        return goog.typeOf(G__11624);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._drop_first["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj11626 = {};
  return obj11626;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._chunked_first[function() {
        var G__11630 = x__4412__auto__;
        return goog.typeOf(G__11630);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._chunked_rest[function() {
        var G__11634 = x__4412__auto__;
        return goog.typeOf(G__11634);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj11636 = {};
  return obj11636;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._chunked_next[function() {
        var G__11640 = x__4412__auto__;
        return goog.typeOf(G__11640);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj11642 = {};
  return obj11642;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3756__auto__ = x;
    if (and__3756__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4412__auto__ = x == null ? null : x;
    return function() {
      var or__3768__auto__ = cljs.core._name[function() {
        var G__11646 = x__4412__auto__;
        return goog.typeOf(G__11646);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._name["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3756__auto__ = x;
    if (and__3756__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4412__auto__ = x == null ? null : x;
    return function() {
      var or__3768__auto__ = cljs.core._namespace[function() {
        var G__11650 = x__4412__auto__;
        return goog.typeOf(G__11650);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._namespace["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj11652 = {};
  return obj11652;
}();
cljs.core.IReset = function() {
  var obj11654 = {};
  return obj11654;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3756__auto__ = o;
    if (and__3756__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4412__auto__ = o == null ? null : o;
    return function() {
      var or__3768__auto__ = cljs.core._reset_BANG_[function() {
        var G__11658 = x__4412__auto__;
        return goog.typeOf(G__11658);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj11660 = {};
  return obj11660;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3756__auto__ = o;
      if (and__3756__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4412__auto__ = o == null ? null : o;
      return function() {
        var or__3768__auto__ = cljs.core._swap_BANG_[function() {
          var G__11670 = x__4412__auto__;
          return goog.typeOf(G__11670);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3756__auto__ = o;
      if (and__3756__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4412__auto__ = o == null ? null : o;
      return function() {
        var or__3768__auto__ = cljs.core._swap_BANG_[function() {
          var G__11672 = x__4412__auto__;
          return goog.typeOf(G__11672);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3756__auto__ = o;
      if (and__3756__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4412__auto__ = o == null ? null : o;
      return function() {
        var or__3768__auto__ = cljs.core._swap_BANG_[function() {
          var G__11674 = x__4412__auto__;
          return goog.typeOf(G__11674);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3756__auto__ = o;
      if (and__3756__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4412__auto__ = o == null ? null : o;
      return function() {
        var or__3768__auto__ = cljs.core._swap_BANG_[function() {
          var G__11676 = x__4412__auto__;
          return goog.typeOf(G__11676);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.IVolatile = function() {
  var obj11678 = {};
  return obj11678;
}();
cljs.core._vreset_BANG_ = function _vreset_BANG_(o, new_value) {
  if (function() {
    var and__3756__auto__ = o;
    if (and__3756__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4412__auto__ = o == null ? null : o;
    return function() {
      var or__3768__auto__ = cljs.core._vreset_BANG_[function() {
        var G__11682 = x__4412__auto__;
        return goog.typeOf(G__11682);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj11684 = {};
  return obj11684;
}();
cljs.core._iterator = function _iterator(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._iterator[function() {
        var G__11688 = x__4412__auto__;
        return goog.typeOf(G__11688);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._iterator["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__11691 = 4294967295;
  var G__11692 = 5;
  return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11691, G__11692) : Math.imul.call(null, G__11691, G__11692);
}() === 0)) {
  cljs.core.imul = function imul(a, b) {
    var G__11695 = a;
    var G__11696 = b;
    return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11695, G__11696) : Math.imul.call(null, G__11695, G__11696);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__11697 = i + 2;
        var G__11698 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__11697;
        h1 = G__11698;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj11700 = {};
  return obj11700;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__11701 = i + 1;
          var G__11702 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__11701;
          hash = G__11702;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj11706 = {};
      return obj11706;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__11709 = o;
    if (G__11709) {
      var bit__4442__auto__ = G__11709.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4442__auto__ || G__11709.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__11710 = o;
        return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11710) : Math.floor.call(null, G__11710);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3756__auto__ = cljs.core.not(a.ns);
      if (and__3756__auto__) {
        return b.ns;
      } else {
        return and__3756__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__11717 = a.ns;
            var G__11718 = b.ns;
            return goog.array.defaultCompare(G__11717, G__11718);
          }();
          if (0 === nsc) {
            var G__11719 = a.name;
            var G__11720 = b.name;
            return goog.array.defaultCompare(G__11719, G__11720);
          } else {
            return nsc;
          }
        }
      } else {
        var G__11721 = a.name;
        var G__11722 = b.name;
        return goog.array.defaultCompare(G__11721, G__11722);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4189__auto__ = self__._hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__11724 = null;
  var G__11724__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__11724__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__11724 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11724__2.call(this, self__, coll);
      case 3:
        return G__11724__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11724.cljs$core$IFn$_invoke$arity$2 = G__11724__2;
  G__11724.cljs$core$IFn$_invoke$arity$3 = G__11724__3;
  return G__11724;
}();
cljs.core.Symbol.prototype.apply = function(self__, args11723) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11723)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 163841;
};
cljs.core.Var.prototype.call = function() {
  var G__11772 = null;
  var G__11772__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null);
  };
  var G__11772__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a);
  };
  var G__11772__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b);
  };
  var G__11772__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c);
  };
  var G__11772__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d);
  };
  var G__11772__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e);
  };
  var G__11772__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f);
  };
  var G__11772__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g);
  };
  var G__11772__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h);
  };
  var G__11772__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__11772__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__11772__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__11772__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__11772__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__11772__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__11772__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__11772__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__11772__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__11772__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__11772__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__11772__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__11772__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11728 = function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }();
    var G__11729 = a;
    var G__11730 = b;
    var G__11731 = c;
    var G__11732 = d;
    var G__11733 = e;
    var G__11734 = f;
    var G__11735 = g;
    var G__11736 = h;
    var G__11737 = i;
    var G__11738 = j;
    var G__11739 = k;
    var G__11740 = l;
    var G__11741 = m;
    var G__11742 = n;
    var G__11743 = o;
    var G__11744 = p;
    var G__11745 = q;
    var G__11746 = r;
    var G__11747 = s;
    var G__11748 = t;
    var G__11749 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11728, G__11729, G__11730, G__11731, G__11732, G__11733, G__11734, G__11735, G__11736, G__11737, G__11738, G__11739, G__11740, G__11741, G__11742, G__11743, G__11744, G__11745, G__11746, G__11747, G__11748, G__11749) : cljs.core.apply.call(null, G__11728, G__11729, G__11730, G__11731, G__11732, G__11733, G__11734, G__11735, G__11736, G__11737, G__11738, G__11739, G__11740, G__11741, G__11742, 
    G__11743, G__11744, G__11745, G__11746, G__11747, G__11748, G__11749);
  };
  G__11772 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__11772__1.call(this, self__);
      case 2:
        return G__11772__2.call(this, self__, a);
      case 3:
        return G__11772__3.call(this, self__, a, b);
      case 4:
        return G__11772__4.call(this, self__, a, b, c);
      case 5:
        return G__11772__5.call(this, self__, a, b, c, d);
      case 6:
        return G__11772__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__11772__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__11772__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__11772__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__11772__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__11772__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__11772__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__11772__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__11772__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__11772__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__11772__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__11772__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__11772__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__11772__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__11772__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__11772__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__11772__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11772.cljs$core$IFn$_invoke$arity$1 = G__11772__1;
  G__11772.cljs$core$IFn$_invoke$arity$2 = G__11772__2;
  G__11772.cljs$core$IFn$_invoke$arity$3 = G__11772__3;
  G__11772.cljs$core$IFn$_invoke$arity$4 = G__11772__4;
  G__11772.cljs$core$IFn$_invoke$arity$5 = G__11772__5;
  G__11772.cljs$core$IFn$_invoke$arity$6 = G__11772__6;
  G__11772.cljs$core$IFn$_invoke$arity$7 = G__11772__7;
  G__11772.cljs$core$IFn$_invoke$arity$8 = G__11772__8;
  G__11772.cljs$core$IFn$_invoke$arity$9 = G__11772__9;
  G__11772.cljs$core$IFn$_invoke$arity$10 = G__11772__10;
  G__11772.cljs$core$IFn$_invoke$arity$11 = G__11772__11;
  G__11772.cljs$core$IFn$_invoke$arity$12 = G__11772__12;
  G__11772.cljs$core$IFn$_invoke$arity$13 = G__11772__13;
  G__11772.cljs$core$IFn$_invoke$arity$14 = G__11772__14;
  G__11772.cljs$core$IFn$_invoke$arity$15 = G__11772__15;
  G__11772.cljs$core$IFn$_invoke$arity$16 = G__11772__16;
  G__11772.cljs$core$IFn$_invoke$arity$17 = G__11772__17;
  G__11772.cljs$core$IFn$_invoke$arity$18 = G__11772__18;
  G__11772.cljs$core$IFn$_invoke$arity$19 = G__11772__19;
  G__11772.cljs$core$IFn$_invoke$arity$20 = G__11772__20;
  G__11772.cljs$core$IFn$_invoke$arity$21 = G__11772__21;
  G__11772.cljs$core$IFn$_invoke$arity$22 = G__11772__22;
  return G__11772;
}();
cljs.core.Var.prototype.apply = function(self__, args11727) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11727)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__11750 = function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }();
  var G__11751 = a;
  var G__11752 = b;
  var G__11753 = c;
  var G__11754 = d;
  var G__11755 = e;
  var G__11756 = f;
  var G__11757 = g;
  var G__11758 = h;
  var G__11759 = i;
  var G__11760 = j;
  var G__11761 = k;
  var G__11762 = l;
  var G__11763 = m;
  var G__11764 = n;
  var G__11765 = o;
  var G__11766 = p;
  var G__11767 = q;
  var G__11768 = r;
  var G__11769 = s;
  var G__11770 = t;
  var G__11771 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11750, G__11751, G__11752, G__11753, G__11754, G__11755, G__11756, G__11757, G__11758, G__11759, G__11760, G__11761, G__11762, G__11763, G__11764, G__11765, G__11766, G__11767, G__11768, G__11769, G__11770, G__11771) : cljs.core.apply.call(null, G__11750, G__11751, G__11752, G__11753, G__11754, G__11755, G__11756, G__11757, G__11758, G__11759, G__11760, G__11761, G__11762, G__11763, G__11764, 
  G__11765, G__11766, G__11767, G__11768, G__11769, G__11770, G__11771);
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function __GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function iterable_QMARK_(x) {
  var G__11774 = x;
  if (G__11774) {
    var bit__4449__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3768__auto__ = bit__4449__auto__;
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        return G__11774.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__11774.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__11774);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__11774);
  }
};
cljs.core.clone = function clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__11776 = value;
  if (G__11776) {
    var bit__4449__auto__ = G__11776.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4449__auto__ || G__11776.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__11776.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__11776);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__11776);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__11778 = coll;
      if (G__11778) {
        var bit__4442__auto__ = G__11778.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4442__auto__ || G__11778.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__11780 = coll;
      if (G__11780) {
        var bit__4442__auto__ = G__11780.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4442__auto__ || G__11780.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__11782 = coll;
      if (G__11782) {
        var bit__4442__auto__ = G__11782.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4442__auto__ || G__11782.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__11784 = coll;
      if (G__11784) {
        var bit__4442__auto__ = G__11784.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4442__auto__ || G__11784.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv(x, y);
    }
  };
  var _EQ___3 = function() {
    var G__11789__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__11790 = y;
            var G__11791 = cljs.core.first(more);
            var G__11792 = cljs.core.next(more);
            x = G__11790;
            y = G__11791;
            more = G__11792;
            continue;
          } else {
            return _EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11789 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11793__i = 0, G__11793__a = new Array(arguments.length - 2);
        while (G__11793__i < G__11793__a.length) {
          G__11793__a[G__11793__i] = arguments[G__11793__i + 2];
          ++G__11793__i;
        }
        more = new cljs.core.IndexedSeq(G__11793__a, 0);
      }
      return G__11789__delegate.call(this, x, y, more);
    };
    G__11789.cljs$lang$maxFixedArity = 2;
    G__11789.cljs$lang$applyTo = function(arglist__11794) {
      var x = cljs.core.first(arglist__11794);
      arglist__11794 = cljs.core.next(arglist__11794);
      var y = cljs.core.first(arglist__11794);
      var more = cljs.core.rest(arglist__11794);
      return G__11789__delegate(x, y, more);
    };
    G__11789.cljs$core$IFn$_invoke$arity$variadic = G__11789__delegate;
    return G__11789;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        var G__11795 = null;
        if (arguments.length > 2) {
          var G__11796__i = 0, G__11796__a = new Array(arguments.length - 2);
          while (G__11796__i < G__11796__a.length) {
            G__11796__a[G__11796__i] = arguments[G__11796__i + 2];
            ++G__11796__i;
          }
          G__11795 = new cljs.core.IndexedSeq(G__11796__a, 0);
        }
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11795);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function __GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__11797 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__11797) : cljs.core.es6_iterator_seq.call(null, G__11797);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function __GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__11798 = n + 1;
      var G__11799 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__11800 = cljs.core.next(coll__$1);
      n = G__11798;
      hash_code = G__11799;
      coll__$1 = G__11800;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__11801 = n + 1;
      var G__11802 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__11803 = cljs.core.next(coll__$1);
      n = G__11801;
      hash_code = G__11802;
      coll__$1 = G__11803;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__11804 = o;
  return goog.getUid(G__11804);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__11806 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11806) : cljs.core.deref.call(null, G__11806);
  } else {
    return x;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count(cicoll);
    if (cnt === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__11813 = val;
            var G__11814 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11813, G__11814) : f.call(null, G__11813, G__11814);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__11819 = nval;
            var G__11820 = n + 1;
            val = G__11819;
            n = G__11820;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__11815 = val__$1;
          var G__11816 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11815, G__11816) : f.call(null, G__11815, G__11816);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11821 = nval;
          var G__11822 = n + 1;
          val__$1 = G__11821;
          n = G__11822;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__11817 = val__$1;
          var G__11818 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11817, G__11818) : f.call(null, G__11817, G__11818);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11823 = nval;
          var G__11824 = n + 1;
          val__$1 = G__11823;
          n = G__11824;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__11831 = val;
            var G__11832 = arr[n];
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11831, G__11832) : f.call(null, G__11831, G__11832);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__11837 = nval;
            var G__11838 = n + 1;
            val = G__11837;
            n = G__11838;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__11833 = val__$1;
          var G__11834 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11833, G__11834) : f.call(null, G__11833, G__11834);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11839 = nval;
          var G__11840 = n + 1;
          val__$1 = G__11839;
          n = G__11840;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__11835 = val__$1;
          var G__11836 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11835, G__11836) : f.call(null, G__11835, G__11836);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11841 = nval;
          var G__11842 = n + 1;
          val__$1 = G__11841;
          n = G__11842;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__11844 = x;
  if (G__11844) {
    var bit__4449__auto__ = G__11844.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4449__auto__ || G__11844.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__11844.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__11844);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__11844);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__11846 = x;
  if (G__11846) {
    var bit__4449__auto__ = G__11846.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4449__auto__ || G__11846.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__11846.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__11846);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__11846);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function __GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__11847 = coll__$1;
  var G__11848 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__11847, G__11848) : cljs.core.equiv_sequential.call(null, G__11847, G__11848);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__11849 = o;
  var G__11850 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__11849, G__11850) : cljs.core.cons.call(null, G__11849, G__11850);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__11853 = coll__$1;
  var G__11854 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__11853, G__11854) : cljs.core.equiv_sequential.call(null, G__11853, G__11854);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__11855 = cljs.core.List.EMPTY;
  var G__11856 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__11855, G__11856) : cljs.core.with_meta.call(null, G__11855, G__11856);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__11857 = f;
  var G__11858 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__11857, G__11858) : cljs.core.seq_reduce.call(null, G__11857, G__11858);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__11859 = f;
  var G__11860 = start;
  var G__11861 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__11859, G__11860, G__11861) : cljs.core.seq_reduce.call(null, G__11859, G__11860, G__11861);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__11862 = o;
  var G__11863 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__11862, G__11863) : cljs.core.cons.call(null, G__11862, G__11863);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.second = function second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__11864 = sn;
      s = G__11864;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj(coll, x);
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__11869__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__11870 = conj.cljs$core$IFn$_invoke$arity$2(coll, x);
          var G__11871 = cljs.core.first(xs);
          var G__11872 = cljs.core.next(xs);
          coll = G__11870;
          x = G__11871;
          xs = G__11872;
          continue;
        } else {
          return conj.cljs$core$IFn$_invoke$arity$2(coll, x);
        }
        break;
      }
    };
    var G__11869 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        var G__11873__i = 0, G__11873__a = new Array(arguments.length - 2);
        while (G__11873__i < G__11873__a.length) {
          G__11873__a[G__11873__i] = arguments[G__11873__i + 2];
          ++G__11873__i;
        }
        xs = new cljs.core.IndexedSeq(G__11873__a, 0);
      }
      return G__11869__delegate.call(this, coll, x, xs);
    };
    G__11869.cljs$lang$maxFixedArity = 2;
    G__11869.cljs$lang$applyTo = function(arglist__11874) {
      var coll = cljs.core.first(arglist__11874);
      arglist__11874 = cljs.core.next(arglist__11874);
      var x = cljs.core.first(arglist__11874);
      var xs = cljs.core.rest(arglist__11874);
      return G__11869__delegate(coll, x, xs);
    };
    G__11869.cljs$core$IFn$_invoke$arity$variadic = G__11869__delegate;
    return G__11869;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        var G__11875 = null;
        if (arguments.length > 2) {
          var G__11876__i = 0, G__11876__a = new Array(arguments.length - 2);
          while (G__11876__i < G__11876__a.length) {
            G__11876__a[G__11876__i] = arguments[G__11876__i + 2];
            ++G__11876__i;
          }
          G__11875 = new cljs.core.IndexedSeq(G__11876__a, 0);
        }
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, G__11875);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__11877 = cljs.core.next(s);
      var G__11878 = acc + 1;
      s = G__11877;
      acc = G__11878;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__11880 = coll;
      if (G__11880) {
        var bit__4442__auto__ = G__11880.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4442__auto__ || G__11880.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
          } else {
            if (cljs.core.seq(coll)) {
              var G__11881 = cljs.core.next(coll);
              var G__11882 = n - 1;
              coll = G__11881;
              n = G__11882;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
          } else {
            if (cljs.core.seq(coll)) {
              var G__11883 = cljs.core.next(coll);
              var G__11884 = n - 1;
              var G__11885 = not_found;
              coll = G__11883;
              n = G__11884;
              not_found = G__11885;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__11890 = coll;
          if (G__11890) {
            var bit__4442__auto__ = G__11890.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4442__auto__ || G__11890.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__11891 = coll;
                  if (G__11891) {
                    var bit__4449__auto__ = G__11891.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4449__auto__ || G__11891.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__11891.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__11891);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__11891);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__11892 = coll;
          if (G__11892) {
            var bit__4442__auto__ = G__11892.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4442__auto__ || G__11892.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__11893 = coll;
                  if (G__11893) {
                    var bit__4449__auto__ = G__11893.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4449__auto__ || G__11893.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__11893.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__11893);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__11893);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.nthrest = function nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__11894 = n__$1 - 1;
      var G__11895 = cljs.core.rest(xs);
      n__$1 = G__11894;
      xs = G__11895;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__11898 = o;
        if (G__11898) {
          var bit__4442__auto__ = G__11898.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4442__auto__ || G__11898.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$2(null, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__11899 = o;
        if (G__11899) {
          var bit__4442__auto__ = G__11899.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4442__auto__ || G__11899.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__11903__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__11904 = ret;
          var G__11905 = cljs.core.first(kvs);
          var G__11906 = cljs.core.second(kvs);
          var G__11907 = cljs.core.nnext(kvs);
          coll = G__11904;
          k = G__11905;
          v = G__11906;
          kvs = G__11907;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__11903 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__11908__i = 0, G__11908__a = new Array(arguments.length - 3);
        while (G__11908__i < G__11908__a.length) {
          G__11908__a[G__11908__i] = arguments[G__11908__i + 3];
          ++G__11908__i;
        }
        kvs = new cljs.core.IndexedSeq(G__11908__a, 0);
      }
      return G__11903__delegate.call(this, coll, k, v, kvs);
    };
    G__11903.cljs$lang$maxFixedArity = 3;
    G__11903.cljs$lang$applyTo = function(arglist__11909) {
      var coll = cljs.core.first(arglist__11909);
      arglist__11909 = cljs.core.next(arglist__11909);
      var k = cljs.core.first(arglist__11909);
      arglist__11909 = cljs.core.next(arglist__11909);
      var v = cljs.core.first(arglist__11909);
      var kvs = cljs.core.rest(arglist__11909);
      return G__11903__delegate(coll, k, v, kvs);
    };
    G__11903.cljs$core$IFn$_invoke$arity$variadic = G__11903__delegate;
    return G__11903;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        var G__11910 = null;
        if (arguments.length > 3) {
          var G__11911__i = 0, G__11911__a = new Array(arguments.length - 3);
          while (G__11911__i < G__11911__a.length) {
            G__11911__a[G__11911__i] = arguments[G__11911__i + 3];
            ++G__11911__i;
          }
          G__11910 = new cljs.core.IndexedSeq(G__11911__a, 0);
        }
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, G__11910);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc(coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__11914__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__11915 = ret;
            var G__11916 = cljs.core.first(ks);
            var G__11917 = cljs.core.next(ks);
            coll = G__11915;
            k = G__11916;
            ks = G__11917;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__11914 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__11918__i = 0, G__11918__a = new Array(arguments.length - 2);
        while (G__11918__i < G__11918__a.length) {
          G__11918__a[G__11918__i] = arguments[G__11918__i + 2];
          ++G__11918__i;
        }
        ks = new cljs.core.IndexedSeq(G__11918__a, 0);
      }
      return G__11914__delegate.call(this, coll, k, ks);
    };
    G__11914.cljs$lang$maxFixedArity = 2;
    G__11914.cljs$lang$applyTo = function(arglist__11919) {
      var coll = cljs.core.first(arglist__11919);
      arglist__11919 = cljs.core.next(arglist__11919);
      var k = cljs.core.first(arglist__11919);
      var ks = cljs.core.rest(arglist__11919);
      return G__11914__delegate(coll, k, ks);
    };
    G__11914.cljs$core$IFn$_invoke$arity$variadic = G__11914__delegate;
    return G__11914;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        var G__11920 = null;
        if (arguments.length > 2) {
          var G__11921__i = 0, G__11921__a = new Array(arguments.length - 2);
          while (G__11921__i < G__11921__a.length) {
            G__11921__a[G__11921__i] = arguments[G__11921__i + 2];
            ++G__11921__i;
          }
          G__11920 = new cljs.core.IndexedSeq(G__11921__a, 0);
        }
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__11920);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3768__auto__ = function() {
    var G__11926 = f;
    return goog.isFunction(G__11926);
  }();
  if (cljs.core.truth_(or__3768__auto__)) {
    return or__3768__auto__;
  } else {
    var G__11927 = f;
    if (G__11927) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto____$1 = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto____$1)) {
          return or__3768__auto____$1;
        } else {
          return G__11927.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__11927.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__11927);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__11927);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__12393 = null;
  var G__12393__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__12393__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11929 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__11929) : self__.afn.call(null, G__11929);
  };
  var G__12393__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11930 = a;
    var G__11931 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__11930, G__11931) : self__.afn.call(null, G__11930, G__11931);
  };
  var G__12393__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11932 = a;
    var G__11933 = b;
    var G__11934 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__11932, G__11933, G__11934) : self__.afn.call(null, G__11932, G__11933, G__11934);
  };
  var G__12393__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11935 = a;
    var G__11936 = b;
    var G__11937 = c;
    var G__11938 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__11935, G__11936, G__11937, G__11938) : self__.afn.call(null, G__11935, G__11936, G__11937, G__11938);
  };
  var G__12393__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11939 = a;
    var G__11940 = b;
    var G__11941 = c;
    var G__11942 = d;
    var G__11943 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__11939, G__11940, G__11941, G__11942, G__11943) : self__.afn.call(null, G__11939, G__11940, G__11941, G__11942, G__11943);
  };
  var G__12393__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11944 = a;
    var G__11945 = b;
    var G__11946 = c;
    var G__11947 = d;
    var G__11948 = e;
    var G__11949 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__11944, G__11945, G__11946, G__11947, G__11948, G__11949) : self__.afn.call(null, G__11944, G__11945, G__11946, G__11947, G__11948, G__11949);
  };
  var G__12393__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11950 = a;
    var G__11951 = b;
    var G__11952 = c;
    var G__11953 = d;
    var G__11954 = e;
    var G__11955 = f;
    var G__11956 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__11950, G__11951, G__11952, G__11953, G__11954, G__11955, G__11956) : self__.afn.call(null, G__11950, G__11951, G__11952, G__11953, G__11954, G__11955, G__11956);
  };
  var G__12393__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11957 = a;
    var G__11958 = b;
    var G__11959 = c;
    var G__11960 = d;
    var G__11961 = e;
    var G__11962 = f;
    var G__11963 = g;
    var G__11964 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__11957, G__11958, G__11959, G__11960, G__11961, G__11962, G__11963, G__11964) : self__.afn.call(null, G__11957, G__11958, G__11959, G__11960, G__11961, G__11962, G__11963, G__11964);
  };
  var G__12393__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11965 = a;
    var G__11966 = b;
    var G__11967 = c;
    var G__11968 = d;
    var G__11969 = e;
    var G__11970 = f;
    var G__11971 = g;
    var G__11972 = h;
    var G__11973 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__11965, G__11966, G__11967, G__11968, G__11969, G__11970, G__11971, G__11972, G__11973) : self__.afn.call(null, G__11965, G__11966, G__11967, G__11968, G__11969, G__11970, G__11971, G__11972, G__11973);
  };
  var G__12393__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11974 = a;
    var G__11975 = b;
    var G__11976 = c;
    var G__11977 = d;
    var G__11978 = e;
    var G__11979 = f;
    var G__11980 = g;
    var G__11981 = h;
    var G__11982 = i;
    var G__11983 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__11974, G__11975, G__11976, G__11977, G__11978, G__11979, G__11980, G__11981, G__11982, G__11983) : self__.afn.call(null, G__11974, G__11975, G__11976, G__11977, G__11978, G__11979, G__11980, G__11981, G__11982, G__11983);
  };
  var G__12393__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11984 = a;
    var G__11985 = b;
    var G__11986 = c;
    var G__11987 = d;
    var G__11988 = e;
    var G__11989 = f;
    var G__11990 = g;
    var G__11991 = h;
    var G__11992 = i;
    var G__11993 = j;
    var G__11994 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__11984, G__11985, G__11986, G__11987, G__11988, G__11989, G__11990, G__11991, G__11992, G__11993, G__11994) : self__.afn.call(null, G__11984, G__11985, G__11986, G__11987, G__11988, G__11989, G__11990, G__11991, G__11992, G__11993, G__11994);
  };
  var G__12393__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11995 = a;
    var G__11996 = b;
    var G__11997 = c;
    var G__11998 = d;
    var G__11999 = e;
    var G__12000 = f;
    var G__12001 = g;
    var G__12002 = h;
    var G__12003 = i;
    var G__12004 = j;
    var G__12005 = k;
    var G__12006 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__11995, G__11996, G__11997, G__11998, G__11999, G__12000, G__12001, G__12002, G__12003, G__12004, G__12005, G__12006) : self__.afn.call(null, G__11995, G__11996, G__11997, G__11998, G__11999, G__12000, G__12001, G__12002, G__12003, G__12004, G__12005, G__12006);
  };
  var G__12393__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12007 = a;
    var G__12008 = b;
    var G__12009 = c;
    var G__12010 = d;
    var G__12011 = e;
    var G__12012 = f;
    var G__12013 = g;
    var G__12014 = h;
    var G__12015 = i;
    var G__12016 = j;
    var G__12017 = k;
    var G__12018 = l;
    var G__12019 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__12007, G__12008, G__12009, G__12010, G__12011, G__12012, G__12013, G__12014, G__12015, G__12016, G__12017, G__12018, G__12019) : self__.afn.call(null, G__12007, G__12008, G__12009, G__12010, G__12011, G__12012, G__12013, G__12014, G__12015, G__12016, G__12017, G__12018, G__12019);
  };
  var G__12393__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12020 = a;
    var G__12021 = b;
    var G__12022 = c;
    var G__12023 = d;
    var G__12024 = e;
    var G__12025 = f;
    var G__12026 = g;
    var G__12027 = h;
    var G__12028 = i;
    var G__12029 = j;
    var G__12030 = k;
    var G__12031 = l;
    var G__12032 = m;
    var G__12033 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__12020, G__12021, G__12022, G__12023, G__12024, G__12025, G__12026, G__12027, G__12028, G__12029, G__12030, G__12031, G__12032, G__12033) : self__.afn.call(null, G__12020, G__12021, G__12022, G__12023, G__12024, G__12025, G__12026, G__12027, G__12028, G__12029, G__12030, G__12031, G__12032, G__12033);
  };
  var G__12393__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12034 = a;
    var G__12035 = b;
    var G__12036 = c;
    var G__12037 = d;
    var G__12038 = e;
    var G__12039 = f;
    var G__12040 = g;
    var G__12041 = h;
    var G__12042 = i;
    var G__12043 = j;
    var G__12044 = k;
    var G__12045 = l;
    var G__12046 = m;
    var G__12047 = n;
    var G__12048 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__12034, G__12035, G__12036, G__12037, G__12038, G__12039, G__12040, G__12041, G__12042, G__12043, G__12044, G__12045, G__12046, G__12047, G__12048) : self__.afn.call(null, G__12034, G__12035, G__12036, G__12037, G__12038, G__12039, G__12040, G__12041, G__12042, G__12043, G__12044, G__12045, G__12046, G__12047, G__12048);
  };
  var G__12393__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12049 = a;
    var G__12050 = b;
    var G__12051 = c;
    var G__12052 = d;
    var G__12053 = e;
    var G__12054 = f;
    var G__12055 = g;
    var G__12056 = h;
    var G__12057 = i;
    var G__12058 = j;
    var G__12059 = k;
    var G__12060 = l;
    var G__12061 = m;
    var G__12062 = n;
    var G__12063 = o;
    var G__12064 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__12049, G__12050, G__12051, G__12052, G__12053, G__12054, G__12055, G__12056, G__12057, G__12058, G__12059, G__12060, G__12061, G__12062, G__12063, G__12064) : self__.afn.call(null, G__12049, G__12050, G__12051, G__12052, G__12053, G__12054, G__12055, G__12056, G__12057, G__12058, G__12059, G__12060, G__12061, G__12062, G__12063, G__12064);
  };
  var G__12393__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12065 = a;
    var G__12066 = b;
    var G__12067 = c;
    var G__12068 = d;
    var G__12069 = e;
    var G__12070 = f;
    var G__12071 = g;
    var G__12072 = h;
    var G__12073 = i;
    var G__12074 = j;
    var G__12075 = k;
    var G__12076 = l;
    var G__12077 = m;
    var G__12078 = n;
    var G__12079 = o;
    var G__12080 = p;
    var G__12081 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__12065, G__12066, G__12067, G__12068, G__12069, G__12070, G__12071, G__12072, G__12073, G__12074, G__12075, G__12076, G__12077, G__12078, G__12079, G__12080, G__12081) : self__.afn.call(null, G__12065, G__12066, G__12067, G__12068, G__12069, G__12070, G__12071, G__12072, G__12073, G__12074, G__12075, G__12076, G__12077, G__12078, G__12079, G__12080, G__12081);
  };
  var G__12393__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12082 = a;
    var G__12083 = b;
    var G__12084 = c;
    var G__12085 = d;
    var G__12086 = e;
    var G__12087 = f;
    var G__12088 = g;
    var G__12089 = h;
    var G__12090 = i;
    var G__12091 = j;
    var G__12092 = k;
    var G__12093 = l;
    var G__12094 = m;
    var G__12095 = n;
    var G__12096 = o;
    var G__12097 = p;
    var G__12098 = q;
    var G__12099 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__12082, G__12083, G__12084, G__12085, G__12086, G__12087, G__12088, G__12089, G__12090, G__12091, G__12092, G__12093, G__12094, G__12095, G__12096, G__12097, G__12098, G__12099) : self__.afn.call(null, G__12082, G__12083, G__12084, G__12085, G__12086, G__12087, G__12088, G__12089, G__12090, G__12091, G__12092, G__12093, G__12094, G__12095, G__12096, G__12097, G__12098, G__12099);
  };
  var G__12393__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12100 = a;
    var G__12101 = b;
    var G__12102 = c;
    var G__12103 = d;
    var G__12104 = e;
    var G__12105 = f;
    var G__12106 = g;
    var G__12107 = h;
    var G__12108 = i;
    var G__12109 = j;
    var G__12110 = k;
    var G__12111 = l;
    var G__12112 = m;
    var G__12113 = n;
    var G__12114 = o;
    var G__12115 = p;
    var G__12116 = q;
    var G__12117 = r;
    var G__12118 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__12100, G__12101, G__12102, G__12103, G__12104, G__12105, G__12106, G__12107, G__12108, G__12109, G__12110, G__12111, G__12112, G__12113, G__12114, G__12115, G__12116, G__12117, G__12118) : self__.afn.call(null, G__12100, G__12101, G__12102, G__12103, G__12104, G__12105, G__12106, G__12107, G__12108, G__12109, G__12110, G__12111, G__12112, G__12113, G__12114, G__12115, G__12116, G__12117, G__12118);
  };
  var G__12393__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12119 = a;
    var G__12120 = b;
    var G__12121 = c;
    var G__12122 = d;
    var G__12123 = e;
    var G__12124 = f;
    var G__12125 = g;
    var G__12126 = h;
    var G__12127 = i;
    var G__12128 = j;
    var G__12129 = k;
    var G__12130 = l;
    var G__12131 = m;
    var G__12132 = n;
    var G__12133 = o;
    var G__12134 = p;
    var G__12135 = q;
    var G__12136 = r;
    var G__12137 = s;
    var G__12138 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__12119, G__12120, G__12121, G__12122, G__12123, G__12124, G__12125, G__12126, G__12127, G__12128, G__12129, G__12130, G__12131, G__12132, G__12133, G__12134, G__12135, G__12136, G__12137, G__12138) : self__.afn.call(null, G__12119, G__12120, G__12121, G__12122, G__12123, G__12124, G__12125, G__12126, G__12127, G__12128, G__12129, G__12130, G__12131, G__12132, G__12133, G__12134, G__12135, G__12136, 
    G__12137, G__12138);
  };
  var G__12393__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12139 = self__.afn;
    var G__12140 = a;
    var G__12141 = b;
    var G__12142 = c;
    var G__12143 = d;
    var G__12144 = e;
    var G__12145 = f;
    var G__12146 = g;
    var G__12147 = h;
    var G__12148 = i;
    var G__12149 = j;
    var G__12150 = k;
    var G__12151 = l;
    var G__12152 = m;
    var G__12153 = n;
    var G__12154 = o;
    var G__12155 = p;
    var G__12156 = q;
    var G__12157 = r;
    var G__12158 = s;
    var G__12159 = t;
    var G__12160 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12139, G__12140, G__12141, G__12142, G__12143, G__12144, G__12145, G__12146, G__12147, G__12148, G__12149, G__12150, G__12151, G__12152, G__12153, G__12154, G__12155, G__12156, G__12157, G__12158, G__12159, G__12160) : cljs.core.apply.call(null, G__12139, G__12140, G__12141, G__12142, G__12143, G__12144, G__12145, G__12146, G__12147, G__12148, G__12149, G__12150, G__12151, G__12152, G__12153, 
    G__12154, G__12155, G__12156, G__12157, G__12158, G__12159, G__12160);
  };
  G__12393 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__12393__1.call(this, self__);
      case 2:
        return G__12393__2.call(this, self__, a);
      case 3:
        return G__12393__3.call(this, self__, a, b);
      case 4:
        return G__12393__4.call(this, self__, a, b, c);
      case 5:
        return G__12393__5.call(this, self__, a, b, c, d);
      case 6:
        return G__12393__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__12393__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__12393__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__12393__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__12393__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__12393__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__12393__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__12393__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__12393__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__12393__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__12393__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__12393__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__12393__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__12393__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__12393__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__12393__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__12393__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12393.cljs$core$IFn$_invoke$arity$1 = G__12393__1;
  G__12393.cljs$core$IFn$_invoke$arity$2 = G__12393__2;
  G__12393.cljs$core$IFn$_invoke$arity$3 = G__12393__3;
  G__12393.cljs$core$IFn$_invoke$arity$4 = G__12393__4;
  G__12393.cljs$core$IFn$_invoke$arity$5 = G__12393__5;
  G__12393.cljs$core$IFn$_invoke$arity$6 = G__12393__6;
  G__12393.cljs$core$IFn$_invoke$arity$7 = G__12393__7;
  G__12393.cljs$core$IFn$_invoke$arity$8 = G__12393__8;
  G__12393.cljs$core$IFn$_invoke$arity$9 = G__12393__9;
  G__12393.cljs$core$IFn$_invoke$arity$10 = G__12393__10;
  G__12393.cljs$core$IFn$_invoke$arity$11 = G__12393__11;
  G__12393.cljs$core$IFn$_invoke$arity$12 = G__12393__12;
  G__12393.cljs$core$IFn$_invoke$arity$13 = G__12393__13;
  G__12393.cljs$core$IFn$_invoke$arity$14 = G__12393__14;
  G__12393.cljs$core$IFn$_invoke$arity$15 = G__12393__15;
  G__12393.cljs$core$IFn$_invoke$arity$16 = G__12393__16;
  G__12393.cljs$core$IFn$_invoke$arity$17 = G__12393__17;
  G__12393.cljs$core$IFn$_invoke$arity$18 = G__12393__18;
  G__12393.cljs$core$IFn$_invoke$arity$19 = G__12393__19;
  G__12393.cljs$core$IFn$_invoke$arity$20 = G__12393__20;
  G__12393.cljs$core$IFn$_invoke$arity$21 = G__12393__21;
  G__12393.cljs$core$IFn$_invoke$arity$22 = G__12393__22;
  return G__12393;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args11928) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11928)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__12161 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__12161) : self__.afn.call(null, G__12161);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__12162 = a;
  var G__12163 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__12162, G__12163) : self__.afn.call(null, G__12162, G__12163);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__12164 = a;
  var G__12165 = b;
  var G__12166 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__12164, G__12165, G__12166) : self__.afn.call(null, G__12164, G__12165, G__12166);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__12167 = a;
  var G__12168 = b;
  var G__12169 = c;
  var G__12170 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__12167, G__12168, G__12169, G__12170) : self__.afn.call(null, G__12167, G__12168, G__12169, G__12170);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__12171 = a;
  var G__12172 = b;
  var G__12173 = c;
  var G__12174 = d;
  var G__12175 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__12171, G__12172, G__12173, G__12174, G__12175) : self__.afn.call(null, G__12171, G__12172, G__12173, G__12174, G__12175);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__12176 = a;
  var G__12177 = b;
  var G__12178 = c;
  var G__12179 = d;
  var G__12180 = e;
  var G__12181 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__12176, G__12177, G__12178, G__12179, G__12180, G__12181) : self__.afn.call(null, G__12176, G__12177, G__12178, G__12179, G__12180, G__12181);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__12182 = a;
  var G__12183 = b;
  var G__12184 = c;
  var G__12185 = d;
  var G__12186 = e;
  var G__12187 = f;
  var G__12188 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__12182, G__12183, G__12184, G__12185, G__12186, G__12187, G__12188) : self__.afn.call(null, G__12182, G__12183, G__12184, G__12185, G__12186, G__12187, G__12188);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__12189 = a;
  var G__12190 = b;
  var G__12191 = c;
  var G__12192 = d;
  var G__12193 = e;
  var G__12194 = f;
  var G__12195 = g;
  var G__12196 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__12189, G__12190, G__12191, G__12192, G__12193, G__12194, G__12195, G__12196) : self__.afn.call(null, G__12189, G__12190, G__12191, G__12192, G__12193, G__12194, G__12195, G__12196);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__12197 = a;
  var G__12198 = b;
  var G__12199 = c;
  var G__12200 = d;
  var G__12201 = e;
  var G__12202 = f;
  var G__12203 = g;
  var G__12204 = h;
  var G__12205 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__12197, G__12198, G__12199, G__12200, G__12201, G__12202, G__12203, G__12204, G__12205) : self__.afn.call(null, G__12197, G__12198, G__12199, G__12200, G__12201, G__12202, G__12203, G__12204, G__12205);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__12206 = a;
  var G__12207 = b;
  var G__12208 = c;
  var G__12209 = d;
  var G__12210 = e;
  var G__12211 = f;
  var G__12212 = g;
  var G__12213 = h;
  var G__12214 = i;
  var G__12215 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__12206, G__12207, G__12208, G__12209, G__12210, G__12211, G__12212, G__12213, G__12214, G__12215) : self__.afn.call(null, G__12206, G__12207, G__12208, G__12209, G__12210, G__12211, G__12212, G__12213, G__12214, G__12215);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__12216 = a;
  var G__12217 = b;
  var G__12218 = c;
  var G__12219 = d;
  var G__12220 = e;
  var G__12221 = f;
  var G__12222 = g;
  var G__12223 = h;
  var G__12224 = i;
  var G__12225 = j;
  var G__12226 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__12216, G__12217, G__12218, G__12219, G__12220, G__12221, G__12222, G__12223, G__12224, G__12225, G__12226) : self__.afn.call(null, G__12216, G__12217, G__12218, G__12219, G__12220, G__12221, G__12222, G__12223, G__12224, G__12225, G__12226);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__12227 = a;
  var G__12228 = b;
  var G__12229 = c;
  var G__12230 = d;
  var G__12231 = e;
  var G__12232 = f;
  var G__12233 = g;
  var G__12234 = h;
  var G__12235 = i;
  var G__12236 = j;
  var G__12237 = k;
  var G__12238 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__12227, G__12228, G__12229, G__12230, G__12231, G__12232, G__12233, G__12234, G__12235, G__12236, G__12237, G__12238) : self__.afn.call(null, G__12227, G__12228, G__12229, G__12230, G__12231, G__12232, G__12233, G__12234, G__12235, G__12236, G__12237, G__12238);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__12239 = a;
  var G__12240 = b;
  var G__12241 = c;
  var G__12242 = d;
  var G__12243 = e;
  var G__12244 = f;
  var G__12245 = g;
  var G__12246 = h;
  var G__12247 = i;
  var G__12248 = j;
  var G__12249 = k;
  var G__12250 = l;
  var G__12251 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__12239, G__12240, G__12241, G__12242, G__12243, G__12244, G__12245, G__12246, G__12247, G__12248, G__12249, G__12250, G__12251) : self__.afn.call(null, G__12239, G__12240, G__12241, G__12242, G__12243, G__12244, G__12245, G__12246, G__12247, G__12248, G__12249, G__12250, G__12251);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__12252 = a;
  var G__12253 = b;
  var G__12254 = c;
  var G__12255 = d;
  var G__12256 = e;
  var G__12257 = f;
  var G__12258 = g;
  var G__12259 = h;
  var G__12260 = i;
  var G__12261 = j;
  var G__12262 = k;
  var G__12263 = l;
  var G__12264 = m;
  var G__12265 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__12252, G__12253, G__12254, G__12255, G__12256, G__12257, G__12258, G__12259, G__12260, G__12261, G__12262, G__12263, G__12264, G__12265) : self__.afn.call(null, G__12252, G__12253, G__12254, G__12255, G__12256, G__12257, G__12258, G__12259, G__12260, G__12261, G__12262, G__12263, G__12264, G__12265);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__12266 = a;
  var G__12267 = b;
  var G__12268 = c;
  var G__12269 = d;
  var G__12270 = e;
  var G__12271 = f;
  var G__12272 = g;
  var G__12273 = h;
  var G__12274 = i;
  var G__12275 = j;
  var G__12276 = k;
  var G__12277 = l;
  var G__12278 = m;
  var G__12279 = n;
  var G__12280 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__12266, G__12267, G__12268, G__12269, G__12270, G__12271, G__12272, G__12273, G__12274, G__12275, G__12276, G__12277, G__12278, G__12279, G__12280) : self__.afn.call(null, G__12266, G__12267, G__12268, G__12269, G__12270, G__12271, G__12272, G__12273, G__12274, G__12275, G__12276, G__12277, G__12278, G__12279, G__12280);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__12281 = a;
  var G__12282 = b;
  var G__12283 = c;
  var G__12284 = d;
  var G__12285 = e;
  var G__12286 = f;
  var G__12287 = g;
  var G__12288 = h;
  var G__12289 = i;
  var G__12290 = j;
  var G__12291 = k;
  var G__12292 = l;
  var G__12293 = m;
  var G__12294 = n;
  var G__12295 = o;
  var G__12296 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__12281, G__12282, G__12283, G__12284, G__12285, G__12286, G__12287, G__12288, G__12289, G__12290, G__12291, G__12292, G__12293, G__12294, G__12295, G__12296) : self__.afn.call(null, G__12281, G__12282, G__12283, G__12284, G__12285, G__12286, G__12287, G__12288, G__12289, G__12290, G__12291, G__12292, G__12293, G__12294, G__12295, G__12296);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__12297 = a;
  var G__12298 = b;
  var G__12299 = c;
  var G__12300 = d;
  var G__12301 = e;
  var G__12302 = f;
  var G__12303 = g;
  var G__12304 = h;
  var G__12305 = i;
  var G__12306 = j;
  var G__12307 = k;
  var G__12308 = l;
  var G__12309 = m;
  var G__12310 = n;
  var G__12311 = o;
  var G__12312 = p;
  var G__12313 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__12297, G__12298, G__12299, G__12300, G__12301, G__12302, G__12303, G__12304, G__12305, G__12306, G__12307, G__12308, G__12309, G__12310, G__12311, G__12312, G__12313) : self__.afn.call(null, G__12297, G__12298, G__12299, G__12300, G__12301, G__12302, G__12303, G__12304, G__12305, G__12306, G__12307, G__12308, G__12309, G__12310, G__12311, G__12312, G__12313);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__12314 = a;
  var G__12315 = b;
  var G__12316 = c;
  var G__12317 = d;
  var G__12318 = e;
  var G__12319 = f;
  var G__12320 = g;
  var G__12321 = h;
  var G__12322 = i;
  var G__12323 = j;
  var G__12324 = k;
  var G__12325 = l;
  var G__12326 = m;
  var G__12327 = n;
  var G__12328 = o;
  var G__12329 = p;
  var G__12330 = q;
  var G__12331 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__12314, G__12315, G__12316, G__12317, G__12318, G__12319, G__12320, G__12321, G__12322, G__12323, G__12324, G__12325, G__12326, G__12327, G__12328, G__12329, G__12330, G__12331) : self__.afn.call(null, G__12314, G__12315, G__12316, G__12317, G__12318, G__12319, G__12320, G__12321, G__12322, G__12323, G__12324, G__12325, G__12326, G__12327, G__12328, G__12329, G__12330, G__12331);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__12332 = a;
  var G__12333 = b;
  var G__12334 = c;
  var G__12335 = d;
  var G__12336 = e;
  var G__12337 = f;
  var G__12338 = g;
  var G__12339 = h;
  var G__12340 = i;
  var G__12341 = j;
  var G__12342 = k;
  var G__12343 = l;
  var G__12344 = m;
  var G__12345 = n;
  var G__12346 = o;
  var G__12347 = p;
  var G__12348 = q;
  var G__12349 = r;
  var G__12350 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__12332, G__12333, G__12334, G__12335, G__12336, G__12337, G__12338, G__12339, G__12340, G__12341, G__12342, G__12343, G__12344, G__12345, G__12346, G__12347, G__12348, G__12349, G__12350) : self__.afn.call(null, G__12332, G__12333, G__12334, G__12335, G__12336, G__12337, G__12338, G__12339, G__12340, G__12341, G__12342, G__12343, G__12344, G__12345, G__12346, G__12347, G__12348, G__12349, G__12350);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__12351 = a;
  var G__12352 = b;
  var G__12353 = c;
  var G__12354 = d;
  var G__12355 = e;
  var G__12356 = f;
  var G__12357 = g;
  var G__12358 = h;
  var G__12359 = i;
  var G__12360 = j;
  var G__12361 = k;
  var G__12362 = l;
  var G__12363 = m;
  var G__12364 = n;
  var G__12365 = o;
  var G__12366 = p;
  var G__12367 = q;
  var G__12368 = r;
  var G__12369 = s;
  var G__12370 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__12351, G__12352, G__12353, G__12354, G__12355, G__12356, G__12357, G__12358, G__12359, G__12360, G__12361, G__12362, G__12363, G__12364, G__12365, G__12366, G__12367, G__12368, G__12369, G__12370) : self__.afn.call(null, G__12351, G__12352, G__12353, G__12354, G__12355, G__12356, G__12357, G__12358, G__12359, G__12360, G__12361, G__12362, G__12363, G__12364, G__12365, G__12366, G__12367, G__12368, G__12369, 
  G__12370);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__12371 = self__.afn;
  var G__12372 = a;
  var G__12373 = b;
  var G__12374 = c;
  var G__12375 = d;
  var G__12376 = e;
  var G__12377 = f;
  var G__12378 = g;
  var G__12379 = h;
  var G__12380 = i;
  var G__12381 = j;
  var G__12382 = k;
  var G__12383 = l;
  var G__12384 = m;
  var G__12385 = n;
  var G__12386 = o;
  var G__12387 = p;
  var G__12388 = q;
  var G__12389 = r;
  var G__12390 = s;
  var G__12391 = t;
  var G__12392 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12371, G__12372, G__12373, G__12374, G__12375, G__12376, G__12377, G__12378, G__12379, G__12380, G__12381, G__12382, G__12383, G__12384, G__12385, G__12386, G__12387, G__12388, G__12389, G__12390, G__12391, G__12392) : cljs.core.apply.call(null, G__12371, G__12372, G__12373, G__12374, G__12375, G__12376, G__12377, G__12378, G__12379, G__12380, G__12381, G__12382, G__12383, G__12384, G__12385, 
  G__12386, G__12387, G__12388, G__12389, G__12390, G__12391, G__12392);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__12397 = o;
    if (G__12397) {
      var bit__4449__auto__ = G__12397.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4449__auto__ || G__12397.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__12397.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__12397);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__12397);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3756__auto__ = !(o == null);
    if (and__3756__auto__) {
      var G__12401 = o;
      if (G__12401) {
        var bit__4449__auto__ = G__12401.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4449__auto__ || G__12401.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__12401.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__12401);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__12401);
      }
    } else {
      return and__3756__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin(coll, k);
    }
  };
  var disj__3 = function() {
    var G__12404__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__12405 = ret;
            var G__12406 = cljs.core.first(ks);
            var G__12407 = cljs.core.next(ks);
            coll = G__12405;
            k = G__12406;
            ks = G__12407;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__12404 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__12408__i = 0, G__12408__a = new Array(arguments.length - 2);
        while (G__12408__i < G__12408__a.length) {
          G__12408__a[G__12408__i] = arguments[G__12408__i + 2];
          ++G__12408__i;
        }
        ks = new cljs.core.IndexedSeq(G__12408__a, 0);
      }
      return G__12404__delegate.call(this, coll, k, ks);
    };
    G__12404.cljs$lang$maxFixedArity = 2;
    G__12404.cljs$lang$applyTo = function(arglist__12409) {
      var coll = cljs.core.first(arglist__12409);
      arglist__12409 = cljs.core.next(arglist__12409);
      var k = cljs.core.first(arglist__12409);
      var ks = cljs.core.rest(arglist__12409);
      return G__12404__delegate(coll, k, ks);
    };
    G__12404.cljs$core$IFn$_invoke$arity$variadic = G__12404__delegate;
    return G__12404;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        var G__12410 = null;
        if (arguments.length > 2) {
          var G__12411__i = 0, G__12411__a = new Array(arguments.length - 2);
          while (G__12411__i < G__12411__a.length) {
            G__12411__a[G__12411__i] = arguments[G__12411__i + 2];
            ++G__12411__i;
          }
          G__12410 = new cljs.core.IndexedSeq(G__12411__a, 0);
        }
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__12410);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__12413 = x;
    if (G__12413) {
      var bit__4449__auto__ = G__12413.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4449__auto__ || G__12413.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__12413.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__12413);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__12413);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__12415 = x;
    if (G__12415) {
      var bit__4449__auto__ = G__12415.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4449__auto__ || G__12415.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__12415.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__12415);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__12415);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__12417 = x;
  if (G__12417) {
    var bit__4449__auto__ = G__12417.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4449__auto__ || G__12417.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__12417.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__12417);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__12417);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__12419 = x;
  if (G__12419) {
    var bit__4449__auto__ = G__12419.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4449__auto__ || G__12419.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__12419.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__12419);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__12419);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__12421 = x;
  if (G__12421) {
    var bit__4449__auto__ = G__12421.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4449__auto__ || G__12421.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__12421.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__12421);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__12421);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__12423 = x;
  if (G__12423) {
    var bit__4449__auto__ = G__12423.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4449__auto__ || G__12423.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__12423.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__12423);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__12423);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__12425 = x;
    if (G__12425) {
      var bit__4449__auto__ = G__12425.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4449__auto__ || G__12425.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__12425.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__12425);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__12425);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__12427 = x;
  if (G__12427) {
    var bit__4449__auto__ = G__12427.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4449__auto__ || G__12427.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__12427.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__12427);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__12427);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__12429 = x;
  if (G__12429) {
    var bit__4442__auto__ = G__12429.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4442__auto__ || G__12429.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj12435 = {};
    return obj12435;
  };
  var js_obj__1 = function() {
    var G__12438__delegate = function(keyvals) {
      var G__12436 = goog.object.create;
      var G__12437 = keyvals;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__12436, G__12437) : cljs.core.apply.call(null, G__12436, G__12437);
    };
    var G__12438 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        var G__12439__i = 0, G__12439__a = new Array(arguments.length - 0);
        while (G__12439__i < G__12439__a.length) {
          G__12439__a[G__12439__i] = arguments[G__12439__i + 0];
          ++G__12439__i;
        }
        keyvals = new cljs.core.IndexedSeq(G__12439__a, 0);
      }
      return G__12438__delegate.call(this, keyvals);
    };
    G__12438.cljs$lang$maxFixedArity = 0;
    G__12438.cljs$lang$applyTo = function(arglist__12440) {
      var keyvals = cljs.core.seq(arglist__12440);
      return G__12438__delegate(keyvals);
    };
    G__12438.cljs$core$IFn$_invoke$arity$variadic = G__12438__delegate;
    return G__12438;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        var G__12441 = null;
        if (arguments.length > 0) {
          var G__12442__i = 0, G__12442__a = new Array(arguments.length - 0);
          while (G__12442__i < G__12442__a.length) {
            G__12442__a[G__12442__i] = arguments[G__12442__i + 0];
            ++G__12442__i;
          }
          G__12441 = new cljs.core.IndexedSeq(G__12442__a, 0);
        }
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__12441);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  var G__12445_12447 = obj;
  var G__12446_12448 = function(G__12445_12447, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__12445_12447, keys);
  goog.object.forEach(G__12445_12447, G__12446_12448);
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__12449 = i__$1 + 1;
      var G__12450 = j__$1 + 1;
      var G__12451 = len__$1 - 1;
      i__$1 = G__12449;
      j__$1 = G__12450;
      len__$1 = G__12451;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__12452 = i__$1 - 1;
      var G__12453 = j__$1 - 1;
      var G__12454 = len__$1 - 1;
      i__$1 = G__12452;
      j__$1 = G__12453;
      len__$1 = G__12454;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj12456 = {};
  return obj12456;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__12458 = s;
    if (G__12458) {
      var bit__4449__auto__ = G__12458.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4449__auto__ || G__12458.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__12458.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__12458);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__12458);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__12460 = s;
  if (G__12460) {
    var bit__4449__auto__ = G__12460.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4449__auto__ || G__12460.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__12460.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__12460);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__12460);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3768__auto__ = cljs.core.fn_QMARK_(f);
  if (or__3768__auto__) {
    return or__3768__auto__;
  } else {
    var G__12464 = f;
    if (G__12464) {
      var bit__4449__auto__ = G__12464.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4449__auto__ || G__12464.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__12464.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__12464);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__12464);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__12477 = n;
    return isNaN(G__12477);
  }()) && !(n === Infinity) && function() {
    var G__12478 = n;
    return parseFloat(G__12478);
  }() === function() {
    var G__12479 = n;
    var G__12480 = 10;
    return parseInt(G__12479, G__12480);
  }();
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__12481__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first(xs);
          var etc = cljs.core.next(xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_(s, x__$1)) {
              return false;
            } else {
              var G__12482 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
              var G__12483 = etc;
              s = G__12482;
              xs = G__12483;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__12481 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12484__i = 0, G__12484__a = new Array(arguments.length - 2);
        while (G__12484__i < G__12484__a.length) {
          G__12484__a[G__12484__i] = arguments[G__12484__i + 2];
          ++G__12484__i;
        }
        more = new cljs.core.IndexedSeq(G__12484__a, 0);
      }
      return G__12481__delegate.call(this, x, y, more);
    };
    G__12481.cljs$lang$maxFixedArity = 2;
    G__12481.cljs$lang$applyTo = function(arglist__12485) {
      var x = cljs.core.first(arglist__12485);
      arglist__12485 = cljs.core.next(arglist__12485);
      var y = cljs.core.first(arglist__12485);
      var more = cljs.core.rest(arglist__12485);
      return G__12481__delegate(x, y, more);
    };
    G__12481.cljs$core$IFn$_invoke$arity$variadic = G__12481__delegate;
    return G__12481;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        var G__12486 = null;
        if (arguments.length > 2) {
          var G__12487__i = 0, G__12487__a = new Array(arguments.length - 2);
          while (G__12487__i < G__12487__a.length) {
            G__12487__a[G__12487__i] = arguments[G__12487__i + 2];
            ++G__12487__i;
          }
          G__12486 = new cljs.core.IndexedSeq(G__12487__a, 0);
        }
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12486);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type(x) === cljs.core.type(y)) {
          if (function() {
            var G__12491 = x;
            if (G__12491) {
              var bit__4442__auto__ = G__12491.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4442__auto__ || G__12491.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return x.cljs$core$IComparable$_compare$arity$2(null, y);
          } else {
            var G__12492 = x;
            var G__12493 = y;
            return goog.array.defaultCompare(G__12492, G__12493);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count(xs);
    var yl = cljs.core.count(ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
      if (d === 0 && n + 1 < len) {
        var G__12498 = xs;
        var G__12499 = ys;
        var G__12500 = len;
        var G__12501 = n + 1;
        xs = G__12498;
        ys = G__12499;
        len = G__12500;
        n = G__12501;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__12506 = x;
        var G__12507 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12506, G__12507) : f.call(null, G__12506, G__12507);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(function() {
            var G__12508 = y;
            var G__12509 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12508, G__12509) : f.call(null, G__12508, G__12509);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq(coll)) {
      var a = function() {
        var G__12515 = coll;
        return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__12515) : cljs.core.to_array.call(null, G__12515);
      }();
      var G__12516_12518 = a;
      var G__12517_12519 = cljs.core.fn__GT_comparator(comp);
      goog.array.stableSort(G__12516_12518, G__12517_12519);
      return cljs.core.seq(a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
      return cljs.core.fn__GT_comparator(comp).call(null, function() {
        var G__12525 = x;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12525) : keyfn.call(null, G__12525);
      }(), function() {
        var G__12526 = y;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12526) : keyfn.call(null, G__12526);
      }());
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq(coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      var G__12532 = f;
      var G__12533 = cljs.core.first(s);
      var G__12534 = cljs.core.next(s);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__12532, G__12533, G__12534) : cljs.core.reduce.call(null, G__12532, G__12533, G__12534);
    } else {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq(coll);
    while (true) {
      if (coll__$1) {
        var nval = function() {
          var G__12535 = val__$1;
          var G__12536 = cljs.core.first(coll__$1);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12535, G__12536) : f.call(null, G__12535, G__12536);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__12537 = nval;
          var G__12538 = cljs.core.next(coll__$1);
          val__$1 = G__12537;
          coll__$1 = G__12538;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = function() {
    var G__12542 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__12542) : cljs.core.to_array.call(null, G__12542);
  }();
  var G__12543_12545 = a;
  goog.array.shuffle(G__12543_12545);
  var G__12544 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__12544) : cljs.core.vec.call(null, G__12544);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__12548 = coll;
      if (G__12548) {
        var bit__4442__auto__ = G__12548.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4442__auto__ || G__12548.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__12549 = coll;
      if (G__12549) {
        var bit__4442__auto__ = G__12549.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4442__auto__ || G__12549.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.completing = function() {
  var completing = null;
  var completing__1 = function(f) {
    return completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
  };
  var completing__2 = function(f, cf) {
    return function() {
      var G__12558 = null;
      var G__12558__0 = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      };
      var G__12558__1 = function(x) {
        var G__12555 = x;
        return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__12555) : cf.call(null, G__12555);
      };
      var G__12558__2 = function(x, y) {
        var G__12556 = x;
        var G__12557 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12556, G__12557) : f.call(null, G__12556, G__12557);
      };
      G__12558 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__12558__0.call(this);
          case 1:
            return G__12558__1.call(this, x);
          case 2:
            return G__12558__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12558.cljs$core$IFn$_invoke$arity$0 = G__12558__0;
      G__12558.cljs$core$IFn$_invoke$arity$1 = G__12558__1;
      G__12558.cljs$core$IFn$_invoke$arity$2 = G__12558__2;
      return G__12558;
    }();
  };
  completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return completing__1.call(this, f);
      case 2:
        return completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
  completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
  return completing;
}();
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = function() {
      var G__12565 = f;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__12565) : xform.call(null, G__12565);
    }();
    var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
    var G__12566 = ret;
    return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__12566) : f__$1.call(null, G__12566);
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__12567__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_, x + y, more);
    };
    var G__12567 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12568__i = 0, G__12568__a = new Array(arguments.length - 2);
        while (G__12568__i < G__12568__a.length) {
          G__12568__a[G__12568__i] = arguments[G__12568__i + 2];
          ++G__12568__i;
        }
        more = new cljs.core.IndexedSeq(G__12568__a, 0);
      }
      return G__12567__delegate.call(this, x, y, more);
    };
    G__12567.cljs$lang$maxFixedArity = 2;
    G__12567.cljs$lang$applyTo = function(arglist__12569) {
      var x = cljs.core.first(arglist__12569);
      arglist__12569 = cljs.core.next(arglist__12569);
      var y = cljs.core.first(arglist__12569);
      var more = cljs.core.rest(arglist__12569);
      return G__12567__delegate(x, y, more);
    };
    G__12567.cljs$core$IFn$_invoke$arity$variadic = G__12567__delegate;
    return G__12567;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        var G__12570 = null;
        if (arguments.length > 2) {
          var G__12571__i = 0, G__12571__a = new Array(arguments.length - 2);
          while (G__12571__i < G__12571__a.length) {
            G__12571__a[G__12571__i] = arguments[G__12571__i + 2];
            ++G__12571__i;
          }
          G__12570 = new cljs.core.IndexedSeq(G__12571__a, 0);
        }
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12570);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__12572__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_, x - y, more);
    };
    var G__12572 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12573__i = 0, G__12573__a = new Array(arguments.length - 2);
        while (G__12573__i < G__12573__a.length) {
          G__12573__a[G__12573__i] = arguments[G__12573__i + 2];
          ++G__12573__i;
        }
        more = new cljs.core.IndexedSeq(G__12573__a, 0);
      }
      return G__12572__delegate.call(this, x, y, more);
    };
    G__12572.cljs$lang$maxFixedArity = 2;
    G__12572.cljs$lang$applyTo = function(arglist__12574) {
      var x = cljs.core.first(arglist__12574);
      arglist__12574 = cljs.core.next(arglist__12574);
      var y = cljs.core.first(arglist__12574);
      var more = cljs.core.rest(arglist__12574);
      return G__12572__delegate(x, y, more);
    };
    G__12572.cljs$core$IFn$_invoke$arity$variadic = G__12572__delegate;
    return G__12572;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        var G__12575 = null;
        if (arguments.length > 2) {
          var G__12576__i = 0, G__12576__a = new Array(arguments.length - 2);
          while (G__12576__i < G__12576__a.length) {
            G__12576__a[G__12576__i] = arguments[G__12576__i + 2];
            ++G__12576__i;
          }
          G__12575 = new cljs.core.IndexedSeq(G__12576__a, 0);
        }
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12575);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__12577__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_, x * y, more);
    };
    var G__12577 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12578__i = 0, G__12578__a = new Array(arguments.length - 2);
        while (G__12578__i < G__12578__a.length) {
          G__12578__a[G__12578__i] = arguments[G__12578__i + 2];
          ++G__12578__i;
        }
        more = new cljs.core.IndexedSeq(G__12578__a, 0);
      }
      return G__12577__delegate.call(this, x, y, more);
    };
    G__12577.cljs$lang$maxFixedArity = 2;
    G__12577.cljs$lang$applyTo = function(arglist__12579) {
      var x = cljs.core.first(arglist__12579);
      arglist__12579 = cljs.core.next(arglist__12579);
      var y = cljs.core.first(arglist__12579);
      var more = cljs.core.rest(arglist__12579);
      return G__12577__delegate(x, y, more);
    };
    G__12577.cljs$core$IFn$_invoke$arity$variadic = G__12577__delegate;
    return G__12577;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        var G__12580 = null;
        if (arguments.length > 2) {
          var G__12581__i = 0, G__12581__a = new Array(arguments.length - 2);
          while (G__12581__i < G__12581__a.length) {
            G__12581__a[G__12581__i] = arguments[G__12581__i + 2];
            ++G__12581__i;
          }
          G__12580 = new cljs.core.IndexedSeq(G__12581__a, 0);
        }
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12580);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__12586__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_, _SLASH_.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__12586 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12587__i = 0, G__12587__a = new Array(arguments.length - 2);
        while (G__12587__i < G__12587__a.length) {
          G__12587__a[G__12587__i] = arguments[G__12587__i + 2];
          ++G__12587__i;
        }
        more = new cljs.core.IndexedSeq(G__12587__a, 0);
      }
      return G__12586__delegate.call(this, x, y, more);
    };
    G__12586.cljs$lang$maxFixedArity = 2;
    G__12586.cljs$lang$applyTo = function(arglist__12588) {
      var x = cljs.core.first(arglist__12588);
      arglist__12588 = cljs.core.next(arglist__12588);
      var y = cljs.core.first(arglist__12588);
      var more = cljs.core.rest(arglist__12588);
      return G__12586__delegate(x, y, more);
    };
    G__12586.cljs$core$IFn$_invoke$arity$variadic = G__12586__delegate;
    return G__12586;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        var G__12589 = null;
        if (arguments.length > 2) {
          var G__12590__i = 0, G__12590__a = new Array(arguments.length - 2);
          while (G__12590__i < G__12590__a.length) {
            G__12590__a[G__12590__i] = arguments[G__12590__i + 2];
            ++G__12590__i;
          }
          G__12589 = new cljs.core.IndexedSeq(G__12590__a, 0);
        }
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12589);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__12591__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next(more)) {
            var G__12592 = y;
            var G__12593 = cljs.core.first(more);
            var G__12594 = cljs.core.next(more);
            x = G__12592;
            y = G__12593;
            more = G__12594;
            continue;
          } else {
            return y < cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12591 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12595__i = 0, G__12595__a = new Array(arguments.length - 2);
        while (G__12595__i < G__12595__a.length) {
          G__12595__a[G__12595__i] = arguments[G__12595__i + 2];
          ++G__12595__i;
        }
        more = new cljs.core.IndexedSeq(G__12595__a, 0);
      }
      return G__12591__delegate.call(this, x, y, more);
    };
    G__12591.cljs$lang$maxFixedArity = 2;
    G__12591.cljs$lang$applyTo = function(arglist__12596) {
      var x = cljs.core.first(arglist__12596);
      arglist__12596 = cljs.core.next(arglist__12596);
      var y = cljs.core.first(arglist__12596);
      var more = cljs.core.rest(arglist__12596);
      return G__12591__delegate(x, y, more);
    };
    G__12591.cljs$core$IFn$_invoke$arity$variadic = G__12591__delegate;
    return G__12591;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        var G__12597 = null;
        if (arguments.length > 2) {
          var G__12598__i = 0, G__12598__a = new Array(arguments.length - 2);
          while (G__12598__i < G__12598__a.length) {
            G__12598__a[G__12598__i] = arguments[G__12598__i + 2];
            ++G__12598__i;
          }
          G__12597 = new cljs.core.IndexedSeq(G__12598__a, 0);
        }
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12597);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__12599__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next(more)) {
            var G__12600 = y;
            var G__12601 = cljs.core.first(more);
            var G__12602 = cljs.core.next(more);
            x = G__12600;
            y = G__12601;
            more = G__12602;
            continue;
          } else {
            return y <= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12599 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12603__i = 0, G__12603__a = new Array(arguments.length - 2);
        while (G__12603__i < G__12603__a.length) {
          G__12603__a[G__12603__i] = arguments[G__12603__i + 2];
          ++G__12603__i;
        }
        more = new cljs.core.IndexedSeq(G__12603__a, 0);
      }
      return G__12599__delegate.call(this, x, y, more);
    };
    G__12599.cljs$lang$maxFixedArity = 2;
    G__12599.cljs$lang$applyTo = function(arglist__12604) {
      var x = cljs.core.first(arglist__12604);
      arglist__12604 = cljs.core.next(arglist__12604);
      var y = cljs.core.first(arglist__12604);
      var more = cljs.core.rest(arglist__12604);
      return G__12599__delegate(x, y, more);
    };
    G__12599.cljs$core$IFn$_invoke$arity$variadic = G__12599__delegate;
    return G__12599;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        var G__12605 = null;
        if (arguments.length > 2) {
          var G__12606__i = 0, G__12606__a = new Array(arguments.length - 2);
          while (G__12606__i < G__12606__a.length) {
            G__12606__a[G__12606__i] = arguments[G__12606__i + 2];
            ++G__12606__i;
          }
          G__12605 = new cljs.core.IndexedSeq(G__12606__a, 0);
        }
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12605);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__12607__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next(more)) {
            var G__12608 = y;
            var G__12609 = cljs.core.first(more);
            var G__12610 = cljs.core.next(more);
            x = G__12608;
            y = G__12609;
            more = G__12610;
            continue;
          } else {
            return y > cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12607 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12611__i = 0, G__12611__a = new Array(arguments.length - 2);
        while (G__12611__i < G__12611__a.length) {
          G__12611__a[G__12611__i] = arguments[G__12611__i + 2];
          ++G__12611__i;
        }
        more = new cljs.core.IndexedSeq(G__12611__a, 0);
      }
      return G__12607__delegate.call(this, x, y, more);
    };
    G__12607.cljs$lang$maxFixedArity = 2;
    G__12607.cljs$lang$applyTo = function(arglist__12612) {
      var x = cljs.core.first(arglist__12612);
      arglist__12612 = cljs.core.next(arglist__12612);
      var y = cljs.core.first(arglist__12612);
      var more = cljs.core.rest(arglist__12612);
      return G__12607__delegate(x, y, more);
    };
    G__12607.cljs$core$IFn$_invoke$arity$variadic = G__12607__delegate;
    return G__12607;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        var G__12613 = null;
        if (arguments.length > 2) {
          var G__12614__i = 0, G__12614__a = new Array(arguments.length - 2);
          while (G__12614__i < G__12614__a.length) {
            G__12614__a[G__12614__i] = arguments[G__12614__i + 2];
            ++G__12614__i;
          }
          G__12613 = new cljs.core.IndexedSeq(G__12614__a, 0);
        }
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12613);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__12615__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next(more)) {
            var G__12616 = y;
            var G__12617 = cljs.core.first(more);
            var G__12618 = cljs.core.next(more);
            x = G__12616;
            y = G__12617;
            more = G__12618;
            continue;
          } else {
            return y >= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12615 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12619__i = 0, G__12619__a = new Array(arguments.length - 2);
        while (G__12619__i < G__12619__a.length) {
          G__12619__a[G__12619__i] = arguments[G__12619__i + 2];
          ++G__12619__i;
        }
        more = new cljs.core.IndexedSeq(G__12619__a, 0);
      }
      return G__12615__delegate.call(this, x, y, more);
    };
    G__12615.cljs$lang$maxFixedArity = 2;
    G__12615.cljs$lang$applyTo = function(arglist__12620) {
      var x = cljs.core.first(arglist__12620);
      arglist__12620 = cljs.core.next(arglist__12620);
      var y = cljs.core.first(arglist__12620);
      var more = cljs.core.rest(arglist__12620);
      return G__12615__delegate(x, y, more);
    };
    G__12615.cljs$core$IFn$_invoke$arity$variadic = G__12615__delegate;
    return G__12615;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        var G__12621 = null;
        if (arguments.length > 2) {
          var G__12622__i = 0, G__12622__a = new Array(arguments.length - 2);
          while (G__12622__i < G__12622__a.length) {
            G__12622__a[G__12622__i] = arguments[G__12622__i + 2];
            ++G__12622__i;
          }
          G__12621 = new cljs.core.IndexedSeq(G__12622__a, 0);
        }
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12621);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__4085__auto__ = x;
    var y__4086__auto__ = y;
    return x__4085__auto__ > y__4086__auto__ ? x__4085__auto__ : y__4086__auto__;
  };
  var max__3 = function() {
    var G__12623__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max, function() {
        var x__4085__auto__ = x;
        var y__4086__auto__ = y;
        return x__4085__auto__ > y__4086__auto__ ? x__4085__auto__ : y__4086__auto__;
      }(), more);
    };
    var G__12623 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12624__i = 0, G__12624__a = new Array(arguments.length - 2);
        while (G__12624__i < G__12624__a.length) {
          G__12624__a[G__12624__i] = arguments[G__12624__i + 2];
          ++G__12624__i;
        }
        more = new cljs.core.IndexedSeq(G__12624__a, 0);
      }
      return G__12623__delegate.call(this, x, y, more);
    };
    G__12623.cljs$lang$maxFixedArity = 2;
    G__12623.cljs$lang$applyTo = function(arglist__12625) {
      var x = cljs.core.first(arglist__12625);
      arglist__12625 = cljs.core.next(arglist__12625);
      var y = cljs.core.first(arglist__12625);
      var more = cljs.core.rest(arglist__12625);
      return G__12623__delegate(x, y, more);
    };
    G__12623.cljs$core$IFn$_invoke$arity$variadic = G__12623__delegate;
    return G__12623;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        var G__12626 = null;
        if (arguments.length > 2) {
          var G__12627__i = 0, G__12627__a = new Array(arguments.length - 2);
          while (G__12627__i < G__12627__a.length) {
            G__12627__a[G__12627__i] = arguments[G__12627__i + 2];
            ++G__12627__i;
          }
          G__12626 = new cljs.core.IndexedSeq(G__12627__a, 0);
        }
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12626);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__4092__auto__ = x;
    var y__4093__auto__ = y;
    return x__4092__auto__ < y__4093__auto__ ? x__4092__auto__ : y__4093__auto__;
  };
  var min__3 = function() {
    var G__12628__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min, function() {
        var x__4092__auto__ = x;
        var y__4093__auto__ = y;
        return x__4092__auto__ < y__4093__auto__ ? x__4092__auto__ : y__4093__auto__;
      }(), more);
    };
    var G__12628 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12629__i = 0, G__12629__a = new Array(arguments.length - 2);
        while (G__12629__i < G__12629__a.length) {
          G__12629__a[G__12629__i] = arguments[G__12629__i + 2];
          ++G__12629__i;
        }
        more = new cljs.core.IndexedSeq(G__12629__a, 0);
      }
      return G__12628__delegate.call(this, x, y, more);
    };
    G__12628.cljs$lang$maxFixedArity = 2;
    G__12628.cljs$lang$applyTo = function(arglist__12630) {
      var x = cljs.core.first(arglist__12630);
      arglist__12630 = cljs.core.next(arglist__12630);
      var y = cljs.core.first(arglist__12630);
      var more = cljs.core.rest(arglist__12630);
      return G__12628__delegate(x, y, more);
    };
    G__12628.cljs$core$IFn$_invoke$arity$variadic = G__12628__delegate;
    return G__12628;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        var G__12631 = null;
        if (arguments.length > 2) {
          var G__12632__i = 0, G__12632__a = new Array(arguments.length - 2);
          while (G__12632__i < G__12632__a.length) {
            G__12632__a[G__12632__i] = arguments[G__12632__i + 2];
            ++G__12632__i;
          }
          G__12631 = new cljs.core.IndexedSeq(G__12632__a, 0);
        }
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12631);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__12633__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add, x + y, more);
    };
    var G__12633 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12634__i = 0, G__12634__a = new Array(arguments.length - 2);
        while (G__12634__i < G__12634__a.length) {
          G__12634__a[G__12634__i] = arguments[G__12634__i + 2];
          ++G__12634__i;
        }
        more = new cljs.core.IndexedSeq(G__12634__a, 0);
      }
      return G__12633__delegate.call(this, x, y, more);
    };
    G__12633.cljs$lang$maxFixedArity = 2;
    G__12633.cljs$lang$applyTo = function(arglist__12635) {
      var x = cljs.core.first(arglist__12635);
      arglist__12635 = cljs.core.next(arglist__12635);
      var y = cljs.core.first(arglist__12635);
      var more = cljs.core.rest(arglist__12635);
      return G__12633__delegate(x, y, more);
    };
    G__12633.cljs$core$IFn$_invoke$arity$variadic = G__12633__delegate;
    return G__12633;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        var G__12636 = null;
        if (arguments.length > 2) {
          var G__12637__i = 0, G__12637__a = new Array(arguments.length - 2);
          while (G__12637__i < G__12637__a.length) {
            G__12637__a[G__12637__i] = arguments[G__12637__i + 2];
            ++G__12637__i;
          }
          G__12636 = new cljs.core.IndexedSeq(G__12637__a, 0);
        }
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12636);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__12638__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int, x + y, more);
    };
    var G__12638 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12639__i = 0, G__12639__a = new Array(arguments.length - 2);
        while (G__12639__i < G__12639__a.length) {
          G__12639__a[G__12639__i] = arguments[G__12639__i + 2];
          ++G__12639__i;
        }
        more = new cljs.core.IndexedSeq(G__12639__a, 0);
      }
      return G__12638__delegate.call(this, x, y, more);
    };
    G__12638.cljs$lang$maxFixedArity = 2;
    G__12638.cljs$lang$applyTo = function(arglist__12640) {
      var x = cljs.core.first(arglist__12640);
      arglist__12640 = cljs.core.next(arglist__12640);
      var y = cljs.core.first(arglist__12640);
      var more = cljs.core.rest(arglist__12640);
      return G__12638__delegate(x, y, more);
    };
    G__12638.cljs$core$IFn$_invoke$arity$variadic = G__12638__delegate;
    return G__12638;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        var G__12641 = null;
        if (arguments.length > 2) {
          var G__12642__i = 0, G__12642__a = new Array(arguments.length - 2);
          while (G__12642__i < G__12642__a.length) {
            G__12642__a[G__12642__i] = arguments[G__12642__i + 2];
            ++G__12642__i;
          }
          G__12641 = new cljs.core.IndexedSeq(G__12642__a, 0);
        }
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12641);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__12647__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int, unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__12647 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12648__i = 0, G__12648__a = new Array(arguments.length - 2);
        while (G__12648__i < G__12648__a.length) {
          G__12648__a[G__12648__i] = arguments[G__12648__i + 2];
          ++G__12648__i;
        }
        more = new cljs.core.IndexedSeq(G__12648__a, 0);
      }
      return G__12647__delegate.call(this, x, y, more);
    };
    G__12647.cljs$lang$maxFixedArity = 2;
    G__12647.cljs$lang$applyTo = function(arglist__12649) {
      var x = cljs.core.first(arglist__12649);
      arglist__12649 = cljs.core.next(arglist__12649);
      var y = cljs.core.first(arglist__12649);
      var more = cljs.core.rest(arglist__12649);
      return G__12647__delegate(x, y, more);
    };
    G__12647.cljs$core$IFn$_invoke$arity$variadic = G__12647__delegate;
    return G__12647;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        var G__12650 = null;
        if (arguments.length > 2) {
          var G__12651__i = 0, G__12651__a = new Array(arguments.length - 2);
          while (G__12651__i < G__12651__a.length) {
            G__12651__a[G__12651__i] = arguments[G__12651__i + 2];
            ++G__12651__i;
          }
          G__12650 = new cljs.core.IndexedSeq(G__12651__a, 0);
        }
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12650);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__12652__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply, x * y, more);
    };
    var G__12652 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12653__i = 0, G__12653__a = new Array(arguments.length - 2);
        while (G__12653__i < G__12653__a.length) {
          G__12653__a[G__12653__i] = arguments[G__12653__i + 2];
          ++G__12653__i;
        }
        more = new cljs.core.IndexedSeq(G__12653__a, 0);
      }
      return G__12652__delegate.call(this, x, y, more);
    };
    G__12652.cljs$lang$maxFixedArity = 2;
    G__12652.cljs$lang$applyTo = function(arglist__12654) {
      var x = cljs.core.first(arglist__12654);
      arglist__12654 = cljs.core.next(arglist__12654);
      var y = cljs.core.first(arglist__12654);
      var more = cljs.core.rest(arglist__12654);
      return G__12652__delegate(x, y, more);
    };
    G__12652.cljs$core$IFn$_invoke$arity$variadic = G__12652__delegate;
    return G__12652;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        var G__12655 = null;
        if (arguments.length > 2) {
          var G__12656__i = 0, G__12656__a = new Array(arguments.length - 2);
          while (G__12656__i < G__12656__a.length) {
            G__12656__a[G__12656__i] = arguments[G__12656__i + 2];
            ++G__12656__i;
          }
          G__12655 = new cljs.core.IndexedSeq(G__12656__a, 0);
        }
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12655);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__12657__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int, x * y, more);
    };
    var G__12657 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12658__i = 0, G__12658__a = new Array(arguments.length - 2);
        while (G__12658__i < G__12658__a.length) {
          G__12658__a[G__12658__i] = arguments[G__12658__i + 2];
          ++G__12658__i;
        }
        more = new cljs.core.IndexedSeq(G__12658__a, 0);
      }
      return G__12657__delegate.call(this, x, y, more);
    };
    G__12657.cljs$lang$maxFixedArity = 2;
    G__12657.cljs$lang$applyTo = function(arglist__12659) {
      var x = cljs.core.first(arglist__12659);
      arglist__12659 = cljs.core.next(arglist__12659);
      var y = cljs.core.first(arglist__12659);
      var more = cljs.core.rest(arglist__12659);
      return G__12657__delegate(x, y, more);
    };
    G__12657.cljs$core$IFn$_invoke$arity$variadic = G__12657__delegate;
    return G__12657;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        var G__12660 = null;
        if (arguments.length > 2) {
          var G__12661__i = 0, G__12661__a = new Array(arguments.length - 2);
          while (G__12661__i < G__12661__a.length) {
            G__12661__a[G__12661__i] = arguments[G__12661__i + 2];
            ++G__12661__i;
          }
          G__12660 = new cljs.core.IndexedSeq(G__12661__a, 0);
        }
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12660);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  var G__12664 = x;
  var G__12665 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__12664, G__12665) : cljs.core.mod.call(null, G__12664, G__12665);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__12666__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract, x - y, more);
    };
    var G__12666 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12667__i = 0, G__12667__a = new Array(arguments.length - 2);
        while (G__12667__i < G__12667__a.length) {
          G__12667__a[G__12667__i] = arguments[G__12667__i + 2];
          ++G__12667__i;
        }
        more = new cljs.core.IndexedSeq(G__12667__a, 0);
      }
      return G__12666__delegate.call(this, x, y, more);
    };
    G__12666.cljs$lang$maxFixedArity = 2;
    G__12666.cljs$lang$applyTo = function(arglist__12668) {
      var x = cljs.core.first(arglist__12668);
      arglist__12668 = cljs.core.next(arglist__12668);
      var y = cljs.core.first(arglist__12668);
      var more = cljs.core.rest(arglist__12668);
      return G__12666__delegate(x, y, more);
    };
    G__12666.cljs$core$IFn$_invoke$arity$variadic = G__12666__delegate;
    return G__12666;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        var G__12669 = null;
        if (arguments.length > 2) {
          var G__12670__i = 0, G__12670__a = new Array(arguments.length - 2);
          while (G__12670__i < G__12670__a.length) {
            G__12670__a[G__12670__i] = arguments[G__12670__i + 2];
            ++G__12670__i;
          }
          G__12669 = new cljs.core.IndexedSeq(G__12670__a, 0);
        }
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12669);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__12671__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int, x - y, more);
    };
    var G__12671 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12672__i = 0, G__12672__a = new Array(arguments.length - 2);
        while (G__12672__i < G__12672__a.length) {
          G__12672__a[G__12672__i] = arguments[G__12672__i + 2];
          ++G__12672__i;
        }
        more = new cljs.core.IndexedSeq(G__12672__a, 0);
      }
      return G__12671__delegate.call(this, x, y, more);
    };
    G__12671.cljs$lang$maxFixedArity = 2;
    G__12671.cljs$lang$applyTo = function(arglist__12673) {
      var x = cljs.core.first(arglist__12673);
      arglist__12673 = cljs.core.next(arglist__12673);
      var y = cljs.core.first(arglist__12673);
      var more = cljs.core.rest(arglist__12673);
      return G__12671__delegate(x, y, more);
    };
    G__12671.cljs$core$IFn$_invoke$arity$variadic = G__12671__delegate;
    return G__12671;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        var G__12674 = null;
        if (arguments.length > 2) {
          var G__12675__i = 0, G__12675__a = new Array(arguments.length - 2);
          while (G__12675__i < G__12675__a.length) {
            G__12675__a[G__12675__i] = arguments[G__12675__i + 2];
            ++G__12675__i;
          }
          G__12674 = new cljs.core.IndexedSeq(G__12675__a, 0);
        }
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12674);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    var G__12678 = q;
    return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__12678) : Math.floor.call(null, G__12678);
  } else {
    var G__12679 = q;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__12679) : Math.ceil.call(null, G__12679);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function() {
  var bit_xor = null;
  var bit_xor__2 = function(x, y) {
    return x ^ y;
  };
  var bit_xor__3 = function() {
    var G__12680__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor, x ^ y, more);
    };
    var G__12680 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12681__i = 0, G__12681__a = new Array(arguments.length - 2);
        while (G__12681__i < G__12681__a.length) {
          G__12681__a[G__12681__i] = arguments[G__12681__i + 2];
          ++G__12681__i;
        }
        more = new cljs.core.IndexedSeq(G__12681__a, 0);
      }
      return G__12680__delegate.call(this, x, y, more);
    };
    G__12680.cljs$lang$maxFixedArity = 2;
    G__12680.cljs$lang$applyTo = function(arglist__12682) {
      var x = cljs.core.first(arglist__12682);
      arglist__12682 = cljs.core.next(arglist__12682);
      var y = cljs.core.first(arglist__12682);
      var more = cljs.core.rest(arglist__12682);
      return G__12680__delegate(x, y, more);
    };
    G__12680.cljs$core$IFn$_invoke$arity$variadic = G__12680__delegate;
    return G__12680;
  }();
  bit_xor = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_xor__2.call(this, x, y);
      default:
        var G__12683 = null;
        if (arguments.length > 2) {
          var G__12684__i = 0, G__12684__a = new Array(arguments.length - 2);
          while (G__12684__i < G__12684__a.length) {
            G__12684__a[G__12684__i] = arguments[G__12684__i + 2];
            ++G__12684__i;
          }
          G__12683 = new cljs.core.IndexedSeq(G__12684__a, 0);
        }
        return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12683);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_xor.cljs$lang$maxFixedArity = 2;
  bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
  bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
  bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_xor;
}();
cljs.core.bit_and = function() {
  var bit_and = null;
  var bit_and__2 = function(x, y) {
    return x & y;
  };
  var bit_and__3 = function() {
    var G__12685__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and, x & y, more);
    };
    var G__12685 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12686__i = 0, G__12686__a = new Array(arguments.length - 2);
        while (G__12686__i < G__12686__a.length) {
          G__12686__a[G__12686__i] = arguments[G__12686__i + 2];
          ++G__12686__i;
        }
        more = new cljs.core.IndexedSeq(G__12686__a, 0);
      }
      return G__12685__delegate.call(this, x, y, more);
    };
    G__12685.cljs$lang$maxFixedArity = 2;
    G__12685.cljs$lang$applyTo = function(arglist__12687) {
      var x = cljs.core.first(arglist__12687);
      arglist__12687 = cljs.core.next(arglist__12687);
      var y = cljs.core.first(arglist__12687);
      var more = cljs.core.rest(arglist__12687);
      return G__12685__delegate(x, y, more);
    };
    G__12685.cljs$core$IFn$_invoke$arity$variadic = G__12685__delegate;
    return G__12685;
  }();
  bit_and = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and__2.call(this, x, y);
      default:
        var G__12688 = null;
        if (arguments.length > 2) {
          var G__12689__i = 0, G__12689__a = new Array(arguments.length - 2);
          while (G__12689__i < G__12689__a.length) {
            G__12689__a[G__12689__i] = arguments[G__12689__i + 2];
            ++G__12689__i;
          }
          G__12688 = new cljs.core.IndexedSeq(G__12689__a, 0);
        }
        return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12688);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and.cljs$lang$maxFixedArity = 2;
  bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
  bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
  bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and;
}();
cljs.core.bit_or = function() {
  var bit_or = null;
  var bit_or__2 = function(x, y) {
    return x | y;
  };
  var bit_or__3 = function() {
    var G__12690__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or, x | y, more);
    };
    var G__12690 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12691__i = 0, G__12691__a = new Array(arguments.length - 2);
        while (G__12691__i < G__12691__a.length) {
          G__12691__a[G__12691__i] = arguments[G__12691__i + 2];
          ++G__12691__i;
        }
        more = new cljs.core.IndexedSeq(G__12691__a, 0);
      }
      return G__12690__delegate.call(this, x, y, more);
    };
    G__12690.cljs$lang$maxFixedArity = 2;
    G__12690.cljs$lang$applyTo = function(arglist__12692) {
      var x = cljs.core.first(arglist__12692);
      arglist__12692 = cljs.core.next(arglist__12692);
      var y = cljs.core.first(arglist__12692);
      var more = cljs.core.rest(arglist__12692);
      return G__12690__delegate(x, y, more);
    };
    G__12690.cljs$core$IFn$_invoke$arity$variadic = G__12690__delegate;
    return G__12690;
  }();
  bit_or = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_or__2.call(this, x, y);
      default:
        var G__12693 = null;
        if (arguments.length > 2) {
          var G__12694__i = 0, G__12694__a = new Array(arguments.length - 2);
          while (G__12694__i < G__12694__a.length) {
            G__12694__a[G__12694__i] = arguments[G__12694__i + 2];
            ++G__12694__i;
          }
          G__12693 = new cljs.core.IndexedSeq(G__12694__a, 0);
        }
        return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12693);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_or.cljs$lang$maxFixedArity = 2;
  bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
  bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
  bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_or;
}();
cljs.core.bit_and_not = function() {
  var bit_and_not = null;
  var bit_and_not__2 = function(x, y) {
    return x & ~y;
  };
  var bit_and_not__3 = function() {
    var G__12695__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not, x & ~y, more);
    };
    var G__12695 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12696__i = 0, G__12696__a = new Array(arguments.length - 2);
        while (G__12696__i < G__12696__a.length) {
          G__12696__a[G__12696__i] = arguments[G__12696__i + 2];
          ++G__12696__i;
        }
        more = new cljs.core.IndexedSeq(G__12696__a, 0);
      }
      return G__12695__delegate.call(this, x, y, more);
    };
    G__12695.cljs$lang$maxFixedArity = 2;
    G__12695.cljs$lang$applyTo = function(arglist__12697) {
      var x = cljs.core.first(arglist__12697);
      arglist__12697 = cljs.core.next(arglist__12697);
      var y = cljs.core.first(arglist__12697);
      var more = cljs.core.rest(arglist__12697);
      return G__12695__delegate(x, y, more);
    };
    G__12695.cljs$core$IFn$_invoke$arity$variadic = G__12695__delegate;
    return G__12695;
  }();
  bit_and_not = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and_not__2.call(this, x, y);
      default:
        var G__12698 = null;
        if (arguments.length > 2) {
          var G__12699__i = 0, G__12699__a = new Array(arguments.length - 2);
          while (G__12699__i < G__12699__a.length) {
            G__12699__a[G__12699__i] = arguments[G__12699__i + 2];
            ++G__12699__i;
          }
          G__12698 = new cljs.core.IndexedSeq(G__12699__a, 0);
        }
        return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12698);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and_not.cljs$lang$maxFixedArity = 2;
  bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
  bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
  bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and_not;
}();
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv(x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__12704__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__12705 = y;
            var G__12706 = cljs.core.first(more);
            var G__12707 = cljs.core.next(more);
            x = G__12705;
            y = G__12706;
            more = G__12707;
            continue;
          } else {
            return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12704 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12708__i = 0, G__12708__a = new Array(arguments.length - 2);
        while (G__12708__i < G__12708__a.length) {
          G__12708__a[G__12708__i] = arguments[G__12708__i + 2];
          ++G__12708__i;
        }
        more = new cljs.core.IndexedSeq(G__12708__a, 0);
      }
      return G__12704__delegate.call(this, x, y, more);
    };
    G__12704.cljs$lang$maxFixedArity = 2;
    G__12704.cljs$lang$applyTo = function(arglist__12709) {
      var x = cljs.core.first(arglist__12709);
      arglist__12709 = cljs.core.next(arglist__12709);
      var y = cljs.core.first(arglist__12709);
      var more = cljs.core.rest(arglist__12709);
      return G__12704__delegate(x, y, more);
    };
    G__12704.cljs$core$IFn$_invoke$arity$variadic = G__12704__delegate;
    return G__12704;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        var G__12710 = null;
        if (arguments.length > 2) {
          var G__12711__i = 0, G__12711__a = new Array(arguments.length - 2);
          while (G__12711__i < G__12711__a.length) {
            G__12711__a[G__12711__i] = arguments[G__12711__i + 2];
            ++G__12711__i;
          }
          G__12710 = new cljs.core.IndexedSeq(G__12711__a, 0);
        }
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12710);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__12712 = n__$1 - 1;
      var G__12713 = cljs.core.next(xs);
      n__$1 = G__12712;
      xs = G__12713;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      var G__12717 = x;
      return goog.string.buildString(G__12717);
    }
  };
  var str__2 = function() {
    var G__12718__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__12719 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
          var G__12720 = cljs.core.next(more);
          sb = G__12719;
          more = G__12720;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__12718 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        var G__12721__i = 0, G__12721__a = new Array(arguments.length - 1);
        while (G__12721__i < G__12721__a.length) {
          G__12721__a[G__12721__i] = arguments[G__12721__i + 1];
          ++G__12721__i;
        }
        ys = new cljs.core.IndexedSeq(G__12721__a, 0);
      }
      return G__12718__delegate.call(this, x, ys);
    };
    G__12718.cljs$lang$maxFixedArity = 1;
    G__12718.cljs$lang$applyTo = function(arglist__12722) {
      var x = cljs.core.first(arglist__12722);
      var ys = cljs.core.rest(arglist__12722);
      return G__12718__delegate(x, ys);
    };
    G__12718.cljs$core$IFn$_invoke$arity$variadic = G__12718__delegate;
    return G__12718;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        var G__12723 = null;
        if (arguments.length > 1) {
          var G__12724__i = 0, G__12724__a = new Array(arguments.length - 1);
          while (G__12724__i < G__12724__a.length) {
            G__12724__a[G__12724__i] = arguments[G__12724__i + 1];
            ++G__12724__i;
          }
          G__12723 = new cljs.core.IndexedSeq(G__12724__a, 0);
        }
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12723);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__12725 = cljs.core.next(xs);
            var G__12726 = cljs.core.next(ys);
            xs = G__12725;
            ys = G__12726;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__12727 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__12728 = cljs.core.next(s);
        res = G__12727;
        s = G__12728;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__12733 = (h + (cljs.core.hash(function() {
        var G__12731 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__12731) : cljs.core.key.call(null, G__12731);
      }()) ^ cljs.core.hash(function() {
        var G__12732 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__12732) : cljs.core.val.call(null, G__12732);
      }()))) % 4503599627370496;
      var G__12734 = cljs.core.next(s);
      h = G__12733;
      s = G__12734;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__12735 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__12736 = cljs.core.next(s__$1);
      h = G__12735;
      s__$1 = G__12736;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__12747_12757 = cljs.core.seq(fn_map);
  var chunk__12748_12758 = null;
  var count__12749_12759 = 0;
  var i__12750_12760 = 0;
  while (true) {
    if (i__12750_12760 < count__12749_12759) {
      var vec__12751_12761 = chunk__12748_12758.cljs$core$IIndexed$_nth$arity$2(null, i__12750_12760);
      var key_name_12762 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12751_12761, 0, null);
      var f_12763 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12751_12761, 1, null);
      var str_name_12764 = function() {
        var G__12752 = key_name_12762;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12752) : cljs.core.name.call(null, G__12752);
      }();
      obj[str_name_12764] = f_12763;
      var G__12765 = seq__12747_12757;
      var G__12766 = chunk__12748_12758;
      var G__12767 = count__12749_12759;
      var G__12768 = i__12750_12760 + 1;
      seq__12747_12757 = G__12765;
      chunk__12748_12758 = G__12766;
      count__12749_12759 = G__12767;
      i__12750_12760 = G__12768;
      continue;
    } else {
      var temp__4126__auto___12769 = cljs.core.seq(seq__12747_12757);
      if (temp__4126__auto___12769) {
        var seq__12747_12770__$1 = temp__4126__auto___12769;
        if (cljs.core.chunked_seq_QMARK_(seq__12747_12770__$1)) {
          var c__4555__auto___12771 = function() {
            var G__12753 = seq__12747_12770__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__12753) : cljs.core.chunk_first.call(null, G__12753);
          }();
          var G__12772 = function() {
            var G__12754 = seq__12747_12770__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__12754) : cljs.core.chunk_rest.call(null, G__12754);
          }();
          var G__12773 = c__4555__auto___12771;
          var G__12774 = cljs.core.count(c__4555__auto___12771);
          var G__12775 = 0;
          seq__12747_12757 = G__12772;
          chunk__12748_12758 = G__12773;
          count__12749_12759 = G__12774;
          i__12750_12760 = G__12775;
          continue;
        } else {
          var vec__12755_12776 = cljs.core.first(seq__12747_12770__$1);
          var key_name_12777 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12755_12776, 0, null);
          var f_12778 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12755_12776, 1, null);
          var str_name_12779 = function() {
            var G__12756 = key_name_12777;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12756) : cljs.core.name.call(null, G__12756);
          }();
          obj[str_name_12779] = f_12778;
          var G__12780 = cljs.core.next(seq__12747_12770__$1);
          var G__12781 = null;
          var G__12782 = 0;
          var G__12783 = 0;
          seq__12747_12757 = G__12780;
          chunk__12748_12758 = G__12781;
          count__12749_12759 = G__12782;
          i__12750_12760 = G__12783;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__12785 = coll;
  if (G__12785) {
    var bit__4449__auto__ = G__12785.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4449__auto__ || G__12785.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__12785.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__12785);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__12785);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
          var G__12786 = xs__$1.cljs$core$INext$_next$arity$1(null);
          xs__$1 = G__12786;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__12787 = i - 1;
        var G__12788 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
        i = G__12787;
        r = G__12788;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__12789__i = 0, G__12789__a = new Array(arguments.length - 0);
      while (G__12789__i < G__12789__a.length) {
        G__12789__a[G__12789__i] = arguments[G__12789__i + 0];
        ++G__12789__i;
      }
      xs = new cljs.core.IndexedSeq(G__12789__a, 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__12790) {
    var xs = cljs.core.seq(arglist__12790);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3768__auto__ = coll == null;
    if (or__3768__auto__) {
      return or__3768__auto__;
    } else {
      var G__12794 = coll;
      if (G__12794) {
        var bit__4442__auto__ = G__12794.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4442__auto__ || G__12794.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__12796 = x;
  if (G__12796) {
    var bit__4449__auto__ = G__12796.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4449__auto__ || G__12796.cljs$core$IList$) {
      return true;
    } else {
      if (!G__12796.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__12796);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__12796);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3756__auto__ = cljs.core.not(a.ns);
      if (and__3756__auto__) {
        return b.ns;
      } else {
        return and__3756__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__12803 = a.ns;
            var G__12804 = b.ns;
            return goog.array.defaultCompare(G__12803, G__12804);
          }();
          if (0 === nsc) {
            var G__12805 = a.name;
            var G__12806 = b.name;
            return goog.array.defaultCompare(G__12805, G__12806);
          } else {
            return nsc;
          }
        }
      } else {
        var G__12807 = a.name;
        var G__12808 = b.name;
        return goog.array.defaultCompare(G__12807, G__12808);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4189__auto__ = self__._hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__12810 = null;
  var G__12810__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__12810__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__12810 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12810__2.call(this, self__, coll);
      case 3:
        return G__12810__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12810.cljs$core$IFn$_invoke$arity$2 = G__12810__2;
  G__12810.cljs$core$IFn$_invoke$arity$3 = G__12810__3;
  return G__12810;
}();
cljs.core.Keyword.prototype.apply = function(self__, args12809) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12809)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__12812 = x;
    if (G__12812) {
      var bit__4442__auto__ = G__12812.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4442__auto__ || G__12812.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace(name), function() {
          var G__12814 = name;
          return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12814) : cljs.core.name.call(null, G__12814);
        }(), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__12815 = ls.sval();
        ls = G__12815;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__12817 = s;
    if (G__12817) {
      var bit__4442__auto__ = G__12817.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4442__auto__ || G__12817.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__12818 = cljs.core.next(s__$1);
      s__$1 = G__12818;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_12819 = 0;
  var xs_12820 = cljs.core.seq(coll);
  while (true) {
    if (xs_12820) {
      ret[i_12819] = cljs.core.to_array(cljs.core.first(xs_12820));
      var G__12821 = i_12819 + 1;
      var G__12822 = cljs.core.next(xs_12820);
      i_12819 = G__12821;
      xs_12820 = G__12822;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__12825 = i + 1;
          var G__12826 = cljs.core.next(s__$1);
          i = G__12825;
          s__$1 = G__12826;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4655__auto___12827 = size;
      var i_12828 = 0;
      while (true) {
        if (i_12828 < n__4655__auto___12827) {
          a[i_12828] = init_val_or_seq;
          var G__12829 = i_12828 + 1;
          i_12828 = G__12829;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__12832 = i + 1;
          var G__12833 = cljs.core.next(s__$1);
          i = G__12832;
          s__$1 = G__12833;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4655__auto___12834 = size;
      var i_12835 = 0;
      while (true) {
        if (i_12835 < n__4655__auto___12834) {
          a[i_12835] = init_val_or_seq;
          var G__12836 = i_12835 + 1;
          i_12835 = G__12836;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__12839 = i + 1;
          var G__12840 = cljs.core.next(s__$1);
          i = G__12839;
          s__$1 = G__12840;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4655__auto___12841 = size;
      var i_12842 = 0;
      while (true) {
        if (i_12842 < n__4655__auto___12841) {
          a[i_12842] = init_val_or_seq;
          var G__12843 = i_12842 + 1;
          i_12842 = G__12843;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__12846 = i + 1;
          var G__12847 = cljs.core.next(s__$1);
          i = G__12846;
          s__$1 = G__12847;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4655__auto___12848 = size;
      var i_12849 = 0;
      while (true) {
        if (i_12849 < n__4655__auto___12848) {
          a[i_12849] = init_val_or_seq;
          var G__12850 = i_12849 + 1;
          i_12849 = G__12850;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__12851 = cljs.core.next(s__$1);
        var G__12852 = i - 1;
        var G__12853 = sum + 1;
        s__$1 = G__12851;
        i = G__12852;
        sum = G__12853;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq(x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_(s)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
        } else {
          return cljs.core.cons(cljs.core.first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__12873__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq(xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
              return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cat(cljs.core.chunk_rest(xys__$1), zs__$1));
            } else {
              return cljs.core.cons(cljs.core.first(xys__$1), cat(cljs.core.rest(xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat(concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
    };
    var G__12873 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        var G__12874__i = 0, G__12874__a = new Array(arguments.length - 2);
        while (G__12874__i < G__12874__a.length) {
          G__12874__a[G__12874__i] = arguments[G__12874__i + 2];
          ++G__12874__i;
        }
        zs = new cljs.core.IndexedSeq(G__12874__a, 0);
      }
      return G__12873__delegate.call(this, x, y, zs);
    };
    G__12873.cljs$lang$maxFixedArity = 2;
    G__12873.cljs$lang$applyTo = function(arglist__12875) {
      var x = cljs.core.first(arglist__12875);
      arglist__12875 = cljs.core.next(arglist__12875);
      var y = cljs.core.first(arglist__12875);
      var zs = cljs.core.rest(arglist__12875);
      return G__12873__delegate(x, y, zs);
    };
    G__12873.cljs$core$IFn$_invoke$arity$variadic = G__12873__delegate;
    return G__12873;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        var G__12876 = null;
        if (arguments.length > 2) {
          var G__12877__i = 0, G__12877__a = new Array(arguments.length - 2);
          while (G__12877__i < G__12877__a.length) {
            G__12877__a[G__12877__i] = arguments[G__12877__i + 2];
            ++G__12877__i;
          }
          G__12876 = new cljs.core.IndexedSeq(G__12877__a, 0);
        }
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12876);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq(args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons(a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons(a, cljs.core.cons(b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
  };
  var list_STAR___5 = function() {
    var G__12878__delegate = function(a, b, c, d, more) {
      return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
    };
    var G__12878 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__12879__i = 0, G__12879__a = new Array(arguments.length - 4);
        while (G__12879__i < G__12879__a.length) {
          G__12879__a[G__12879__i] = arguments[G__12879__i + 4];
          ++G__12879__i;
        }
        more = new cljs.core.IndexedSeq(G__12879__a, 0);
      }
      return G__12878__delegate.call(this, a, b, c, d, more);
    };
    G__12878.cljs$lang$maxFixedArity = 4;
    G__12878.cljs$lang$applyTo = function(arglist__12880) {
      var a = cljs.core.first(arglist__12880);
      arglist__12880 = cljs.core.next(arglist__12880);
      var b = cljs.core.first(arglist__12880);
      arglist__12880 = cljs.core.next(arglist__12880);
      var c = cljs.core.first(arglist__12880);
      arglist__12880 = cljs.core.next(arglist__12880);
      var d = cljs.core.first(arglist__12880);
      var more = cljs.core.rest(arglist__12880);
      return G__12878__delegate(a, b, c, d, more);
    };
    G__12878.cljs$core$IFn$_invoke$arity$variadic = G__12878__delegate;
    return G__12878;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        var G__12881 = null;
        if (arguments.length > 4) {
          var G__12882__i = 0, G__12882__a = new Array(arguments.length - 4);
          while (G__12882__i < G__12882__a.length) {
            G__12882__a[G__12882__i] = arguments[G__12882__i + 4];
            ++G__12882__i;
          }
          G__12881 = new cljs.core.IndexedSeq(G__12882__a, 0);
        }
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, G__12881);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_(tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__12883__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__12884 = ntcoll;
          var G__12885 = cljs.core.first(vals);
          var G__12886 = cljs.core.next(vals);
          tcoll = G__12884;
          val = G__12885;
          vals = G__12886;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__12883 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__12887__i = 0, G__12887__a = new Array(arguments.length - 2);
        while (G__12887__i < G__12887__a.length) {
          G__12887__a[G__12887__i] = arguments[G__12887__i + 2];
          ++G__12887__i;
        }
        vals = new cljs.core.IndexedSeq(G__12887__a, 0);
      }
      return G__12883__delegate.call(this, tcoll, val, vals);
    };
    G__12883.cljs$lang$maxFixedArity = 2;
    G__12883.cljs$lang$applyTo = function(arglist__12888) {
      var tcoll = cljs.core.first(arglist__12888);
      arglist__12888 = cljs.core.next(arglist__12888);
      var val = cljs.core.first(arglist__12888);
      var vals = cljs.core.rest(arglist__12888);
      return G__12883__delegate(tcoll, val, vals);
    };
    G__12883.cljs$core$IFn$_invoke$arity$variadic = G__12883__delegate;
    return G__12883;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        var G__12889 = null;
        if (arguments.length > 2) {
          var G__12890__i = 0, G__12890__a = new Array(arguments.length - 2);
          while (G__12890__i < G__12890__a.length) {
            G__12890__a[G__12890__i] = arguments[G__12890__i + 2];
            ++G__12890__i;
          }
          G__12889 = new cljs.core.IndexedSeq(G__12890__a, 0);
        }
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__12889);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_(tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__12891__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__12892 = ntcoll;
          var G__12893 = cljs.core.first(kvs);
          var G__12894 = cljs.core.second(kvs);
          var G__12895 = cljs.core.nnext(kvs);
          tcoll = G__12892;
          key = G__12893;
          val = G__12894;
          kvs = G__12895;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__12891 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__12896__i = 0, G__12896__a = new Array(arguments.length - 3);
        while (G__12896__i < G__12896__a.length) {
          G__12896__a[G__12896__i] = arguments[G__12896__i + 3];
          ++G__12896__i;
        }
        kvs = new cljs.core.IndexedSeq(G__12896__a, 0);
      }
      return G__12891__delegate.call(this, tcoll, key, val, kvs);
    };
    G__12891.cljs$lang$maxFixedArity = 3;
    G__12891.cljs$lang$applyTo = function(arglist__12897) {
      var tcoll = cljs.core.first(arglist__12897);
      arglist__12897 = cljs.core.next(arglist__12897);
      var key = cljs.core.first(arglist__12897);
      arglist__12897 = cljs.core.next(arglist__12897);
      var val = cljs.core.first(arglist__12897);
      var kvs = cljs.core.rest(arglist__12897);
      return G__12891__delegate(tcoll, key, val, kvs);
    };
    G__12891.cljs$core$IFn$_invoke$arity$variadic = G__12891__delegate;
    return G__12891;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        var G__12898 = null;
        if (arguments.length > 3) {
          var G__12899__i = 0, G__12899__a = new Array(arguments.length - 3);
          while (G__12899__i < G__12899__a.length) {
            G__12899__a[G__12899__i] = arguments[G__12899__i + 3];
            ++G__12899__i;
          }
          G__12898 = new cljs.core.IndexedSeq(G__12899__a, 0);
        }
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, G__12898);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_(tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__12900__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__12901 = ntcoll;
          var G__12902 = cljs.core.first(ks);
          var G__12903 = cljs.core.next(ks);
          tcoll = G__12901;
          key = G__12902;
          ks = G__12903;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__12900 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__12904__i = 0, G__12904__a = new Array(arguments.length - 2);
        while (G__12904__i < G__12904__a.length) {
          G__12904__a[G__12904__i] = arguments[G__12904__i + 2];
          ++G__12904__i;
        }
        ks = new cljs.core.IndexedSeq(G__12904__a, 0);
      }
      return G__12900__delegate.call(this, tcoll, key, ks);
    };
    G__12900.cljs$lang$maxFixedArity = 2;
    G__12900.cljs$lang$applyTo = function(arglist__12905) {
      var tcoll = cljs.core.first(arglist__12905);
      arglist__12905 = cljs.core.next(arglist__12905);
      var key = cljs.core.first(arglist__12905);
      var ks = cljs.core.rest(arglist__12905);
      return G__12900__delegate(tcoll, key, ks);
    };
    G__12900.cljs$core$IFn$_invoke$arity$variadic = G__12900__delegate;
    return G__12900;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        var G__12906 = null;
        if (arguments.length > 2) {
          var G__12907__i = 0, G__12907__a = new Array(arguments.length - 2);
          while (G__12907__i < G__12907__a.length) {
            G__12907__a[G__12907__i] = arguments[G__12907__i + 2];
            ++G__12907__i;
          }
          G__12906 = new cljs.core.IndexedSeq(G__12907__a, 0);
        }
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, G__12906);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_(tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__12908__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__12909 = ntcoll;
          var G__12910 = cljs.core.first(vals);
          var G__12911 = cljs.core.next(vals);
          tcoll = G__12909;
          val = G__12910;
          vals = G__12911;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__12908 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__12912__i = 0, G__12912__a = new Array(arguments.length - 2);
        while (G__12912__i < G__12912__a.length) {
          G__12912__a[G__12912__i] = arguments[G__12912__i + 2];
          ++G__12912__i;
        }
        vals = new cljs.core.IndexedSeq(G__12912__a, 0);
      }
      return G__12908__delegate.call(this, tcoll, val, vals);
    };
    G__12908.cljs$lang$maxFixedArity = 2;
    G__12908.cljs$lang$applyTo = function(arglist__12913) {
      var tcoll = cljs.core.first(arglist__12913);
      arglist__12913 = cljs.core.next(arglist__12913);
      var val = cljs.core.first(arglist__12913);
      var vals = cljs.core.rest(arglist__12913);
      return G__12908__delegate(tcoll, val, vals);
    };
    G__12908.cljs$core$IFn$_invoke$arity$variadic = G__12908__delegate;
    return G__12908;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        var G__12914 = null;
        if (arguments.length > 2) {
          var G__12915__i = 0, G__12915__a = new Array(arguments.length - 2);
          while (G__12915__i < G__12915__a.length) {
            G__12915__a[G__12915__i] = arguments[G__12915__i + 2];
            ++G__12915__i;
          }
          G__12914 = new cljs.core.IndexedSeq(G__12915__a, 0);
        }
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__12914);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a4699 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4699);
      } else {
        var G__13126 = a4699;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13126) : f.call(null, G__13126);
      }
    } else {
      var b4700 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4699, b4700);
        } else {
          var G__13127 = a4699;
          var G__13128 = b4700;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13127, G__13128) : f.call(null, G__13127, G__13128);
        }
      } else {
        var c4701 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4699, b4700, c4701);
          } else {
            var G__13129 = a4699;
            var G__13130 = b4700;
            var G__13131 = c4701;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13129, G__13130, G__13131) : f.call(null, G__13129, G__13130, G__13131);
          }
        } else {
          var d4702 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4699, b4700, c4701, d4702);
            } else {
              var G__13132 = a4699;
              var G__13133 = b4700;
              var G__13134 = c4701;
              var G__13135 = d4702;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13132, G__13133, G__13134, G__13135) : f.call(null, G__13132, G__13133, G__13134, G__13135);
            }
          } else {
            var e4703 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4699, b4700, c4701, d4702, e4703);
              } else {
                var G__13136 = a4699;
                var G__13137 = b4700;
                var G__13138 = c4701;
                var G__13139 = d4702;
                var G__13140 = e4703;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13136, G__13137, G__13138, G__13139, G__13140) : f.call(null, G__13136, G__13137, G__13138, G__13139, G__13140);
              }
            } else {
              var f4704 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4699, b4700, c4701, d4702, e4703, f4704);
                } else {
                  var G__13141 = a4699;
                  var G__13142 = b4700;
                  var G__13143 = c4701;
                  var G__13144 = d4702;
                  var G__13145 = e4703;
                  var G__13146 = f4704;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__13141, G__13142, G__13143, G__13144, G__13145, G__13146) : f.call(null, G__13141, G__13142, G__13143, G__13144, G__13145, G__13146);
                }
              } else {
                var g4705 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4699, b4700, c4701, d4702, e4703, f4704, g4705);
                  } else {
                    var G__13147 = a4699;
                    var G__13148 = b4700;
                    var G__13149 = c4701;
                    var G__13150 = d4702;
                    var G__13151 = e4703;
                    var G__13152 = f4704;
                    var G__13153 = g4705;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__13147, G__13148, G__13149, G__13150, G__13151, G__13152, G__13153) : f.call(null, G__13147, G__13148, G__13149, G__13150, G__13151, G__13152, G__13153);
                  }
                } else {
                  var h4706 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706);
                    } else {
                      var G__13154 = a4699;
                      var G__13155 = b4700;
                      var G__13156 = c4701;
                      var G__13157 = d4702;
                      var G__13158 = e4703;
                      var G__13159 = f4704;
                      var G__13160 = g4705;
                      var G__13161 = h4706;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__13154, G__13155, G__13156, G__13157, G__13158, G__13159, G__13160, G__13161) : f.call(null, G__13154, G__13155, G__13156, G__13157, G__13158, G__13159, G__13160, G__13161);
                    }
                  } else {
                    var i4707 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706, i4707);
                      } else {
                        var G__13162 = a4699;
                        var G__13163 = b4700;
                        var G__13164 = c4701;
                        var G__13165 = d4702;
                        var G__13166 = e4703;
                        var G__13167 = f4704;
                        var G__13168 = g4705;
                        var G__13169 = h4706;
                        var G__13170 = i4707;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__13162, G__13163, G__13164, G__13165, G__13166, G__13167, G__13168, G__13169, G__13170) : f.call(null, G__13162, G__13163, G__13164, G__13165, G__13166, G__13167, G__13168, G__13169, G__13170);
                      }
                    } else {
                      var j4708 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706, i4707, j4708);
                        } else {
                          var G__13171 = a4699;
                          var G__13172 = b4700;
                          var G__13173 = c4701;
                          var G__13174 = d4702;
                          var G__13175 = e4703;
                          var G__13176 = f4704;
                          var G__13177 = g4705;
                          var G__13178 = h4706;
                          var G__13179 = i4707;
                          var G__13180 = j4708;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__13171, G__13172, G__13173, G__13174, G__13175, G__13176, G__13177, G__13178, G__13179, G__13180) : f.call(null, G__13171, G__13172, G__13173, G__13174, G__13175, G__13176, G__13177, G__13178, G__13179, G__13180);
                        }
                      } else {
                        var k4709 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706, i4707, j4708, k4709);
                          } else {
                            var G__13181 = a4699;
                            var G__13182 = b4700;
                            var G__13183 = c4701;
                            var G__13184 = d4702;
                            var G__13185 = e4703;
                            var G__13186 = f4704;
                            var G__13187 = g4705;
                            var G__13188 = h4706;
                            var G__13189 = i4707;
                            var G__13190 = j4708;
                            var G__13191 = k4709;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__13181, G__13182, G__13183, G__13184, G__13185, G__13186, G__13187, G__13188, G__13189, G__13190, G__13191) : f.call(null, G__13181, G__13182, G__13183, G__13184, G__13185, G__13186, G__13187, G__13188, G__13189, G__13190, G__13191);
                          }
                        } else {
                          var l4710 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706, i4707, j4708, k4709, l4710);
                            } else {
                              var G__13192 = a4699;
                              var G__13193 = b4700;
                              var G__13194 = c4701;
                              var G__13195 = d4702;
                              var G__13196 = e4703;
                              var G__13197 = f4704;
                              var G__13198 = g4705;
                              var G__13199 = h4706;
                              var G__13200 = i4707;
                              var G__13201 = j4708;
                              var G__13202 = k4709;
                              var G__13203 = l4710;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__13192, G__13193, G__13194, G__13195, G__13196, G__13197, G__13198, G__13199, G__13200, G__13201, G__13202, G__13203) : f.call(null, G__13192, G__13193, G__13194, G__13195, G__13196, G__13197, G__13198, G__13199, G__13200, G__13201, G__13202, G__13203);
                            }
                          } else {
                            var m4711 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706, i4707, j4708, k4709, l4710, m4711);
                              } else {
                                var G__13204 = a4699;
                                var G__13205 = b4700;
                                var G__13206 = c4701;
                                var G__13207 = d4702;
                                var G__13208 = e4703;
                                var G__13209 = f4704;
                                var G__13210 = g4705;
                                var G__13211 = h4706;
                                var G__13212 = i4707;
                                var G__13213 = j4708;
                                var G__13214 = k4709;
                                var G__13215 = l4710;
                                var G__13216 = m4711;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__13204, G__13205, G__13206, G__13207, G__13208, G__13209, G__13210, G__13211, G__13212, G__13213, G__13214, G__13215, G__13216) : f.call(null, G__13204, G__13205, G__13206, G__13207, G__13208, G__13209, G__13210, G__13211, G__13212, G__13213, G__13214, G__13215, G__13216);
                              }
                            } else {
                              var n4712 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706, i4707, j4708, k4709, l4710, m4711, n4712);
                                } else {
                                  var G__13217 = a4699;
                                  var G__13218 = b4700;
                                  var G__13219 = c4701;
                                  var G__13220 = d4702;
                                  var G__13221 = e4703;
                                  var G__13222 = f4704;
                                  var G__13223 = g4705;
                                  var G__13224 = h4706;
                                  var G__13225 = i4707;
                                  var G__13226 = j4708;
                                  var G__13227 = k4709;
                                  var G__13228 = l4710;
                                  var G__13229 = m4711;
                                  var G__13230 = n4712;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__13217, G__13218, G__13219, G__13220, G__13221, G__13222, G__13223, G__13224, G__13225, G__13226, G__13227, G__13228, G__13229, G__13230) : f.call(null, G__13217, G__13218, G__13219, G__13220, G__13221, G__13222, G__13223, G__13224, G__13225, G__13226, G__13227, G__13228, G__13229, G__13230);
                                }
                              } else {
                                var o4713 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706, i4707, j4708, k4709, l4710, m4711, n4712, o4713);
                                  } else {
                                    var G__13231 = a4699;
                                    var G__13232 = b4700;
                                    var G__13233 = c4701;
                                    var G__13234 = d4702;
                                    var G__13235 = e4703;
                                    var G__13236 = f4704;
                                    var G__13237 = g4705;
                                    var G__13238 = h4706;
                                    var G__13239 = i4707;
                                    var G__13240 = j4708;
                                    var G__13241 = k4709;
                                    var G__13242 = l4710;
                                    var G__13243 = m4711;
                                    var G__13244 = n4712;
                                    var G__13245 = o4713;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__13231, G__13232, G__13233, G__13234, G__13235, G__13236, G__13237, G__13238, G__13239, G__13240, G__13241, G__13242, G__13243, G__13244, G__13245) : f.call(null, G__13231, G__13232, G__13233, G__13234, G__13235, G__13236, G__13237, G__13238, G__13239, G__13240, G__13241, G__13242, G__13243, G__13244, G__13245);
                                  }
                                } else {
                                  var p4714 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706, i4707, j4708, k4709, l4710, m4711, n4712, o4713, p4714);
                                    } else {
                                      var G__13246 = a4699;
                                      var G__13247 = b4700;
                                      var G__13248 = c4701;
                                      var G__13249 = d4702;
                                      var G__13250 = e4703;
                                      var G__13251 = f4704;
                                      var G__13252 = g4705;
                                      var G__13253 = h4706;
                                      var G__13254 = i4707;
                                      var G__13255 = j4708;
                                      var G__13256 = k4709;
                                      var G__13257 = l4710;
                                      var G__13258 = m4711;
                                      var G__13259 = n4712;
                                      var G__13260 = o4713;
                                      var G__13261 = p4714;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__13246, G__13247, G__13248, G__13249, G__13250, G__13251, G__13252, G__13253, G__13254, G__13255, G__13256, G__13257, G__13258, G__13259, G__13260, G__13261) : f.call(null, G__13246, G__13247, G__13248, G__13249, G__13250, G__13251, G__13252, G__13253, G__13254, G__13255, G__13256, G__13257, G__13258, G__13259, G__13260, G__13261);
                                    }
                                  } else {
                                    var q4715 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706, i4707, j4708, k4709, l4710, m4711, n4712, o4713, p4714, q4715);
                                      } else {
                                        var G__13262 = a4699;
                                        var G__13263 = b4700;
                                        var G__13264 = c4701;
                                        var G__13265 = d4702;
                                        var G__13266 = e4703;
                                        var G__13267 = f4704;
                                        var G__13268 = g4705;
                                        var G__13269 = h4706;
                                        var G__13270 = i4707;
                                        var G__13271 = j4708;
                                        var G__13272 = k4709;
                                        var G__13273 = l4710;
                                        var G__13274 = m4711;
                                        var G__13275 = n4712;
                                        var G__13276 = o4713;
                                        var G__13277 = p4714;
                                        var G__13278 = q4715;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__13262, G__13263, G__13264, G__13265, G__13266, G__13267, G__13268, G__13269, G__13270, G__13271, G__13272, G__13273, G__13274, G__13275, G__13276, G__13277, G__13278) : f.call(null, G__13262, G__13263, G__13264, G__13265, G__13266, G__13267, G__13268, G__13269, G__13270, G__13271, G__13272, G__13273, G__13274, G__13275, G__13276, G__13277, G__13278);
                                      }
                                    } else {
                                      var r4716 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706, i4707, j4708, k4709, l4710, m4711, n4712, o4713, p4714, q4715, r4716);
                                        } else {
                                          var G__13279 = a4699;
                                          var G__13280 = b4700;
                                          var G__13281 = c4701;
                                          var G__13282 = d4702;
                                          var G__13283 = e4703;
                                          var G__13284 = f4704;
                                          var G__13285 = g4705;
                                          var G__13286 = h4706;
                                          var G__13287 = i4707;
                                          var G__13288 = j4708;
                                          var G__13289 = k4709;
                                          var G__13290 = l4710;
                                          var G__13291 = m4711;
                                          var G__13292 = n4712;
                                          var G__13293 = o4713;
                                          var G__13294 = p4714;
                                          var G__13295 = q4715;
                                          var G__13296 = r4716;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__13279, G__13280, G__13281, G__13282, G__13283, G__13284, G__13285, G__13286, G__13287, G__13288, G__13289, G__13290, G__13291, G__13292, G__13293, G__13294, G__13295, G__13296) : f.call(null, G__13279, G__13280, G__13281, G__13282, G__13283, G__13284, G__13285, G__13286, G__13287, G__13288, G__13289, G__13290, G__13291, G__13292, G__13293, G__13294, G__13295, G__13296);
                                        }
                                      } else {
                                        var s4717 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706, i4707, j4708, k4709, l4710, m4711, n4712, o4713, p4714, q4715, r4716, s4717);
                                          } else {
                                            var G__13297 = a4699;
                                            var G__13298 = b4700;
                                            var G__13299 = c4701;
                                            var G__13300 = d4702;
                                            var G__13301 = e4703;
                                            var G__13302 = f4704;
                                            var G__13303 = g4705;
                                            var G__13304 = h4706;
                                            var G__13305 = i4707;
                                            var G__13306 = j4708;
                                            var G__13307 = k4709;
                                            var G__13308 = l4710;
                                            var G__13309 = m4711;
                                            var G__13310 = n4712;
                                            var G__13311 = o4713;
                                            var G__13312 = p4714;
                                            var G__13313 = q4715;
                                            var G__13314 = r4716;
                                            var G__13315 = s4717;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__13297, G__13298, G__13299, G__13300, G__13301, G__13302, G__13303, G__13304, G__13305, G__13306, G__13307, G__13308, G__13309, G__13310, G__13311, G__13312, G__13313, G__13314, G__13315) : f.call(null, G__13297, G__13298, G__13299, G__13300, G__13301, G__13302, G__13303, G__13304, G__13305, G__13306, G__13307, G__13308, G__13309, G__13310, G__13311, G__13312, G__13313, G__13314, 
                                            G__13315);
                                          }
                                        } else {
                                          var t4718 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706, i4707, j4708, k4709, l4710, m4711, n4712, o4713, p4714, q4715, r4716, s4717, t4718);
                                            } else {
                                              var G__13316 = a4699;
                                              var G__13317 = b4700;
                                              var G__13318 = c4701;
                                              var G__13319 = d4702;
                                              var G__13320 = e4703;
                                              var G__13321 = f4704;
                                              var G__13322 = g4705;
                                              var G__13323 = h4706;
                                              var G__13324 = i4707;
                                              var G__13325 = j4708;
                                              var G__13326 = k4709;
                                              var G__13327 = l4710;
                                              var G__13328 = m4711;
                                              var G__13329 = n4712;
                                              var G__13330 = o4713;
                                              var G__13331 = p4714;
                                              var G__13332 = q4715;
                                              var G__13333 = r4716;
                                              var G__13334 = s4717;
                                              var G__13335 = t4718;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__13316, G__13317, G__13318, G__13319, G__13320, G__13321, G__13322, G__13323, G__13324, G__13325, G__13326, G__13327, G__13328, G__13329, G__13330, G__13331, G__13332, G__13333, G__13334, G__13335) : f.call(null, G__13316, G__13317, G__13318, G__13319, G__13320, G__13321, G__13322, G__13323, G__13324, G__13325, G__13326, G__13327, G__13328, G__13329, G__13330, G__13331, G__13332, 
                                              G__13333, G__13334, G__13335);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array(args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__6 = function() {
    var G__13336__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to(f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array(arglist));
      }
    };
    var G__13336 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        var G__13337__i = 0, G__13337__a = new Array(arguments.length - 5);
        while (G__13337__i < G__13337__a.length) {
          G__13337__a[G__13337__i] = arguments[G__13337__i + 5];
          ++G__13337__i;
        }
        args = new cljs.core.IndexedSeq(G__13337__a, 0);
      }
      return G__13336__delegate.call(this, f, a, b, c, d, args);
    };
    G__13336.cljs$lang$maxFixedArity = 5;
    G__13336.cljs$lang$applyTo = function(arglist__13338) {
      var f = cljs.core.first(arglist__13338);
      arglist__13338 = cljs.core.next(arglist__13338);
      var a = cljs.core.first(arglist__13338);
      arglist__13338 = cljs.core.next(arglist__13338);
      var b = cljs.core.first(arglist__13338);
      arglist__13338 = cljs.core.next(arglist__13338);
      var c = cljs.core.first(arglist__13338);
      arglist__13338 = cljs.core.next(arglist__13338);
      var d = cljs.core.first(arglist__13338);
      var args = cljs.core.rest(arglist__13338);
      return G__13336__delegate(f, a, b, c, d, args);
    };
    G__13336.cljs$core$IFn$_invoke$arity$variadic = G__13336__delegate;
    return G__13336;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        var G__13339 = null;
        if (arguments.length > 5) {
          var G__13340__i = 0, G__13340__a = new Array(arguments.length - 5);
          while (G__13340__i < G__13340__a.length) {
            G__13340__a[G__13340__i] = arguments[G__13340__i + 5];
            ++G__13340__i;
          }
          G__13339 = new cljs.core.IndexedSeq(G__13340__a, 0);
        }
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, G__13339);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta(obj, function() {
      var G__13356 = cljs.core.meta(obj);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13356) : f.call(null, G__13356);
    }());
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta(obj, function() {
      var G__13357 = cljs.core.meta(obj);
      var G__13358 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13357, G__13358) : f.call(null, G__13357, G__13358);
    }());
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta(obj, function() {
      var G__13359 = cljs.core.meta(obj);
      var G__13360 = a;
      var G__13361 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13359, G__13360, G__13361) : f.call(null, G__13359, G__13360, G__13361);
    }());
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta(obj, function() {
      var G__13362 = cljs.core.meta(obj);
      var G__13363 = a;
      var G__13364 = b;
      var G__13365 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13362, G__13363, G__13364, G__13365) : f.call(null, G__13362, G__13363, G__13364, G__13365);
    }());
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta(obj, function() {
      var G__13366 = cljs.core.meta(obj);
      var G__13367 = a;
      var G__13368 = b;
      var G__13369 = c;
      var G__13370 = d;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13366, G__13367, G__13368, G__13369, G__13370) : f.call(null, G__13366, G__13367, G__13368, G__13369, G__13370);
    }());
  };
  var vary_meta__7 = function() {
    var G__13371__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
    };
    var G__13371 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__13372__i = 0, G__13372__a = new Array(arguments.length - 6);
        while (G__13372__i < G__13372__a.length) {
          G__13372__a[G__13372__i] = arguments[G__13372__i + 6];
          ++G__13372__i;
        }
        args = new cljs.core.IndexedSeq(G__13372__a, 0);
      }
      return G__13371__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__13371.cljs$lang$maxFixedArity = 6;
    G__13371.cljs$lang$applyTo = function(arglist__13373) {
      var obj = cljs.core.first(arglist__13373);
      arglist__13373 = cljs.core.next(arglist__13373);
      var f = cljs.core.first(arglist__13373);
      arglist__13373 = cljs.core.next(arglist__13373);
      var a = cljs.core.first(arglist__13373);
      arglist__13373 = cljs.core.next(arglist__13373);
      var b = cljs.core.first(arglist__13373);
      arglist__13373 = cljs.core.next(arglist__13373);
      var c = cljs.core.first(arglist__13373);
      arglist__13373 = cljs.core.next(arglist__13373);
      var d = cljs.core.first(arglist__13373);
      var args = cljs.core.rest(arglist__13373);
      return G__13371__delegate(obj, f, a, b, c, d, args);
    };
    G__13371.cljs$core$IFn$_invoke$arity$variadic = G__13371__delegate;
    return G__13371;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        var G__13374 = null;
        if (arguments.length > 6) {
          var G__13375__i = 0, G__13375__a = new Array(arguments.length - 6);
          while (G__13375__i < G__13375__a.length) {
            G__13375__a[G__13375__i] = arguments[G__13375__i + 6];
            ++G__13375__i;
          }
          G__13374 = new cljs.core.IndexedSeq(G__13375__a, 0);
        }
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, G__13374);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var not_EQ___3 = function() {
    var G__13376__delegate = function(x, y, more) {
      return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
    };
    var G__13376 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13377__i = 0, G__13377__a = new Array(arguments.length - 2);
        while (G__13377__i < G__13377__a.length) {
          G__13377__a[G__13377__i] = arguments[G__13377__i + 2];
          ++G__13377__i;
        }
        more = new cljs.core.IndexedSeq(G__13377__a, 0);
      }
      return G__13376__delegate.call(this, x, y, more);
    };
    G__13376.cljs$lang$maxFixedArity = 2;
    G__13376.cljs$lang$applyTo = function(arglist__13378) {
      var x = cljs.core.first(arglist__13378);
      arglist__13378 = cljs.core.next(arglist__13378);
      var y = cljs.core.first(arglist__13378);
      var more = cljs.core.rest(arglist__13378);
      return G__13376__delegate(x, y, more);
    };
    G__13376.cljs$core$IFn$_invoke$arity$variadic = G__13376__delegate;
    return G__13376;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        var G__13379 = null;
        if (arguments.length > 2) {
          var G__13380__i = 0, G__13380__a = new Array(arguments.length - 2);
          while (G__13380__i < G__13380__a.length) {
            G__13380__a[G__13380__i] = arguments[G__13380__i + 2];
            ++G__13380__i;
          }
          G__13379 = new cljs.core.IndexedSeq(G__13380__a, 0);
        }
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13379);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t13384 !== "undefined") {
  } else {
    cljs.core.t13384 = function(nil_iter, meta13385) {
      this.nil_iter = nil_iter;
      this.meta13385 = meta13385;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t13384.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t13384.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t13384.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t13384.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13386) {
      var self__ = this;
      var _13386__$1 = this;
      return self__.meta13385;
    };
    cljs.core.t13384.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13386, meta13385__$1) {
      var self__ = this;
      var _13386__$1 = this;
      return new cljs.core.t13384(self__.nil_iter, meta13385__$1);
    };
    cljs.core.t13384.cljs$lang$type = true;
    cljs.core.t13384.cljs$lang$ctorStr = "cljs.core/t13384";
    cljs.core.t13384.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
      return cljs.core._write(writer__4356__auto__, "cljs.core/t13384");
    };
    cljs.core.__GT_t13384 = function __GT_t13384(nil_iter__$1, meta13385) {
      return new cljs.core.t13384(nil_iter__$1, meta13385);
    };
  }
  return new cljs.core.t13384(nil_iter, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 54, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 3063, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 3059, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core.cljs"], 
  null));
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3756__auto__ = !(lt.stepper == null);
      if (and__3756__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3756__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__13387 = lt;
        var G__13388 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__13387, G__13388) : self__.xform.call(null, G__13387, G__13388);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__13389 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__13389) : self__.xform.call(null, G__13389);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__13391 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13391) : xform.call(null, G__13391);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__13393 = cljs.core.next(iters__$1);
        iters__$1 = G__13393;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4655__auto___13394 = self__.iters.length;
  var i_13395 = 0;
  while (true) {
    if (i_13395 < n__4655__auto___13394) {
      self__.nexts[i_13395] = self__.iters[i_13395].next();
      var G__13396 = i_13395 + 1;
      i_13395 = G__13396;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3756__auto__ = !(lt.stepper == null);
      if (and__3756__auto__) {
        return this$.hasNext();
      } else {
        return and__3756__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__13392 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__13392) : self__.xform.call(null, G__13392);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer(lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(function() {
      var G__13401 = stepfn;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13401) : xform.call(null, G__13401);
    }(), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__13402_13406 = cljs.core.seq(colls);
  var chunk__13403_13407 = null;
  var count__13404_13408 = 0;
  var i__13405_13409 = 0;
  while (true) {
    if (i__13405_13409 < count__13404_13408) {
      var coll_13410 = chunk__13403_13407.cljs$core$IIndexed$_nth$arity$2(null, i__13405_13409);
      iters.push(cljs.core.iter(coll_13410));
      var G__13411 = seq__13402_13406;
      var G__13412 = chunk__13403_13407;
      var G__13413 = count__13404_13408;
      var G__13414 = i__13405_13409 + 1;
      seq__13402_13406 = G__13411;
      chunk__13403_13407 = G__13412;
      count__13404_13408 = G__13413;
      i__13405_13409 = G__13414;
      continue;
    } else {
      var temp__4126__auto___13415 = cljs.core.seq(seq__13402_13406);
      if (temp__4126__auto___13415) {
        var seq__13402_13416__$1 = temp__4126__auto___13415;
        if (cljs.core.chunked_seq_QMARK_(seq__13402_13416__$1)) {
          var c__4555__auto___13417 = cljs.core.chunk_first(seq__13402_13416__$1);
          var G__13418 = cljs.core.chunk_rest(seq__13402_13416__$1);
          var G__13419 = c__4555__auto___13417;
          var G__13420 = cljs.core.count(c__4555__auto___13417);
          var G__13421 = 0;
          seq__13402_13406 = G__13418;
          chunk__13403_13407 = G__13419;
          count__13404_13408 = G__13420;
          i__13405_13409 = G__13421;
          continue;
        } else {
          var coll_13422 = cljs.core.first(seq__13402_13416__$1);
          iters.push(cljs.core.iter(coll_13422));
          var G__13423 = cljs.core.next(seq__13402_13416__$1);
          var G__13424 = null;
          var G__13425 = 0;
          var G__13426 = 0;
          seq__13402_13406 = G__13423;
          chunk__13403_13407 = G__13424;
          count__13404_13408 = G__13425;
          i__13405_13409 = G__13426;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_(coll)) {
      return coll;
    } else {
      var or__3768__auto__ = cljs.core.seq(coll);
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__13427__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
    };
    var G__13427 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__13428__i = 0, G__13428__a = new Array(arguments.length - 2);
        while (G__13428__i < G__13428__a.length) {
          G__13428__a[G__13428__i] = arguments[G__13428__i + 2];
          ++G__13428__i;
        }
        colls = new cljs.core.IndexedSeq(G__13428__a, 0);
      }
      return G__13427__delegate.call(this, xform, coll, colls);
    };
    G__13427.cljs$lang$maxFixedArity = 2;
    G__13427.cljs$lang$applyTo = function(arglist__13429) {
      var xform = cljs.core.first(arglist__13429);
      arglist__13429 = cljs.core.next(arglist__13429);
      var coll = cljs.core.first(arglist__13429);
      var colls = cljs.core.rest(arglist__13429);
      return G__13427__delegate(xform, coll, colls);
    };
    G__13427.cljs$core$IFn$_invoke$arity$variadic = G__13427__delegate;
    return G__13427;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        var G__13430 = null;
        if (arguments.length > 2) {
          var G__13431__i = 0, G__13431__a = new Array(arguments.length - 2);
          while (G__13431__i < G__13431__a.length) {
            G__13431__a[G__13431__i] = arguments[G__13431__i + 2];
            ++G__13431__i;
          }
          G__13430 = new cljs.core.IndexedSeq(G__13431__a, 0);
        }
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, G__13430);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__13433 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13433) : pred.call(null, G__13433);
      }())) {
        var G__13434 = pred;
        var G__13435 = cljs.core.next(coll);
        pred = G__13434;
        coll = G__13435;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__3768__auto__ = function() {
        var G__13439 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13439) : pred.call(null, G__13439);
      }();
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        var G__13440 = pred;
        var G__13441 = cljs.core.next(coll);
        pred = G__13440;
        coll = G__13441;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_(n);
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__13448 = null;
    var G__13448__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__13448__1 = function(x) {
      return cljs.core.not(function() {
        var G__13445 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13445) : f.call(null, G__13445);
      }());
    };
    var G__13448__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__13446 = x;
        var G__13447 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13446, G__13447) : f.call(null, G__13446, G__13447);
      }());
    };
    var G__13448__3 = function() {
      var G__13449__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__13449 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__13450__i = 0, G__13450__a = new Array(arguments.length - 2);
          while (G__13450__i < G__13450__a.length) {
            G__13450__a[G__13450__i] = arguments[G__13450__i + 2];
            ++G__13450__i;
          }
          zs = new cljs.core.IndexedSeq(G__13450__a, 0);
        }
        return G__13449__delegate.call(this, x, y, zs);
      };
      G__13449.cljs$lang$maxFixedArity = 2;
      G__13449.cljs$lang$applyTo = function(arglist__13451) {
        var x = cljs.core.first(arglist__13451);
        arglist__13451 = cljs.core.next(arglist__13451);
        var y = cljs.core.first(arglist__13451);
        var zs = cljs.core.rest(arglist__13451);
        return G__13449__delegate(x, y, zs);
      };
      G__13449.cljs$core$IFn$_invoke$arity$variadic = G__13449__delegate;
      return G__13449;
    }();
    G__13448 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__13448__0.call(this);
        case 1:
          return G__13448__1.call(this, x);
        case 2:
          return G__13448__2.call(this, x, y);
        default:
          var G__13452 = null;
          if (arguments.length > 2) {
            var G__13453__i = 0, G__13453__a = new Array(arguments.length - 2);
            while (G__13453__i < G__13453__a.length) {
              G__13453__a[G__13453__i] = arguments[G__13453__i + 2];
              ++G__13453__i;
            }
            G__13452 = new cljs.core.IndexedSeq(G__13453__a, 0);
          }
          return G__13448__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13452);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__13448.cljs$lang$maxFixedArity = 2;
    G__13448.cljs$lang$applyTo = G__13448__3.cljs$lang$applyTo;
    G__13448.cljs$core$IFn$_invoke$arity$0 = G__13448__0;
    G__13448.cljs$core$IFn$_invoke$arity$1 = G__13448__1;
    G__13448.cljs$core$IFn$_invoke$arity$2 = G__13448__2;
    G__13448.cljs$core$IFn$_invoke$arity$variadic = G__13448__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__13448;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__13454__delegate = function(args) {
      return x;
    };
    var G__13454 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__13455__i = 0, G__13455__a = new Array(arguments.length - 0);
        while (G__13455__i < G__13455__a.length) {
          G__13455__a[G__13455__i] = arguments[G__13455__i + 0];
          ++G__13455__i;
        }
        args = new cljs.core.IndexedSeq(G__13455__a, 0);
      }
      return G__13454__delegate.call(this, args);
    };
    G__13454.cljs$lang$maxFixedArity = 0;
    G__13454.cljs$lang$applyTo = function(arglist__13456) {
      var args = cljs.core.seq(arglist__13456);
      return G__13454__delegate(args);
    };
    G__13454.cljs$core$IFn$_invoke$arity$variadic = G__13454__delegate;
    return G__13454;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__13511 = null;
      var G__13511__0 = function() {
        var G__13484 = function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13484) : f.call(null, G__13484);
      };
      var G__13511__1 = function(x) {
        var G__13485 = function() {
          var G__13486 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13486) : g.call(null, G__13486);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13485) : f.call(null, G__13485);
      };
      var G__13511__2 = function(x, y) {
        var G__13487 = function() {
          var G__13488 = x;
          var G__13489 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__13488, G__13489) : g.call(null, G__13488, G__13489);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13487) : f.call(null, G__13487);
      };
      var G__13511__3 = function(x, y, z) {
        var G__13490 = function() {
          var G__13491 = x;
          var G__13492 = y;
          var G__13493 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__13491, G__13492, G__13493) : g.call(null, G__13491, G__13492, G__13493);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13490) : f.call(null, G__13490);
      };
      var G__13511__4 = function() {
        var G__13512__delegate = function(x, y, z, args) {
          var G__13494 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13494) : f.call(null, G__13494);
        };
        var G__13512 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13513__i = 0, G__13513__a = new Array(arguments.length - 3);
            while (G__13513__i < G__13513__a.length) {
              G__13513__a[G__13513__i] = arguments[G__13513__i + 3];
              ++G__13513__i;
            }
            args = new cljs.core.IndexedSeq(G__13513__a, 0);
          }
          return G__13512__delegate.call(this, x, y, z, args);
        };
        G__13512.cljs$lang$maxFixedArity = 3;
        G__13512.cljs$lang$applyTo = function(arglist__13514) {
          var x = cljs.core.first(arglist__13514);
          arglist__13514 = cljs.core.next(arglist__13514);
          var y = cljs.core.first(arglist__13514);
          arglist__13514 = cljs.core.next(arglist__13514);
          var z = cljs.core.first(arglist__13514);
          var args = cljs.core.rest(arglist__13514);
          return G__13512__delegate(x, y, z, args);
        };
        G__13512.cljs$core$IFn$_invoke$arity$variadic = G__13512__delegate;
        return G__13512;
      }();
      G__13511 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13511__0.call(this);
          case 1:
            return G__13511__1.call(this, x);
          case 2:
            return G__13511__2.call(this, x, y);
          case 3:
            return G__13511__3.call(this, x, y, z);
          default:
            var G__13515 = null;
            if (arguments.length > 3) {
              var G__13516__i = 0, G__13516__a = new Array(arguments.length - 3);
              while (G__13516__i < G__13516__a.length) {
                G__13516__a[G__13516__i] = arguments[G__13516__i + 3];
                ++G__13516__i;
              }
              G__13515 = new cljs.core.IndexedSeq(G__13516__a, 0);
            }
            return G__13511__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13515);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13511.cljs$lang$maxFixedArity = 3;
      G__13511.cljs$lang$applyTo = G__13511__4.cljs$lang$applyTo;
      G__13511.cljs$core$IFn$_invoke$arity$0 = G__13511__0;
      G__13511.cljs$core$IFn$_invoke$arity$1 = G__13511__1;
      G__13511.cljs$core$IFn$_invoke$arity$2 = G__13511__2;
      G__13511.cljs$core$IFn$_invoke$arity$3 = G__13511__3;
      G__13511.cljs$core$IFn$_invoke$arity$variadic = G__13511__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13511;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__13517 = null;
      var G__13517__0 = function() {
        var G__13495 = function() {
          var G__13496 = function() {
            return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13496) : g.call(null, G__13496);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13495) : f.call(null, G__13495);
      };
      var G__13517__1 = function(x) {
        var G__13497 = function() {
          var G__13498 = function() {
            var G__13499 = x;
            return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__13499) : h.call(null, G__13499);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13498) : g.call(null, G__13498);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13497) : f.call(null, G__13497);
      };
      var G__13517__2 = function(x, y) {
        var G__13500 = function() {
          var G__13501 = function() {
            var G__13502 = x;
            var G__13503 = y;
            return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__13502, G__13503) : h.call(null, G__13502, G__13503);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13501) : g.call(null, G__13501);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13500) : f.call(null, G__13500);
      };
      var G__13517__3 = function(x, y, z) {
        var G__13504 = function() {
          var G__13505 = function() {
            var G__13506 = x;
            var G__13507 = y;
            var G__13508 = z;
            return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__13506, G__13507, G__13508) : h.call(null, G__13506, G__13507, G__13508);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13505) : g.call(null, G__13505);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13504) : f.call(null, G__13504);
      };
      var G__13517__4 = function() {
        var G__13518__delegate = function(x, y, z, args) {
          var G__13509 = function() {
            var G__13510 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
            return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13510) : g.call(null, G__13510);
          }();
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13509) : f.call(null, G__13509);
        };
        var G__13518 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13519__i = 0, G__13519__a = new Array(arguments.length - 3);
            while (G__13519__i < G__13519__a.length) {
              G__13519__a[G__13519__i] = arguments[G__13519__i + 3];
              ++G__13519__i;
            }
            args = new cljs.core.IndexedSeq(G__13519__a, 0);
          }
          return G__13518__delegate.call(this, x, y, z, args);
        };
        G__13518.cljs$lang$maxFixedArity = 3;
        G__13518.cljs$lang$applyTo = function(arglist__13520) {
          var x = cljs.core.first(arglist__13520);
          arglist__13520 = cljs.core.next(arglist__13520);
          var y = cljs.core.first(arglist__13520);
          arglist__13520 = cljs.core.next(arglist__13520);
          var z = cljs.core.first(arglist__13520);
          var args = cljs.core.rest(arglist__13520);
          return G__13518__delegate(x, y, z, args);
        };
        G__13518.cljs$core$IFn$_invoke$arity$variadic = G__13518__delegate;
        return G__13518;
      }();
      G__13517 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13517__0.call(this);
          case 1:
            return G__13517__1.call(this, x);
          case 2:
            return G__13517__2.call(this, x, y);
          case 3:
            return G__13517__3.call(this, x, y, z);
          default:
            var G__13521 = null;
            if (arguments.length > 3) {
              var G__13522__i = 0, G__13522__a = new Array(arguments.length - 3);
              while (G__13522__i < G__13522__a.length) {
                G__13522__a[G__13522__i] = arguments[G__13522__i + 3];
                ++G__13522__i;
              }
              G__13521 = new cljs.core.IndexedSeq(G__13522__a, 0);
            }
            return G__13517__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13521);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13517.cljs$lang$maxFixedArity = 3;
      G__13517.cljs$lang$applyTo = G__13517__4.cljs$lang$applyTo;
      G__13517.cljs$core$IFn$_invoke$arity$0 = G__13517__0;
      G__13517.cljs$core$IFn$_invoke$arity$1 = G__13517__1;
      G__13517.cljs$core$IFn$_invoke$arity$2 = G__13517__2;
      G__13517.cljs$core$IFn$_invoke$arity$3 = G__13517__3;
      G__13517.cljs$core$IFn$_invoke$arity$variadic = G__13517__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13517;
    }();
  };
  var comp__4 = function() {
    var G__13523__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__13524__delegate = function(args) {
            var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
            var fs__$2 = cljs.core.next(fs__$1);
            while (true) {
              if (fs__$2) {
                var G__13525 = cljs.core.first(fs__$2).call(null, ret);
                var G__13526 = cljs.core.next(fs__$2);
                ret = G__13525;
                fs__$2 = G__13526;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__13524 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              var G__13527__i = 0, G__13527__a = new Array(arguments.length - 0);
              while (G__13527__i < G__13527__a.length) {
                G__13527__a[G__13527__i] = arguments[G__13527__i + 0];
                ++G__13527__i;
              }
              args = new cljs.core.IndexedSeq(G__13527__a, 0);
            }
            return G__13524__delegate.call(this, args);
          };
          G__13524.cljs$lang$maxFixedArity = 0;
          G__13524.cljs$lang$applyTo = function(arglist__13528) {
            var args = cljs.core.seq(arglist__13528);
            return G__13524__delegate(args);
          };
          G__13524.cljs$core$IFn$_invoke$arity$variadic = G__13524__delegate;
          return G__13524;
        }();
      }(fs__$1);
    };
    var G__13523 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__13529__i = 0, G__13529__a = new Array(arguments.length - 3);
        while (G__13529__i < G__13529__a.length) {
          G__13529__a[G__13529__i] = arguments[G__13529__i + 3];
          ++G__13529__i;
        }
        fs = new cljs.core.IndexedSeq(G__13529__a, 0);
      }
      return G__13523__delegate.call(this, f1, f2, f3, fs);
    };
    G__13523.cljs$lang$maxFixedArity = 3;
    G__13523.cljs$lang$applyTo = function(arglist__13530) {
      var f1 = cljs.core.first(arglist__13530);
      arglist__13530 = cljs.core.next(arglist__13530);
      var f2 = cljs.core.first(arglist__13530);
      arglist__13530 = cljs.core.next(arglist__13530);
      var f3 = cljs.core.first(arglist__13530);
      var fs = cljs.core.rest(arglist__13530);
      return G__13523__delegate(f1, f2, f3, fs);
    };
    G__13523.cljs$core$IFn$_invoke$arity$variadic = G__13523__delegate;
    return G__13523;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        var G__13531 = null;
        if (arguments.length > 3) {
          var G__13532__i = 0, G__13532__a = new Array(arguments.length - 3);
          while (G__13532__i < G__13532__a.length) {
            G__13532__a[G__13532__i] = arguments[G__13532__i + 3];
            ++G__13532__i;
          }
          G__13531 = new cljs.core.IndexedSeq(G__13532__a, 0);
        }
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, G__13531);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__13617 = null;
      var G__13617__0 = function() {
        var G__13575 = arg1;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13575) : f.call(null, G__13575);
      };
      var G__13617__1 = function(x) {
        var G__13576 = arg1;
        var G__13577 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13576, G__13577) : f.call(null, G__13576, G__13577);
      };
      var G__13617__2 = function(x, y) {
        var G__13578 = arg1;
        var G__13579 = x;
        var G__13580 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13578, G__13579, G__13580) : f.call(null, G__13578, G__13579, G__13580);
      };
      var G__13617__3 = function(x, y, z) {
        var G__13581 = arg1;
        var G__13582 = x;
        var G__13583 = y;
        var G__13584 = z;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13581, G__13582, G__13583, G__13584) : f.call(null, G__13581, G__13582, G__13583, G__13584);
      };
      var G__13617__4 = function() {
        var G__13618__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
        };
        var G__13618 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13619__i = 0, G__13619__a = new Array(arguments.length - 3);
            while (G__13619__i < G__13619__a.length) {
              G__13619__a[G__13619__i] = arguments[G__13619__i + 3];
              ++G__13619__i;
            }
            args = new cljs.core.IndexedSeq(G__13619__a, 0);
          }
          return G__13618__delegate.call(this, x, y, z, args);
        };
        G__13618.cljs$lang$maxFixedArity = 3;
        G__13618.cljs$lang$applyTo = function(arglist__13620) {
          var x = cljs.core.first(arglist__13620);
          arglist__13620 = cljs.core.next(arglist__13620);
          var y = cljs.core.first(arglist__13620);
          arglist__13620 = cljs.core.next(arglist__13620);
          var z = cljs.core.first(arglist__13620);
          var args = cljs.core.rest(arglist__13620);
          return G__13618__delegate(x, y, z, args);
        };
        G__13618.cljs$core$IFn$_invoke$arity$variadic = G__13618__delegate;
        return G__13618;
      }();
      G__13617 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13617__0.call(this);
          case 1:
            return G__13617__1.call(this, x);
          case 2:
            return G__13617__2.call(this, x, y);
          case 3:
            return G__13617__3.call(this, x, y, z);
          default:
            var G__13621 = null;
            if (arguments.length > 3) {
              var G__13622__i = 0, G__13622__a = new Array(arguments.length - 3);
              while (G__13622__i < G__13622__a.length) {
                G__13622__a[G__13622__i] = arguments[G__13622__i + 3];
                ++G__13622__i;
              }
              G__13621 = new cljs.core.IndexedSeq(G__13622__a, 0);
            }
            return G__13617__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13621);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13617.cljs$lang$maxFixedArity = 3;
      G__13617.cljs$lang$applyTo = G__13617__4.cljs$lang$applyTo;
      G__13617.cljs$core$IFn$_invoke$arity$0 = G__13617__0;
      G__13617.cljs$core$IFn$_invoke$arity$1 = G__13617__1;
      G__13617.cljs$core$IFn$_invoke$arity$2 = G__13617__2;
      G__13617.cljs$core$IFn$_invoke$arity$3 = G__13617__3;
      G__13617.cljs$core$IFn$_invoke$arity$variadic = G__13617__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13617;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__13623 = null;
      var G__13623__0 = function() {
        var G__13585 = arg1;
        var G__13586 = arg2;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13585, G__13586) : f.call(null, G__13585, G__13586);
      };
      var G__13623__1 = function(x) {
        var G__13587 = arg1;
        var G__13588 = arg2;
        var G__13589 = x;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13587, G__13588, G__13589) : f.call(null, G__13587, G__13588, G__13589);
      };
      var G__13623__2 = function(x, y) {
        var G__13590 = arg1;
        var G__13591 = arg2;
        var G__13592 = x;
        var G__13593 = y;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13590, G__13591, G__13592, G__13593) : f.call(null, G__13590, G__13591, G__13592, G__13593);
      };
      var G__13623__3 = function(x, y, z) {
        var G__13594 = arg1;
        var G__13595 = arg2;
        var G__13596 = x;
        var G__13597 = y;
        var G__13598 = z;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13594, G__13595, G__13596, G__13597, G__13598) : f.call(null, G__13594, G__13595, G__13596, G__13597, G__13598);
      };
      var G__13623__4 = function() {
        var G__13624__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
        };
        var G__13624 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13625__i = 0, G__13625__a = new Array(arguments.length - 3);
            while (G__13625__i < G__13625__a.length) {
              G__13625__a[G__13625__i] = arguments[G__13625__i + 3];
              ++G__13625__i;
            }
            args = new cljs.core.IndexedSeq(G__13625__a, 0);
          }
          return G__13624__delegate.call(this, x, y, z, args);
        };
        G__13624.cljs$lang$maxFixedArity = 3;
        G__13624.cljs$lang$applyTo = function(arglist__13626) {
          var x = cljs.core.first(arglist__13626);
          arglist__13626 = cljs.core.next(arglist__13626);
          var y = cljs.core.first(arglist__13626);
          arglist__13626 = cljs.core.next(arglist__13626);
          var z = cljs.core.first(arglist__13626);
          var args = cljs.core.rest(arglist__13626);
          return G__13624__delegate(x, y, z, args);
        };
        G__13624.cljs$core$IFn$_invoke$arity$variadic = G__13624__delegate;
        return G__13624;
      }();
      G__13623 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13623__0.call(this);
          case 1:
            return G__13623__1.call(this, x);
          case 2:
            return G__13623__2.call(this, x, y);
          case 3:
            return G__13623__3.call(this, x, y, z);
          default:
            var G__13627 = null;
            if (arguments.length > 3) {
              var G__13628__i = 0, G__13628__a = new Array(arguments.length - 3);
              while (G__13628__i < G__13628__a.length) {
                G__13628__a[G__13628__i] = arguments[G__13628__i + 3];
                ++G__13628__i;
              }
              G__13627 = new cljs.core.IndexedSeq(G__13628__a, 0);
            }
            return G__13623__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13627);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13623.cljs$lang$maxFixedArity = 3;
      G__13623.cljs$lang$applyTo = G__13623__4.cljs$lang$applyTo;
      G__13623.cljs$core$IFn$_invoke$arity$0 = G__13623__0;
      G__13623.cljs$core$IFn$_invoke$arity$1 = G__13623__1;
      G__13623.cljs$core$IFn$_invoke$arity$2 = G__13623__2;
      G__13623.cljs$core$IFn$_invoke$arity$3 = G__13623__3;
      G__13623.cljs$core$IFn$_invoke$arity$variadic = G__13623__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13623;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__13629 = null;
      var G__13629__0 = function() {
        var G__13599 = arg1;
        var G__13600 = arg2;
        var G__13601 = arg3;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13599, G__13600, G__13601) : f.call(null, G__13599, G__13600, G__13601);
      };
      var G__13629__1 = function(x) {
        var G__13602 = arg1;
        var G__13603 = arg2;
        var G__13604 = arg3;
        var G__13605 = x;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13602, G__13603, G__13604, G__13605) : f.call(null, G__13602, G__13603, G__13604, G__13605);
      };
      var G__13629__2 = function(x, y) {
        var G__13606 = arg1;
        var G__13607 = arg2;
        var G__13608 = arg3;
        var G__13609 = x;
        var G__13610 = y;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13606, G__13607, G__13608, G__13609, G__13610) : f.call(null, G__13606, G__13607, G__13608, G__13609, G__13610);
      };
      var G__13629__3 = function(x, y, z) {
        var G__13611 = arg1;
        var G__13612 = arg2;
        var G__13613 = arg3;
        var G__13614 = x;
        var G__13615 = y;
        var G__13616 = z;
        return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__13611, G__13612, G__13613, G__13614, G__13615, G__13616) : f.call(null, G__13611, G__13612, G__13613, G__13614, G__13615, G__13616);
      };
      var G__13629__4 = function() {
        var G__13630__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
        };
        var G__13630 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13631__i = 0, G__13631__a = new Array(arguments.length - 3);
            while (G__13631__i < G__13631__a.length) {
              G__13631__a[G__13631__i] = arguments[G__13631__i + 3];
              ++G__13631__i;
            }
            args = new cljs.core.IndexedSeq(G__13631__a, 0);
          }
          return G__13630__delegate.call(this, x, y, z, args);
        };
        G__13630.cljs$lang$maxFixedArity = 3;
        G__13630.cljs$lang$applyTo = function(arglist__13632) {
          var x = cljs.core.first(arglist__13632);
          arglist__13632 = cljs.core.next(arglist__13632);
          var y = cljs.core.first(arglist__13632);
          arglist__13632 = cljs.core.next(arglist__13632);
          var z = cljs.core.first(arglist__13632);
          var args = cljs.core.rest(arglist__13632);
          return G__13630__delegate(x, y, z, args);
        };
        G__13630.cljs$core$IFn$_invoke$arity$variadic = G__13630__delegate;
        return G__13630;
      }();
      G__13629 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13629__0.call(this);
          case 1:
            return G__13629__1.call(this, x);
          case 2:
            return G__13629__2.call(this, x, y);
          case 3:
            return G__13629__3.call(this, x, y, z);
          default:
            var G__13633 = null;
            if (arguments.length > 3) {
              var G__13634__i = 0, G__13634__a = new Array(arguments.length - 3);
              while (G__13634__i < G__13634__a.length) {
                G__13634__a[G__13634__i] = arguments[G__13634__i + 3];
                ++G__13634__i;
              }
              G__13633 = new cljs.core.IndexedSeq(G__13634__a, 0);
            }
            return G__13629__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13633);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13629.cljs$lang$maxFixedArity = 3;
      G__13629.cljs$lang$applyTo = G__13629__4.cljs$lang$applyTo;
      G__13629.cljs$core$IFn$_invoke$arity$0 = G__13629__0;
      G__13629.cljs$core$IFn$_invoke$arity$1 = G__13629__1;
      G__13629.cljs$core$IFn$_invoke$arity$2 = G__13629__2;
      G__13629.cljs$core$IFn$_invoke$arity$3 = G__13629__3;
      G__13629.cljs$core$IFn$_invoke$arity$variadic = G__13629__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13629;
    }();
  };
  var partial__5 = function() {
    var G__13635__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__13636__delegate = function(args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
        };
        var G__13636 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            var G__13637__i = 0, G__13637__a = new Array(arguments.length - 0);
            while (G__13637__i < G__13637__a.length) {
              G__13637__a[G__13637__i] = arguments[G__13637__i + 0];
              ++G__13637__i;
            }
            args = new cljs.core.IndexedSeq(G__13637__a, 0);
          }
          return G__13636__delegate.call(this, args);
        };
        G__13636.cljs$lang$maxFixedArity = 0;
        G__13636.cljs$lang$applyTo = function(arglist__13638) {
          var args = cljs.core.seq(arglist__13638);
          return G__13636__delegate(args);
        };
        G__13636.cljs$core$IFn$_invoke$arity$variadic = G__13636__delegate;
        return G__13636;
      }();
    };
    var G__13635 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__13639__i = 0, G__13639__a = new Array(arguments.length - 4);
        while (G__13639__i < G__13639__a.length) {
          G__13639__a[G__13639__i] = arguments[G__13639__i + 4];
          ++G__13639__i;
        }
        more = new cljs.core.IndexedSeq(G__13639__a, 0);
      }
      return G__13635__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__13635.cljs$lang$maxFixedArity = 4;
    G__13635.cljs$lang$applyTo = function(arglist__13640) {
      var f = cljs.core.first(arglist__13640);
      arglist__13640 = cljs.core.next(arglist__13640);
      var arg1 = cljs.core.first(arglist__13640);
      arglist__13640 = cljs.core.next(arglist__13640);
      var arg2 = cljs.core.first(arglist__13640);
      arglist__13640 = cljs.core.next(arglist__13640);
      var arg3 = cljs.core.first(arglist__13640);
      var more = cljs.core.rest(arglist__13640);
      return G__13635__delegate(f, arg1, arg2, arg3, more);
    };
    G__13635.cljs$core$IFn$_invoke$arity$variadic = G__13635__delegate;
    return G__13635;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        var G__13641 = null;
        if (arguments.length > 4) {
          var G__13642__i = 0, G__13642__a = new Array(arguments.length - 4);
          while (G__13642__i < G__13642__a.length) {
            G__13642__a[G__13642__i] = arguments[G__13642__i + 4];
            ++G__13642__i;
          }
          G__13641 = new cljs.core.IndexedSeq(G__13642__a, 0);
        }
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, G__13641);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__13675 = null;
      var G__13675__1 = function(a) {
        var G__13659 = a == null ? x : a;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13659) : f.call(null, G__13659);
      };
      var G__13675__2 = function(a, b) {
        var G__13660 = a == null ? x : a;
        var G__13661 = b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13660, G__13661) : f.call(null, G__13660, G__13661);
      };
      var G__13675__3 = function(a, b, c) {
        var G__13662 = a == null ? x : a;
        var G__13663 = b;
        var G__13664 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13662, G__13663, G__13664) : f.call(null, G__13662, G__13663, G__13664);
      };
      var G__13675__4 = function() {
        var G__13676__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
        };
        var G__13676 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__13677__i = 0, G__13677__a = new Array(arguments.length - 3);
            while (G__13677__i < G__13677__a.length) {
              G__13677__a[G__13677__i] = arguments[G__13677__i + 3];
              ++G__13677__i;
            }
            ds = new cljs.core.IndexedSeq(G__13677__a, 0);
          }
          return G__13676__delegate.call(this, a, b, c, ds);
        };
        G__13676.cljs$lang$maxFixedArity = 3;
        G__13676.cljs$lang$applyTo = function(arglist__13678) {
          var a = cljs.core.first(arglist__13678);
          arglist__13678 = cljs.core.next(arglist__13678);
          var b = cljs.core.first(arglist__13678);
          arglist__13678 = cljs.core.next(arglist__13678);
          var c = cljs.core.first(arglist__13678);
          var ds = cljs.core.rest(arglist__13678);
          return G__13676__delegate(a, b, c, ds);
        };
        G__13676.cljs$core$IFn$_invoke$arity$variadic = G__13676__delegate;
        return G__13676;
      }();
      G__13675 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__13675__1.call(this, a);
          case 2:
            return G__13675__2.call(this, a, b);
          case 3:
            return G__13675__3.call(this, a, b, c);
          default:
            var G__13679 = null;
            if (arguments.length > 3) {
              var G__13680__i = 0, G__13680__a = new Array(arguments.length - 3);
              while (G__13680__i < G__13680__a.length) {
                G__13680__a[G__13680__i] = arguments[G__13680__i + 3];
                ++G__13680__i;
              }
              G__13679 = new cljs.core.IndexedSeq(G__13680__a, 0);
            }
            return G__13675__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__13679);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13675.cljs$lang$maxFixedArity = 3;
      G__13675.cljs$lang$applyTo = G__13675__4.cljs$lang$applyTo;
      G__13675.cljs$core$IFn$_invoke$arity$1 = G__13675__1;
      G__13675.cljs$core$IFn$_invoke$arity$2 = G__13675__2;
      G__13675.cljs$core$IFn$_invoke$arity$3 = G__13675__3;
      G__13675.cljs$core$IFn$_invoke$arity$variadic = G__13675__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13675;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__13681 = null;
      var G__13681__2 = function(a, b) {
        var G__13665 = a == null ? x : a;
        var G__13666 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13665, G__13666) : f.call(null, G__13665, G__13666);
      };
      var G__13681__3 = function(a, b, c) {
        var G__13667 = a == null ? x : a;
        var G__13668 = b == null ? y : b;
        var G__13669 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13667, G__13668, G__13669) : f.call(null, G__13667, G__13668, G__13669);
      };
      var G__13681__4 = function() {
        var G__13682__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__13682 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__13683__i = 0, G__13683__a = new Array(arguments.length - 3);
            while (G__13683__i < G__13683__a.length) {
              G__13683__a[G__13683__i] = arguments[G__13683__i + 3];
              ++G__13683__i;
            }
            ds = new cljs.core.IndexedSeq(G__13683__a, 0);
          }
          return G__13682__delegate.call(this, a, b, c, ds);
        };
        G__13682.cljs$lang$maxFixedArity = 3;
        G__13682.cljs$lang$applyTo = function(arglist__13684) {
          var a = cljs.core.first(arglist__13684);
          arglist__13684 = cljs.core.next(arglist__13684);
          var b = cljs.core.first(arglist__13684);
          arglist__13684 = cljs.core.next(arglist__13684);
          var c = cljs.core.first(arglist__13684);
          var ds = cljs.core.rest(arglist__13684);
          return G__13682__delegate(a, b, c, ds);
        };
        G__13682.cljs$core$IFn$_invoke$arity$variadic = G__13682__delegate;
        return G__13682;
      }();
      G__13681 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__13681__2.call(this, a, b);
          case 3:
            return G__13681__3.call(this, a, b, c);
          default:
            var G__13685 = null;
            if (arguments.length > 3) {
              var G__13686__i = 0, G__13686__a = new Array(arguments.length - 3);
              while (G__13686__i < G__13686__a.length) {
                G__13686__a[G__13686__i] = arguments[G__13686__i + 3];
                ++G__13686__i;
              }
              G__13685 = new cljs.core.IndexedSeq(G__13686__a, 0);
            }
            return G__13681__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__13685);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13681.cljs$lang$maxFixedArity = 3;
      G__13681.cljs$lang$applyTo = G__13681__4.cljs$lang$applyTo;
      G__13681.cljs$core$IFn$_invoke$arity$2 = G__13681__2;
      G__13681.cljs$core$IFn$_invoke$arity$3 = G__13681__3;
      G__13681.cljs$core$IFn$_invoke$arity$variadic = G__13681__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13681;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__13687 = null;
      var G__13687__2 = function(a, b) {
        var G__13670 = a == null ? x : a;
        var G__13671 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13670, G__13671) : f.call(null, G__13670, G__13671);
      };
      var G__13687__3 = function(a, b, c) {
        var G__13672 = a == null ? x : a;
        var G__13673 = b == null ? y : b;
        var G__13674 = c == null ? z : c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13672, G__13673, G__13674) : f.call(null, G__13672, G__13673, G__13674);
      };
      var G__13687__4 = function() {
        var G__13688__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__13688 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__13689__i = 0, G__13689__a = new Array(arguments.length - 3);
            while (G__13689__i < G__13689__a.length) {
              G__13689__a[G__13689__i] = arguments[G__13689__i + 3];
              ++G__13689__i;
            }
            ds = new cljs.core.IndexedSeq(G__13689__a, 0);
          }
          return G__13688__delegate.call(this, a, b, c, ds);
        };
        G__13688.cljs$lang$maxFixedArity = 3;
        G__13688.cljs$lang$applyTo = function(arglist__13690) {
          var a = cljs.core.first(arglist__13690);
          arglist__13690 = cljs.core.next(arglist__13690);
          var b = cljs.core.first(arglist__13690);
          arglist__13690 = cljs.core.next(arglist__13690);
          var c = cljs.core.first(arglist__13690);
          var ds = cljs.core.rest(arglist__13690);
          return G__13688__delegate(a, b, c, ds);
        };
        G__13688.cljs$core$IFn$_invoke$arity$variadic = G__13688__delegate;
        return G__13688;
      }();
      G__13687 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__13687__2.call(this, a, b);
          case 3:
            return G__13687__3.call(this, a, b, c);
          default:
            var G__13691 = null;
            if (arguments.length > 3) {
              var G__13692__i = 0, G__13692__a = new Array(arguments.length - 3);
              while (G__13692__i < G__13692__a.length) {
                G__13692__a[G__13692__i] = arguments[G__13692__i + 3];
                ++G__13692__i;
              }
              G__13691 = new cljs.core.IndexedSeq(G__13692__a, 0);
            }
            return G__13687__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__13691);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13687.cljs$lang$maxFixedArity = 3;
      G__13687.cljs$lang$applyTo = G__13687__4.cljs$lang$applyTo;
      G__13687.cljs$core$IFn$_invoke$arity$2 = G__13687__2;
      G__13687.cljs$core$IFn$_invoke$arity$3 = G__13687__3;
      G__13687.cljs$core$IFn$_invoke$arity$variadic = G__13687__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13687;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function() {
  var map_indexed = null;
  var map_indexed__1 = function(f) {
    return function(rf) {
      var i = function() {
        var G__13723 = -1;
        return cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__13723) : cljs.core.volatile_BANG_.call(null, G__13723);
      }();
      return function(i) {
        return function() {
          var G__13753 = null;
          var G__13753__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__13753__1 = function(result) {
            var G__13724 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13724) : rf.call(null, G__13724);
          };
          var G__13753__2 = function(result, input) {
            var G__13725 = result;
            var G__13726 = function() {
              var G__13727 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
              var G__13728 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13727, G__13728) : f.call(null, G__13727, G__13728);
            }();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13725, G__13726) : rf.call(null, G__13725, G__13726);
          };
          G__13753 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__13753__0.call(this);
              case 1:
                return G__13753__1.call(this, result);
              case 2:
                return G__13753__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__13753.cljs$core$IFn$_invoke$arity$0 = G__13753__0;
          G__13753.cljs$core$IFn$_invoke$arity$1 = G__13753__1;
          G__13753.cljs$core$IFn$_invoke$arity$2 = G__13753__2;
          return G__13753;
        }();
      }(i);
    };
  };
  var map_indexed__2 = function(f, coll) {
    var mapi = function mapi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4655__auto___13754 = size;
            var i_13755 = 0;
            while (true) {
              if (i_13755 < n__4655__auto___13754) {
                cljs.core.chunk_append(b, function() {
                  var G__13749 = idx + i_13755;
                  var G__13750 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13755);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13749, G__13750) : f.call(null, G__13749, G__13750);
                }());
                var G__13756 = i_13755 + 1;
                i_13755 = G__13756;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), mapi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            return cljs.core.cons(function() {
              var G__13751 = idx;
              var G__13752 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13751, G__13752) : f.call(null, G__13751, G__13752);
            }(), mapi(idx + 1, cljs.core.rest(s)));
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return mapi(0, coll);
  };
  map_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return map_indexed__1.call(this, f);
      case 2:
        return map_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
  map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
  return map_indexed;
}();
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(rf) {
      return function() {
        var G__13775 = null;
        var G__13775__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__13775__1 = function(result) {
          var G__13769 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13769) : rf.call(null, G__13769);
        };
        var G__13775__2 = function(result, input) {
          var v = function() {
            var G__13770 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13770) : f.call(null, G__13770);
          }();
          if (v == null) {
            return result;
          } else {
            var G__13771 = result;
            var G__13772 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13771, G__13772) : rf.call(null, G__13771, G__13772);
          }
        };
        G__13775 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__13775__0.call(this);
            case 1:
              return G__13775__1.call(this, result);
            case 2:
              return G__13775__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__13775.cljs$core$IFn$_invoke$arity$0 = G__13775__0;
        G__13775.cljs$core$IFn$_invoke$arity$1 = G__13775__1;
        G__13775.cljs$core$IFn$_invoke$arity$2 = G__13775__2;
        return G__13775;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4655__auto___13776 = size;
          var i_13777 = 0;
          while (true) {
            if (i_13777 < n__4655__auto___13776) {
              var x_13778 = function() {
                var G__13773 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13777);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13773) : f.call(null, G__13773);
              }();
              if (x_13778 == null) {
              } else {
                cljs.core.chunk_append(b, x_13778);
              }
              var G__13779 = i_13777 + 1;
              i_13777 = G__13779;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__13774 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13774) : f.call(null, G__13774);
          }();
          if (x == null) {
            return keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__13780 = this$__$1;
  return goog.getUid(G__13780);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__13781 = cljs.core.seq(self__.watches);
  var chunk__13782 = null;
  var count__13783 = 0;
  var i__13784 = 0;
  while (true) {
    if (i__13784 < count__13783) {
      var vec__13785 = chunk__13782.cljs$core$IIndexed$_nth$arity$2(null, i__13784);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13785, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13785, 1, null);
      var G__13786_13795 = key;
      var G__13787_13796 = this$__$1;
      var G__13788_13797 = oldval;
      var G__13789_13798 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13786_13795, G__13787_13796, G__13788_13797, G__13789_13798) : f.call(null, G__13786_13795, G__13787_13796, G__13788_13797, G__13789_13798);
      var G__13799 = seq__13781;
      var G__13800 = chunk__13782;
      var G__13801 = count__13783;
      var G__13802 = i__13784 + 1;
      seq__13781 = G__13799;
      chunk__13782 = G__13800;
      count__13783 = G__13801;
      i__13784 = G__13802;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__13781);
      if (temp__4126__auto__) {
        var seq__13781__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__13781__$1)) {
          var c__4555__auto__ = cljs.core.chunk_first(seq__13781__$1);
          var G__13803 = cljs.core.chunk_rest(seq__13781__$1);
          var G__13804 = c__4555__auto__;
          var G__13805 = cljs.core.count(c__4555__auto__);
          var G__13806 = 0;
          seq__13781 = G__13803;
          chunk__13782 = G__13804;
          count__13783 = G__13805;
          i__13784 = G__13806;
          continue;
        } else {
          var vec__13790 = cljs.core.first(seq__13781__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13790, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13790, 1, null);
          var G__13791_13807 = key;
          var G__13792_13808 = this$__$1;
          var G__13793_13809 = oldval;
          var G__13794_13810 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13791_13807, G__13792_13808, G__13793_13809, G__13794_13810) : f.call(null, G__13791_13807, G__13792_13808, G__13793_13809, G__13794_13810);
          var G__13811 = cljs.core.next(seq__13781__$1);
          var G__13812 = null;
          var G__13813 = 0;
          var G__13814 = 0;
          seq__13781 = G__13811;
          chunk__13782 = G__13812;
          count__13783 = G__13813;
          i__13784 = G__13814;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__13818__delegate = function(x, p__13815) {
      var map__13817 = p__13815;
      var map__13817__$1 = cljs.core.seq_QMARK_(map__13817) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__13817) : map__13817;
      var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13817__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13817__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__13818 = function(x, var_args) {
      var p__13815 = null;
      if (arguments.length > 1) {
        var G__13819__i = 0, G__13819__a = new Array(arguments.length - 1);
        while (G__13819__i < G__13819__a.length) {
          G__13819__a[G__13819__i] = arguments[G__13819__i + 1];
          ++G__13819__i;
        }
        p__13815 = new cljs.core.IndexedSeq(G__13819__a, 0);
      }
      return G__13818__delegate.call(this, x, p__13815);
    };
    G__13818.cljs$lang$maxFixedArity = 1;
    G__13818.cljs$lang$applyTo = function(arglist__13820) {
      var x = cljs.core.first(arglist__13820);
      var p__13815 = cljs.core.rest(arglist__13820);
      return G__13818__delegate(x, p__13815);
    };
    G__13818.cljs$core$IFn$_invoke$arity$variadic = G__13818__delegate;
    return G__13818;
  }();
  atom = function(x, var_args) {
    var p__13815 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__13821 = null;
        if (arguments.length > 1) {
          var G__13822__i = 0, G__13822__a = new Array(arguments.length - 1);
          while (G__13822__i < G__13822__a.length) {
            G__13822__a[G__13822__i] = arguments[G__13822__i + 1];
            ++G__13822__i;
          }
          G__13821 = new cljs.core.IndexedSeq(G__13822__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__13821);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__13825 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__13825) : validate.call(null, G__13825);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__13826 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__13826) : cljs.core.pr_str.call(null, G__13826);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__13833 = a.state;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13833) : f.call(null, G__13833);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__13834 = a.state;
        var G__13835 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13834, G__13835) : f.call(null, G__13834, G__13835);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__13836 = a.state;
        var G__13837 = x;
        var G__13838 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13836, G__13837, G__13838) : f.call(null, G__13836, G__13837, G__13838);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__13839__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
      }
    };
    var G__13839 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__13840__i = 0, G__13840__a = new Array(arguments.length - 4);
        while (G__13840__i < G__13840__a.length) {
          G__13840__a[G__13840__i] = arguments[G__13840__i + 4];
          ++G__13840__i;
        }
        more = new cljs.core.IndexedSeq(G__13840__a, 0);
      }
      return G__13839__delegate.call(this, a, f, x, y, more);
    };
    G__13839.cljs$lang$maxFixedArity = 4;
    G__13839.cljs$lang$applyTo = function(arglist__13841) {
      var a = cljs.core.first(arglist__13841);
      arglist__13841 = cljs.core.next(arglist__13841);
      var f = cljs.core.first(arglist__13841);
      arglist__13841 = cljs.core.next(arglist__13841);
      var x = cljs.core.first(arglist__13841);
      arglist__13841 = cljs.core.next(arglist__13841);
      var y = cljs.core.first(arglist__13841);
      var more = cljs.core.rest(arglist__13841);
      return G__13839__delegate(a, f, x, y, more);
    };
    G__13839.cljs$core$IFn$_invoke$arity$variadic = G__13839__delegate;
    return G__13839;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        var G__13842 = null;
        if (arguments.length > 4) {
          var G__13843__i = 0, G__13843__a = new Array(arguments.length - 4);
          while (G__13843__i < G__13843__a.length) {
            G__13843__a[G__13843__i] = arguments[G__13843__i + 4];
            ++G__13843__i;
          }
          G__13842 = new cljs.core.IndexedSeq(G__13843__a, 0);
        }
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, G__13842);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function __GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__13910 = null;
          var G__13910__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__13910__1 = function(result) {
            var G__13877 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13877) : rf.call(null, G__13877);
          };
          var G__13910__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            var v = function() {
              var G__13878 = i;
              var G__13879 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13878, G__13879) : f.call(null, G__13878, G__13879);
            }();
            if (v == null) {
              return result;
            } else {
              var G__13880 = result;
              var G__13881 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13880, G__13881) : rf.call(null, G__13880, G__13881);
            }
          };
          G__13910 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__13910__0.call(this);
              case 1:
                return G__13910__1.call(this, result);
              case 2:
                return G__13910__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__13910.cljs$core$IFn$_invoke$arity$0 = G__13910__0;
          G__13910.cljs$core$IFn$_invoke$arity$1 = G__13910__1;
          G__13910.cljs$core$IFn$_invoke$arity$2 = G__13910__2;
          return G__13910;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4655__auto___13911 = size;
            var i_13912 = 0;
            while (true) {
              if (i_13912 < n__4655__auto___13911) {
                var x_13913 = function() {
                  var G__13906 = idx + i_13912;
                  var G__13907 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13912);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13906, G__13907) : f.call(null, G__13906, G__13907);
                }();
                if (x_13913 == null) {
                } else {
                  cljs.core.chunk_append(b, x_13913);
                }
                var G__13914 = i_13912 + 1;
                i_13912 = G__13914;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), keepi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            var x = function() {
              var G__13908 = idx;
              var G__13909 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13908, G__13909) : f.call(null, G__13908, G__13909);
            }();
            if (x == null) {
              return keepi(idx + 1, cljs.core.rest(s));
            } else {
              return cljs.core.cons(x, keepi(idx + 1, cljs.core.rest(s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi(0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$(function() {
          var G__14128 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14128) : p.call(null, G__14128);
        }());
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3756__auto__ = function() {
            var G__14130 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14130) : p.call(null, G__14130);
          }();
          if (cljs.core.truth_(and__3756__auto__)) {
            var G__14131 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14131) : p.call(null, G__14131);
          } else {
            return and__3756__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3756__auto__ = function() {
            var G__14133 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14133) : p.call(null, G__14133);
          }();
          if (cljs.core.truth_(and__3756__auto__)) {
            var and__3756__auto____$1 = function() {
              var G__14135 = y;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14135) : p.call(null, G__14135);
            }();
            if (cljs.core.truth_(and__3756__auto____$1)) {
              var G__14136 = z;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14136) : p.call(null, G__14136);
            } else {
              return and__3756__auto____$1;
            }
          } else {
            return and__3756__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__14305__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep1.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(p, args));
        };
        var G__14305 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14306__i = 0, G__14306__a = new Array(arguments.length - 3);
            while (G__14306__i < G__14306__a.length) {
              G__14306__a[G__14306__i] = arguments[G__14306__i + 3];
              ++G__14306__i;
            }
            args = new cljs.core.IndexedSeq(G__14306__a, 0);
          }
          return G__14305__delegate.call(this, x, y, z, args);
        };
        G__14305.cljs$lang$maxFixedArity = 3;
        G__14305.cljs$lang$applyTo = function(arglist__14307) {
          var x = cljs.core.first(arglist__14307);
          arglist__14307 = cljs.core.next(arglist__14307);
          var y = cljs.core.first(arglist__14307);
          arglist__14307 = cljs.core.next(arglist__14307);
          var z = cljs.core.first(arglist__14307);
          var args = cljs.core.rest(arglist__14307);
          return G__14305__delegate(x, y, z, args);
        };
        G__14305.cljs$core$IFn$_invoke$arity$variadic = G__14305__delegate;
        return G__14305;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            var G__14308 = null;
            if (arguments.length > 3) {
              var G__14309__i = 0, G__14309__a = new Array(arguments.length - 3);
              while (G__14309__i < G__14309__a.length) {
                G__14309__a[G__14309__i] = arguments[G__14309__i + 3];
                ++G__14309__i;
              }
              G__14308 = new cljs.core.IndexedSeq(G__14309__a, 0);
            }
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14308);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3756__auto__ = function() {
            var G__14168 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14168) : p1.call(null, G__14168);
          }();
          if (cljs.core.truth_(and__3756__auto__)) {
            var G__14169 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14169) : p2.call(null, G__14169);
          } else {
            return and__3756__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3756__auto__ = function() {
            var G__14171 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14171) : p1.call(null, G__14171);
          }();
          if (cljs.core.truth_(and__3756__auto__)) {
            var and__3756__auto____$1 = function() {
              var G__14173 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14173) : p1.call(null, G__14173);
            }();
            if (cljs.core.truth_(and__3756__auto____$1)) {
              var and__3756__auto____$2 = function() {
                var G__14175 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14175) : p2.call(null, G__14175);
              }();
              if (cljs.core.truth_(and__3756__auto____$2)) {
                var G__14176 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14176) : p2.call(null, G__14176);
              } else {
                return and__3756__auto____$2;
              }
            } else {
              return and__3756__auto____$1;
            }
          } else {
            return and__3756__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3756__auto__ = function() {
            var G__14178 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14178) : p1.call(null, G__14178);
          }();
          if (cljs.core.truth_(and__3756__auto__)) {
            var and__3756__auto____$1 = function() {
              var G__14180 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14180) : p1.call(null, G__14180);
            }();
            if (cljs.core.truth_(and__3756__auto____$1)) {
              var and__3756__auto____$2 = function() {
                var G__14182 = z;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14182) : p1.call(null, G__14182);
              }();
              if (cljs.core.truth_(and__3756__auto____$2)) {
                var and__3756__auto____$3 = function() {
                  var G__14184 = x;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14184) : p2.call(null, G__14184);
                }();
                if (cljs.core.truth_(and__3756__auto____$3)) {
                  var and__3756__auto____$4 = function() {
                    var G__14186 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14186) : p2.call(null, G__14186);
                  }();
                  if (cljs.core.truth_(and__3756__auto____$4)) {
                    var G__14187 = z;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14187) : p2.call(null, G__14187);
                  } else {
                    return and__3756__auto____$4;
                  }
                } else {
                  return and__3756__auto____$3;
                }
              } else {
                return and__3756__auto____$2;
              }
            } else {
              return and__3756__auto____$1;
            }
          } else {
            return and__3756__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__14310__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep2.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__13915_SHARP_) {
            var and__3756__auto__ = function() {
              var G__14192 = p1__13915_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14192) : p1.call(null, G__14192);
            }();
            if (cljs.core.truth_(and__3756__auto__)) {
              var G__14193 = p1__13915_SHARP_;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14193) : p2.call(null, G__14193);
            } else {
              return and__3756__auto__;
            }
          }, args));
        };
        var G__14310 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14311__i = 0, G__14311__a = new Array(arguments.length - 3);
            while (G__14311__i < G__14311__a.length) {
              G__14311__a[G__14311__i] = arguments[G__14311__i + 3];
              ++G__14311__i;
            }
            args = new cljs.core.IndexedSeq(G__14311__a, 0);
          }
          return G__14310__delegate.call(this, x, y, z, args);
        };
        G__14310.cljs$lang$maxFixedArity = 3;
        G__14310.cljs$lang$applyTo = function(arglist__14312) {
          var x = cljs.core.first(arglist__14312);
          arglist__14312 = cljs.core.next(arglist__14312);
          var y = cljs.core.first(arglist__14312);
          arglist__14312 = cljs.core.next(arglist__14312);
          var z = cljs.core.first(arglist__14312);
          var args = cljs.core.rest(arglist__14312);
          return G__14310__delegate(x, y, z, args);
        };
        G__14310.cljs$core$IFn$_invoke$arity$variadic = G__14310__delegate;
        return G__14310;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            var G__14313 = null;
            if (arguments.length > 3) {
              var G__14314__i = 0, G__14314__a = new Array(arguments.length - 3);
              while (G__14314__i < G__14314__a.length) {
                G__14314__a[G__14314__i] = arguments[G__14314__i + 3];
                ++G__14314__i;
              }
              G__14313 = new cljs.core.IndexedSeq(G__14314__a, 0);
            }
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14313);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3756__auto__ = function() {
            var G__14239 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14239) : p1.call(null, G__14239);
          }();
          if (cljs.core.truth_(and__3756__auto__)) {
            var and__3756__auto____$1 = function() {
              var G__14241 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14241) : p2.call(null, G__14241);
            }();
            if (cljs.core.truth_(and__3756__auto____$1)) {
              var G__14242 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14242) : p3.call(null, G__14242);
            } else {
              return and__3756__auto____$1;
            }
          } else {
            return and__3756__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3756__auto__ = function() {
            var G__14244 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14244) : p1.call(null, G__14244);
          }();
          if (cljs.core.truth_(and__3756__auto__)) {
            var and__3756__auto____$1 = function() {
              var G__14246 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14246) : p2.call(null, G__14246);
            }();
            if (cljs.core.truth_(and__3756__auto____$1)) {
              var and__3756__auto____$2 = function() {
                var G__14248 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14248) : p3.call(null, G__14248);
              }();
              if (cljs.core.truth_(and__3756__auto____$2)) {
                var and__3756__auto____$3 = function() {
                  var G__14250 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14250) : p1.call(null, G__14250);
                }();
                if (cljs.core.truth_(and__3756__auto____$3)) {
                  var and__3756__auto____$4 = function() {
                    var G__14252 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14252) : p2.call(null, G__14252);
                  }();
                  if (cljs.core.truth_(and__3756__auto____$4)) {
                    var G__14253 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14253) : p3.call(null, G__14253);
                  } else {
                    return and__3756__auto____$4;
                  }
                } else {
                  return and__3756__auto____$3;
                }
              } else {
                return and__3756__auto____$2;
              }
            } else {
              return and__3756__auto____$1;
            }
          } else {
            return and__3756__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3756__auto__ = function() {
            var G__14255 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14255) : p1.call(null, G__14255);
          }();
          if (cljs.core.truth_(and__3756__auto__)) {
            var and__3756__auto____$1 = function() {
              var G__14257 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14257) : p2.call(null, G__14257);
            }();
            if (cljs.core.truth_(and__3756__auto____$1)) {
              var and__3756__auto____$2 = function() {
                var G__14259 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14259) : p3.call(null, G__14259);
              }();
              if (cljs.core.truth_(and__3756__auto____$2)) {
                var and__3756__auto____$3 = function() {
                  var G__14261 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14261) : p1.call(null, G__14261);
                }();
                if (cljs.core.truth_(and__3756__auto____$3)) {
                  var and__3756__auto____$4 = function() {
                    var G__14263 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14263) : p2.call(null, G__14263);
                  }();
                  if (cljs.core.truth_(and__3756__auto____$4)) {
                    var and__3756__auto____$5 = function() {
                      var G__14265 = y;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14265) : p3.call(null, G__14265);
                    }();
                    if (cljs.core.truth_(and__3756__auto____$5)) {
                      var and__3756__auto____$6 = function() {
                        var G__14267 = z;
                        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14267) : p1.call(null, G__14267);
                      }();
                      if (cljs.core.truth_(and__3756__auto____$6)) {
                        var and__3756__auto____$7 = function() {
                          var G__14269 = z;
                          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14269) : p2.call(null, G__14269);
                        }();
                        if (cljs.core.truth_(and__3756__auto____$7)) {
                          var G__14270 = z;
                          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14270) : p3.call(null, G__14270);
                        } else {
                          return and__3756__auto____$7;
                        }
                      } else {
                        return and__3756__auto____$6;
                      }
                    } else {
                      return and__3756__auto____$5;
                    }
                  } else {
                    return and__3756__auto____$4;
                  }
                } else {
                  return and__3756__auto____$3;
                }
              } else {
                return and__3756__auto____$2;
              }
            } else {
              return and__3756__auto____$1;
            }
          } else {
            return and__3756__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__14315__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep3.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__13916_SHARP_) {
            var and__3756__auto__ = function() {
              var G__14277 = p1__13916_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14277) : p1.call(null, G__14277);
            }();
            if (cljs.core.truth_(and__3756__auto__)) {
              var and__3756__auto____$1 = function() {
                var G__14279 = p1__13916_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14279) : p2.call(null, G__14279);
              }();
              if (cljs.core.truth_(and__3756__auto____$1)) {
                var G__14280 = p1__13916_SHARP_;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14280) : p3.call(null, G__14280);
              } else {
                return and__3756__auto____$1;
              }
            } else {
              return and__3756__auto__;
            }
          }, args));
        };
        var G__14315 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14316__i = 0, G__14316__a = new Array(arguments.length - 3);
            while (G__14316__i < G__14316__a.length) {
              G__14316__a[G__14316__i] = arguments[G__14316__i + 3];
              ++G__14316__i;
            }
            args = new cljs.core.IndexedSeq(G__14316__a, 0);
          }
          return G__14315__delegate.call(this, x, y, z, args);
        };
        G__14315.cljs$lang$maxFixedArity = 3;
        G__14315.cljs$lang$applyTo = function(arglist__14317) {
          var x = cljs.core.first(arglist__14317);
          arglist__14317 = cljs.core.next(arglist__14317);
          var y = cljs.core.first(arglist__14317);
          arglist__14317 = cljs.core.next(arglist__14317);
          var z = cljs.core.first(arglist__14317);
          var args = cljs.core.rest(arglist__14317);
          return G__14315__delegate(x, y, z, args);
        };
        G__14315.cljs$core$IFn$_invoke$arity$variadic = G__14315__delegate;
        return G__14315;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            var G__14318 = null;
            if (arguments.length > 3) {
              var G__14319__i = 0, G__14319__a = new Array(arguments.length - 3);
              while (G__14319__i < G__14319__a.length) {
                G__14319__a[G__14319__i] = arguments[G__14319__i + 3];
                ++G__14319__i;
              }
              G__14318 = new cljs.core.IndexedSeq(G__14319__a, 0);
            }
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14318);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__14320__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__13917_SHARP_) {
                var G__14296 = x;
                return p1__13917_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13917_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14296) : p1__13917_SHARP_.call(null, G__14296);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__13918_SHARP_) {
                var and__3756__auto__ = function() {
                  var G__14298 = x;
                  return p1__13918_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13918_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14298) : p1__13918_SHARP_.call(null, G__14298);
                }();
                if (cljs.core.truth_(and__3756__auto__)) {
                  var G__14299 = y;
                  return p1__13918_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13918_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14299) : p1__13918_SHARP_.call(null, G__14299);
                } else {
                  return and__3756__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__13919_SHARP_) {
                var and__3756__auto__ = function() {
                  var G__14301 = x;
                  return p1__13919_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13919_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14301) : p1__13919_SHARP_.call(null, G__14301);
                }();
                if (cljs.core.truth_(and__3756__auto__)) {
                  var and__3756__auto____$1 = function() {
                    var G__14303 = y;
                    return p1__13919_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13919_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14303) : p1__13919_SHARP_.call(null, G__14303);
                  }();
                  if (cljs.core.truth_(and__3756__auto____$1)) {
                    var G__14304 = z;
                    return p1__13919_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13919_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14304) : p1__13919_SHARP_.call(null, G__14304);
                  } else {
                    return and__3756__auto____$1;
                  }
                } else {
                  return and__3756__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__14321__delegate = function(x, y, z, args) {
              return cljs.core.boolean$(epn.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(ps__$1) {
                return function(p1__13920_SHARP_) {
                  return cljs.core.every_QMARK_(p1__13920_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__14321 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__14322__i = 0, G__14322__a = new Array(arguments.length - 3);
                while (G__14322__i < G__14322__a.length) {
                  G__14322__a[G__14322__i] = arguments[G__14322__i + 3];
                  ++G__14322__i;
                }
                args = new cljs.core.IndexedSeq(G__14322__a, 0);
              }
              return G__14321__delegate.call(this, x, y, z, args);
            };
            G__14321.cljs$lang$maxFixedArity = 3;
            G__14321.cljs$lang$applyTo = function(arglist__14323) {
              var x = cljs.core.first(arglist__14323);
              arglist__14323 = cljs.core.next(arglist__14323);
              var y = cljs.core.first(arglist__14323);
              arglist__14323 = cljs.core.next(arglist__14323);
              var z = cljs.core.first(arglist__14323);
              var args = cljs.core.rest(arglist__14323);
              return G__14321__delegate(x, y, z, args);
            };
            G__14321.cljs$core$IFn$_invoke$arity$variadic = G__14321__delegate;
            return G__14321;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                var G__14324 = null;
                if (arguments.length > 3) {
                  var G__14325__i = 0, G__14325__a = new Array(arguments.length - 3);
                  while (G__14325__i < G__14325__a.length) {
                    G__14325__a[G__14325__i] = arguments[G__14325__i + 3];
                    ++G__14325__i;
                  }
                  G__14324 = new cljs.core.IndexedSeq(G__14325__a, 0);
                }
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14324);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__14320 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__14326__i = 0, G__14326__a = new Array(arguments.length - 3);
        while (G__14326__i < G__14326__a.length) {
          G__14326__a[G__14326__i] = arguments[G__14326__i + 3];
          ++G__14326__i;
        }
        ps = new cljs.core.IndexedSeq(G__14326__a, 0);
      }
      return G__14320__delegate.call(this, p1, p2, p3, ps);
    };
    G__14320.cljs$lang$maxFixedArity = 3;
    G__14320.cljs$lang$applyTo = function(arglist__14327) {
      var p1 = cljs.core.first(arglist__14327);
      arglist__14327 = cljs.core.next(arglist__14327);
      var p2 = cljs.core.first(arglist__14327);
      arglist__14327 = cljs.core.next(arglist__14327);
      var p3 = cljs.core.first(arglist__14327);
      var ps = cljs.core.rest(arglist__14327);
      return G__14320__delegate(p1, p2, p3, ps);
    };
    G__14320.cljs$core$IFn$_invoke$arity$variadic = G__14320__delegate;
    return G__14320;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        var G__14328 = null;
        if (arguments.length > 3) {
          var G__14329__i = 0, G__14329__a = new Array(arguments.length - 3);
          while (G__14329__i < G__14329__a.length) {
            G__14329__a[G__14329__i] = arguments[G__14329__i + 3];
            ++G__14329__i;
          }
          G__14328 = new cljs.core.IndexedSeq(G__14329__a, 0);
        }
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__14328);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        var G__14535 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14535) : p.call(null, G__14535);
      };
      var sp1__2 = function(x, y) {
        var or__3768__auto__ = function() {
          var G__14537 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14537) : p.call(null, G__14537);
        }();
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          var G__14538 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14538) : p.call(null, G__14538);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3768__auto__ = function() {
          var G__14540 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14540) : p.call(null, G__14540);
        }();
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = function() {
            var G__14542 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14542) : p.call(null, G__14542);
          }();
          if (cljs.core.truth_(or__3768__auto____$1)) {
            return or__3768__auto____$1;
          } else {
            var G__14543 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14543) : p.call(null, G__14543);
          }
        }
      };
      var sp1__4 = function() {
        var G__14704__delegate = function(x, y, z, args) {
          var or__3768__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3768__auto__)) {
            return or__3768__auto__;
          } else {
            return cljs.core.some(p, args);
          }
        };
        var G__14704 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14705__i = 0, G__14705__a = new Array(arguments.length - 3);
            while (G__14705__i < G__14705__a.length) {
              G__14705__a[G__14705__i] = arguments[G__14705__i + 3];
              ++G__14705__i;
            }
            args = new cljs.core.IndexedSeq(G__14705__a, 0);
          }
          return G__14704__delegate.call(this, x, y, z, args);
        };
        G__14704.cljs$lang$maxFixedArity = 3;
        G__14704.cljs$lang$applyTo = function(arglist__14706) {
          var x = cljs.core.first(arglist__14706);
          arglist__14706 = cljs.core.next(arglist__14706);
          var y = cljs.core.first(arglist__14706);
          arglist__14706 = cljs.core.next(arglist__14706);
          var z = cljs.core.first(arglist__14706);
          var args = cljs.core.rest(arglist__14706);
          return G__14704__delegate(x, y, z, args);
        };
        G__14704.cljs$core$IFn$_invoke$arity$variadic = G__14704__delegate;
        return G__14704;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            var G__14707 = null;
            if (arguments.length > 3) {
              var G__14708__i = 0, G__14708__a = new Array(arguments.length - 3);
              while (G__14708__i < G__14708__a.length) {
                G__14708__a[G__14708__i] = arguments[G__14708__i + 3];
                ++G__14708__i;
              }
              G__14707 = new cljs.core.IndexedSeq(G__14708__a, 0);
            }
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14707);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3768__auto__ = function() {
          var G__14575 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14575) : p1.call(null, G__14575);
        }();
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          var G__14576 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14576) : p2.call(null, G__14576);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3768__auto__ = function() {
          var G__14578 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14578) : p1.call(null, G__14578);
        }();
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = function() {
            var G__14580 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14580) : p1.call(null, G__14580);
          }();
          if (cljs.core.truth_(or__3768__auto____$1)) {
            return or__3768__auto____$1;
          } else {
            var or__3768__auto____$2 = function() {
              var G__14582 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14582) : p2.call(null, G__14582);
            }();
            if (cljs.core.truth_(or__3768__auto____$2)) {
              return or__3768__auto____$2;
            } else {
              var G__14583 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14583) : p2.call(null, G__14583);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3768__auto__ = function() {
          var G__14585 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14585) : p1.call(null, G__14585);
        }();
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = function() {
            var G__14587 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14587) : p1.call(null, G__14587);
          }();
          if (cljs.core.truth_(or__3768__auto____$1)) {
            return or__3768__auto____$1;
          } else {
            var or__3768__auto____$2 = function() {
              var G__14589 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14589) : p1.call(null, G__14589);
            }();
            if (cljs.core.truth_(or__3768__auto____$2)) {
              return or__3768__auto____$2;
            } else {
              var or__3768__auto____$3 = function() {
                var G__14591 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14591) : p2.call(null, G__14591);
              }();
              if (cljs.core.truth_(or__3768__auto____$3)) {
                return or__3768__auto____$3;
              } else {
                var or__3768__auto____$4 = function() {
                  var G__14593 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14593) : p2.call(null, G__14593);
                }();
                if (cljs.core.truth_(or__3768__auto____$4)) {
                  return or__3768__auto____$4;
                } else {
                  var G__14594 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14594) : p2.call(null, G__14594);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__14709__delegate = function(x, y, z, args) {
          var or__3768__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3768__auto__)) {
            return or__3768__auto__;
          } else {
            return cljs.core.some(function(or__3768__auto__) {
              return function(p1__14330_SHARP_) {
                var or__3768__auto____$1 = function() {
                  var G__14596 = p1__14330_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14596) : p1.call(null, G__14596);
                }();
                if (cljs.core.truth_(or__3768__auto____$1)) {
                  return or__3768__auto____$1;
                } else {
                  var G__14597 = p1__14330_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14597) : p2.call(null, G__14597);
                }
              };
            }(or__3768__auto__), args);
          }
        };
        var G__14709 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14710__i = 0, G__14710__a = new Array(arguments.length - 3);
            while (G__14710__i < G__14710__a.length) {
              G__14710__a[G__14710__i] = arguments[G__14710__i + 3];
              ++G__14710__i;
            }
            args = new cljs.core.IndexedSeq(G__14710__a, 0);
          }
          return G__14709__delegate.call(this, x, y, z, args);
        };
        G__14709.cljs$lang$maxFixedArity = 3;
        G__14709.cljs$lang$applyTo = function(arglist__14711) {
          var x = cljs.core.first(arglist__14711);
          arglist__14711 = cljs.core.next(arglist__14711);
          var y = cljs.core.first(arglist__14711);
          arglist__14711 = cljs.core.next(arglist__14711);
          var z = cljs.core.first(arglist__14711);
          var args = cljs.core.rest(arglist__14711);
          return G__14709__delegate(x, y, z, args);
        };
        G__14709.cljs$core$IFn$_invoke$arity$variadic = G__14709__delegate;
        return G__14709;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            var G__14712 = null;
            if (arguments.length > 3) {
              var G__14713__i = 0, G__14713__a = new Array(arguments.length - 3);
              while (G__14713__i < G__14713__a.length) {
                G__14713__a[G__14713__i] = arguments[G__14713__i + 3];
                ++G__14713__i;
              }
              G__14712 = new cljs.core.IndexedSeq(G__14713__a, 0);
            }
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14712);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3768__auto__ = function() {
          var G__14643 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14643) : p1.call(null, G__14643);
        }();
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = function() {
            var G__14645 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14645) : p2.call(null, G__14645);
          }();
          if (cljs.core.truth_(or__3768__auto____$1)) {
            return or__3768__auto____$1;
          } else {
            var G__14646 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14646) : p3.call(null, G__14646);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3768__auto__ = function() {
          var G__14648 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14648) : p1.call(null, G__14648);
        }();
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = function() {
            var G__14650 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14650) : p2.call(null, G__14650);
          }();
          if (cljs.core.truth_(or__3768__auto____$1)) {
            return or__3768__auto____$1;
          } else {
            var or__3768__auto____$2 = function() {
              var G__14652 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14652) : p3.call(null, G__14652);
            }();
            if (cljs.core.truth_(or__3768__auto____$2)) {
              return or__3768__auto____$2;
            } else {
              var or__3768__auto____$3 = function() {
                var G__14654 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14654) : p1.call(null, G__14654);
              }();
              if (cljs.core.truth_(or__3768__auto____$3)) {
                return or__3768__auto____$3;
              } else {
                var or__3768__auto____$4 = function() {
                  var G__14656 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14656) : p2.call(null, G__14656);
                }();
                if (cljs.core.truth_(or__3768__auto____$4)) {
                  return or__3768__auto____$4;
                } else {
                  var G__14657 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14657) : p3.call(null, G__14657);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3768__auto__ = function() {
          var G__14659 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14659) : p1.call(null, G__14659);
        }();
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = function() {
            var G__14661 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14661) : p2.call(null, G__14661);
          }();
          if (cljs.core.truth_(or__3768__auto____$1)) {
            return or__3768__auto____$1;
          } else {
            var or__3768__auto____$2 = function() {
              var G__14663 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14663) : p3.call(null, G__14663);
            }();
            if (cljs.core.truth_(or__3768__auto____$2)) {
              return or__3768__auto____$2;
            } else {
              var or__3768__auto____$3 = function() {
                var G__14665 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14665) : p1.call(null, G__14665);
              }();
              if (cljs.core.truth_(or__3768__auto____$3)) {
                return or__3768__auto____$3;
              } else {
                var or__3768__auto____$4 = function() {
                  var G__14667 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14667) : p2.call(null, G__14667);
                }();
                if (cljs.core.truth_(or__3768__auto____$4)) {
                  return or__3768__auto____$4;
                } else {
                  var or__3768__auto____$5 = function() {
                    var G__14669 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14669) : p3.call(null, G__14669);
                  }();
                  if (cljs.core.truth_(or__3768__auto____$5)) {
                    return or__3768__auto____$5;
                  } else {
                    var or__3768__auto____$6 = function() {
                      var G__14671 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14671) : p1.call(null, G__14671);
                    }();
                    if (cljs.core.truth_(or__3768__auto____$6)) {
                      return or__3768__auto____$6;
                    } else {
                      var or__3768__auto____$7 = function() {
                        var G__14673 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14673) : p2.call(null, G__14673);
                      }();
                      if (cljs.core.truth_(or__3768__auto____$7)) {
                        return or__3768__auto____$7;
                      } else {
                        var G__14674 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14674) : p3.call(null, G__14674);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__14714__delegate = function(x, y, z, args) {
          var or__3768__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3768__auto__)) {
            return or__3768__auto__;
          } else {
            return cljs.core.some(function(or__3768__auto__) {
              return function(p1__14331_SHARP_) {
                var or__3768__auto____$1 = function() {
                  var G__14676 = p1__14331_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14676) : p1.call(null, G__14676);
                }();
                if (cljs.core.truth_(or__3768__auto____$1)) {
                  return or__3768__auto____$1;
                } else {
                  var or__3768__auto____$2 = function() {
                    var G__14678 = p1__14331_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14678) : p2.call(null, G__14678);
                  }();
                  if (cljs.core.truth_(or__3768__auto____$2)) {
                    return or__3768__auto____$2;
                  } else {
                    var G__14679 = p1__14331_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14679) : p3.call(null, G__14679);
                  }
                }
              };
            }(or__3768__auto__), args);
          }
        };
        var G__14714 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14715__i = 0, G__14715__a = new Array(arguments.length - 3);
            while (G__14715__i < G__14715__a.length) {
              G__14715__a[G__14715__i] = arguments[G__14715__i + 3];
              ++G__14715__i;
            }
            args = new cljs.core.IndexedSeq(G__14715__a, 0);
          }
          return G__14714__delegate.call(this, x, y, z, args);
        };
        G__14714.cljs$lang$maxFixedArity = 3;
        G__14714.cljs$lang$applyTo = function(arglist__14716) {
          var x = cljs.core.first(arglist__14716);
          arglist__14716 = cljs.core.next(arglist__14716);
          var y = cljs.core.first(arglist__14716);
          arglist__14716 = cljs.core.next(arglist__14716);
          var z = cljs.core.first(arglist__14716);
          var args = cljs.core.rest(arglist__14716);
          return G__14714__delegate(x, y, z, args);
        };
        G__14714.cljs$core$IFn$_invoke$arity$variadic = G__14714__delegate;
        return G__14714;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            var G__14717 = null;
            if (arguments.length > 3) {
              var G__14718__i = 0, G__14718__a = new Array(arguments.length - 3);
              while (G__14718__i < G__14718__a.length) {
                G__14718__a[G__14718__i] = arguments[G__14718__i + 3];
                ++G__14718__i;
              }
              G__14717 = new cljs.core.IndexedSeq(G__14718__a, 0);
            }
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14717);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__14719__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__14332_SHARP_) {
                var G__14695 = x;
                return p1__14332_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14332_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14695) : p1__14332_SHARP_.call(null, G__14695);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__14333_SHARP_) {
                var or__3768__auto__ = function() {
                  var G__14697 = x;
                  return p1__14333_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14333_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14697) : p1__14333_SHARP_.call(null, G__14697);
                }();
                if (cljs.core.truth_(or__3768__auto__)) {
                  return or__3768__auto__;
                } else {
                  var G__14698 = y;
                  return p1__14333_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14333_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14698) : p1__14333_SHARP_.call(null, G__14698);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__14334_SHARP_) {
                var or__3768__auto__ = function() {
                  var G__14700 = x;
                  return p1__14334_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14334_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14700) : p1__14334_SHARP_.call(null, G__14700);
                }();
                if (cljs.core.truth_(or__3768__auto__)) {
                  return or__3768__auto__;
                } else {
                  var or__3768__auto____$1 = function() {
                    var G__14702 = y;
                    return p1__14334_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14334_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14702) : p1__14334_SHARP_.call(null, G__14702);
                  }();
                  if (cljs.core.truth_(or__3768__auto____$1)) {
                    return or__3768__auto____$1;
                  } else {
                    var G__14703 = z;
                    return p1__14334_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14334_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14703) : p1__14334_SHARP_.call(null, G__14703);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__14720__delegate = function(x, y, z, args) {
              var or__3768__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
              if (cljs.core.truth_(or__3768__auto__)) {
                return or__3768__auto__;
              } else {
                return cljs.core.some(function(or__3768__auto__, ps__$1) {
                  return function(p1__14335_SHARP_) {
                    return cljs.core.some(p1__14335_SHARP_, args);
                  };
                }(or__3768__auto__, ps__$1), ps__$1);
              }
            };
            var G__14720 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__14721__i = 0, G__14721__a = new Array(arguments.length - 3);
                while (G__14721__i < G__14721__a.length) {
                  G__14721__a[G__14721__i] = arguments[G__14721__i + 3];
                  ++G__14721__i;
                }
                args = new cljs.core.IndexedSeq(G__14721__a, 0);
              }
              return G__14720__delegate.call(this, x, y, z, args);
            };
            G__14720.cljs$lang$maxFixedArity = 3;
            G__14720.cljs$lang$applyTo = function(arglist__14722) {
              var x = cljs.core.first(arglist__14722);
              arglist__14722 = cljs.core.next(arglist__14722);
              var y = cljs.core.first(arglist__14722);
              arglist__14722 = cljs.core.next(arglist__14722);
              var z = cljs.core.first(arglist__14722);
              var args = cljs.core.rest(arglist__14722);
              return G__14720__delegate(x, y, z, args);
            };
            G__14720.cljs$core$IFn$_invoke$arity$variadic = G__14720__delegate;
            return G__14720;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                var G__14723 = null;
                if (arguments.length > 3) {
                  var G__14724__i = 0, G__14724__a = new Array(arguments.length - 3);
                  while (G__14724__i < G__14724__a.length) {
                    G__14724__a[G__14724__i] = arguments[G__14724__i + 3];
                    ++G__14724__i;
                  }
                  G__14723 = new cljs.core.IndexedSeq(G__14724__a, 0);
                }
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14723);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__14719 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__14725__i = 0, G__14725__a = new Array(arguments.length - 3);
        while (G__14725__i < G__14725__a.length) {
          G__14725__a[G__14725__i] = arguments[G__14725__i + 3];
          ++G__14725__i;
        }
        ps = new cljs.core.IndexedSeq(G__14725__a, 0);
      }
      return G__14719__delegate.call(this, p1, p2, p3, ps);
    };
    G__14719.cljs$lang$maxFixedArity = 3;
    G__14719.cljs$lang$applyTo = function(arglist__14726) {
      var p1 = cljs.core.first(arglist__14726);
      arglist__14726 = cljs.core.next(arglist__14726);
      var p2 = cljs.core.first(arglist__14726);
      arglist__14726 = cljs.core.next(arglist__14726);
      var p3 = cljs.core.first(arglist__14726);
      var ps = cljs.core.rest(arglist__14726);
      return G__14719__delegate(p1, p2, p3, ps);
    };
    G__14719.cljs$core$IFn$_invoke$arity$variadic = G__14719__delegate;
    return G__14719;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        var G__14727 = null;
        if (arguments.length > 3) {
          var G__14728__i = 0, G__14728__a = new Array(arguments.length - 3);
          while (G__14728__i < G__14728__a.length) {
            G__14728__a[G__14728__i] = arguments[G__14728__i + 3];
            ++G__14728__i;
          }
          G__14727 = new cljs.core.IndexedSeq(G__14728__a, 0);
        }
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__14727);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(rf) {
      return function() {
        var G__14783 = null;
        var G__14783__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__14783__1 = function(result) {
          var G__14769 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14769) : rf.call(null, G__14769);
        };
        var G__14783__2 = function(result, input) {
          var G__14770 = result;
          var G__14771 = function() {
            var G__14772 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14772) : f.call(null, G__14772);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14770, G__14771) : rf.call(null, G__14770, G__14771);
        };
        var G__14783__3 = function() {
          var G__14784__delegate = function(result, input, inputs) {
            var G__14773 = result;
            var G__14774 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14773, G__14774) : rf.call(null, G__14773, G__14774);
          };
          var G__14784 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              var G__14785__i = 0, G__14785__a = new Array(arguments.length - 2);
              while (G__14785__i < G__14785__a.length) {
                G__14785__a[G__14785__i] = arguments[G__14785__i + 2];
                ++G__14785__i;
              }
              inputs = new cljs.core.IndexedSeq(G__14785__a, 0);
            }
            return G__14784__delegate.call(this, result, input, inputs);
          };
          G__14784.cljs$lang$maxFixedArity = 2;
          G__14784.cljs$lang$applyTo = function(arglist__14786) {
            var result = cljs.core.first(arglist__14786);
            arglist__14786 = cljs.core.next(arglist__14786);
            var input = cljs.core.first(arglist__14786);
            var inputs = cljs.core.rest(arglist__14786);
            return G__14784__delegate(result, input, inputs);
          };
          G__14784.cljs$core$IFn$_invoke$arity$variadic = G__14784__delegate;
          return G__14784;
        }();
        G__14783 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__14783__0.call(this);
            case 1:
              return G__14783__1.call(this, result);
            case 2:
              return G__14783__2.call(this, result, input);
            default:
              var G__14787 = null;
              if (arguments.length > 2) {
                var G__14788__i = 0, G__14788__a = new Array(arguments.length - 2);
                while (G__14788__i < G__14788__a.length) {
                  G__14788__a[G__14788__i] = arguments[G__14788__i + 2];
                  ++G__14788__i;
                }
                G__14787 = new cljs.core.IndexedSeq(G__14788__a, 0);
              }
              return G__14783__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__14787);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__14783.cljs$lang$maxFixedArity = 2;
        G__14783.cljs$lang$applyTo = G__14783__3.cljs$lang$applyTo;
        G__14783.cljs$core$IFn$_invoke$arity$0 = G__14783__0;
        G__14783.cljs$core$IFn$_invoke$arity$1 = G__14783__1;
        G__14783.cljs$core$IFn$_invoke$arity$2 = G__14783__2;
        G__14783.cljs$core$IFn$_invoke$arity$variadic = G__14783__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__14783;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4655__auto___14789 = size;
          var i_14790 = 0;
          while (true) {
            if (i_14790 < n__4655__auto___14789) {
              cljs.core.chunk_append(b, function() {
                var G__14775 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14790);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14775) : f.call(null, G__14775);
              }());
              var G__14791 = i_14790 + 1;
              i_14790 = G__14791;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__14776 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14776) : f.call(null, G__14776);
          }(), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(function() {
          var G__14777 = cljs.core.first(s1);
          var G__14778 = cljs.core.first(s2);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14777, G__14778) : f.call(null, G__14777, G__14778);
        }(), map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      var s3 = cljs.core.seq(c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons(function() {
          var G__14779 = cljs.core.first(s1);
          var G__14780 = cljs.core.first(s2);
          var G__14781 = cljs.core.first(s3);
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14779, G__14780, G__14781) : f.call(null, G__14779, G__14780, G__14781);
        }(), map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__14792__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
          if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
            return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.cljs$core$IFn$_invoke$arity$2(function(step) {
        return function(p1__14729_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__14729_SHARP_);
        };
      }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
    };
    var G__14792 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__14793__i = 0, G__14793__a = new Array(arguments.length - 4);
        while (G__14793__i < G__14793__a.length) {
          G__14793__a[G__14793__i] = arguments[G__14793__i + 4];
          ++G__14793__i;
        }
        colls = new cljs.core.IndexedSeq(G__14793__a, 0);
      }
      return G__14792__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__14792.cljs$lang$maxFixedArity = 4;
    G__14792.cljs$lang$applyTo = function(arglist__14794) {
      var f = cljs.core.first(arglist__14794);
      arglist__14794 = cljs.core.next(arglist__14794);
      var c1 = cljs.core.first(arglist__14794);
      arglist__14794 = cljs.core.next(arglist__14794);
      var c2 = cljs.core.first(arglist__14794);
      arglist__14794 = cljs.core.next(arglist__14794);
      var c3 = cljs.core.first(arglist__14794);
      var colls = cljs.core.rest(arglist__14794);
      return G__14792__delegate(f, c1, c2, c3, colls);
    };
    G__14792.cljs$core$IFn$_invoke$arity$variadic = G__14792__delegate;
    return G__14792;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        var G__14795 = null;
        if (arguments.length > 4) {
          var G__14796__i = 0, G__14796__a = new Array(arguments.length - 4);
          while (G__14796__i < G__14796__a.length) {
            G__14796__a[G__14796__i] = arguments[G__14796__i + 4];
            ++G__14796__i;
          }
          G__14795 = new cljs.core.IndexedSeq(G__14796__a, 0);
        }
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__14795);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__14805 = null;
          var G__14805__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14805__1 = function(result) {
            var G__14802 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14802) : rf.call(null, G__14802);
          };
          var G__14805__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            var result__$1 = n__$1 > 0 ? function() {
              var G__14803 = result;
              var G__14804 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14803, G__14804) : rf.call(null, G__14803, G__14804);
            }() : result;
            if (!(nn > 0)) {
              return cljs.core.ensure_reduced(result__$1);
            } else {
              return result__$1;
            }
          };
          G__14805 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14805__0.call(this);
              case 1:
                return G__14805__1.call(this, result);
              case 2:
                return G__14805__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14805.cljs$core$IFn$_invoke$arity$0 = G__14805__0;
          G__14805.cljs$core$IFn$_invoke$arity$1 = G__14805__1;
          G__14805.cljs$core$IFn$_invoke$arity$2 = G__14805__2;
          return G__14805;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq(coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons(cljs.core.first(s), take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__14812 = null;
          var G__14812__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14812__1 = function(result) {
            var G__14809 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14809) : rf.call(null, G__14809);
          };
          var G__14812__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            if (n__$1 > 0) {
              return result;
            } else {
              var G__14810 = result;
              var G__14811 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14810, G__14811) : rf.call(null, G__14810, G__14811);
            }
          };
          G__14812 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14812__0.call(this);
              case 1:
                return G__14812__1.call(this, result);
              case 2:
                return G__14812__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14812.cljs$core$IFn$_invoke$arity$0 = G__14812__0;
          G__14812.cljs$core$IFn$_invoke$arity$1 = G__14812__1;
          G__14812.cljs$core$IFn$_invoke$arity$2 = G__14812__2;
          return G__14812;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (n__$1 > 0 && s) {
          var G__14813 = n__$1 - 1;
          var G__14814 = cljs.core.rest(s);
          n__$1 = G__14813;
          coll__$1 = G__14814;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
      return x;
    }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__14817 = cljs.core.next(s);
      var G__14818 = cljs.core.next(lead);
      s = G__14817;
      lead = G__14818;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(rf) {
      var da = cljs.core.volatile_BANG_(true);
      return function(da) {
        return function() {
          var G__14831 = null;
          var G__14831__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14831__1 = function(result) {
            var G__14825 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14825) : rf.call(null, G__14825);
          };
          var G__14831__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref(da);
            if (cljs.core.truth_(function() {
              var and__3756__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3756__auto__)) {
                var G__14826 = input;
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14826) : pred.call(null, G__14826);
              } else {
                return and__3756__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.vreset_BANG_(da, null);
              var G__14827 = result;
              var G__14828 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14827, G__14828) : rf.call(null, G__14827, G__14828);
            }
          };
          G__14831 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14831__0.call(this);
              case 1:
                return G__14831__1.call(this, result);
              case 2:
                return G__14831__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14831.cljs$core$IFn$_invoke$arity$0 = G__14831__0;
          G__14831.cljs$core$IFn$_invoke$arity$1 = G__14831__1;
          G__14831.cljs$core$IFn$_invoke$arity$2 = G__14831__2;
          return G__14831;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (cljs.core.truth_(function() {
          var and__3756__auto__ = s;
          if (and__3756__auto__) {
            var G__14830 = cljs.core.first(s);
            return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__14830) : pred__$1.call(null, G__14830);
          } else {
            return and__3756__auto__;
          }
        }())) {
          var G__14832 = pred__$1;
          var G__14833 = cljs.core.rest(s);
          pred__$1 = G__14832;
          coll__$1 = G__14833;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(x, repeat.cljs$core$IFn$_invoke$arity$1(x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeat.cljs$core$IFn$_invoke$arity$1(x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), repeatedly.cljs$core$IFn$_invoke$arity$1(f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return iterate(f, function() {
      var G__14842 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14842) : f.call(null, G__14842);
    }());
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__14845__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
        if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
          return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__14845 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__14846__i = 0, G__14846__a = new Array(arguments.length - 2);
        while (G__14846__i < G__14846__a.length) {
          G__14846__a[G__14846__i] = arguments[G__14846__i + 2];
          ++G__14846__i;
        }
        colls = new cljs.core.IndexedSeq(G__14846__a, 0);
      }
      return G__14845__delegate.call(this, c1, c2, colls);
    };
    G__14845.cljs$lang$maxFixedArity = 2;
    G__14845.cljs$lang$applyTo = function(arglist__14847) {
      var c1 = cljs.core.first(arglist__14847);
      arglist__14847 = cljs.core.next(arglist__14847);
      var c2 = cljs.core.first(arglist__14847);
      var colls = cljs.core.rest(arglist__14847);
      return G__14845__delegate(c1, c2, colls);
    };
    G__14845.cljs$core$IFn$_invoke$arity$variadic = G__14845__delegate;
    return G__14845;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        var G__14848 = null;
        if (arguments.length > 2) {
          var G__14849__i = 0, G__14849__a = new Array(arguments.length - 2);
          while (G__14849__i < G__14849__a.length) {
            G__14849__a[G__14849__i] = arguments[G__14849__i + 2];
            ++G__14849__i;
          }
          G__14848 = new cljs.core.IndexedSeq(G__14849__a, 0);
        }
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, G__14848);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function() {
  var interpose = null;
  var interpose__1 = function(sep) {
    return function(rf) {
      var started = cljs.core.volatile_BANG_(false);
      return function(started) {
        return function() {
          var G__14864 = null;
          var G__14864__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14864__1 = function(result) {
            var G__14857 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14857) : rf.call(null, G__14857);
          };
          var G__14864__2 = function(result, input) {
            if (cljs.core.truth_(cljs.core.deref(started))) {
              var sepr = function() {
                var G__14858 = result;
                var G__14859 = sep;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14858, G__14859) : rf.call(null, G__14858, G__14859);
              }();
              if (cljs.core.reduced_QMARK_(sepr)) {
                return sepr;
              } else {
                var G__14860 = sepr;
                var G__14861 = input;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14860, G__14861) : rf.call(null, G__14860, G__14861);
              }
            } else {
              cljs.core.vreset_BANG_(started, true);
              var G__14862 = result;
              var G__14863 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14862, G__14863) : rf.call(null, G__14862, G__14863);
            }
          };
          G__14864 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14864__0.call(this);
              case 1:
                return G__14864__1.call(this, result);
              case 2:
                return G__14864__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14864.cljs$core$IFn$_invoke$arity$0 = G__14864__0;
          G__14864.cljs$core$IFn$_invoke$arity$1 = G__14864__1;
          G__14864.cljs$core$IFn$_invoke$arity$2 = G__14864__2;
          return G__14864;
        }();
      }(started);
    };
  };
  var interpose__2 = function(sep, coll) {
    return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
  };
  interpose = function(sep, coll) {
    switch(arguments.length) {
      case 1:
        return interpose__1.call(this, sep);
      case 2:
        return interpose__2.call(this, sep, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
  interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
  return interpose;
}();
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
  };
  var mapcat__2 = function() {
    var G__14873__delegate = function(f, colls) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
    };
    var G__14873 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        var G__14874__i = 0, G__14874__a = new Array(arguments.length - 1);
        while (G__14874__i < G__14874__a.length) {
          G__14874__a[G__14874__i] = arguments[G__14874__i + 1];
          ++G__14874__i;
        }
        colls = new cljs.core.IndexedSeq(G__14874__a, 0);
      }
      return G__14873__delegate.call(this, f, colls);
    };
    G__14873.cljs$lang$maxFixedArity = 1;
    G__14873.cljs$lang$applyTo = function(arglist__14875) {
      var f = cljs.core.first(arglist__14875);
      var colls = cljs.core.rest(arglist__14875);
      return G__14873__delegate(f, colls);
    };
    G__14873.cljs$core$IFn$_invoke$arity$variadic = G__14873__delegate;
    return G__14873;
  }();
  mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      default:
        var G__14876 = null;
        if (arguments.length > 1) {
          var G__14877__i = 0, G__14877__a = new Array(arguments.length - 1);
          while (G__14877__i < G__14877__a.length) {
            G__14877__a[G__14877__i] = arguments[G__14877__i + 1];
            ++G__14877__i;
          }
          G__14876 = new cljs.core.IndexedSeq(G__14877__a, 0);
        }
        return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__14876);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 1;
  mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__14896 = null;
        var G__14896__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__14896__1 = function(result) {
          var G__14890 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14890) : rf.call(null, G__14890);
        };
        var G__14896__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__14891 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14891) : pred.call(null, G__14891);
          }())) {
            var G__14892 = result;
            var G__14893 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14892, G__14893) : rf.call(null, G__14892, G__14893);
          } else {
            return result;
          }
        };
        G__14896 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__14896__0.call(this);
            case 1:
              return G__14896__1.call(this, result);
            case 2:
              return G__14896__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__14896.cljs$core$IFn$_invoke$arity$0 = G__14896__0;
        G__14896.cljs$core$IFn$_invoke$arity$1 = G__14896__1;
        G__14896.cljs$core$IFn$_invoke$arity$2 = G__14896__2;
        return G__14896;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4655__auto___14897 = size;
          var i_14898 = 0;
          while (true) {
            if (i_14898 < n__4655__auto___14897) {
              if (cljs.core.truth_(function() {
                var G__14894 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14898);
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14894) : pred.call(null, G__14894);
              }())) {
                cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14898));
              } else {
              }
              var G__14899 = i_14898 + 1;
              i_14898 = G__14899;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
        } else {
          var f = cljs.core.first(s);
          var r = cljs.core.rest(s);
          if (cljs.core.truth_(function() {
            var G__14895 = f;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14895) : pred.call(null, G__14895);
          }())) {
            return cljs.core.cons(f, filter.cljs$core$IFn$_invoke$arity$2(pred, r));
          } else {
            return filter.cljs$core$IFn$_invoke$arity$2(pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__14906 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__14906) : branch_QMARK_.call(null, G__14906);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk, cljs.core.array_seq([function() {
        var G__14907 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__14907) : children.call(null, G__14907);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__14908_SHARP_) {
    return!cljs.core.sequential_QMARK_(p1__14908_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__14911 = to;
        if (G__14911) {
          var bit__4442__auto__ = G__14911.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4442__auto__ || G__14911.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
      } else {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__14912 = to;
      if (G__14912) {
        var bit__4442__auto__ = G__14912.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4442__auto__ || G__14912.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
        var G__14914 = o;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14914) : f.call(null, G__14914);
      }());
    }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__14915__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
    };
    var G__14915 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__14916__i = 0, G__14916__a = new Array(arguments.length - 4);
        while (G__14916__i < G__14916__a.length) {
          G__14916__a[G__14916__i] = arguments[G__14916__i + 4];
          ++G__14916__i;
        }
        colls = new cljs.core.IndexedSeq(G__14916__a, 0);
      }
      return G__14915__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__14915.cljs$lang$maxFixedArity = 4;
    G__14915.cljs$lang$applyTo = function(arglist__14917) {
      var f = cljs.core.first(arglist__14917);
      arglist__14917 = cljs.core.next(arglist__14917);
      var c1 = cljs.core.first(arglist__14917);
      arglist__14917 = cljs.core.next(arglist__14917);
      var c2 = cljs.core.first(arglist__14917);
      arglist__14917 = cljs.core.next(arglist__14917);
      var c3 = cljs.core.first(arglist__14917);
      var colls = cljs.core.rest(arglist__14917);
      return G__14915__delegate(f, c1, c2, c3, colls);
    };
    G__14915.cljs$core$IFn$_invoke$arity$variadic = G__14915__delegate;
    return G__14915;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        var G__14918 = null;
        if (arguments.length > 4) {
          var G__14919__i = 0, G__14919__a = new Array(arguments.length - 4);
          while (G__14919__i < G__14919__a.length) {
            G__14919__a[G__14919__i] = arguments[G__14919__i + 4];
            ++G__14919__i;
          }
          G__14918 = new cljs.core.IndexedSeq(G__14919__a, 0);
        }
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__14918);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__14921 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14921) : pred.call(null, G__14921);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq(ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__14936 = m__$1;
          if (G__14936) {
            var bit__4449__auto__ = G__14936.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4449__auto__ || G__14936.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__14936.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__14936);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__14936);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__14937 = sentinel;
            var G__14938 = m__$2;
            var G__14939 = cljs.core.next(ks__$1);
            sentinel = G__14937;
            m__$1 = G__14938;
            ks__$1 = G__14939;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__14940, v) {
  var vec__14945 = p__14940;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14945, 0, null);
  var ks = cljs.core.nthnext(vec__14945, 1);
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__14946, f) {
    var vec__14984 = p__14946;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14984, 0, null);
    var ks = cljs.core.nthnext(vec__14984, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__14985 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14985) : f.call(null, G__14985);
      }());
    }
  };
  var update_in__4 = function(m, p__14947, f, a) {
    var vec__14986 = p__14947;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14986, 0, null);
    var ks = cljs.core.nthnext(vec__14986, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__14987 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__14988 = a;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14987, G__14988) : f.call(null, G__14987, G__14988);
      }());
    }
  };
  var update_in__5 = function(m, p__14948, f, a, b) {
    var vec__14989 = p__14948;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14989, 0, null);
    var ks = cljs.core.nthnext(vec__14989, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__14990 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__14991 = a;
        var G__14992 = b;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14990, G__14991, G__14992) : f.call(null, G__14990, G__14991, G__14992);
      }());
    }
  };
  var update_in__6 = function(m, p__14949, f, a, b, c) {
    var vec__14993 = p__14949;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14993, 0, null);
    var ks = cljs.core.nthnext(vec__14993, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__14994 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__14995 = a;
        var G__14996 = b;
        var G__14997 = c;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14994, G__14995, G__14996, G__14997) : f.call(null, G__14994, G__14995, G__14996, G__14997);
      }());
    }
  };
  var update_in__7 = function() {
    var G__14999__delegate = function(m, p__14950, f, a, b, c, args) {
      var vec__14998 = p__14950;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14998, 0, null);
      var ks = cljs.core.nthnext(vec__14998, 1);
      if (ks) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
      }
    };
    var G__14999 = function(m, p__14950, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__15000__i = 0, G__15000__a = new Array(arguments.length - 6);
        while (G__15000__i < G__15000__a.length) {
          G__15000__a[G__15000__i] = arguments[G__15000__i + 6];
          ++G__15000__i;
        }
        args = new cljs.core.IndexedSeq(G__15000__a, 0);
      }
      return G__14999__delegate.call(this, m, p__14950, f, a, b, c, args);
    };
    G__14999.cljs$lang$maxFixedArity = 6;
    G__14999.cljs$lang$applyTo = function(arglist__15001) {
      var m = cljs.core.first(arglist__15001);
      arglist__15001 = cljs.core.next(arglist__15001);
      var p__14950 = cljs.core.first(arglist__15001);
      arglist__15001 = cljs.core.next(arglist__15001);
      var f = cljs.core.first(arglist__15001);
      arglist__15001 = cljs.core.next(arglist__15001);
      var a = cljs.core.first(arglist__15001);
      arglist__15001 = cljs.core.next(arglist__15001);
      var b = cljs.core.first(arglist__15001);
      arglist__15001 = cljs.core.next(arglist__15001);
      var c = cljs.core.first(arglist__15001);
      var args = cljs.core.rest(arglist__15001);
      return G__14999__delegate(m, p__14950, f, a, b, c, args);
    };
    G__14999.cljs$core$IFn$_invoke$arity$variadic = G__14999__delegate;
    return G__14999;
  }();
  update_in = function(m, p__14950, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__14950, f);
      case 4:
        return update_in__4.call(this, m, p__14950, f, a);
      case 5:
        return update_in__5.call(this, m, p__14950, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__14950, f, a, b, c);
      default:
        var G__15002 = null;
        if (arguments.length > 6) {
          var G__15003__i = 0, G__15003__a = new Array(arguments.length - 6);
          while (G__15003__i < G__15003__a.length) {
            G__15003__a[G__15003__i] = arguments[G__15003__i + 6];
            ++G__15003__i;
          }
          G__15002 = new cljs.core.IndexedSeq(G__15003__a, 0);
        }
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__14950, f, a, b, c, G__15002);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__15014 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15014) : f.call(null, G__15014);
    }());
  };
  var update__4 = function(m, k, f, x) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__15015 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__15016 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15015, G__15016) : f.call(null, G__15015, G__15016);
    }());
  };
  var update__5 = function(m, k, f, x, y) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__15017 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__15018 = x;
      var G__15019 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15017, G__15018, G__15019) : f.call(null, G__15017, G__15018, G__15019);
    }());
  };
  var update__6 = function(m, k, f, x, y, z) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__15020 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__15021 = x;
      var G__15022 = y;
      var G__15023 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15020, G__15021, G__15022, G__15023) : f.call(null, G__15020, G__15021, G__15022, G__15023);
    }());
  };
  var update__7 = function() {
    var G__15024__delegate = function(m, k, f, x, y, z, more) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
    };
    var G__15024 = function(m, k, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 6) {
        var G__15025__i = 0, G__15025__a = new Array(arguments.length - 6);
        while (G__15025__i < G__15025__a.length) {
          G__15025__a[G__15025__i] = arguments[G__15025__i + 6];
          ++G__15025__i;
        }
        more = new cljs.core.IndexedSeq(G__15025__a, 0);
      }
      return G__15024__delegate.call(this, m, k, f, x, y, z, more);
    };
    G__15024.cljs$lang$maxFixedArity = 6;
    G__15024.cljs$lang$applyTo = function(arglist__15026) {
      var m = cljs.core.first(arglist__15026);
      arglist__15026 = cljs.core.next(arglist__15026);
      var k = cljs.core.first(arglist__15026);
      arglist__15026 = cljs.core.next(arglist__15026);
      var f = cljs.core.first(arglist__15026);
      arglist__15026 = cljs.core.next(arglist__15026);
      var x = cljs.core.first(arglist__15026);
      arglist__15026 = cljs.core.next(arglist__15026);
      var y = cljs.core.first(arglist__15026);
      arglist__15026 = cljs.core.next(arglist__15026);
      var z = cljs.core.first(arglist__15026);
      var more = cljs.core.rest(arglist__15026);
      return G__15024__delegate(m, k, f, x, y, z, more);
    };
    G__15024.cljs$core$IFn$_invoke$arity$variadic = G__15024__delegate;
    return G__15024;
  }();
  update = function(m, k, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x);
      case 5:
        return update__5.call(this, m, k, f, x, y);
      case 6:
        return update__6.call(this, m, k, f, x, y, z);
      default:
        var G__15027 = null;
        if (arguments.length > 6) {
          var G__15028__i = 0, G__15028__a = new Array(arguments.length - 6);
          while (G__15028__i < G__15028__a.length) {
            G__15028__a[G__15028__i] = arguments[G__15028__i + 6];
            ++G__15028__i;
          }
          G__15027 = new cljs.core.IndexedSeq(G__15028__a, 0);
        }
        return update__7.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x, y, z, G__15027);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 6;
  update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$6 = update__6;
  update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__15029 = ll - 5;
      var G__15030 = r;
      ll = G__15029;
      ret = G__15030;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__15035 = cljs.core.pv_aget(node, 0);
      var G__15036 = level - 5;
      node = G__15035;
      level = G__15036;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__15037 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__15038 = level - 5;
        node = G__15037;
        level = G__15038;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function __GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__15048 = init__$2;
              var G__15049 = j + i;
              var G__15050 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15048, G__15049, G__15050) : f.call(null, G__15048, G__15049, G__15050);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__15061 = j + 1;
              var G__15062 = init__$3;
              j = G__15061;
              init__$2 = G__15062;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__15051 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15051) : cljs.core.deref.call(null, G__15051);
      } else {
        var G__15063 = i + len;
        var G__15064 = init__$2;
        i = G__15063;
        init__$1 = G__15064;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__15052 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__15052) : cljs.core.tv_editable_root.call(null, G__15052);
  }(), function() {
    var G__15053 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__15053) : cljs.core.tv_editable_tail.call(null, G__15053);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__15054 = init__$2;
              var G__15055 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15054, G__15055) : f.call(null, G__15054, G__15055);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__15065 = j + 1;
              var G__15066 = init__$3;
              j = G__15065;
              init__$2 = G__15066;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__15056 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15056) : cljs.core.deref.call(null, G__15056);
      } else {
        var G__15067 = i + len;
        var G__15068 = init__$2;
        i = G__15067;
        init__$1 = G__15068;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__15057 = coll__$1;
      var G__15058 = cljs.core.first_array_for_longvec(coll__$1);
      var G__15059 = 0;
      var G__15060 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15057, G__15058, G__15059, G__15060) : cljs.core.chunked_seq.call(null, G__15057, G__15058, G__15059, G__15060);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4655__auto___15069 = len;
    var i_15070 = 0;
    while (true) {
      if (i_15070 < n__4655__auto___15069) {
        new_tail[i_15070] = self__.tail[i_15070];
        var G__15071 = i_15070 + 1;
        i_15070 = G__15071;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__15072 = null;
  var G__15072__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__15072__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__15072 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15072__2.call(this, self__, k);
      case 3:
        return G__15072__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15072.cljs$core$IFn$_invoke$arity$2 = G__15072__2;
  G__15072.cljs$core$IFn$_invoke$arity$3 = G__15072__3;
  return G__15072;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args15047) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15047)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__15073 = i + 1;
        var G__15074 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__15073;
        out = G__15074;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.vec = function vec(coll) {
  if (coll instanceof Array) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec(args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      var G__15075__i = 0, G__15075__a = new Array(arguments.length - 0);
      while (G__15075__i < G__15075__a.length) {
        G__15075__a[G__15075__i] = arguments[G__15075__i + 0];
        ++G__15075__i;
      }
      args = new cljs.core.IndexedSeq(G__15075__a, 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__15076) {
    var args = cljs.core.seq(arglist__15076);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__15077 = self__.vec;
      var G__15078 = self__.node;
      var G__15079 = self__.i;
      var G__15080 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15077, G__15078, G__15079, G__15080) : cljs.core.chunked_seq.call(null, G__15077, G__15078, G__15079, G__15080);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__15081 = self__.vec;
    var G__15082 = self__.i + self__.off;
    var G__15083 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__15081, G__15082, G__15083) : cljs.core.subvec.call(null, G__15081, G__15082, G__15083);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__15084 = self__.vec;
    var G__15085 = self__.i + self__.off;
    var G__15086 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__15084, G__15085, G__15086) : cljs.core.subvec.call(null, G__15084, G__15085, G__15086);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__15087 = self__.vec;
      var G__15088 = self__.node;
      var G__15089 = self__.i;
      var G__15090 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15087, G__15088, G__15089, G__15090) : cljs.core.chunked_seq.call(null, G__15087, G__15088, G__15089, G__15090);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__15091 = self__.vec;
    var G__15092 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__15093 = end;
    var G__15094 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15091, G__15092, G__15093, G__15094) : cljs.core.chunked_seq.call(null, G__15091, G__15092, G__15093, G__15094);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__15095 = self__.vec;
  var G__15096 = self__.node;
  var G__15097 = self__.i;
  var G__15098 = self__.off;
  var G__15099 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__15095, G__15096, G__15097, G__15098, G__15099) : cljs.core.chunked_seq.call(null, G__15095, G__15096, G__15097, G__15098, G__15099);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__15100 = self__.vec;
    var G__15101 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__15102 = end;
    var G__15103 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15100, G__15101, G__15102, G__15103) : cljs.core.chunked_seq.call(null, G__15100, G__15101, G__15102, G__15103);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__15105 = self__.meta;
  var G__15106 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__15107 = self__.start;
  var G__15108 = function() {
    var x__4085__auto__ = self__.end;
    var y__4086__auto__ = v_pos + 1;
    return x__4085__auto__ > y__4086__auto__ ? x__4085__auto__ : y__4086__auto__;
  }();
  var G__15109 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15105, G__15106, G__15107, G__15108, G__15109) : cljs.core.build_subvec.call(null, G__15105, G__15106, G__15107, G__15108, G__15109);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__15110 = self__.meta;
    var G__15111 = self__.v;
    var G__15112 = self__.start;
    var G__15113 = self__.end - 1;
    var G__15114 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15110, G__15111, G__15112, G__15113, G__15114) : cljs.core.build_subvec.call(null, G__15110, G__15111, G__15112, G__15113, G__15114);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__15116 = meta__$1;
  var G__15117 = self__.v;
  var G__15118 = self__.start;
  var G__15119 = self__.end;
  var G__15120 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15116, G__15117, G__15118, G__15119, G__15120) : cljs.core.build_subvec.call(null, G__15116, G__15117, G__15118, G__15119, G__15120);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__15121 = self__.meta;
  var G__15122 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__15123 = self__.start;
  var G__15124 = self__.end + 1;
  var G__15125 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15121, G__15122, G__15123, G__15124, G__15125) : cljs.core.build_subvec.call(null, G__15121, G__15122, G__15123, G__15124, G__15125);
};
cljs.core.Subvec.prototype.call = function() {
  var G__15126 = null;
  var G__15126__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__15126__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__15126 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15126__2.call(this, self__, k);
      case 3:
        return G__15126__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15126.cljs$core$IFn$_invoke$arity$2 = G__15126__2;
  G__15126.cljs$core$IFn$_invoke$arity$3 = G__15126__3;
  return G__15126;
}();
cljs.core.Subvec.prototype.apply = function(self__, args15104) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15104)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__15127 = meta;
      var G__15128 = v.v;
      var G__15129 = v.start + start;
      var G__15130 = v.start + end;
      var G__15131 = __hash;
      meta = G__15127;
      v = G__15128;
      start = G__15129;
      end = G__15130;
      __hash = G__15131;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec(null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj15138 = {};
    return obj15138;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__15146 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__15147 = level - 5;
        node = G__15146;
        level = G__15147;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__15151 = null;
  var G__15151__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15151__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15151 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15151__2.call(this, self__, k);
      case 3:
        return G__15151__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15151.cljs$core$IFn$_invoke$arity$2 = G__15151__2;
  G__15151.cljs$core$IFn$_invoke$arity$3 = G__15151__3;
  return G__15151;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args15148) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15148)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next(self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next(self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__3768__auto__ = self__.front;
    if (cljs.core.truth_(or__3768__auto__)) {
      return or__3768__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__3768__auto__ = self__.rear;
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__15152 = i + incr;
        i = G__15152;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__15153 = i + 1;
      var G__15154 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__15153;
      out = G__15154;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj15158 = {};
    return obj15158;
  }();
  var l = ks.length;
  var i_15159 = 0;
  while (true) {
    if (i_15159 < l) {
      var k_15160 = ks[i_15159];
      new_obj[k_15160] = obj[k_15160];
      var G__15161 = i_15159 + 1;
      i_15159 = G__15161;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3756__auto__ = function() {
      var G__15165 = k;
      return goog.isString(G__15165);
    }();
    if (cljs.core.truth_(and__3756__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3756__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__15166 = init__$1;
        var G__15167 = k;
        var G__15168 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15166, G__15167, G__15168) : f.call(null, G__15166, G__15167, G__15168);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__15169 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15169) : cljs.core.deref.call(null, G__15169);
      } else {
        var G__15175 = cljs.core.rest(keys__$1);
        var G__15176 = init__$2;
        keys__$1 = G__15175;
        init__$1 = G__15176;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3756__auto__ = function() {
      var G__15171 = k;
      return goog.isString(G__15171);
    }();
    if (cljs.core.truth_(and__3756__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3756__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__15172 = k;
    return goog.isString(G__15172);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3756__auto__ = function() {
      var G__15174 = k;
      return goog.isString(G__15174);
    }();
    if (cljs.core.truth_(and__3756__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3756__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__15162_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__15162_SHARP_, self__.strobj[p1__15162_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__15177 = null;
  var G__15177__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15177__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15177 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15177__2.call(this, self__, k);
      case 3:
        return G__15177__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15177.cljs$core$IFn$_invoke$arity$2 = G__15177__2;
  G__15177.cljs$core$IFn$_invoke$arity$3 = G__15177__3;
  return G__15177;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args15163) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15163)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj15179 = {};
  return obj15179;
}(), 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__15180 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15180, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15180, 1, null);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function __GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function __GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__15181 = i + 2;
        i = G__15181;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__15182 = i + 2;
        i = G__15182;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__15183 = i + 2;
        i = G__15183;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__15184 = i + 2;
        i = G__15184;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__15185 = i + 2;
        i = G__15185;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_(arr, m, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__3768__auto__ = function() {
        var G__15189 = k;
        return goog.isString(G__15189);
      }();
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_map_index_of_identical_QMARK_(arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_(arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_(arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_(arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_15190 = 0;
  while (true) {
    if (i_15190 < l) {
      narr[i_15190] = arr[i_15190];
      var G__15191 = i_15190 + 1;
      i_15190 = G__15191;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function __GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15193 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15193) : cljs.core.keys.call(null, G__15193);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15194 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15194) : cljs.core.vals.call(null, G__15194);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15195 = cljs.core.seq(coll);
  var chunk__15196 = null;
  var count__15197 = 0;
  var i__15198 = 0;
  while (true) {
    if (i__15198 < count__15197) {
      var vec__15199 = chunk__15196.cljs$core$IIndexed$_nth$arity$2(null, i__15198);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15199, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15199, 1, null);
      var G__15200_15213 = v;
      var G__15201_15214 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15200_15213, G__15201_15214) : f.call(null, G__15200_15213, G__15201_15214);
      var G__15215 = seq__15195;
      var G__15216 = chunk__15196;
      var G__15217 = count__15197;
      var G__15218 = i__15198 + 1;
      seq__15195 = G__15215;
      chunk__15196 = G__15216;
      count__15197 = G__15217;
      i__15198 = G__15218;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15195);
      if (temp__4126__auto__) {
        var seq__15195__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15195__$1)) {
          var c__4555__auto__ = cljs.core.chunk_first(seq__15195__$1);
          var G__15219 = cljs.core.chunk_rest(seq__15195__$1);
          var G__15220 = c__4555__auto__;
          var G__15221 = cljs.core.count(c__4555__auto__);
          var G__15222 = 0;
          seq__15195 = G__15219;
          chunk__15196 = G__15220;
          count__15197 = G__15221;
          i__15198 = G__15222;
          continue;
        } else {
          var vec__15202 = cljs.core.first(seq__15195__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15202, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15202, 1, null);
          var G__15203_15223 = v;
          var G__15204_15224 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15203_15223, G__15204_15224) : f.call(null, G__15203_15223, G__15204_15224);
          var G__15225 = cljs.core.next(seq__15195__$1);
          var G__15226 = null;
          var G__15227 = 0;
          var G__15228 = 0;
          seq__15195 = G__15225;
          chunk__15196 = G__15226;
          count__15197 = G__15227;
          i__15198 = G__15228;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__15205 = init__$1;
        var G__15206 = self__.arr[i];
        var G__15207 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15205, G__15206, G__15207) : f.call(null, G__15205, G__15206, G__15207);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__15208 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15208) : cljs.core.deref.call(null, G__15208);
      } else {
        var G__15229 = i + 2;
        var G__15230 = init__$2;
        i = G__15229;
        init__$1 = G__15230;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__15209 = other;
    if (G__15209) {
      var bit__4442__auto__ = G__15209.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4442__auto__ || G__15209.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__15231 = i + 2;
              i = G__15231;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj15211 = {};
    return obj15211;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__15232 = s + 2;
            var G__15233 = d;
            s = G__15232;
            d = G__15233;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__15234 = s + 2;
            var G__15235 = d + 2;
            s = G__15234;
            d = G__15235;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__15212 = cljs.core.aclone(self__.arr);
        G__15212[idx + 1] = v;
        return G__15212;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__15236 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__15237 = cljs.core.next(es);
          ret = G__15236;
          es = G__15237;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__15238 = null;
  var G__15238__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15238__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15238 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15238__2.call(this, self__, k);
      case 3:
        return G__15238__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15238.cljs$core$IFn$_invoke$arity$2 = G__15238__2;
  G__15238.cljs$core$IFn$_invoke$arity$3 = G__15238__3;
  return G__15238;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args15192) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15192)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__15239 = i + 2;
        var G__15240 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
        i = G__15239;
        ret = G__15240;
        continue;
      } else {
        return cljs.core._persistent_BANG_(ret);
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__15241_15249 = self__.arr;
      G__15241_15249.pop();
      G__15241_15249.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__15242 = self__.len;
          var G__15243 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__15242, G__15243) : cljs.core.array__GT_transient_hash_map.call(null, G__15242, G__15243);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__15244 = o;
      if (G__15244) {
        var bit__4449__auto__ = G__15244.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4449__auto__ || G__15244.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__15244.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__15244);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__15244);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__15245 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15245) : cljs.core.key.call(null, G__15245);
      }(), function() {
        var G__15246 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15246) : cljs.core.val.call(null, G__15246);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__15250 = cljs.core.next(es);
          var G__15251 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__15247 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15247) : cljs.core.key.call(null, G__15247);
          }(), function() {
            var G__15248 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15248) : cljs.core.val.call(null, G__15248);
          }());
          es = G__15250;
          tcoll__$2 = G__15251;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__15252 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__15253 = i + 2;
      out = G__15252;
      i = G__15253;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__15256 = cljs.core.aclone(arr);
    G__15256[i] = a;
    return G__15256;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__15257 = cljs.core.aclone(arr);
    G__15257[i] = a;
    G__15257[j] = b;
    return G__15257;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__15262 = init__$1;
          var G__15263 = k;
          var G__15264 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15262, G__15263, G__15264) : f.call(null, G__15262, G__15263, G__15264);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__15265 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15265) : cljs.core.deref.call(null, G__15265);
      } else {
        var G__15266 = i + 2;
        var G__15267 = init__$2;
        i = G__15266;
        init__$1 = G__15267;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__15268 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__15268) : cljs.core.create_inode_seq.call(null, G__15268);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_15282 = 0;
        var j_15283 = 0;
        while (true) {
          if (i_15282 < 32) {
            if ((self__.bitmap >>> i_15282 & 1) === 0) {
              var G__15284 = i_15282 + 1;
              var G__15285 = j_15283;
              i_15282 = G__15284;
              j_15283 = G__15285;
              continue;
            } else {
              nodes[i_15282] = !(self__.arr[j_15283] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_15283]), self__.arr[j_15283], self__.arr[j_15283 + 1], added_leaf_QMARK_) : self__.arr[j_15283 + 1];
              var G__15286 = i_15282 + 1;
              var G__15287 = j_15283 + 2;
              i_15282 = G__15286;
              j_15283 = G__15287;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__15269 = edit__$1;
          var G__15270 = shift + 5;
          var G__15271 = key_or_nil;
          var G__15272 = val_or_node;
          var G__15273 = hash;
          var G__15274 = key;
          var G__15275 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__15269, G__15270, G__15271, G__15272, G__15273, G__15274, G__15275) : cljs.core.create_node.call(null, G__15269, G__15270, G__15271, G__15272, G__15273, G__15274, G__15275);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_15288 = 0;
      var j_15289 = 0;
      while (true) {
        if (i_15288 < 32) {
          if ((self__.bitmap >>> i_15288 & 1) === 0) {
            var G__15290 = i_15288 + 1;
            var G__15291 = j_15289;
            i_15288 = G__15290;
            j_15289 = G__15291;
            continue;
          } else {
            nodes[i_15288] = !(self__.arr[j_15289] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_15289]), self__.arr[j_15289], self__.arr[j_15289 + 1], added_leaf_QMARK_) : self__.arr[j_15289 + 1];
            var G__15292 = i_15288 + 1;
            var G__15293 = j_15289 + 2;
            i_15288 = G__15292;
            j_15289 = G__15293;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__15276 = shift + 5;
          var G__15277 = key_or_nil;
          var G__15278 = val_or_node;
          var G__15279 = hash;
          var G__15280 = key;
          var G__15281 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__15276, G__15277, G__15278, G__15279, G__15280, G__15281) : cljs.core.create_node.call(null, G__15276, G__15277, G__15278, G__15279, G__15280, G__15281);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__15294 = i + 1;
        var G__15295 = j + 2;
        var G__15296 = bitmap | 1 << i;
        i = G__15294;
        j = G__15295;
        bitmap = G__15296;
        continue;
      } else {
        var G__15297 = i + 1;
        var G__15298 = j;
        var G__15299 = bitmap;
        i = G__15297;
        j = G__15298;
        bitmap = G__15299;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__15300 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__15300) : cljs.core.create_array_node_seq.call(null, G__15300);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__15301 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15301) : cljs.core.deref.call(null, G__15301);
        } else {
          var G__15302 = i + 1;
          var G__15303 = init__$2;
          i = G__15302;
          init__$1 = G__15303;
          continue;
        }
      } else {
        var G__15304 = i + 1;
        var G__15305 = init__$1;
        i = G__15304;
        init__$1 = G__15305;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__15306 = i + 2;
        i = G__15306;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__15307 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__15307) : cljs.core.create_inode_seq.call(null, G__15307);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__15308 = self__.nodes;
    var G__15309 = self__.i + 2;
    var G__15310 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15308, G__15309, G__15310) : cljs.core.create_inode_seq.call(null, G__15308, G__15309, G__15310);
  } else {
    var G__15311 = self__.nodes;
    var G__15312 = self__.i;
    var G__15313 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15311, G__15312, G__15313) : cljs.core.create_inode_seq.call(null, G__15311, G__15312, G__15313);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__15317 = j + 2;
                j = G__15317;
                continue;
              }
            } else {
              var G__15318 = j + 2;
              j = G__15318;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__15319 = null;
  var G__15320 = self__.nodes;
  var G__15321 = self__.i;
  var G__15322 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__15319, G__15320, G__15321, G__15322) : cljs.core.create_array_node_seq.call(null, G__15319, G__15320, G__15321, G__15322);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__15327 = j + 1;
              j = G__15327;
              continue;
            }
          } else {
            var G__15328 = j + 1;
            j = G__15328;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15330 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15330) : cljs.core.keys.call(null, G__15330);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15331 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15331) : cljs.core.vals.call(null, G__15331);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15332 = cljs.core.seq(coll);
  var chunk__15333 = null;
  var count__15334 = 0;
  var i__15335 = 0;
  while (true) {
    if (i__15335 < count__15334) {
      var vec__15336 = chunk__15333.cljs$core$IIndexed$_nth$arity$2(null, i__15335);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15336, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15336, 1, null);
      var G__15337_15348 = v;
      var G__15338_15349 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15337_15348, G__15338_15349) : f.call(null, G__15337_15348, G__15338_15349);
      var G__15350 = seq__15332;
      var G__15351 = chunk__15333;
      var G__15352 = count__15334;
      var G__15353 = i__15335 + 1;
      seq__15332 = G__15350;
      chunk__15333 = G__15351;
      count__15334 = G__15352;
      i__15335 = G__15353;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15332);
      if (temp__4126__auto__) {
        var seq__15332__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15332__$1)) {
          var c__4555__auto__ = cljs.core.chunk_first(seq__15332__$1);
          var G__15354 = cljs.core.chunk_rest(seq__15332__$1);
          var G__15355 = c__4555__auto__;
          var G__15356 = cljs.core.count(c__4555__auto__);
          var G__15357 = 0;
          seq__15332 = G__15354;
          chunk__15333 = G__15355;
          count__15334 = G__15356;
          i__15335 = G__15357;
          continue;
        } else {
          var vec__15339 = cljs.core.first(seq__15332__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15339, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15339, 1, null);
          var G__15340_15358 = v;
          var G__15341_15359 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15340_15358, G__15341_15359) : f.call(null, G__15340_15358, G__15341_15359);
          var G__15360 = cljs.core.next(seq__15332__$1);
          var G__15361 = null;
          var G__15362 = 0;
          var G__15363 = 0;
          seq__15332 = G__15360;
          chunk__15333 = G__15361;
          count__15334 = G__15362;
          i__15335 = G__15363;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__15342 = init;
    var G__15343 = null;
    var G__15344 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15342, G__15343, G__15344) : f.call(null, G__15342, G__15343, G__15344);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__15345 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15345) : cljs.core.deref.call(null, G__15345);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj15347 = {};
    return obj15347;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__15364 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__15365 = cljs.core.next(es);
          ret = G__15364;
          es = G__15365;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__15366 = null;
  var G__15366__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15366__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15366 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15366__2.call(this, self__, k);
      case 3:
        return G__15366__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15366.cljs$core$IFn$_invoke$arity$2 = G__15366__2;
  G__15366.cljs$core$IFn$_invoke$arity$3 = G__15366__3;
  return G__15366;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args15329) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15329)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__15367 = i + 2;
      var G__15368 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__15367;
      ret = G__15368;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__15369 = i + 1;
      var G__15370 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__15369;
      out = G__15370;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__15371 = o;
      if (G__15371) {
        var bit__4449__auto__ = G__15371.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4449__auto__ || G__15371.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__15371.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__15371);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__15371);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__15372 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15372) : cljs.core.key.call(null, G__15372);
      }(), function() {
        var G__15373 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15373) : cljs.core.val.call(null, G__15373);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__15376 = cljs.core.next(es);
          var G__15377 = tcoll__$1.assoc_BANG_(function() {
            var G__15374 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15374) : cljs.core.key.call(null, G__15374);
          }(), function() {
            var G__15375 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15375) : cljs.core.val.call(null, G__15375);
          }());
          es = G__15376;
          tcoll__$1 = G__15377;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__15378 = ascending_QMARK_ ? t.left : t.right;
      var G__15379 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__15378;
      stack__$1 = G__15379;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__15392 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15392) : cljs.core.deref.call(null, G__15392);
  } else {
    var init__$2 = function() {
      var G__15393 = init__$1;
      var G__15394 = node.key;
      var G__15395 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15393, G__15394, G__15395) : f.call(null, G__15393, G__15394, G__15395);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__15396 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15396) : cljs.core.deref.call(null, G__15396);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__15397 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15397) : cljs.core.deref.call(null, G__15397);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__15399 = null;
  var G__15399__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15399__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15399 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15399__2.call(this, self__, k);
      case 3:
        return G__15399__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15399.cljs$core$IFn$_invoke$arity$2 = G__15399__2;
  G__15399.cljs$core$IFn$_invoke$arity$3 = G__15399__3;
  return G__15399;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args15398) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15398)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__15401 = null;
  var G__15401__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15401__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15401 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15401__2.call(this, self__, k);
      case 3:
        return G__15401__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15401.cljs$core$IFn$_invoke$arity$2 = G__15401__2;
  G__15401.cljs$core$IFn$_invoke$arity$3 = G__15401__3;
  return G__15401;
}();
cljs.core.RedNode.prototype.apply = function(self__, args15400) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15400)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__15414 = k;
      var G__15415 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15414, G__15415) : comp.call(null, G__15414, G__15415);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append(left, right.left), right.right, null);
        } else {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__15434 = k;
      var G__15435 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15434, G__15435) : comp.call(null, G__15434, G__15435);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__15446 = k;
    var G__15447 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15446, G__15447) : comp.call(null, G__15446, G__15447);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15449 = cljs.core.seq(coll);
  var chunk__15450 = null;
  var count__15451 = 0;
  var i__15452 = 0;
  while (true) {
    if (i__15452 < count__15451) {
      var vec__15453 = chunk__15450.cljs$core$IIndexed$_nth$arity$2(null, i__15452);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15453, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15453, 1, null);
      var G__15454_15466 = v;
      var G__15455_15467 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15454_15466, G__15455_15467) : f.call(null, G__15454_15466, G__15455_15467);
      var G__15468 = seq__15449;
      var G__15469 = chunk__15450;
      var G__15470 = count__15451;
      var G__15471 = i__15452 + 1;
      seq__15449 = G__15468;
      chunk__15450 = G__15469;
      count__15451 = G__15470;
      i__15452 = G__15471;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15449);
      if (temp__4126__auto__) {
        var seq__15449__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15449__$1)) {
          var c__4555__auto__ = cljs.core.chunk_first(seq__15449__$1);
          var G__15472 = cljs.core.chunk_rest(seq__15449__$1);
          var G__15473 = c__4555__auto__;
          var G__15474 = cljs.core.count(c__4555__auto__);
          var G__15475 = 0;
          seq__15449 = G__15472;
          chunk__15450 = G__15473;
          count__15451 = G__15474;
          i__15452 = G__15475;
          continue;
        } else {
          var vec__15456 = cljs.core.first(seq__15449__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15456, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15456, 1, null);
          var G__15457_15476 = v;
          var G__15458_15477 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15457_15476, G__15458_15477) : f.call(null, G__15457_15476, G__15458_15477);
          var G__15478 = cljs.core.next(seq__15449__$1);
          var G__15479 = null;
          var G__15480 = 0;
          var G__15481 = 0;
          seq__15449 = G__15478;
          chunk__15450 = G__15479;
          count__15451 = G__15480;
          i__15452 = G__15481;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15459 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15459) : cljs.core.keys.call(null, G__15459);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15460 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15460) : cljs.core.vals.call(null, G__15460);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__15461 = k;
        var G__15462 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15461, G__15462) : self__.comp.call(null, G__15461, G__15462);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__15482 = t.left;
          t = G__15482;
          continue;
        } else {
          var G__15483 = t.right;
          t = G__15483;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__15484 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__15485 = cljs.core.next(es);
          ret = G__15484;
          es = G__15485;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__15486 = null;
  var G__15486__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15486__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15486 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15486__2.call(this, self__, k);
      case 3:
        return G__15486__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15486.cljs$core$IFn$_invoke$arity$2 = G__15486__2;
  G__15486.cljs$core$IFn$_invoke$arity$3 = G__15486__3;
  return G__15486;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args15448) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15448)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__15463 = k;
          var G__15464 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15463, G__15464) : self__.comp.call(null, G__15463, G__15464);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__15487 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__15488 = t.left;
              stack = G__15487;
              t = G__15488;
              continue;
            } else {
              var G__15489 = stack;
              var G__15490 = t.right;
              stack = G__15489;
              t = G__15490;
              continue;
            }
          } else {
            if (c > 0) {
              var G__15491 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__15492 = t.right;
              stack = G__15491;
              t = G__15492;
              continue;
            } else {
              var G__15493 = stack;
              var G__15494 = t.left;
              stack = G__15493;
              t = G__15494;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__15465 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15465) : cljs.core.key.call(null, G__15465);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__15495 = cljs.core.nnext(in$);
        var G__15496 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__15495;
        out = G__15496;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__15497__i = 0, G__15497__a = new Array(arguments.length - 0);
      while (G__15497__i < G__15497__a.length) {
        G__15497__a[G__15497__i] = arguments[G__15497__i + 0];
        ++G__15497__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15497__a, 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__15498) {
    var keyvals = cljs.core.seq(arglist__15498);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array, keyvals), true, false);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__15499__i = 0, G__15499__a = new Array(arguments.length - 0);
      while (G__15499__i < G__15499__a.length) {
        G__15499__a[G__15499__i] = arguments[G__15499__i + 0];
        ++G__15499__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15499__a, 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__15500) {
    var keyvals = cljs.core.seq(arglist__15500);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj15504 = {};
      return obj15504;
    }();
    var kvs = cljs.core.seq(keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first(kvs));
        obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
        var G__15505 = cljs.core.nnext(kvs);
        kvs = G__15505;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__15506__i = 0, G__15506__a = new Array(arguments.length - 0);
      while (G__15506__i < G__15506__a.length) {
        G__15506__a[G__15506__i] = arguments[G__15506__i + 0];
        ++G__15506__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15506__a, 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__15507) {
    var keyvals = cljs.core.seq(arglist__15507);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__15508 = cljs.core.nnext(in$);
        var G__15509 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__15508;
        out = G__15509;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__15510__i = 0, G__15510__a = new Array(arguments.length - 0);
      while (G__15510__i < G__15510__a.length) {
        G__15510__a[G__15510__i] = arguments[G__15510__i + 0];
        ++G__15510__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15510__a, 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__15511) {
    var keyvals = cljs.core.seq(arglist__15511);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__15512 = cljs.core.nnext(in$);
        var G__15513 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__15512;
        out = G__15513;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      var G__15514__i = 0, G__15514__a = new Array(arguments.length - 1);
      while (G__15514__i < G__15514__a.length) {
        G__15514__a[G__15514__i] = arguments[G__15514__i + 1];
        ++G__15514__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15514__a, 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__15515) {
    var comparator = cljs.core.first(arglist__15515);
    var keyvals = cljs.core.rest(arglist__15515);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15516 = self__.mseq;
    if (G__15516) {
      var bit__4449__auto__ = G__15516.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4449__auto__ || G__15516.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15516.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15516);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15516);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15517 = self__.mseq;
    if (G__15517) {
      var bit__4449__auto__ = G__15517.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4449__auto__ || G__15517.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15517.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15517);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15517);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15518 = self__.mseq;
    if (G__15518) {
      var bit__4449__auto__ = G__15518.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4449__auto__ || G__15518.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15518.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15518);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15518);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15519 = self__.mseq;
    if (G__15519) {
      var bit__4449__auto__ = G__15519.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4449__auto__ || G__15519.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15519.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15519);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15519);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__15520_SHARP_, p2__15521_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
          var or__3768__auto__ = p1__15520_SHARP_;
          if (cljs.core.truth_(or__3768__auto__)) {
            return or__3768__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__15521_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      var G__15522__i = 0, G__15522__a = new Array(arguments.length - 0);
      while (G__15522__i < G__15522__a.length) {
        G__15522__a[G__15522__i] = arguments[G__15522__i + 0];
        ++G__15522__i;
      }
      maps = new cljs.core.IndexedSeq(G__15522__a, 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__15523) {
    var maps = cljs.core.seq(arglist__15523);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first(e);
        var v = cljs.core.second(e);
        if (cljs.core.contains_QMARK_(m, k)) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
            var G__15526 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
            var G__15527 = v;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15526, G__15527) : f.call(null, G__15526, G__15527);
          }());
        } else {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
            var or__3768__auto__ = m1;
            if (cljs.core.truth_(or__3768__auto__)) {
              return or__3768__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq(m2));
        };
      }(merge_entry);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      var G__15528__i = 0, G__15528__a = new Array(arguments.length - 1);
      while (G__15528__i < G__15528__a.length) {
        G__15528__a[G__15528__i] = arguments[G__15528__i + 1];
        ++G__15528__i;
      }
      maps = new cljs.core.IndexedSeq(G__15528__a, 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__15529) {
    var f = cljs.core.first(arglist__15529);
    var maps = cljs.core.rest(arglist__15529);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__15530 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__15531 = cljs.core.next(keys);
      ret = G__15530;
      keys = G__15531;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15534 = cljs.core.seq(coll);
  var chunk__15535 = null;
  var count__15536 = 0;
  var i__15537 = 0;
  while (true) {
    if (i__15537 < count__15536) {
      var vec__15538 = chunk__15535.cljs$core$IIndexed$_nth$arity$2(null, i__15537);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15538, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15538, 1, null);
      var G__15539_15544 = v;
      var G__15540_15545 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15539_15544, G__15540_15545) : f.call(null, G__15539_15544, G__15540_15545);
      var G__15546 = seq__15534;
      var G__15547 = chunk__15535;
      var G__15548 = count__15536;
      var G__15549 = i__15537 + 1;
      seq__15534 = G__15546;
      chunk__15535 = G__15547;
      count__15536 = G__15548;
      i__15537 = G__15549;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15534);
      if (temp__4126__auto__) {
        var seq__15534__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15534__$1)) {
          var c__4555__auto__ = cljs.core.chunk_first(seq__15534__$1);
          var G__15550 = cljs.core.chunk_rest(seq__15534__$1);
          var G__15551 = c__4555__auto__;
          var G__15552 = cljs.core.count(c__4555__auto__);
          var G__15553 = 0;
          seq__15534 = G__15550;
          chunk__15535 = G__15551;
          count__15536 = G__15552;
          i__15537 = G__15553;
          continue;
        } else {
          var vec__15541 = cljs.core.first(seq__15534__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15541, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15541, 1, null);
          var G__15542_15554 = v;
          var G__15543_15555 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15542_15554, G__15543_15555) : f.call(null, G__15542_15554, G__15543_15555);
          var G__15556 = cljs.core.next(seq__15534__$1);
          var G__15557 = null;
          var G__15558 = 0;
          var G__15559 = 0;
          seq__15534 = G__15556;
          chunk__15535 = G__15557;
          count__15536 = G__15558;
          i__15537 = G__15559;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__15532_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__15532_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__15560 = null;
  var G__15560__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15560__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15560 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15560__2.call(this, self__, k);
      case 3:
        return G__15560__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15560.cljs$core$IFn$_invoke$arity$2 = G__15560__2;
  G__15560.cljs$core$IFn$_invoke$arity$3 = G__15560__3;
  return G__15560;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args15533) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15533)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__15561 = i + 1;
        var G__15562 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__15561;
        out = G__15562;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__15563 = i + 1;
        var G__15564 = cljs.core._conj_BANG_(out, items[i]);
        i = G__15563;
        out = G__15564;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__15566 = null;
  var G__15566__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__15566__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__15566 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15566__2.call(this, self__, k);
      case 3:
        return G__15566__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15566.cljs$core$IFn$_invoke$arity$2 = G__15566__2;
  G__15566.cljs$core$IFn$_invoke$arity$3 = G__15566__3;
  return G__15566;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args15565) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15565)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15569 = cljs.core.seq(coll);
  var chunk__15570 = null;
  var count__15571 = 0;
  var i__15572 = 0;
  while (true) {
    if (i__15572 < count__15571) {
      var vec__15573 = chunk__15570.cljs$core$IIndexed$_nth$arity$2(null, i__15572);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15573, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15573, 1, null);
      var G__15574_15579 = v;
      var G__15575_15580 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15574_15579, G__15575_15580) : f.call(null, G__15574_15579, G__15575_15580);
      var G__15581 = seq__15569;
      var G__15582 = chunk__15570;
      var G__15583 = count__15571;
      var G__15584 = i__15572 + 1;
      seq__15569 = G__15581;
      chunk__15570 = G__15582;
      count__15571 = G__15583;
      i__15572 = G__15584;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15569);
      if (temp__4126__auto__) {
        var seq__15569__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15569__$1)) {
          var c__4555__auto__ = cljs.core.chunk_first(seq__15569__$1);
          var G__15585 = cljs.core.chunk_rest(seq__15569__$1);
          var G__15586 = c__4555__auto__;
          var G__15587 = cljs.core.count(c__4555__auto__);
          var G__15588 = 0;
          seq__15569 = G__15585;
          chunk__15570 = G__15586;
          count__15571 = G__15587;
          i__15572 = G__15588;
          continue;
        } else {
          var vec__15576 = cljs.core.first(seq__15569__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15576, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15576, 1, null);
          var G__15577_15589 = v;
          var G__15578_15590 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15577_15589, G__15578_15590) : f.call(null, G__15577_15589, G__15578_15590);
          var G__15591 = cljs.core.next(seq__15569__$1);
          var G__15592 = null;
          var G__15593 = 0;
          var G__15594 = 0;
          seq__15569 = G__15591;
          chunk__15570 = G__15592;
          count__15571 = G__15593;
          i__15572 = G__15594;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__15567_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__15567_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__15595 = null;
  var G__15595__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15595__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15595 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15595__2.call(this, self__, k);
      case 3:
        return G__15595__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15595.cljs$core$IFn$_invoke$arity$2 = G__15595__2;
  G__15595.cljs$core$IFn$_invoke$arity$3 = G__15595__3;
  return G__15595;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args15568) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15568)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4649__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4649__auto__.length) {
        var G__15596 = i + 1;
        var G__15597 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__15596;
        res = G__15597;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__15598 = in$__$1.cljs$core$INext$_next$arity$1(null);
          var G__15599 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__15598;
          out = G__15599;
          continue;
        } else {
          return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__15600__delegate = function(keys) {
      return cljs.core.set(keys);
    };
    var G__15600 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        var G__15601__i = 0, G__15601__a = new Array(arguments.length - 0);
        while (G__15601__i < G__15601__a.length) {
          G__15601__a[G__15601__i] = arguments[G__15601__i + 0];
          ++G__15601__i;
        }
        keys = new cljs.core.IndexedSeq(G__15601__a, 0);
      }
      return G__15600__delegate.call(this, keys);
    };
    G__15600.cljs$lang$maxFixedArity = 0;
    G__15600.cljs$lang$applyTo = function(arglist__15602) {
      var keys = cljs.core.seq(arglist__15602);
      return G__15600__delegate(keys);
    };
    G__15600.cljs$core$IFn$_invoke$arity$variadic = G__15600__delegate;
    return G__15600;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        var G__15603 = null;
        if (arguments.length > 0) {
          var G__15604__i = 0, G__15604__a = new Array(arguments.length - 0);
          while (G__15604__i < G__15604__a.length) {
            G__15604__a[G__15604__i] = arguments[G__15604__i + 0];
            ++G__15604__i;
          }
          G__15603 = new cljs.core.IndexedSeq(G__15604__a, 0);
        }
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__15603);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      var G__15605__i = 0, G__15605__a = new Array(arguments.length - 0);
      while (G__15605__i < G__15605__a.length) {
        G__15605__a[G__15605__i] = arguments[G__15605__i + 0];
        ++G__15605__i;
      }
      keys = new cljs.core.IndexedSeq(G__15605__a, 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__15606) {
    var keys = cljs.core.seq(arglist__15606);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      var G__15607__i = 0, G__15607__a = new Array(arguments.length - 1);
      while (G__15607__i < G__15607__a.length) {
        G__15607__a[G__15607__i] = arguments[G__15607__i + 1];
        ++G__15607__i;
      }
      keys = new cljs.core.IndexedSeq(G__15607__a, 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__15608) {
    var comparator = cljs.core.first(arglist__15608);
    var keys = cljs.core.rest(arglist__15608);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__15609_SHARP_) {
      var temp__4124__auto__ = cljs.core.find(smap, p1__15609_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val(e);
      } else {
        return p1__15609_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_(coll)) {
      var n = cljs.core.count(coll);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
    } else {
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__15610_SHARP_) {
        var temp__4124__auto__ = cljs.core.find(smap, p1__15610_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second(e);
        } else {
          return p1__15610_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function() {
  var distinct = null;
  var distinct__0 = function() {
    return function(rf) {
      var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
      return function(seen) {
        return function() {
          var G__15631 = null;
          var G__15631__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15631__1 = function(result) {
            var G__15621 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15621) : rf.call(null, G__15621);
          };
          var G__15631__2 = function(result, input) {
            if (cljs.core.contains_QMARK_(function() {
              var G__15622 = seen;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15622) : cljs.core.deref.call(null, G__15622);
            }(), input)) {
              return result;
            } else {
              seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null), input));
              var G__15623 = result;
              var G__15624 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15623, G__15624) : rf.call(null, G__15623, G__15624);
            }
          };
          G__15631 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15631__0.call(this);
              case 1:
                return G__15631__1.call(this, result);
              case 2:
                return G__15631__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15631.cljs$core$IFn$_invoke$arity$0 = G__15631__0;
          G__15631.cljs$core$IFn$_invoke$arity$1 = G__15631__1;
          G__15631.cljs$core$IFn$_invoke$arity$2 = G__15631__2;
          return G__15631;
        }();
      }(seen);
    };
  };
  var distinct__1 = function(coll) {
    var step = function step(xs, seen) {
      return new cljs.core.LazySeq(null, function() {
        return function(p__15629, seen__$1) {
          while (true) {
            var vec__15630 = p__15629;
            var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15630, 0, null);
            var xs__$1 = vec__15630;
            var temp__4126__auto__ = cljs.core.seq(xs__$1);
            if (temp__4126__auto__) {
              var s = temp__4126__auto__;
              if (cljs.core.contains_QMARK_(seen__$1, f)) {
                var G__15632 = cljs.core.rest(s);
                var G__15633 = seen__$1;
                p__15629 = G__15632;
                seen__$1 = G__15633;
                continue;
              } else {
                return cljs.core.cons(f, step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
              }
            } else {
              return null;
            }
            break;
          }
        }.call(null, xs, seen);
      }, null, null);
    };
    return step(coll, cljs.core.PersistentHashSet.EMPTY);
  };
  distinct = function(coll) {
    switch(arguments.length) {
      case 0:
        return distinct__0.call(this);
      case 1:
        return distinct__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
  distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
  return distinct;
}();
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__15634 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__15635 = cljs.core.next(s__$1);
      ret = G__15634;
      s__$1 = G__15635;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__15637 = x;
    if (G__15637) {
      var bit__4442__auto__ = G__15637.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4442__auto__ || G__15637.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__15638 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__15639 = cljs.core.next(ks);
      var G__15640 = cljs.core.next(vs);
      map = G__15638;
      ks = G__15639;
      vs = G__15640;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (function() {
      var G__15651 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15651) : k.call(null, G__15651);
    }() > function() {
      var G__15652 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15652) : k.call(null, G__15652);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__15653__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__15641_SHARP_, p2__15642_SHARP_) {
        return max_key.cljs$core$IFn$_invoke$arity$3(k, p1__15641_SHARP_, p2__15642_SHARP_);
      }, max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__15653 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__15654__i = 0, G__15654__a = new Array(arguments.length - 3);
        while (G__15654__i < G__15654__a.length) {
          G__15654__a[G__15654__i] = arguments[G__15654__i + 3];
          ++G__15654__i;
        }
        more = new cljs.core.IndexedSeq(G__15654__a, 0);
      }
      return G__15653__delegate.call(this, k, x, y, more);
    };
    G__15653.cljs$lang$maxFixedArity = 3;
    G__15653.cljs$lang$applyTo = function(arglist__15655) {
      var k = cljs.core.first(arglist__15655);
      arglist__15655 = cljs.core.next(arglist__15655);
      var x = cljs.core.first(arglist__15655);
      arglist__15655 = cljs.core.next(arglist__15655);
      var y = cljs.core.first(arglist__15655);
      var more = cljs.core.rest(arglist__15655);
      return G__15653__delegate(k, x, y, more);
    };
    G__15653.cljs$core$IFn$_invoke$arity$variadic = G__15653__delegate;
    return G__15653;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        var G__15656 = null;
        if (arguments.length > 3) {
          var G__15657__i = 0, G__15657__a = new Array(arguments.length - 3);
          while (G__15657__i < G__15657__a.length) {
            G__15657__a[G__15657__i] = arguments[G__15657__i + 3];
            ++G__15657__i;
          }
          G__15656 = new cljs.core.IndexedSeq(G__15657__a, 0);
        }
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__15656);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (function() {
      var G__15668 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15668) : k.call(null, G__15668);
    }() < function() {
      var G__15669 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15669) : k.call(null, G__15669);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__15670__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__15658_SHARP_, p2__15659_SHARP_) {
        return min_key.cljs$core$IFn$_invoke$arity$3(k, p1__15658_SHARP_, p2__15659_SHARP_);
      }, min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__15670 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__15671__i = 0, G__15671__a = new Array(arguments.length - 3);
        while (G__15671__i < G__15671__a.length) {
          G__15671__a[G__15671__i] = arguments[G__15671__i + 3];
          ++G__15671__i;
        }
        more = new cljs.core.IndexedSeq(G__15671__a, 0);
      }
      return G__15670__delegate.call(this, k, x, y, more);
    };
    G__15670.cljs$lang$maxFixedArity = 3;
    G__15670.cljs$lang$applyTo = function(arglist__15672) {
      var k = cljs.core.first(arglist__15672);
      arglist__15672 = cljs.core.next(arglist__15672);
      var x = cljs.core.first(arglist__15672);
      arglist__15672 = cljs.core.next(arglist__15672);
      var y = cljs.core.first(arglist__15672);
      var more = cljs.core.rest(arglist__15672);
      return G__15670__delegate(k, x, y, more);
    };
    G__15670.cljs$core$IFn$_invoke$arity$variadic = G__15670__delegate;
    return G__15670;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        var G__15673 = null;
        if (arguments.length > 3) {
          var G__15674__i = 0, G__15674__a = new Array(arguments.length - 3);
          while (G__15674__i < G__15674__a.length) {
            G__15674__a[G__15674__i] = arguments[G__15674__i + 3];
            ++G__15674__i;
          }
          G__15673 = new cljs.core.IndexedSeq(G__15674__a, 0);
        }
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__15673);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(rf) {
      var a = cljs.core.array_list();
      return function(a) {
        return function() {
          var G__15691 = null;
          var G__15691__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15691__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__15686 = result;
                var G__15687 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15686, G__15687) : rf.call(null, G__15686, G__15687);
              }());
            }();
            var G__15688 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15688) : rf.call(null, G__15688);
          };
          var G__15691__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var G__15689 = result;
              var G__15690 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15689, G__15690) : rf.call(null, G__15689, G__15690);
            } else {
              return result;
            }
          };
          G__15691 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15691__0.call(this);
              case 1:
                return G__15691__1.call(this, result);
              case 2:
                return G__15691__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15691.cljs$core$IFn$_invoke$arity$0 = G__15691__0;
          G__15691.cljs$core$IFn$_invoke$arity$1 = G__15691__1;
          G__15691.cljs$core$IFn$_invoke$arity$2 = G__15691__2;
          return G__15691;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__15704 = null;
        var G__15704__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__15704__1 = function(result) {
          var G__15699 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15699) : rf.call(null, G__15699);
        };
        var G__15704__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__15700 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15700) : pred.call(null, G__15700);
          }())) {
            var G__15701 = result;
            var G__15702 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15701, G__15702) : rf.call(null, G__15701, G__15702);
          } else {
            return cljs.core.reduced(result);
          }
        };
        G__15704 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15704__0.call(this);
            case 1:
              return G__15704__1.call(this, result);
            case 2:
              return G__15704__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15704.cljs$core$IFn$_invoke$arity$0 = G__15704__0;
        G__15704.cljs$core$IFn$_invoke$arity$1 = G__15704__1;
        G__15704.cljs$core$IFn$_invoke$arity$2 = G__15704__2;
        return G__15704;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(function() {
          var G__15703 = cljs.core.first(s);
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15703) : pred.call(null, G__15703);
        }())) {
          return cljs.core.cons(cljs.core.first(s), take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__15709 = function() {
      var G__15711 = cljs.core._entry_key(sc, e);
      var G__15712 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15711, G__15712) : comp.call(null, G__15711, G__15712);
    }();
    var G__15710 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__15709, G__15710) : test.call(null, G__15709, G__15710);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__15716 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15716, 0, null);
        var s = vec__15716;
        if (cljs.core.truth_(function() {
          var G__15717 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__15717) : include.call(null, G__15717);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__15718 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15718, 0, null);
      var s = vec__15718;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__15722 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15722, 0, null);
        var s = vec__15722;
        if (cljs.core.truth_(function() {
          var G__15723 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__15723) : include.call(null, G__15723);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__15724 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15724, 0, null);
      var s = vec__15724;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function __GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__15725 = (self__.end - self__.start) / self__.step;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__15725) : Math.ceil.call(null, G__15725);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__15726 = ret;
        var G__15727 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15726, G__15727) : f.call(null, G__15726, G__15727);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__15728 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15728) : cljs.core.deref.call(null, G__15728);
      } else {
        var G__15729 = i + self__.step;
        var G__15730 = ret__$1;
        i = G__15729;
        ret = G__15730;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__15748 = null;
          var G__15748__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15748__1 = function(result) {
            var G__15745 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15745) : rf.call(null, G__15745);
          };
          var G__15748__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            if (cljs.core.rem(i, n) === 0) {
              var G__15746 = result;
              var G__15747 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15746, G__15747) : rf.call(null, G__15746, G__15747);
            } else {
              return result;
            }
          };
          G__15748 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15748__0.call(this);
              case 1:
                return G__15748__1.call(this, result);
              case 2:
                return G__15748__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15748.cljs$core$IFn$_invoke$arity$0 = G__15748__0;
          G__15748.cljs$core$IFn$_invoke$arity$1 = G__15748__1;
          G__15748.cljs$core$IFn$_invoke$arity$2 = G__15748__2;
          return G__15748;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.first(s), take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(rf) {
      var a = cljs.core.array_list();
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__15770 = null;
          var G__15770__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15770__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__15761 = result;
                var G__15762 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15761, G__15762) : rf.call(null, G__15761, G__15762);
              }());
            }();
            var G__15763 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15763) : rf.call(null, G__15763);
          };
          var G__15770__2 = function(result, input) {
            var pval = function() {
              var G__15764 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15764) : cljs.core.deref.call(null, G__15764);
            }();
            var val = function() {
              var G__15765 = input;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15765) : f.call(null, G__15765);
            }();
            cljs.core.vreset_BANG_(pa, val);
            if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var ret = function() {
                var G__15766 = result;
                var G__15767 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15766, G__15767) : rf.call(null, G__15766, G__15767);
              }();
              if (cljs.core.reduced_QMARK_(ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__15770 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15770__0.call(this);
              case 1:
                return G__15770__1.call(this, result);
              case 2:
                return G__15770__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15770.cljs$core$IFn$_invoke$arity$0 = G__15770__0;
          G__15770.cljs$core$IFn$_invoke$arity$1 = G__15770__1;
          G__15770.cljs$core$IFn$_invoke$arity$2 = G__15770__2;
          return G__15770;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first(s);
        var fv = function() {
          var G__15768 = fst;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15768) : f.call(null, G__15768);
        }();
        var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4126__auto__) {
          return function(p1__15749_SHARP_) {
            return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
              var G__15769 = p1__15749_SHARP_;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15769) : f.call(null, G__15769);
            }());
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next(s)));
        return cljs.core.cons(run, partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }());
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__15779 = init;
          var G__15780 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15779, G__15780) : f.call(null, G__15779, G__15780);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__15875 = null;
      var G__15875__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }()], null);
      };
      var G__15875__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15833 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15833) : f.call(null, G__15833);
        }()], null);
      };
      var G__15875__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15834 = x;
          var G__15835 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15834, G__15835) : f.call(null, G__15834, G__15835);
        }()], null);
      };
      var G__15875__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15836 = x;
          var G__15837 = y;
          var G__15838 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15836, G__15837, G__15838) : f.call(null, G__15836, G__15837, G__15838);
        }()], null);
      };
      var G__15875__4 = function() {
        var G__15876__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
        };
        var G__15876 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__15877__i = 0, G__15877__a = new Array(arguments.length - 3);
            while (G__15877__i < G__15877__a.length) {
              G__15877__a[G__15877__i] = arguments[G__15877__i + 3];
              ++G__15877__i;
            }
            args = new cljs.core.IndexedSeq(G__15877__a, 0);
          }
          return G__15876__delegate.call(this, x, y, z, args);
        };
        G__15876.cljs$lang$maxFixedArity = 3;
        G__15876.cljs$lang$applyTo = function(arglist__15878) {
          var x = cljs.core.first(arglist__15878);
          arglist__15878 = cljs.core.next(arglist__15878);
          var y = cljs.core.first(arglist__15878);
          arglist__15878 = cljs.core.next(arglist__15878);
          var z = cljs.core.first(arglist__15878);
          var args = cljs.core.rest(arglist__15878);
          return G__15876__delegate(x, y, z, args);
        };
        G__15876.cljs$core$IFn$_invoke$arity$variadic = G__15876__delegate;
        return G__15876;
      }();
      G__15875 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15875__0.call(this);
          case 1:
            return G__15875__1.call(this, x);
          case 2:
            return G__15875__2.call(this, x, y);
          case 3:
            return G__15875__3.call(this, x, y, z);
          default:
            var G__15879 = null;
            if (arguments.length > 3) {
              var G__15880__i = 0, G__15880__a = new Array(arguments.length - 3);
              while (G__15880__i < G__15880__a.length) {
                G__15880__a[G__15880__i] = arguments[G__15880__i + 3];
                ++G__15880__i;
              }
              G__15879 = new cljs.core.IndexedSeq(G__15880__a, 0);
            }
            return G__15875__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15879);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15875.cljs$lang$maxFixedArity = 3;
      G__15875.cljs$lang$applyTo = G__15875__4.cljs$lang$applyTo;
      G__15875.cljs$core$IFn$_invoke$arity$0 = G__15875__0;
      G__15875.cljs$core$IFn$_invoke$arity$1 = G__15875__1;
      G__15875.cljs$core$IFn$_invoke$arity$2 = G__15875__2;
      G__15875.cljs$core$IFn$_invoke$arity$3 = G__15875__3;
      G__15875.cljs$core$IFn$_invoke$arity$variadic = G__15875__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__15875;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__15881 = null;
      var G__15881__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }()], null);
      };
      var G__15881__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15839 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15839) : f.call(null, G__15839);
        }(), function() {
          var G__15840 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15840) : g.call(null, G__15840);
        }()], null);
      };
      var G__15881__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15841 = x;
          var G__15842 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15841, G__15842) : f.call(null, G__15841, G__15842);
        }(), function() {
          var G__15843 = x;
          var G__15844 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15843, G__15844) : g.call(null, G__15843, G__15844);
        }()], null);
      };
      var G__15881__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15845 = x;
          var G__15846 = y;
          var G__15847 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15845, G__15846, G__15847) : f.call(null, G__15845, G__15846, G__15847);
        }(), function() {
          var G__15848 = x;
          var G__15849 = y;
          var G__15850 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15848, G__15849, G__15850) : g.call(null, G__15848, G__15849, G__15850);
        }()], null);
      };
      var G__15881__4 = function() {
        var G__15882__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
        };
        var G__15882 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__15883__i = 0, G__15883__a = new Array(arguments.length - 3);
            while (G__15883__i < G__15883__a.length) {
              G__15883__a[G__15883__i] = arguments[G__15883__i + 3];
              ++G__15883__i;
            }
            args = new cljs.core.IndexedSeq(G__15883__a, 0);
          }
          return G__15882__delegate.call(this, x, y, z, args);
        };
        G__15882.cljs$lang$maxFixedArity = 3;
        G__15882.cljs$lang$applyTo = function(arglist__15884) {
          var x = cljs.core.first(arglist__15884);
          arglist__15884 = cljs.core.next(arglist__15884);
          var y = cljs.core.first(arglist__15884);
          arglist__15884 = cljs.core.next(arglist__15884);
          var z = cljs.core.first(arglist__15884);
          var args = cljs.core.rest(arglist__15884);
          return G__15882__delegate(x, y, z, args);
        };
        G__15882.cljs$core$IFn$_invoke$arity$variadic = G__15882__delegate;
        return G__15882;
      }();
      G__15881 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15881__0.call(this);
          case 1:
            return G__15881__1.call(this, x);
          case 2:
            return G__15881__2.call(this, x, y);
          case 3:
            return G__15881__3.call(this, x, y, z);
          default:
            var G__15885 = null;
            if (arguments.length > 3) {
              var G__15886__i = 0, G__15886__a = new Array(arguments.length - 3);
              while (G__15886__i < G__15886__a.length) {
                G__15886__a[G__15886__i] = arguments[G__15886__i + 3];
                ++G__15886__i;
              }
              G__15885 = new cljs.core.IndexedSeq(G__15886__a, 0);
            }
            return G__15881__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15885);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15881.cljs$lang$maxFixedArity = 3;
      G__15881.cljs$lang$applyTo = G__15881__4.cljs$lang$applyTo;
      G__15881.cljs$core$IFn$_invoke$arity$0 = G__15881__0;
      G__15881.cljs$core$IFn$_invoke$arity$1 = G__15881__1;
      G__15881.cljs$core$IFn$_invoke$arity$2 = G__15881__2;
      G__15881.cljs$core$IFn$_invoke$arity$3 = G__15881__3;
      G__15881.cljs$core$IFn$_invoke$arity$variadic = G__15881__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__15881;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__15887 = null;
      var G__15887__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }(), function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }()], null);
      };
      var G__15887__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15851 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15851) : f.call(null, G__15851);
        }(), function() {
          var G__15852 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15852) : g.call(null, G__15852);
        }(), function() {
          var G__15853 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__15853) : h.call(null, G__15853);
        }()], null);
      };
      var G__15887__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15854 = x;
          var G__15855 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15854, G__15855) : f.call(null, G__15854, G__15855);
        }(), function() {
          var G__15856 = x;
          var G__15857 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15856, G__15857) : g.call(null, G__15856, G__15857);
        }(), function() {
          var G__15858 = x;
          var G__15859 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__15858, G__15859) : h.call(null, G__15858, G__15859);
        }()], null);
      };
      var G__15887__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15860 = x;
          var G__15861 = y;
          var G__15862 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15860, G__15861, G__15862) : f.call(null, G__15860, G__15861, G__15862);
        }(), function() {
          var G__15863 = x;
          var G__15864 = y;
          var G__15865 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15863, G__15864, G__15865) : g.call(null, G__15863, G__15864, G__15865);
        }(), function() {
          var G__15866 = x;
          var G__15867 = y;
          var G__15868 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__15866, G__15867, G__15868) : h.call(null, G__15866, G__15867, G__15868);
        }()], null);
      };
      var G__15887__4 = function() {
        var G__15888__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
        };
        var G__15888 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__15889__i = 0, G__15889__a = new Array(arguments.length - 3);
            while (G__15889__i < G__15889__a.length) {
              G__15889__a[G__15889__i] = arguments[G__15889__i + 3];
              ++G__15889__i;
            }
            args = new cljs.core.IndexedSeq(G__15889__a, 0);
          }
          return G__15888__delegate.call(this, x, y, z, args);
        };
        G__15888.cljs$lang$maxFixedArity = 3;
        G__15888.cljs$lang$applyTo = function(arglist__15890) {
          var x = cljs.core.first(arglist__15890);
          arglist__15890 = cljs.core.next(arglist__15890);
          var y = cljs.core.first(arglist__15890);
          arglist__15890 = cljs.core.next(arglist__15890);
          var z = cljs.core.first(arglist__15890);
          var args = cljs.core.rest(arglist__15890);
          return G__15888__delegate(x, y, z, args);
        };
        G__15888.cljs$core$IFn$_invoke$arity$variadic = G__15888__delegate;
        return G__15888;
      }();
      G__15887 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15887__0.call(this);
          case 1:
            return G__15887__1.call(this, x);
          case 2:
            return G__15887__2.call(this, x, y);
          case 3:
            return G__15887__3.call(this, x, y, z);
          default:
            var G__15891 = null;
            if (arguments.length > 3) {
              var G__15892__i = 0, G__15892__a = new Array(arguments.length - 3);
              while (G__15892__i < G__15892__a.length) {
                G__15892__a[G__15892__i] = arguments[G__15892__i + 3];
                ++G__15892__i;
              }
              G__15891 = new cljs.core.IndexedSeq(G__15892__a, 0);
            }
            return G__15887__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15891);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15887.cljs$lang$maxFixedArity = 3;
      G__15887.cljs$lang$applyTo = G__15887__4.cljs$lang$applyTo;
      G__15887.cljs$core$IFn$_invoke$arity$0 = G__15887__0;
      G__15887.cljs$core$IFn$_invoke$arity$1 = G__15887__1;
      G__15887.cljs$core$IFn$_invoke$arity$2 = G__15887__2;
      G__15887.cljs$core$IFn$_invoke$arity$3 = G__15887__3;
      G__15887.cljs$core$IFn$_invoke$arity$variadic = G__15887__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__15887;
    }();
  };
  var juxt__4 = function() {
    var G__15893__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__15894 = null;
          var G__15894__0 = function() {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__15781_SHARP_, p2__15782_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15781_SHARP_, function() {
                  return p2__15782_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__15782_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__15782_SHARP_.call(null);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__15894__1 = function(x) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__15783_SHARP_, p2__15784_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15783_SHARP_, function() {
                  var G__15869 = x;
                  return p2__15784_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__15784_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15869) : p2__15784_SHARP_.call(null, G__15869);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__15894__2 = function(x, y) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__15785_SHARP_, p2__15786_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15785_SHARP_, function() {
                  var G__15870 = x;
                  var G__15871 = y;
                  return p2__15786_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__15786_SHARP_.cljs$core$IFn$_invoke$arity$2(G__15870, G__15871) : p2__15786_SHARP_.call(null, G__15870, G__15871);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__15894__3 = function(x, y, z) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__15787_SHARP_, p2__15788_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15787_SHARP_, function() {
                  var G__15872 = x;
                  var G__15873 = y;
                  var G__15874 = z;
                  return p2__15788_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__15788_SHARP_.cljs$core$IFn$_invoke$arity$3(G__15872, G__15873, G__15874) : p2__15788_SHARP_.call(null, G__15872, G__15873, G__15874);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__15894__4 = function() {
            var G__15895__delegate = function(x, y, z, args) {
              return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
                return function(p1__15789_SHARP_, p2__15790_SHARP_) {
                  return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15789_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__15790_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__15895 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__15896__i = 0, G__15896__a = new Array(arguments.length - 3);
                while (G__15896__i < G__15896__a.length) {
                  G__15896__a[G__15896__i] = arguments[G__15896__i + 3];
                  ++G__15896__i;
                }
                args = new cljs.core.IndexedSeq(G__15896__a, 0);
              }
              return G__15895__delegate.call(this, x, y, z, args);
            };
            G__15895.cljs$lang$maxFixedArity = 3;
            G__15895.cljs$lang$applyTo = function(arglist__15897) {
              var x = cljs.core.first(arglist__15897);
              arglist__15897 = cljs.core.next(arglist__15897);
              var y = cljs.core.first(arglist__15897);
              arglist__15897 = cljs.core.next(arglist__15897);
              var z = cljs.core.first(arglist__15897);
              var args = cljs.core.rest(arglist__15897);
              return G__15895__delegate(x, y, z, args);
            };
            G__15895.cljs$core$IFn$_invoke$arity$variadic = G__15895__delegate;
            return G__15895;
          }();
          G__15894 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__15894__0.call(this);
              case 1:
                return G__15894__1.call(this, x);
              case 2:
                return G__15894__2.call(this, x, y);
              case 3:
                return G__15894__3.call(this, x, y, z);
              default:
                var G__15898 = null;
                if (arguments.length > 3) {
                  var G__15899__i = 0, G__15899__a = new Array(arguments.length - 3);
                  while (G__15899__i < G__15899__a.length) {
                    G__15899__a[G__15899__i] = arguments[G__15899__i + 3];
                    ++G__15899__i;
                  }
                  G__15898 = new cljs.core.IndexedSeq(G__15899__a, 0);
                }
                return G__15894__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15898);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15894.cljs$lang$maxFixedArity = 3;
          G__15894.cljs$lang$applyTo = G__15894__4.cljs$lang$applyTo;
          G__15894.cljs$core$IFn$_invoke$arity$0 = G__15894__0;
          G__15894.cljs$core$IFn$_invoke$arity$1 = G__15894__1;
          G__15894.cljs$core$IFn$_invoke$arity$2 = G__15894__2;
          G__15894.cljs$core$IFn$_invoke$arity$3 = G__15894__3;
          G__15894.cljs$core$IFn$_invoke$arity$variadic = G__15894__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__15894;
        }();
      }(fs__$1);
    };
    var G__15893 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__15900__i = 0, G__15900__a = new Array(arguments.length - 3);
        while (G__15900__i < G__15900__a.length) {
          G__15900__a[G__15900__i] = arguments[G__15900__i + 3];
          ++G__15900__i;
        }
        fs = new cljs.core.IndexedSeq(G__15900__a, 0);
      }
      return G__15893__delegate.call(this, f, g, h, fs);
    };
    G__15893.cljs$lang$maxFixedArity = 3;
    G__15893.cljs$lang$applyTo = function(arglist__15901) {
      var f = cljs.core.first(arglist__15901);
      arglist__15901 = cljs.core.next(arglist__15901);
      var g = cljs.core.first(arglist__15901);
      arglist__15901 = cljs.core.next(arglist__15901);
      var h = cljs.core.first(arglist__15901);
      var fs = cljs.core.rest(arglist__15901);
      return G__15893__delegate(f, g, h, fs);
    };
    G__15893.cljs$core$IFn$_invoke$arity$variadic = G__15893__delegate;
    return G__15893;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        var G__15902 = null;
        if (arguments.length > 3) {
          var G__15903__i = 0, G__15903__a = new Array(arguments.length - 3);
          while (G__15903__i < G__15903__a.length) {
            G__15903__a[G__15903__i] = arguments[G__15903__i + 3];
            ++G__15903__i;
          }
          G__15902 = new cljs.core.IndexedSeq(G__15903__a, 0);
        }
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, G__15902);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq(coll)) {
        var G__15904 = cljs.core.next(coll);
        coll = G__15904;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq(coll) && n > 0) {
        var G__15905 = n - 1;
        var G__15906 = cljs.core.next(coll);
        n = G__15905;
        coll = G__15906;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__15910 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/, s);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15910, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15910, 1, null);
    var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15910, 2, null);
    return new RegExp(pattern, flags);
  }
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_15918 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if (cljs.core.seq(coll)) {
        var G__15919_15925 = cljs.core.first(coll);
        var G__15920_15926 = writer;
        var G__15921_15927 = opts;
        print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15919_15925, G__15920_15926, G__15921_15927) : print_one.call(null, G__15919_15925, G__15920_15926, G__15921_15927);
      } else {
      }
      var coll_15928__$1 = cljs.core.next(coll);
      var n_15929 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_15928__$1 && (n_15929 == null || !(n_15929 === 0))) {
          cljs.core._write(writer, sep);
          var G__15922_15930 = cljs.core.first(coll_15928__$1);
          var G__15923_15931 = writer;
          var G__15924_15932 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15922_15930, G__15923_15931, G__15924_15932) : print_one.call(null, G__15922_15930, G__15923_15931, G__15924_15932);
          var G__15933 = cljs.core.next(coll_15928__$1);
          var G__15934 = n_15929 - 1;
          coll_15928__$1 = G__15933;
          n_15929 = G__15934;
          continue;
        } else {
          if (cljs.core.seq(coll_15928__$1) && n_15929 === 0) {
            cljs.core._write(writer, sep);
            cljs.core._write(writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_15918;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__15939 = cljs.core.seq(ss);
    var chunk__15940 = null;
    var count__15941 = 0;
    var i__15942 = 0;
    while (true) {
      if (i__15942 < count__15941) {
        var s = chunk__15940.cljs$core$IIndexed$_nth$arity$2(null, i__15942);
        cljs.core._write(writer, s);
        var G__15943 = seq__15939;
        var G__15944 = chunk__15940;
        var G__15945 = count__15941;
        var G__15946 = i__15942 + 1;
        seq__15939 = G__15943;
        chunk__15940 = G__15944;
        count__15941 = G__15945;
        i__15942 = G__15946;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq(seq__15939);
        if (temp__4126__auto__) {
          var seq__15939__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__15939__$1)) {
            var c__4555__auto__ = cljs.core.chunk_first(seq__15939__$1);
            var G__15947 = cljs.core.chunk_rest(seq__15939__$1);
            var G__15948 = c__4555__auto__;
            var G__15949 = cljs.core.count(c__4555__auto__);
            var G__15950 = 0;
            seq__15939 = G__15947;
            chunk__15940 = G__15948;
            count__15941 = G__15949;
            i__15942 = G__15950;
            continue;
          } else {
            var s = cljs.core.first(seq__15939__$1);
            cljs.core._write(writer, s);
            var G__15951 = cljs.core.next(seq__15939__$1);
            var G__15952 = null;
            var G__15953 = 0;
            var G__15954 = 0;
            seq__15939 = G__15951;
            chunk__15940 = G__15952;
            count__15941 = G__15953;
            i__15942 = G__15954;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      var G__15955__i = 0, G__15955__a = new Array(arguments.length - 1);
      while (G__15955__i < G__15955__a.length) {
        G__15955__a[G__15955__i] = arguments[G__15955__i + 1];
        ++G__15955__i;
      }
      ss = new cljs.core.IndexedSeq(G__15955__a, 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__15956) {
    var writer = cljs.core.first(arglist__15956);
    var ss = cljs.core.rest(arglist__15956);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj15958 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj15958;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__15961 = '[\\\\"\b\f\n\r\t]';
    var G__15962 = "g";
    return RegExp(G__15961, G__15962);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3756__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3756__auto__)) {
          var and__3756__auto____$1 = function() {
            var G__15976 = obj;
            if (G__15976) {
              var bit__4449__auto__ = G__15976.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4449__auto__ || G__15976.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__15976.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__15976);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__15976);
            }
          }();
          if (and__3756__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__3756__auto____$1;
          }
        } else {
          return and__3756__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        pr_writer(cljs.core.meta(obj), writer, opts);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__15977 = obj;
            if (G__15977) {
              var bit__4442__auto__ = G__15977.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4442__auto__ || G__15977.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__15978 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__15979 = pr_writer;
                var G__15980 = writer;
                var G__15981 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__15978, G__15979, G__15980, G__15981) : cljs.core.print_map.call(null, G__15978, G__15979, G__15980, G__15981);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer(writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__15982 = obj;
                    return goog.isString(G__15982);
                  }())) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__15984 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__15984;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.regexp_QMARK_(obj)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__15983 = obj;
                            if (G__15983) {
                              var bit__4449__auto__ = G__15983.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4449__auto__ || G__15983.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__15983.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__15983);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__15983);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__15989 = cljs.core.seq(cljs.core.next(objs));
  var chunk__15990 = null;
  var count__15991 = 0;
  var i__15992 = 0;
  while (true) {
    if (i__15992 < count__15991) {
      var obj = chunk__15990.cljs$core$IIndexed$_nth$arity$2(null, i__15992);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__15993 = seq__15989;
      var G__15994 = chunk__15990;
      var G__15995 = count__15991;
      var G__15996 = i__15992 + 1;
      seq__15989 = G__15993;
      chunk__15990 = G__15994;
      count__15991 = G__15995;
      i__15992 = G__15996;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15989);
      if (temp__4126__auto__) {
        var seq__15989__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15989__$1)) {
          var c__4555__auto__ = cljs.core.chunk_first(seq__15989__$1);
          var G__15997 = cljs.core.chunk_rest(seq__15989__$1);
          var G__15998 = c__4555__auto__;
          var G__15999 = cljs.core.count(c__4555__auto__);
          var G__16000 = 0;
          seq__15989 = G__15997;
          chunk__15990 = G__15998;
          count__15991 = G__15999;
          i__15992 = G__16000;
          continue;
        } else {
          var obj = cljs.core.first(seq__15989__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__16001 = cljs.core.next(seq__15989__$1);
          var G__16002 = null;
          var G__16003 = 0;
          var G__16004 = 0;
          seq__15989 = G__16001;
          chunk__15990 = G__16002;
          count__15991 = G__16003;
          i__15992 = G__16004;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16005__i = 0, G__16005__a = new Array(arguments.length - 0);
      while (G__16005__i < G__16005__a.length) {
        G__16005__a[G__16005__i] = arguments[G__16005__i + 0];
        ++G__16005__i;
      }
      objs = new cljs.core.IndexedSeq(G__16005__a, 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__16006) {
    var objs = cljs.core.seq(arglist__16006);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16007__i = 0, G__16007__a = new Array(arguments.length - 0);
      while (G__16007__i < G__16007__a.length) {
        G__16007__a[G__16007__i] = arguments[G__16007__i + 0];
        ++G__16007__i;
      }
      objs = new cljs.core.IndexedSeq(G__16007__a, 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__16008) {
    var objs = cljs.core.seq(arglist__16008);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16009__i = 0, G__16009__a = new Array(arguments.length - 0);
      while (G__16009__i < G__16009__a.length) {
        G__16009__a[G__16009__i] = arguments[G__16009__i + 0];
        ++G__16009__i;
      }
      objs = new cljs.core.IndexedSeq(G__16009__a, 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__16010) {
    var objs = cljs.core.seq(arglist__16010);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16011__i = 0, G__16011__a = new Array(arguments.length - 0);
      while (G__16011__i < G__16011__a.length) {
        G__16011__a[G__16011__i] = arguments[G__16011__i + 0];
        ++G__16011__i;
      }
      objs = new cljs.core.IndexedSeq(G__16011__a, 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__16012) {
    var objs = cljs.core.seq(arglist__16012);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16013__i = 0, G__16013__a = new Array(arguments.length - 0);
      while (G__16013__i < G__16013__a.length) {
        G__16013__a[G__16013__i] = arguments[G__16013__i + 0];
        ++G__16013__i;
      }
      objs = new cljs.core.IndexedSeq(G__16013__a, 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__16014) {
    var objs = cljs.core.seq(arglist__16014);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16015__i = 0, G__16015__a = new Array(arguments.length - 0);
      while (G__16015__i < G__16015__a.length) {
        G__16015__a[G__16015__i] = arguments[G__16015__i + 0];
        ++G__16015__i;
      }
      objs = new cljs.core.IndexedSeq(G__16015__a, 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__16016) {
    var objs = cljs.core.seq(arglist__16016);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16017__i = 0, G__16017__a = new Array(arguments.length - 0);
      while (G__16017__i < G__16017__a.length) {
        G__16017__a[G__16017__i] = arguments[G__16017__i + 0];
        ++G__16017__i;
      }
      objs = new cljs.core.IndexedSeq(G__16017__a, 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__16018) {
    var objs = cljs.core.seq(arglist__16018);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16019__i = 0, G__16019__a = new Array(arguments.length - 0);
      while (G__16019__i < G__16019__a.length) {
        G__16019__a[G__16019__i] = arguments[G__16019__i + 0];
        ++G__16019__i;
      }
      objs = new cljs.core.IndexedSeq(G__16019__a, 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__16020) {
    var objs = cljs.core.seq(arglist__16020);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__16027_16033 = cljs.core.key(e);
    var G__16028_16034 = w;
    var G__16029_16035 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16027_16033, G__16028_16034, G__16029_16035) : print_one.call(null, G__16027_16033, G__16028_16034, G__16029_16035);
    cljs.core._write(w, " ");
    var G__16030 = cljs.core.val(e);
    var G__16031 = w;
    var G__16032 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16030, G__16031, G__16032) : print_one.call(null, G__16030, G__16031, G__16032);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords(x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__16036__i = 0, G__16036__a = new Array(arguments.length - 2);
      while (G__16036__i < G__16036__a.length) {
        G__16036__a[G__16036__i] = arguments[G__16036__i + 2];
        ++G__16036__i;
      }
      args = new cljs.core.IndexedSeq(G__16036__a, 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__16037) {
    var iref = cljs.core.first(arglist__16037);
    arglist__16037 = cljs.core.next(arglist__16037);
    var f = cljs.core.first(arglist__16037);
    var args = cljs.core.rest(arglist__16037);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.cljs$core$IFn$_invoke$arity$1("G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = function() {
        var G__16040 = 0;
        return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16040) : cljs.core.atom.call(null, G__16040);
      }();
    } else {
    }
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__16042 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16042) : cljs.core.deref.call(null, G__16042);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function preserving_reduced(rf) {
  return function(p1__16043_SHARP_, p2__16044_SHARP_) {
    var ret = function() {
      var G__16047 = p1__16043_SHARP_;
      var G__16048 = p2__16044_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16047, G__16048) : rf.call(null, G__16047, G__16048);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__16051 = null;
      var G__16051__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__16051__1 = function(result) {
        var G__16050 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16050) : rf.call(null, G__16050);
      };
      var G__16051__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__16051 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__16051__0.call(this);
          case 1:
            return G__16051__1.call(this, result);
          case 2:
            return G__16051__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16051.cljs$core$IFn$_invoke$arity$0 = G__16051__0;
      G__16051.cljs$core$IFn$_invoke$arity$1 = G__16051__1;
      G__16051.cljs$core$IFn$_invoke$arity$2 = G__16051__2;
      return G__16051;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(rf) {
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__16060 = null;
          var G__16060__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__16060__1 = function(result) {
            var G__16056 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16056) : rf.call(null, G__16056);
          };
          var G__16060__2 = function(result, input) {
            var prior = function() {
              var G__16057 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16057) : cljs.core.deref.call(null, G__16057);
            }();
            cljs.core.vreset_BANG_(pa, input);
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
              return result;
            } else {
              var G__16058 = result;
              var G__16059 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16058, G__16059) : rf.call(null, G__16058, G__16059);
            }
          };
          G__16060 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__16060__0.call(this);
              case 1:
                return G__16060__1.call(this, result);
              case 2:
                return G__16060__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__16060.cljs$core$IFn$_invoke$arity$0 = G__16060__0;
          G__16060.cljs$core$IFn$_invoke$arity$1 = G__16060__1;
          G__16060.cljs$core$IFn$_invoke$arity$2 = G__16060__2;
          return G__16060;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function __GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.eduction = function eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__16062_SHARP_, p2__16061_SHARP_) {
    var G__16064 = p2__16061_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__16064) : proc.call(null, G__16064);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj16066 = {};
  return obj16066;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3756__auto__ = x;
    if (and__3756__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4412__auto__ = x == null ? null : x;
    return function() {
      var or__3768__auto__ = cljs.core._clj__GT_js[function() {
        var G__16070 = x__4412__auto__;
        return goog.typeOf(G__16070);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3756__auto__ = x;
    if (and__3756__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4412__auto__ = x == null ? null : x;
    return function() {
      var or__3768__auto__ = cljs.core._key__GT_js[function() {
        var G__16074 = x__4412__auto__;
        return goog.typeOf(G__16074);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__16077 = k;
    if (G__16077) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__16077.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__16077.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__16077);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__16077);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__16078 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__16078) : cljs.core.clj__GT_js.call(null, G__16078);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__16094 = x;
      if (G__16094) {
        var bit__4449__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3768__auto__ = bit__4449__auto__;
          if (cljs.core.truth_(or__3768__auto__)) {
            return or__3768__auto__;
          } else {
            return G__16094.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__16094.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__16094);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__16094);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj16096 = {};
              return obj16096;
            }();
            var seq__16097_16107 = cljs.core.seq(x);
            var chunk__16098_16108 = null;
            var count__16099_16109 = 0;
            var i__16100_16110 = 0;
            while (true) {
              if (i__16100_16110 < count__16099_16109) {
                var vec__16101_16111 = chunk__16098_16108.cljs$core$IIndexed$_nth$arity$2(null, i__16100_16110);
                var k_16112 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16101_16111, 0, null);
                var v_16113 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16101_16111, 1, null);
                m[cljs.core.key__GT_js(k_16112)] = clj__GT_js(v_16113);
                var G__16114 = seq__16097_16107;
                var G__16115 = chunk__16098_16108;
                var G__16116 = count__16099_16109;
                var G__16117 = i__16100_16110 + 1;
                seq__16097_16107 = G__16114;
                chunk__16098_16108 = G__16115;
                count__16099_16109 = G__16116;
                i__16100_16110 = G__16117;
                continue;
              } else {
                var temp__4126__auto___16118 = cljs.core.seq(seq__16097_16107);
                if (temp__4126__auto___16118) {
                  var seq__16097_16119__$1 = temp__4126__auto___16118;
                  if (cljs.core.chunked_seq_QMARK_(seq__16097_16119__$1)) {
                    var c__4555__auto___16120 = cljs.core.chunk_first(seq__16097_16119__$1);
                    var G__16121 = cljs.core.chunk_rest(seq__16097_16119__$1);
                    var G__16122 = c__4555__auto___16120;
                    var G__16123 = cljs.core.count(c__4555__auto___16120);
                    var G__16124 = 0;
                    seq__16097_16107 = G__16121;
                    chunk__16098_16108 = G__16122;
                    count__16099_16109 = G__16123;
                    i__16100_16110 = G__16124;
                    continue;
                  } else {
                    var vec__16102_16125 = cljs.core.first(seq__16097_16119__$1);
                    var k_16126 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16102_16125, 0, null);
                    var v_16127 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16102_16125, 1, null);
                    m[cljs.core.key__GT_js(k_16126)] = clj__GT_js(v_16127);
                    var G__16128 = cljs.core.next(seq__16097_16119__$1);
                    var G__16129 = null;
                    var G__16130 = 0;
                    var G__16131 = 0;
                    seq__16097_16107 = G__16128;
                    chunk__16098_16108 = G__16129;
                    count__16099_16109 = G__16130;
                    i__16100_16110 = G__16131;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__16103_16132 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js, x));
              var chunk__16104_16133 = null;
              var count__16105_16134 = 0;
              var i__16106_16135 = 0;
              while (true) {
                if (i__16106_16135 < count__16105_16134) {
                  var x_16136__$1 = chunk__16104_16133.cljs$core$IIndexed$_nth$arity$2(null, i__16106_16135);
                  arr.push(x_16136__$1);
                  var G__16137 = seq__16103_16132;
                  var G__16138 = chunk__16104_16133;
                  var G__16139 = count__16105_16134;
                  var G__16140 = i__16106_16135 + 1;
                  seq__16103_16132 = G__16137;
                  chunk__16104_16133 = G__16138;
                  count__16105_16134 = G__16139;
                  i__16106_16135 = G__16140;
                  continue;
                } else {
                  var temp__4126__auto___16141 = cljs.core.seq(seq__16103_16132);
                  if (temp__4126__auto___16141) {
                    var seq__16103_16142__$1 = temp__4126__auto___16141;
                    if (cljs.core.chunked_seq_QMARK_(seq__16103_16142__$1)) {
                      var c__4555__auto___16143 = cljs.core.chunk_first(seq__16103_16142__$1);
                      var G__16144 = cljs.core.chunk_rest(seq__16103_16142__$1);
                      var G__16145 = c__4555__auto___16143;
                      var G__16146 = cljs.core.count(c__4555__auto___16143);
                      var G__16147 = 0;
                      seq__16103_16132 = G__16144;
                      chunk__16104_16133 = G__16145;
                      count__16105_16134 = G__16146;
                      i__16106_16135 = G__16147;
                      continue;
                    } else {
                      var x_16148__$1 = cljs.core.first(seq__16103_16142__$1);
                      arr.push(x_16148__$1);
                      var G__16149 = cljs.core.next(seq__16103_16142__$1);
                      var G__16150 = null;
                      var G__16151 = 0;
                      var G__16152 = 0;
                      seq__16103_16132 = G__16149;
                      chunk__16104_16133 = G__16150;
                      count__16105_16134 = G__16151;
                      i__16106_16135 = G__16152;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj16154 = {};
  return obj16154;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3756__auto__ = x;
    if (and__3756__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4412__auto__ = x == null ? null : x;
    return function() {
      var or__3768__auto__ = cljs.core._js__GT_clj[function() {
        var G__16158 = x__4412__auto__;
        return goog.typeOf(G__16158);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
  };
  var js__GT_clj__2 = function() {
    var G__16215__delegate = function(x, opts) {
      var map__16188 = opts;
      var map__16188__$1 = cljs.core.seq_QMARK_(map__16188) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__16188) : map__16188;
      var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__16188__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
      var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
      var f = function(map__16188, map__16188__$1, keywordize_keys, keyfn) {
        return function thisfn(x__$1) {
          if (function() {
            var G__16204 = x__$1;
            if (G__16204) {
              var bit__4449__auto__ = null;
              if (cljs.core.truth_(function() {
                var or__3768__auto__ = bit__4449__auto__;
                if (cljs.core.truth_(or__3768__auto__)) {
                  return or__3768__auto__;
                } else {
                  return G__16204.cljs$core$IEncodeClojure$;
                }
              }())) {
                return true;
              } else {
                if (!G__16204.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__16204);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__16204);
            }
          }()) {
            return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
          } else {
            if (cljs.core.seq_QMARK_(x__$1)) {
              return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
            } else {
              if (cljs.core.coll_QMARK_(x__$1)) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
              } else {
                if (x__$1 instanceof Array) {
                  return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
                } else {
                  if (cljs.core.type(x__$1) === Object) {
                    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                      var iter__4524__auto__ = function(map__16188, map__16188__$1, keywordize_keys, keyfn) {
                        return function iter__16205(s__16206) {
                          return new cljs.core.LazySeq(null, function(map__16188, map__16188__$1, keywordize_keys, keyfn) {
                            return function() {
                              var s__16206__$1 = s__16206;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq(s__16206__$1);
                                if (temp__4126__auto__) {
                                  var s__16206__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_(s__16206__$2)) {
                                    var c__4522__auto__ = cljs.core.chunk_first(s__16206__$2);
                                    var size__4523__auto__ = cljs.core.count(c__4522__auto__);
                                    var b__16208 = cljs.core.chunk_buffer(size__4523__auto__);
                                    if (function() {
                                      var i__16207 = 0;
                                      while (true) {
                                        if (i__16207 < size__4523__auto__) {
                                          var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4522__auto__, i__16207);
                                          cljs.core.chunk_append(b__16208, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                            var G__16213 = k;
                                            return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__16213) : keyfn.call(null, G__16213);
                                          }(), thisfn(x__$1[k])], null));
                                          var G__16216 = i__16207 + 1;
                                          i__16207 = G__16216;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__16208), iter__16205(cljs.core.chunk_rest(s__16206__$2)));
                                    } else {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__16208), null);
                                    }
                                  } else {
                                    var k = cljs.core.first(s__16206__$2);
                                    return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                      var G__16214 = k;
                                      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__16214) : keyfn.call(null, G__16214);
                                    }(), thisfn(x__$1[k])], null), iter__16205(cljs.core.rest(s__16206__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(map__16188, map__16188__$1, keywordize_keys, keyfn), null, null);
                        };
                      }(map__16188, map__16188__$1, keywordize_keys, keyfn);
                      return iter__4524__auto__(cljs.core.js_keys(x__$1));
                    }());
                  } else {
                    return x__$1;
                  }
                }
              }
            }
          }
        };
      }(map__16188, map__16188__$1, keywordize_keys, keyfn);
      return f(x);
    };
    var G__16215 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        var G__16217__i = 0, G__16217__a = new Array(arguments.length - 1);
        while (G__16217__i < G__16217__a.length) {
          G__16217__a[G__16217__i] = arguments[G__16217__i + 1];
          ++G__16217__i;
        }
        opts = new cljs.core.IndexedSeq(G__16217__a, 0);
      }
      return G__16215__delegate.call(this, x, opts);
    };
    G__16215.cljs$lang$maxFixedArity = 1;
    G__16215.cljs$lang$applyTo = function(arglist__16218) {
      var x = cljs.core.first(arglist__16218);
      var opts = cljs.core.rest(arglist__16218);
      return G__16215__delegate(x, opts);
    };
    G__16215.cljs$core$IFn$_invoke$arity$variadic = G__16215__delegate;
    return G__16215;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        var G__16219 = null;
        if (arguments.length > 1) {
          var G__16220__i = 0, G__16220__a = new Array(arguments.length - 1);
          while (G__16220__i < G__16220__a.length) {
            G__16220__a[G__16220__i] = arguments[G__16220__i + 1];
            ++G__16220__i;
          }
          G__16219 = new cljs.core.IndexedSeq(G__16220__a, 0);
        }
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__16219);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = function() {
    var G__16223 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16223) : cljs.core.atom.call(null, G__16223);
  }();
  return function(mem) {
    return function() {
      var G__16225__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__16224 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16224) : cljs.core.deref.call(null, G__16224);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__16225 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__16226__i = 0, G__16226__a = new Array(arguments.length - 0);
          while (G__16226__i < G__16226__a.length) {
            G__16226__a[G__16226__i] = arguments[G__16226__i + 0];
            ++G__16226__i;
          }
          args = new cljs.core.IndexedSeq(G__16226__a, 0);
        }
        return G__16225__delegate.call(this, args);
      };
      G__16225.cljs$lang$maxFixedArity = 0;
      G__16225.cljs$lang$applyTo = function(arglist__16227) {
        var args = cljs.core.seq(arglist__16227);
        return G__16225__delegate(args);
      };
      G__16225.cljs$core$IFn$_invoke$arity$variadic = G__16225__delegate;
      return G__16225;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }();
      if (cljs.core.fn_QMARK_(ret)) {
        var G__16229 = ret;
        f = G__16229;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__16230__delegate = function(f, args) {
      return trampoline.cljs$core$IFn$_invoke$arity$1(function() {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
      });
    };
    var G__16230 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        var G__16231__i = 0, G__16231__a = new Array(arguments.length - 1);
        while (G__16231__i < G__16231__a.length) {
          G__16231__a[G__16231__i] = arguments[G__16231__i + 1];
          ++G__16231__i;
        }
        args = new cljs.core.IndexedSeq(G__16231__a, 0);
      }
      return G__16230__delegate.call(this, f, args);
    };
    G__16230.cljs$lang$maxFixedArity = 1;
    G__16230.cljs$lang$applyTo = function(arglist__16232) {
      var f = cljs.core.first(arglist__16232);
      var args = cljs.core.rest(arglist__16232);
      return G__16230__delegate(f, args);
    };
    G__16230.cljs$core$IFn$_invoke$arity$variadic = G__16230__delegate;
    return G__16230;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        var G__16233 = null;
        if (arguments.length > 1) {
          var G__16234__i = 0, G__16234__a = new Array(arguments.length - 1);
          while (G__16234__i < G__16234__a.length) {
            G__16234__a[G__16234__i] = arguments[G__16234__i + 1];
            ++G__16234__i;
          }
          G__16233 = new cljs.core.IndexedSeq(G__16234__a, 0);
        }
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__16233);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.cljs$core$IFn$_invoke$arity$1(1);
  };
  var rand__1 = function(n) {
    return function() {
      return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
    }() * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  var G__16237 = function() {
    return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
  }() * n;
  return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__16237) : Math.floor.call(null, G__16237);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__16239 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16239) : f.call(null, G__16239);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__16241 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16241) : cljs.core.atom.call(null, G__16241);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__16242__i = 0, G__16242__a = new Array(arguments.length - 1);
      while (G__16242__i < G__16242__a.length) {
        G__16242__a[G__16242__i] = arguments[G__16242__i + 1];
        ++G__16242__i;
      }
      args = new cljs.core.IndexedSeq(G__16242__a, 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__16243) {
    var f = cljs.core.first(arglist__16243);
    var args = cljs.core.rest(arglist__16243);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__16308 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16308) : cljs.core.deref.call(null, G__16308);
    }(), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3768__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
    if (or__3768__auto__) {
      return or__3768__auto__;
    } else {
      var or__3768__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3768__auto____$1) {
        return or__3768__auto____$1;
      } else {
        var and__3756__auto__ = cljs.core.vector_QMARK_(parent);
        if (and__3756__auto__) {
          var and__3756__auto____$1 = cljs.core.vector_QMARK_(child);
          if (and__3756__auto____$1) {
            var and__3756__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
            if (and__3756__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count(parent)) {
                  return ret;
                } else {
                  var G__16333 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                    var G__16331 = i;
                    return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__16331) : child.call(null, G__16331);
                  }(), function() {
                    var G__16332 = i;
                    return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__16332) : parent.call(null, G__16332);
                  }());
                  var G__16334 = i + 1;
                  ret = G__16333;
                  i = G__16334;
                  continue;
                }
                break;
              }
            } else {
              return and__3756__auto____$2;
            }
          } else {
            return and__3756__auto____$1;
          }
        } else {
          return and__3756__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16338 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16338) : cljs.core.deref.call(null, G__16338);
    }(), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16342 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16342) : cljs.core.deref.call(null, G__16342);
    }(), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16346 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16346) : cljs.core.deref.call(null, G__16346);
    }(), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace(parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
              var G__16355 = target;
              return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__16355) : targets.call(null, G__16355);
            }())));
          };
        }(tp, td, ta), m, cljs.core.cons(source, function() {
          var G__16356 = source;
          return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__16356) : sources.call(null, G__16356);
        }()));
      };
    }(tp, td, ta);
    var or__3768__auto__ = cljs.core.contains_QMARK_(function() {
      var G__16360 = tag;
      return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__16360) : tp.call(null, G__16360);
    }(), parent) ? null : function() {
      if (cljs.core.contains_QMARK_(function() {
        var G__16361 = tag;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__16361) : ta.call(null, G__16361);
      }(), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_(function() {
        var G__16362 = parent;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__16362) : ta.call(null, G__16362);
      }(), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
      "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3768__auto__)) {
      return or__3768__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(function() {
      var G__16369 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16369) : parentMap.call(null, G__16369);
    }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16370 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16370) : parentMap.call(null, G__16370);
    }(), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
    var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
      return function(p1__16363_SHARP_) {
        return cljs.core.cons(cljs.core.first(p1__16363_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__16363_SHARP_), cljs.core.second(p1__16363_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
    if (cljs.core.contains_QMARK_(function() {
      var G__16371 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16371) : parentMap.call(null, G__16371);
    }(), parent)) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__16364_SHARP_, p2__16365_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__16364_SHARP_, p2__16365_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__16374 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16374) : cljs.core.deref.call(null, G__16374);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__16375 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16375) : cljs.core.deref.call(null, G__16375);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__16391 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16391) : cljs.core.deref.call(null, G__16391);
  }().call(null, x);
  var or__3768__auto__ = cljs.core.truth_(function() {
    var and__3756__auto__ = xprefs;
    if (cljs.core.truth_(and__3756__auto__)) {
      var G__16393 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__16393) : xprefs.call(null, G__16393);
    } else {
      return and__3756__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3768__auto__)) {
    return or__3768__auto__;
  } else {
    var or__3768__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__16394 = cljs.core.rest(ps);
          ps = G__16394;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3768__auto____$1)) {
      return or__3768__auto____$1;
    } else {
      var or__3768__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__16395 = cljs.core.rest(ps);
            ps = G__16395;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3768__auto____$2)) {
        return or__3768__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3768__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__3768__auto__)) {
    return or__3768__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__16409) {
    var vec__16410 = p__16409;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16410, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16410, 1, null);
    var e = vec__16410;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__16411 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16411) : cljs.core.deref.call(null, G__16411);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3768__auto__ = be == null;
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__16412 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16412) : cljs.core.deref.call(null, G__16412);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16413 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16413) : cljs.core.deref.call(null, G__16413);
    }(), function() {
      var G__16414 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16414) : cljs.core.deref.call(null, G__16414);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj16416 = {};
  return obj16416;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3756__auto__ = mf;
    if (and__3756__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4412__auto__ = mf == null ? null : mf;
    return function() {
      var or__3768__auto__ = cljs.core._reset[function() {
        var G__16420 = x__4412__auto__;
        return goog.typeOf(G__16420);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._reset["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3756__auto__ = mf;
    if (and__3756__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4412__auto__ = mf == null ? null : mf;
    return function() {
      var or__3768__auto__ = cljs.core._add_method[function() {
        var G__16424 = x__4412__auto__;
        return goog.typeOf(G__16424);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._add_method["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3756__auto__ = mf;
    if (and__3756__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4412__auto__ = mf == null ? null : mf;
    return function() {
      var or__3768__auto__ = cljs.core._remove_method[function() {
        var G__16428 = x__4412__auto__;
        return goog.typeOf(G__16428);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._remove_method["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3756__auto__ = mf;
    if (and__3756__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4412__auto__ = mf == null ? null : mf;
    return function() {
      var or__3768__auto__ = cljs.core._prefer_method[function() {
        var G__16432 = x__4412__auto__;
        return goog.typeOf(G__16432);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3756__auto__ = mf;
    if (and__3756__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4412__auto__ = mf == null ? null : mf;
    return function() {
      var or__3768__auto__ = cljs.core._get_method[function() {
        var G__16436 = x__4412__auto__;
        return goog.typeOf(G__16436);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._get_method["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3756__auto__ = mf;
    if (and__3756__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4412__auto__ = mf == null ? null : mf;
    return function() {
      var or__3768__auto__ = cljs.core._methods[function() {
        var G__16440 = x__4412__auto__;
        return goog.typeOf(G__16440);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._methods["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3756__auto__ = mf;
    if (and__3756__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4412__auto__ = mf == null ? null : mf;
    return function() {
      var or__3768__auto__ = cljs.core._prefers[function() {
        var G__16444 = x__4412__auto__;
        return goog.typeOf(G__16444);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._prefers["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__16446 = this$__$1;
  return goog.getUid(G__16446);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__16447 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16447) : cljs.core.deref.call(null, G__16447);
  }(), function() {
    var G__16448 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16448) : cljs.core.deref.call(null, G__16448);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = function() {
    var G__16449 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16449) : cljs.core.deref.call(null, G__16449);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__16450 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16450) : cljs.core.deref.call(null, G__16450);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__16451 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16451) : cljs.core.deref.call(null, G__16451);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__16452 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16452) : cljs.core.deref.call(null, G__16452);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__17293 = null;
  var G__17293__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__17293__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16453 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__16453) : self__.dispatch_fn.call(null, G__16453);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16454 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__16454) : target_fn.call(null, G__16454);
  };
  var G__17293__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16455 = a;
      var G__16456 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__16455, G__16456) : self__.dispatch_fn.call(null, G__16455, G__16456);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16457 = a;
    var G__16458 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__16457, G__16458) : target_fn.call(null, G__16457, G__16458);
  };
  var G__17293__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16459 = a;
      var G__16460 = b;
      var G__16461 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__16459, G__16460, G__16461) : self__.dispatch_fn.call(null, G__16459, G__16460, G__16461);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16462 = a;
    var G__16463 = b;
    var G__16464 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__16462, G__16463, G__16464) : target_fn.call(null, G__16462, G__16463, G__16464);
  };
  var G__17293__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16465 = a;
      var G__16466 = b;
      var G__16467 = c;
      var G__16468 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__16465, G__16466, G__16467, G__16468) : self__.dispatch_fn.call(null, G__16465, G__16466, G__16467, G__16468);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16469 = a;
    var G__16470 = b;
    var G__16471 = c;
    var G__16472 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__16469, G__16470, G__16471, G__16472) : target_fn.call(null, G__16469, G__16470, G__16471, G__16472);
  };
  var G__17293__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16473 = a;
      var G__16474 = b;
      var G__16475 = c;
      var G__16476 = d;
      var G__16477 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__16473, G__16474, G__16475, G__16476, G__16477) : self__.dispatch_fn.call(null, G__16473, G__16474, G__16475, G__16476, G__16477);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16478 = a;
    var G__16479 = b;
    var G__16480 = c;
    var G__16481 = d;
    var G__16482 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__16478, G__16479, G__16480, G__16481, G__16482) : target_fn.call(null, G__16478, G__16479, G__16480, G__16481, G__16482);
  };
  var G__17293__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16483 = a;
      var G__16484 = b;
      var G__16485 = c;
      var G__16486 = d;
      var G__16487 = e;
      var G__16488 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__16483, G__16484, G__16485, G__16486, G__16487, G__16488) : self__.dispatch_fn.call(null, G__16483, G__16484, G__16485, G__16486, G__16487, G__16488);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16489 = a;
    var G__16490 = b;
    var G__16491 = c;
    var G__16492 = d;
    var G__16493 = e;
    var G__16494 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__16489, G__16490, G__16491, G__16492, G__16493, G__16494) : target_fn.call(null, G__16489, G__16490, G__16491, G__16492, G__16493, G__16494);
  };
  var G__17293__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16495 = a;
      var G__16496 = b;
      var G__16497 = c;
      var G__16498 = d;
      var G__16499 = e;
      var G__16500 = f;
      var G__16501 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__16495, G__16496, G__16497, G__16498, G__16499, G__16500, G__16501) : self__.dispatch_fn.call(null, G__16495, G__16496, G__16497, G__16498, G__16499, G__16500, G__16501);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16502 = a;
    var G__16503 = b;
    var G__16504 = c;
    var G__16505 = d;
    var G__16506 = e;
    var G__16507 = f;
    var G__16508 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__16502, G__16503, G__16504, G__16505, G__16506, G__16507, G__16508) : target_fn.call(null, G__16502, G__16503, G__16504, G__16505, G__16506, G__16507, G__16508);
  };
  var G__17293__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16509 = a;
      var G__16510 = b;
      var G__16511 = c;
      var G__16512 = d;
      var G__16513 = e;
      var G__16514 = f;
      var G__16515 = g;
      var G__16516 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__16509, G__16510, G__16511, G__16512, G__16513, G__16514, G__16515, G__16516) : self__.dispatch_fn.call(null, G__16509, G__16510, G__16511, G__16512, G__16513, G__16514, G__16515, G__16516);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16517 = a;
    var G__16518 = b;
    var G__16519 = c;
    var G__16520 = d;
    var G__16521 = e;
    var G__16522 = f;
    var G__16523 = g;
    var G__16524 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__16517, G__16518, G__16519, G__16520, G__16521, G__16522, G__16523, G__16524) : target_fn.call(null, G__16517, G__16518, G__16519, G__16520, G__16521, G__16522, G__16523, G__16524);
  };
  var G__17293__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16525 = a;
      var G__16526 = b;
      var G__16527 = c;
      var G__16528 = d;
      var G__16529 = e;
      var G__16530 = f;
      var G__16531 = g;
      var G__16532 = h;
      var G__16533 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__16525, G__16526, G__16527, G__16528, G__16529, G__16530, G__16531, G__16532, G__16533) : self__.dispatch_fn.call(null, G__16525, G__16526, G__16527, G__16528, G__16529, G__16530, G__16531, G__16532, G__16533);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16534 = a;
    var G__16535 = b;
    var G__16536 = c;
    var G__16537 = d;
    var G__16538 = e;
    var G__16539 = f;
    var G__16540 = g;
    var G__16541 = h;
    var G__16542 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__16534, G__16535, G__16536, G__16537, G__16538, G__16539, G__16540, G__16541, G__16542) : target_fn.call(null, G__16534, G__16535, G__16536, G__16537, G__16538, G__16539, G__16540, G__16541, G__16542);
  };
  var G__17293__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16543 = a;
      var G__16544 = b;
      var G__16545 = c;
      var G__16546 = d;
      var G__16547 = e;
      var G__16548 = f;
      var G__16549 = g;
      var G__16550 = h;
      var G__16551 = i;
      var G__16552 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__16543, G__16544, G__16545, G__16546, G__16547, G__16548, G__16549, G__16550, G__16551, G__16552) : self__.dispatch_fn.call(null, G__16543, G__16544, G__16545, G__16546, G__16547, G__16548, G__16549, G__16550, G__16551, G__16552);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16553 = a;
    var G__16554 = b;
    var G__16555 = c;
    var G__16556 = d;
    var G__16557 = e;
    var G__16558 = f;
    var G__16559 = g;
    var G__16560 = h;
    var G__16561 = i;
    var G__16562 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__16553, G__16554, G__16555, G__16556, G__16557, G__16558, G__16559, G__16560, G__16561, G__16562) : target_fn.call(null, G__16553, G__16554, G__16555, G__16556, G__16557, G__16558, G__16559, G__16560, G__16561, G__16562);
  };
  var G__17293__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16563 = a;
      var G__16564 = b;
      var G__16565 = c;
      var G__16566 = d;
      var G__16567 = e;
      var G__16568 = f;
      var G__16569 = g;
      var G__16570 = h;
      var G__16571 = i;
      var G__16572 = j;
      var G__16573 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__16563, G__16564, G__16565, G__16566, G__16567, G__16568, G__16569, G__16570, G__16571, G__16572, G__16573) : self__.dispatch_fn.call(null, G__16563, G__16564, G__16565, G__16566, G__16567, G__16568, G__16569, G__16570, G__16571, G__16572, G__16573);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16574 = a;
    var G__16575 = b;
    var G__16576 = c;
    var G__16577 = d;
    var G__16578 = e;
    var G__16579 = f;
    var G__16580 = g;
    var G__16581 = h;
    var G__16582 = i;
    var G__16583 = j;
    var G__16584 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__16574, G__16575, G__16576, G__16577, G__16578, G__16579, G__16580, G__16581, G__16582, G__16583, G__16584) : target_fn.call(null, G__16574, G__16575, G__16576, G__16577, G__16578, G__16579, G__16580, G__16581, G__16582, G__16583, G__16584);
  };
  var G__17293__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16585 = a;
      var G__16586 = b;
      var G__16587 = c;
      var G__16588 = d;
      var G__16589 = e;
      var G__16590 = f;
      var G__16591 = g;
      var G__16592 = h;
      var G__16593 = i;
      var G__16594 = j;
      var G__16595 = k;
      var G__16596 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__16585, G__16586, G__16587, G__16588, G__16589, G__16590, G__16591, G__16592, G__16593, G__16594, G__16595, G__16596) : self__.dispatch_fn.call(null, G__16585, G__16586, G__16587, G__16588, G__16589, G__16590, G__16591, G__16592, G__16593, G__16594, G__16595, G__16596);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16597 = a;
    var G__16598 = b;
    var G__16599 = c;
    var G__16600 = d;
    var G__16601 = e;
    var G__16602 = f;
    var G__16603 = g;
    var G__16604 = h;
    var G__16605 = i;
    var G__16606 = j;
    var G__16607 = k;
    var G__16608 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__16597, G__16598, G__16599, G__16600, G__16601, G__16602, G__16603, G__16604, G__16605, G__16606, G__16607, G__16608) : target_fn.call(null, G__16597, G__16598, G__16599, G__16600, G__16601, G__16602, G__16603, G__16604, G__16605, G__16606, G__16607, G__16608);
  };
  var G__17293__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16609 = a;
      var G__16610 = b;
      var G__16611 = c;
      var G__16612 = d;
      var G__16613 = e;
      var G__16614 = f;
      var G__16615 = g;
      var G__16616 = h;
      var G__16617 = i;
      var G__16618 = j;
      var G__16619 = k;
      var G__16620 = l;
      var G__16621 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__16609, G__16610, G__16611, G__16612, G__16613, G__16614, G__16615, G__16616, G__16617, G__16618, G__16619, G__16620, G__16621) : self__.dispatch_fn.call(null, G__16609, G__16610, G__16611, G__16612, G__16613, G__16614, G__16615, G__16616, G__16617, G__16618, G__16619, G__16620, G__16621);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16622 = a;
    var G__16623 = b;
    var G__16624 = c;
    var G__16625 = d;
    var G__16626 = e;
    var G__16627 = f;
    var G__16628 = g;
    var G__16629 = h;
    var G__16630 = i;
    var G__16631 = j;
    var G__16632 = k;
    var G__16633 = l;
    var G__16634 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__16622, G__16623, G__16624, G__16625, G__16626, G__16627, G__16628, G__16629, G__16630, G__16631, G__16632, G__16633, G__16634) : target_fn.call(null, G__16622, G__16623, G__16624, G__16625, G__16626, G__16627, G__16628, G__16629, G__16630, G__16631, G__16632, G__16633, G__16634);
  };
  var G__17293__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16635 = a;
      var G__16636 = b;
      var G__16637 = c;
      var G__16638 = d;
      var G__16639 = e;
      var G__16640 = f;
      var G__16641 = g;
      var G__16642 = h;
      var G__16643 = i;
      var G__16644 = j;
      var G__16645 = k;
      var G__16646 = l;
      var G__16647 = m;
      var G__16648 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__16635, G__16636, G__16637, G__16638, G__16639, G__16640, G__16641, G__16642, G__16643, G__16644, G__16645, G__16646, G__16647, G__16648) : self__.dispatch_fn.call(null, G__16635, G__16636, G__16637, G__16638, G__16639, G__16640, G__16641, G__16642, G__16643, G__16644, G__16645, G__16646, G__16647, G__16648);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16649 = a;
    var G__16650 = b;
    var G__16651 = c;
    var G__16652 = d;
    var G__16653 = e;
    var G__16654 = f;
    var G__16655 = g;
    var G__16656 = h;
    var G__16657 = i;
    var G__16658 = j;
    var G__16659 = k;
    var G__16660 = l;
    var G__16661 = m;
    var G__16662 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__16649, G__16650, G__16651, G__16652, G__16653, G__16654, G__16655, G__16656, G__16657, G__16658, G__16659, G__16660, G__16661, G__16662) : target_fn.call(null, G__16649, G__16650, G__16651, G__16652, G__16653, G__16654, G__16655, G__16656, G__16657, G__16658, G__16659, G__16660, G__16661, G__16662);
  };
  var G__17293__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16663 = a;
      var G__16664 = b;
      var G__16665 = c;
      var G__16666 = d;
      var G__16667 = e;
      var G__16668 = f;
      var G__16669 = g;
      var G__16670 = h;
      var G__16671 = i;
      var G__16672 = j;
      var G__16673 = k;
      var G__16674 = l;
      var G__16675 = m;
      var G__16676 = n;
      var G__16677 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__16663, G__16664, G__16665, G__16666, G__16667, G__16668, G__16669, G__16670, G__16671, G__16672, G__16673, G__16674, G__16675, G__16676, G__16677) : self__.dispatch_fn.call(null, G__16663, G__16664, G__16665, G__16666, G__16667, G__16668, G__16669, G__16670, G__16671, G__16672, G__16673, G__16674, G__16675, G__16676, G__16677);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16678 = a;
    var G__16679 = b;
    var G__16680 = c;
    var G__16681 = d;
    var G__16682 = e;
    var G__16683 = f;
    var G__16684 = g;
    var G__16685 = h;
    var G__16686 = i;
    var G__16687 = j;
    var G__16688 = k;
    var G__16689 = l;
    var G__16690 = m;
    var G__16691 = n;
    var G__16692 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__16678, G__16679, G__16680, G__16681, G__16682, G__16683, G__16684, G__16685, G__16686, G__16687, G__16688, G__16689, G__16690, G__16691, G__16692) : target_fn.call(null, G__16678, G__16679, G__16680, G__16681, G__16682, G__16683, G__16684, G__16685, G__16686, G__16687, G__16688, G__16689, G__16690, G__16691, G__16692);
  };
  var G__17293__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16693 = a;
      var G__16694 = b;
      var G__16695 = c;
      var G__16696 = d;
      var G__16697 = e;
      var G__16698 = f;
      var G__16699 = g;
      var G__16700 = h;
      var G__16701 = i;
      var G__16702 = j;
      var G__16703 = k;
      var G__16704 = l;
      var G__16705 = m;
      var G__16706 = n;
      var G__16707 = o;
      var G__16708 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__16693, G__16694, G__16695, G__16696, G__16697, G__16698, G__16699, G__16700, G__16701, G__16702, G__16703, G__16704, G__16705, G__16706, G__16707, G__16708) : self__.dispatch_fn.call(null, G__16693, G__16694, G__16695, G__16696, G__16697, G__16698, G__16699, G__16700, G__16701, G__16702, G__16703, G__16704, G__16705, G__16706, G__16707, G__16708);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16709 = a;
    var G__16710 = b;
    var G__16711 = c;
    var G__16712 = d;
    var G__16713 = e;
    var G__16714 = f;
    var G__16715 = g;
    var G__16716 = h;
    var G__16717 = i;
    var G__16718 = j;
    var G__16719 = k;
    var G__16720 = l;
    var G__16721 = m;
    var G__16722 = n;
    var G__16723 = o;
    var G__16724 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__16709, G__16710, G__16711, G__16712, G__16713, G__16714, G__16715, G__16716, G__16717, G__16718, G__16719, G__16720, G__16721, G__16722, G__16723, G__16724) : target_fn.call(null, G__16709, G__16710, G__16711, G__16712, G__16713, G__16714, G__16715, G__16716, G__16717, G__16718, G__16719, G__16720, G__16721, G__16722, G__16723, G__16724);
  };
  var G__17293__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16725 = a;
      var G__16726 = b;
      var G__16727 = c;
      var G__16728 = d;
      var G__16729 = e;
      var G__16730 = f;
      var G__16731 = g;
      var G__16732 = h;
      var G__16733 = i;
      var G__16734 = j;
      var G__16735 = k;
      var G__16736 = l;
      var G__16737 = m;
      var G__16738 = n;
      var G__16739 = o;
      var G__16740 = p;
      var G__16741 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__16725, G__16726, G__16727, G__16728, G__16729, G__16730, G__16731, G__16732, G__16733, G__16734, G__16735, G__16736, G__16737, G__16738, G__16739, G__16740, G__16741) : self__.dispatch_fn.call(null, G__16725, G__16726, G__16727, G__16728, G__16729, G__16730, G__16731, G__16732, G__16733, G__16734, G__16735, G__16736, G__16737, G__16738, G__16739, G__16740, G__16741);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16742 = a;
    var G__16743 = b;
    var G__16744 = c;
    var G__16745 = d;
    var G__16746 = e;
    var G__16747 = f;
    var G__16748 = g;
    var G__16749 = h;
    var G__16750 = i;
    var G__16751 = j;
    var G__16752 = k;
    var G__16753 = l;
    var G__16754 = m;
    var G__16755 = n;
    var G__16756 = o;
    var G__16757 = p;
    var G__16758 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__16742, G__16743, G__16744, G__16745, G__16746, G__16747, G__16748, G__16749, G__16750, G__16751, G__16752, G__16753, G__16754, G__16755, G__16756, G__16757, G__16758) : target_fn.call(null, G__16742, G__16743, G__16744, G__16745, G__16746, G__16747, G__16748, G__16749, G__16750, G__16751, G__16752, G__16753, G__16754, G__16755, G__16756, G__16757, G__16758);
  };
  var G__17293__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16759 = a;
      var G__16760 = b;
      var G__16761 = c;
      var G__16762 = d;
      var G__16763 = e;
      var G__16764 = f;
      var G__16765 = g;
      var G__16766 = h;
      var G__16767 = i;
      var G__16768 = j;
      var G__16769 = k;
      var G__16770 = l;
      var G__16771 = m;
      var G__16772 = n;
      var G__16773 = o;
      var G__16774 = p;
      var G__16775 = q;
      var G__16776 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__16759, G__16760, G__16761, G__16762, G__16763, G__16764, G__16765, G__16766, G__16767, G__16768, G__16769, G__16770, G__16771, G__16772, G__16773, G__16774, G__16775, G__16776) : self__.dispatch_fn.call(null, G__16759, G__16760, G__16761, G__16762, G__16763, G__16764, G__16765, G__16766, G__16767, G__16768, G__16769, G__16770, G__16771, G__16772, G__16773, G__16774, G__16775, G__16776);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16777 = a;
    var G__16778 = b;
    var G__16779 = c;
    var G__16780 = d;
    var G__16781 = e;
    var G__16782 = f;
    var G__16783 = g;
    var G__16784 = h;
    var G__16785 = i;
    var G__16786 = j;
    var G__16787 = k;
    var G__16788 = l;
    var G__16789 = m;
    var G__16790 = n;
    var G__16791 = o;
    var G__16792 = p;
    var G__16793 = q;
    var G__16794 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__16777, G__16778, G__16779, G__16780, G__16781, G__16782, G__16783, G__16784, G__16785, G__16786, G__16787, G__16788, G__16789, G__16790, G__16791, G__16792, G__16793, G__16794) : target_fn.call(null, G__16777, G__16778, G__16779, G__16780, G__16781, G__16782, G__16783, G__16784, G__16785, G__16786, G__16787, G__16788, G__16789, G__16790, G__16791, G__16792, G__16793, G__16794);
  };
  var G__17293__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16795 = a;
      var G__16796 = b;
      var G__16797 = c;
      var G__16798 = d;
      var G__16799 = e;
      var G__16800 = f;
      var G__16801 = g;
      var G__16802 = h;
      var G__16803 = i;
      var G__16804 = j;
      var G__16805 = k;
      var G__16806 = l;
      var G__16807 = m;
      var G__16808 = n;
      var G__16809 = o;
      var G__16810 = p;
      var G__16811 = q;
      var G__16812 = r;
      var G__16813 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__16795, G__16796, G__16797, G__16798, G__16799, G__16800, G__16801, G__16802, G__16803, G__16804, G__16805, G__16806, G__16807, G__16808, G__16809, G__16810, G__16811, G__16812, G__16813) : self__.dispatch_fn.call(null, G__16795, G__16796, G__16797, G__16798, G__16799, G__16800, G__16801, G__16802, G__16803, G__16804, G__16805, G__16806, G__16807, G__16808, G__16809, G__16810, G__16811, 
      G__16812, G__16813);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16814 = a;
    var G__16815 = b;
    var G__16816 = c;
    var G__16817 = d;
    var G__16818 = e;
    var G__16819 = f;
    var G__16820 = g;
    var G__16821 = h;
    var G__16822 = i;
    var G__16823 = j;
    var G__16824 = k;
    var G__16825 = l;
    var G__16826 = m;
    var G__16827 = n;
    var G__16828 = o;
    var G__16829 = p;
    var G__16830 = q;
    var G__16831 = r;
    var G__16832 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__16814, G__16815, G__16816, G__16817, G__16818, G__16819, G__16820, G__16821, G__16822, G__16823, G__16824, G__16825, G__16826, G__16827, G__16828, G__16829, G__16830, G__16831, G__16832) : target_fn.call(null, G__16814, G__16815, G__16816, G__16817, G__16818, G__16819, G__16820, G__16821, G__16822, G__16823, G__16824, G__16825, G__16826, G__16827, G__16828, G__16829, G__16830, G__16831, G__16832);
  };
  var G__17293__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16833 = a;
      var G__16834 = b;
      var G__16835 = c;
      var G__16836 = d;
      var G__16837 = e;
      var G__16838 = f;
      var G__16839 = g;
      var G__16840 = h;
      var G__16841 = i;
      var G__16842 = j;
      var G__16843 = k;
      var G__16844 = l;
      var G__16845 = m;
      var G__16846 = n;
      var G__16847 = o;
      var G__16848 = p;
      var G__16849 = q;
      var G__16850 = r;
      var G__16851 = s;
      var G__16852 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__16833, G__16834, G__16835, G__16836, G__16837, G__16838, G__16839, G__16840, G__16841, G__16842, G__16843, G__16844, G__16845, G__16846, G__16847, G__16848, G__16849, G__16850, G__16851, G__16852) : self__.dispatch_fn.call(null, G__16833, G__16834, G__16835, G__16836, G__16837, G__16838, G__16839, G__16840, G__16841, G__16842, G__16843, G__16844, G__16845, G__16846, G__16847, G__16848, 
      G__16849, G__16850, G__16851, G__16852);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16853 = a;
    var G__16854 = b;
    var G__16855 = c;
    var G__16856 = d;
    var G__16857 = e;
    var G__16858 = f;
    var G__16859 = g;
    var G__16860 = h;
    var G__16861 = i;
    var G__16862 = j;
    var G__16863 = k;
    var G__16864 = l;
    var G__16865 = m;
    var G__16866 = n;
    var G__16867 = o;
    var G__16868 = p;
    var G__16869 = q;
    var G__16870 = r;
    var G__16871 = s;
    var G__16872 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__16853, G__16854, G__16855, G__16856, G__16857, G__16858, G__16859, G__16860, G__16861, G__16862, G__16863, G__16864, G__16865, G__16866, G__16867, G__16868, G__16869, G__16870, G__16871, G__16872) : target_fn.call(null, G__16853, G__16854, G__16855, G__16856, G__16857, G__16858, G__16859, G__16860, G__16861, G__16862, G__16863, G__16864, G__16865, G__16866, G__16867, G__16868, G__16869, G__16870, G__16871, 
    G__16872);
  };
  var G__17293__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__17293 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__17293__1.call(this, self__);
      case 2:
        return G__17293__2.call(this, self__, a);
      case 3:
        return G__17293__3.call(this, self__, a, b);
      case 4:
        return G__17293__4.call(this, self__, a, b, c);
      case 5:
        return G__17293__5.call(this, self__, a, b, c, d);
      case 6:
        return G__17293__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__17293__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__17293__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__17293__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__17293__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__17293__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__17293__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__17293__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__17293__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__17293__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__17293__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__17293__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__17293__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__17293__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__17293__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__17293__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__17293__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__17293.cljs$core$IFn$_invoke$arity$1 = G__17293__1;
  G__17293.cljs$core$IFn$_invoke$arity$2 = G__17293__2;
  G__17293.cljs$core$IFn$_invoke$arity$3 = G__17293__3;
  G__17293.cljs$core$IFn$_invoke$arity$4 = G__17293__4;
  G__17293.cljs$core$IFn$_invoke$arity$5 = G__17293__5;
  G__17293.cljs$core$IFn$_invoke$arity$6 = G__17293__6;
  G__17293.cljs$core$IFn$_invoke$arity$7 = G__17293__7;
  G__17293.cljs$core$IFn$_invoke$arity$8 = G__17293__8;
  G__17293.cljs$core$IFn$_invoke$arity$9 = G__17293__9;
  G__17293.cljs$core$IFn$_invoke$arity$10 = G__17293__10;
  G__17293.cljs$core$IFn$_invoke$arity$11 = G__17293__11;
  G__17293.cljs$core$IFn$_invoke$arity$12 = G__17293__12;
  G__17293.cljs$core$IFn$_invoke$arity$13 = G__17293__13;
  G__17293.cljs$core$IFn$_invoke$arity$14 = G__17293__14;
  G__17293.cljs$core$IFn$_invoke$arity$15 = G__17293__15;
  G__17293.cljs$core$IFn$_invoke$arity$16 = G__17293__16;
  G__17293.cljs$core$IFn$_invoke$arity$17 = G__17293__17;
  G__17293.cljs$core$IFn$_invoke$arity$18 = G__17293__18;
  G__17293.cljs$core$IFn$_invoke$arity$19 = G__17293__19;
  G__17293.cljs$core$IFn$_invoke$arity$20 = G__17293__20;
  G__17293.cljs$core$IFn$_invoke$arity$21 = G__17293__21;
  G__17293.cljs$core$IFn$_invoke$arity$22 = G__17293__22;
  return G__17293;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args16445) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16445)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16873 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__16873) : self__.dispatch_fn.call(null, G__16873);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16874 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__16874) : target_fn.call(null, G__16874);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16875 = a;
    var G__16876 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__16875, G__16876) : self__.dispatch_fn.call(null, G__16875, G__16876);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16877 = a;
  var G__16878 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__16877, G__16878) : target_fn.call(null, G__16877, G__16878);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16879 = a;
    var G__16880 = b;
    var G__16881 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__16879, G__16880, G__16881) : self__.dispatch_fn.call(null, G__16879, G__16880, G__16881);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16882 = a;
  var G__16883 = b;
  var G__16884 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__16882, G__16883, G__16884) : target_fn.call(null, G__16882, G__16883, G__16884);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16885 = a;
    var G__16886 = b;
    var G__16887 = c;
    var G__16888 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__16885, G__16886, G__16887, G__16888) : self__.dispatch_fn.call(null, G__16885, G__16886, G__16887, G__16888);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16889 = a;
  var G__16890 = b;
  var G__16891 = c;
  var G__16892 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__16889, G__16890, G__16891, G__16892) : target_fn.call(null, G__16889, G__16890, G__16891, G__16892);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16893 = a;
    var G__16894 = b;
    var G__16895 = c;
    var G__16896 = d;
    var G__16897 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__16893, G__16894, G__16895, G__16896, G__16897) : self__.dispatch_fn.call(null, G__16893, G__16894, G__16895, G__16896, G__16897);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16898 = a;
  var G__16899 = b;
  var G__16900 = c;
  var G__16901 = d;
  var G__16902 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__16898, G__16899, G__16900, G__16901, G__16902) : target_fn.call(null, G__16898, G__16899, G__16900, G__16901, G__16902);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16903 = a;
    var G__16904 = b;
    var G__16905 = c;
    var G__16906 = d;
    var G__16907 = e;
    var G__16908 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__16903, G__16904, G__16905, G__16906, G__16907, G__16908) : self__.dispatch_fn.call(null, G__16903, G__16904, G__16905, G__16906, G__16907, G__16908);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16909 = a;
  var G__16910 = b;
  var G__16911 = c;
  var G__16912 = d;
  var G__16913 = e;
  var G__16914 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__16909, G__16910, G__16911, G__16912, G__16913, G__16914) : target_fn.call(null, G__16909, G__16910, G__16911, G__16912, G__16913, G__16914);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16915 = a;
    var G__16916 = b;
    var G__16917 = c;
    var G__16918 = d;
    var G__16919 = e;
    var G__16920 = f;
    var G__16921 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__16915, G__16916, G__16917, G__16918, G__16919, G__16920, G__16921) : self__.dispatch_fn.call(null, G__16915, G__16916, G__16917, G__16918, G__16919, G__16920, G__16921);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16922 = a;
  var G__16923 = b;
  var G__16924 = c;
  var G__16925 = d;
  var G__16926 = e;
  var G__16927 = f;
  var G__16928 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__16922, G__16923, G__16924, G__16925, G__16926, G__16927, G__16928) : target_fn.call(null, G__16922, G__16923, G__16924, G__16925, G__16926, G__16927, G__16928);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16929 = a;
    var G__16930 = b;
    var G__16931 = c;
    var G__16932 = d;
    var G__16933 = e;
    var G__16934 = f;
    var G__16935 = g;
    var G__16936 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__16929, G__16930, G__16931, G__16932, G__16933, G__16934, G__16935, G__16936) : self__.dispatch_fn.call(null, G__16929, G__16930, G__16931, G__16932, G__16933, G__16934, G__16935, G__16936);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16937 = a;
  var G__16938 = b;
  var G__16939 = c;
  var G__16940 = d;
  var G__16941 = e;
  var G__16942 = f;
  var G__16943 = g;
  var G__16944 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__16937, G__16938, G__16939, G__16940, G__16941, G__16942, G__16943, G__16944) : target_fn.call(null, G__16937, G__16938, G__16939, G__16940, G__16941, G__16942, G__16943, G__16944);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16945 = a;
    var G__16946 = b;
    var G__16947 = c;
    var G__16948 = d;
    var G__16949 = e;
    var G__16950 = f;
    var G__16951 = g;
    var G__16952 = h;
    var G__16953 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__16945, G__16946, G__16947, G__16948, G__16949, G__16950, G__16951, G__16952, G__16953) : self__.dispatch_fn.call(null, G__16945, G__16946, G__16947, G__16948, G__16949, G__16950, G__16951, G__16952, G__16953);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16954 = a;
  var G__16955 = b;
  var G__16956 = c;
  var G__16957 = d;
  var G__16958 = e;
  var G__16959 = f;
  var G__16960 = g;
  var G__16961 = h;
  var G__16962 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__16954, G__16955, G__16956, G__16957, G__16958, G__16959, G__16960, G__16961, G__16962) : target_fn.call(null, G__16954, G__16955, G__16956, G__16957, G__16958, G__16959, G__16960, G__16961, G__16962);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16963 = a;
    var G__16964 = b;
    var G__16965 = c;
    var G__16966 = d;
    var G__16967 = e;
    var G__16968 = f;
    var G__16969 = g;
    var G__16970 = h;
    var G__16971 = i;
    var G__16972 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__16963, G__16964, G__16965, G__16966, G__16967, G__16968, G__16969, G__16970, G__16971, G__16972) : self__.dispatch_fn.call(null, G__16963, G__16964, G__16965, G__16966, G__16967, G__16968, G__16969, G__16970, G__16971, G__16972);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16973 = a;
  var G__16974 = b;
  var G__16975 = c;
  var G__16976 = d;
  var G__16977 = e;
  var G__16978 = f;
  var G__16979 = g;
  var G__16980 = h;
  var G__16981 = i;
  var G__16982 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__16973, G__16974, G__16975, G__16976, G__16977, G__16978, G__16979, G__16980, G__16981, G__16982) : target_fn.call(null, G__16973, G__16974, G__16975, G__16976, G__16977, G__16978, G__16979, G__16980, G__16981, G__16982);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16983 = a;
    var G__16984 = b;
    var G__16985 = c;
    var G__16986 = d;
    var G__16987 = e;
    var G__16988 = f;
    var G__16989 = g;
    var G__16990 = h;
    var G__16991 = i;
    var G__16992 = j;
    var G__16993 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__16983, G__16984, G__16985, G__16986, G__16987, G__16988, G__16989, G__16990, G__16991, G__16992, G__16993) : self__.dispatch_fn.call(null, G__16983, G__16984, G__16985, G__16986, G__16987, G__16988, G__16989, G__16990, G__16991, G__16992, G__16993);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16994 = a;
  var G__16995 = b;
  var G__16996 = c;
  var G__16997 = d;
  var G__16998 = e;
  var G__16999 = f;
  var G__17000 = g;
  var G__17001 = h;
  var G__17002 = i;
  var G__17003 = j;
  var G__17004 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__16994, G__16995, G__16996, G__16997, G__16998, G__16999, G__17000, G__17001, G__17002, G__17003, G__17004) : target_fn.call(null, G__16994, G__16995, G__16996, G__16997, G__16998, G__16999, G__17000, G__17001, G__17002, G__17003, G__17004);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17005 = a;
    var G__17006 = b;
    var G__17007 = c;
    var G__17008 = d;
    var G__17009 = e;
    var G__17010 = f;
    var G__17011 = g;
    var G__17012 = h;
    var G__17013 = i;
    var G__17014 = j;
    var G__17015 = k;
    var G__17016 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__17005, G__17006, G__17007, G__17008, G__17009, G__17010, G__17011, G__17012, G__17013, G__17014, G__17015, G__17016) : self__.dispatch_fn.call(null, G__17005, G__17006, G__17007, G__17008, G__17009, G__17010, G__17011, G__17012, G__17013, G__17014, G__17015, G__17016);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17017 = a;
  var G__17018 = b;
  var G__17019 = c;
  var G__17020 = d;
  var G__17021 = e;
  var G__17022 = f;
  var G__17023 = g;
  var G__17024 = h;
  var G__17025 = i;
  var G__17026 = j;
  var G__17027 = k;
  var G__17028 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__17017, G__17018, G__17019, G__17020, G__17021, G__17022, G__17023, G__17024, G__17025, G__17026, G__17027, G__17028) : target_fn.call(null, G__17017, G__17018, G__17019, G__17020, G__17021, G__17022, G__17023, G__17024, G__17025, G__17026, G__17027, G__17028);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17029 = a;
    var G__17030 = b;
    var G__17031 = c;
    var G__17032 = d;
    var G__17033 = e;
    var G__17034 = f;
    var G__17035 = g;
    var G__17036 = h;
    var G__17037 = i;
    var G__17038 = j;
    var G__17039 = k;
    var G__17040 = l;
    var G__17041 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__17029, G__17030, G__17031, G__17032, G__17033, G__17034, G__17035, G__17036, G__17037, G__17038, G__17039, G__17040, G__17041) : self__.dispatch_fn.call(null, G__17029, G__17030, G__17031, G__17032, G__17033, G__17034, G__17035, G__17036, G__17037, G__17038, G__17039, G__17040, G__17041);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17042 = a;
  var G__17043 = b;
  var G__17044 = c;
  var G__17045 = d;
  var G__17046 = e;
  var G__17047 = f;
  var G__17048 = g;
  var G__17049 = h;
  var G__17050 = i;
  var G__17051 = j;
  var G__17052 = k;
  var G__17053 = l;
  var G__17054 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__17042, G__17043, G__17044, G__17045, G__17046, G__17047, G__17048, G__17049, G__17050, G__17051, G__17052, G__17053, G__17054) : target_fn.call(null, G__17042, G__17043, G__17044, G__17045, G__17046, G__17047, G__17048, G__17049, G__17050, G__17051, G__17052, G__17053, G__17054);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17055 = a;
    var G__17056 = b;
    var G__17057 = c;
    var G__17058 = d;
    var G__17059 = e;
    var G__17060 = f;
    var G__17061 = g;
    var G__17062 = h;
    var G__17063 = i;
    var G__17064 = j;
    var G__17065 = k;
    var G__17066 = l;
    var G__17067 = m;
    var G__17068 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__17055, G__17056, G__17057, G__17058, G__17059, G__17060, G__17061, G__17062, G__17063, G__17064, G__17065, G__17066, G__17067, G__17068) : self__.dispatch_fn.call(null, G__17055, G__17056, G__17057, G__17058, G__17059, G__17060, G__17061, G__17062, G__17063, G__17064, G__17065, G__17066, G__17067, G__17068);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17069 = a;
  var G__17070 = b;
  var G__17071 = c;
  var G__17072 = d;
  var G__17073 = e;
  var G__17074 = f;
  var G__17075 = g;
  var G__17076 = h;
  var G__17077 = i;
  var G__17078 = j;
  var G__17079 = k;
  var G__17080 = l;
  var G__17081 = m;
  var G__17082 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__17069, G__17070, G__17071, G__17072, G__17073, G__17074, G__17075, G__17076, G__17077, G__17078, G__17079, G__17080, G__17081, G__17082) : target_fn.call(null, G__17069, G__17070, G__17071, G__17072, G__17073, G__17074, G__17075, G__17076, G__17077, G__17078, G__17079, G__17080, G__17081, G__17082);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17083 = a;
    var G__17084 = b;
    var G__17085 = c;
    var G__17086 = d;
    var G__17087 = e;
    var G__17088 = f;
    var G__17089 = g;
    var G__17090 = h;
    var G__17091 = i;
    var G__17092 = j;
    var G__17093 = k;
    var G__17094 = l;
    var G__17095 = m;
    var G__17096 = n;
    var G__17097 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__17083, G__17084, G__17085, G__17086, G__17087, G__17088, G__17089, G__17090, G__17091, G__17092, G__17093, G__17094, G__17095, G__17096, G__17097) : self__.dispatch_fn.call(null, G__17083, G__17084, G__17085, G__17086, G__17087, G__17088, G__17089, G__17090, G__17091, G__17092, G__17093, G__17094, G__17095, G__17096, G__17097);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17098 = a;
  var G__17099 = b;
  var G__17100 = c;
  var G__17101 = d;
  var G__17102 = e;
  var G__17103 = f;
  var G__17104 = g;
  var G__17105 = h;
  var G__17106 = i;
  var G__17107 = j;
  var G__17108 = k;
  var G__17109 = l;
  var G__17110 = m;
  var G__17111 = n;
  var G__17112 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__17098, G__17099, G__17100, G__17101, G__17102, G__17103, G__17104, G__17105, G__17106, G__17107, G__17108, G__17109, G__17110, G__17111, G__17112) : target_fn.call(null, G__17098, G__17099, G__17100, G__17101, G__17102, G__17103, G__17104, G__17105, G__17106, G__17107, G__17108, G__17109, G__17110, G__17111, G__17112);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17113 = a;
    var G__17114 = b;
    var G__17115 = c;
    var G__17116 = d;
    var G__17117 = e;
    var G__17118 = f;
    var G__17119 = g;
    var G__17120 = h;
    var G__17121 = i;
    var G__17122 = j;
    var G__17123 = k;
    var G__17124 = l;
    var G__17125 = m;
    var G__17126 = n;
    var G__17127 = o;
    var G__17128 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__17113, G__17114, G__17115, G__17116, G__17117, G__17118, G__17119, G__17120, G__17121, G__17122, G__17123, G__17124, G__17125, G__17126, G__17127, G__17128) : self__.dispatch_fn.call(null, G__17113, G__17114, G__17115, G__17116, G__17117, G__17118, G__17119, G__17120, G__17121, G__17122, G__17123, G__17124, G__17125, G__17126, G__17127, G__17128);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17129 = a;
  var G__17130 = b;
  var G__17131 = c;
  var G__17132 = d;
  var G__17133 = e;
  var G__17134 = f;
  var G__17135 = g;
  var G__17136 = h;
  var G__17137 = i;
  var G__17138 = j;
  var G__17139 = k;
  var G__17140 = l;
  var G__17141 = m;
  var G__17142 = n;
  var G__17143 = o;
  var G__17144 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__17129, G__17130, G__17131, G__17132, G__17133, G__17134, G__17135, G__17136, G__17137, G__17138, G__17139, G__17140, G__17141, G__17142, G__17143, G__17144) : target_fn.call(null, G__17129, G__17130, G__17131, G__17132, G__17133, G__17134, G__17135, G__17136, G__17137, G__17138, G__17139, G__17140, G__17141, G__17142, G__17143, G__17144);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17145 = a;
    var G__17146 = b;
    var G__17147 = c;
    var G__17148 = d;
    var G__17149 = e;
    var G__17150 = f;
    var G__17151 = g;
    var G__17152 = h;
    var G__17153 = i;
    var G__17154 = j;
    var G__17155 = k;
    var G__17156 = l;
    var G__17157 = m;
    var G__17158 = n;
    var G__17159 = o;
    var G__17160 = p;
    var G__17161 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__17145, G__17146, G__17147, G__17148, G__17149, G__17150, G__17151, G__17152, G__17153, G__17154, G__17155, G__17156, G__17157, G__17158, G__17159, G__17160, G__17161) : self__.dispatch_fn.call(null, G__17145, G__17146, G__17147, G__17148, G__17149, G__17150, G__17151, G__17152, G__17153, G__17154, G__17155, G__17156, G__17157, G__17158, G__17159, G__17160, G__17161);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17162 = a;
  var G__17163 = b;
  var G__17164 = c;
  var G__17165 = d;
  var G__17166 = e;
  var G__17167 = f;
  var G__17168 = g;
  var G__17169 = h;
  var G__17170 = i;
  var G__17171 = j;
  var G__17172 = k;
  var G__17173 = l;
  var G__17174 = m;
  var G__17175 = n;
  var G__17176 = o;
  var G__17177 = p;
  var G__17178 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__17162, G__17163, G__17164, G__17165, G__17166, G__17167, G__17168, G__17169, G__17170, G__17171, G__17172, G__17173, G__17174, G__17175, G__17176, G__17177, G__17178) : target_fn.call(null, G__17162, G__17163, G__17164, G__17165, G__17166, G__17167, G__17168, G__17169, G__17170, G__17171, G__17172, G__17173, G__17174, G__17175, G__17176, G__17177, G__17178);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17179 = a;
    var G__17180 = b;
    var G__17181 = c;
    var G__17182 = d;
    var G__17183 = e;
    var G__17184 = f;
    var G__17185 = g;
    var G__17186 = h;
    var G__17187 = i;
    var G__17188 = j;
    var G__17189 = k;
    var G__17190 = l;
    var G__17191 = m;
    var G__17192 = n;
    var G__17193 = o;
    var G__17194 = p;
    var G__17195 = q;
    var G__17196 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__17179, G__17180, G__17181, G__17182, G__17183, G__17184, G__17185, G__17186, G__17187, G__17188, G__17189, G__17190, G__17191, G__17192, G__17193, G__17194, G__17195, G__17196) : self__.dispatch_fn.call(null, G__17179, G__17180, G__17181, G__17182, G__17183, G__17184, G__17185, G__17186, G__17187, G__17188, G__17189, G__17190, G__17191, G__17192, G__17193, G__17194, G__17195, G__17196);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17197 = a;
  var G__17198 = b;
  var G__17199 = c;
  var G__17200 = d;
  var G__17201 = e;
  var G__17202 = f;
  var G__17203 = g;
  var G__17204 = h;
  var G__17205 = i;
  var G__17206 = j;
  var G__17207 = k;
  var G__17208 = l;
  var G__17209 = m;
  var G__17210 = n;
  var G__17211 = o;
  var G__17212 = p;
  var G__17213 = q;
  var G__17214 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__17197, G__17198, G__17199, G__17200, G__17201, G__17202, G__17203, G__17204, G__17205, G__17206, G__17207, G__17208, G__17209, G__17210, G__17211, G__17212, G__17213, G__17214) : target_fn.call(null, G__17197, G__17198, G__17199, G__17200, G__17201, G__17202, G__17203, G__17204, G__17205, G__17206, G__17207, G__17208, G__17209, G__17210, G__17211, G__17212, G__17213, G__17214);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17215 = a;
    var G__17216 = b;
    var G__17217 = c;
    var G__17218 = d;
    var G__17219 = e;
    var G__17220 = f;
    var G__17221 = g;
    var G__17222 = h;
    var G__17223 = i;
    var G__17224 = j;
    var G__17225 = k;
    var G__17226 = l;
    var G__17227 = m;
    var G__17228 = n;
    var G__17229 = o;
    var G__17230 = p;
    var G__17231 = q;
    var G__17232 = r;
    var G__17233 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__17215, G__17216, G__17217, G__17218, G__17219, G__17220, G__17221, G__17222, G__17223, G__17224, G__17225, G__17226, G__17227, G__17228, G__17229, G__17230, G__17231, G__17232, G__17233) : self__.dispatch_fn.call(null, G__17215, G__17216, G__17217, G__17218, G__17219, G__17220, G__17221, G__17222, G__17223, G__17224, G__17225, G__17226, G__17227, G__17228, G__17229, G__17230, G__17231, 
    G__17232, G__17233);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17234 = a;
  var G__17235 = b;
  var G__17236 = c;
  var G__17237 = d;
  var G__17238 = e;
  var G__17239 = f;
  var G__17240 = g;
  var G__17241 = h;
  var G__17242 = i;
  var G__17243 = j;
  var G__17244 = k;
  var G__17245 = l;
  var G__17246 = m;
  var G__17247 = n;
  var G__17248 = o;
  var G__17249 = p;
  var G__17250 = q;
  var G__17251 = r;
  var G__17252 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__17234, G__17235, G__17236, G__17237, G__17238, G__17239, G__17240, G__17241, G__17242, G__17243, G__17244, G__17245, G__17246, G__17247, G__17248, G__17249, G__17250, G__17251, G__17252) : target_fn.call(null, G__17234, G__17235, G__17236, G__17237, G__17238, G__17239, G__17240, G__17241, G__17242, G__17243, G__17244, G__17245, G__17246, G__17247, G__17248, G__17249, G__17250, G__17251, G__17252);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17253 = a;
    var G__17254 = b;
    var G__17255 = c;
    var G__17256 = d;
    var G__17257 = e;
    var G__17258 = f;
    var G__17259 = g;
    var G__17260 = h;
    var G__17261 = i;
    var G__17262 = j;
    var G__17263 = k;
    var G__17264 = l;
    var G__17265 = m;
    var G__17266 = n;
    var G__17267 = o;
    var G__17268 = p;
    var G__17269 = q;
    var G__17270 = r;
    var G__17271 = s;
    var G__17272 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__17253, G__17254, G__17255, G__17256, G__17257, G__17258, G__17259, G__17260, G__17261, G__17262, G__17263, G__17264, G__17265, G__17266, G__17267, G__17268, G__17269, G__17270, G__17271, G__17272) : self__.dispatch_fn.call(null, G__17253, G__17254, G__17255, G__17256, G__17257, G__17258, G__17259, G__17260, G__17261, G__17262, G__17263, G__17264, G__17265, G__17266, G__17267, G__17268, 
    G__17269, G__17270, G__17271, G__17272);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17273 = a;
  var G__17274 = b;
  var G__17275 = c;
  var G__17276 = d;
  var G__17277 = e;
  var G__17278 = f;
  var G__17279 = g;
  var G__17280 = h;
  var G__17281 = i;
  var G__17282 = j;
  var G__17283 = k;
  var G__17284 = l;
  var G__17285 = m;
  var G__17286 = n;
  var G__17287 = o;
  var G__17288 = p;
  var G__17289 = q;
  var G__17290 = r;
  var G__17291 = s;
  var G__17292 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__17273, G__17274, G__17275, G__17276, G__17277, G__17278, G__17279, G__17280, G__17281, G__17282, G__17283, G__17284, G__17285, G__17286, G__17287, G__17288, G__17289, G__17290, G__17291, G__17292) : target_fn.call(null, G__17273, G__17274, G__17275, G__17276, G__17277, G__17278, G__17279, G__17280, G__17281, G__17282, G__17283, G__17284, G__17285, G__17286, G__17287, G__17288, G__17289, G__17290, G__17291, 
  G__17292);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__17294 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
  return goog.string.hashCode(G__17294);
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.pr_writer_ex_info = function pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#ExceptionInfo{:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, data) {
    return ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
  };
  var ex_info__3 = function(msg, data, cause) {
    cljs.core.ExceptionInfo.prototype = function() {
      var G__17299 = msg;
      return Error(G__17299);
    }();
    cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";
    cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
    cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
      var obj__$1 = this;
      return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
    };
    return new cljs.core.ExceptionInfo(msg, data, cause);
  };
  ex_info = function(msg, data, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, data);
      case 3:
        return ex_info__3.call(this, msg, data, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__17304 = x;
      var G__17305 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__17304, G__17305) : pred.call(null, G__17304, G__17305);
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(function() {
        var G__17306 = y;
        var G__17307 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__17306, G__17307) : pred.call(null, G__17306, G__17307);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
goog.provide("gridlife.gamemodel");
goog.require("cljs.core");
gridlife.gamemodel.game = function() {
  var obj5268 = {};
  return obj5268;
}();
gridlife.gamemodel.game_name = function game_name(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.gridlife$gamemodel$game$game_name$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.gridlife$gamemodel$game$game_name$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = gridlife.gamemodel.game_name[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = gridlife.gamemodel.game_name["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "game.game-name", this$);
        }
      }
    }().call(null, this$);
  }
};
gridlife.gamemodel.to_str = function to_str(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.gridlife$gamemodel$game$to_str$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.gridlife$gamemodel$game$to_str$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = gridlife.gamemodel.to_str[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = gridlife.gamemodel.to_str["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "game.to-str", this$);
        }
      }
    }().call(null, this$);
  }
};
gridlife.gamemodel.tick = function tick(this$, gridmodel) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.gridlife$gamemodel$game$tick$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.gridlife$gamemodel$game$tick$arity$2(this$, gridmodel);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = gridlife.gamemodel.tick[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = gridlife.gamemodel.tick["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "game.tick", this$);
        }
      }
    }().call(null, this$, gridmodel);
  }
};
goog.provide("gridlife.gridmodel");
goog.require("cljs.core");
gridlife.gridmodel.GridModel = function(model, cells_wide, cells_high, __meta, __extmap, __hash) {
  this.model = model;
  this.cells_wide = cells_wide;
  this.cells_high = cells_high;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
gridlife.gridmodel.GridModel.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4371__auto__, k__4372__auto__) {
  var self__ = this;
  var this__4371__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4371__auto____$1, k__4372__auto__, null);
};
gridlife.gridmodel.GridModel.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4373__auto__, k5272, else__4374__auto__) {
  var self__ = this;
  var this__4373__auto____$1 = this;
  var G__5274 = k5272 instanceof cljs.core.Keyword ? k5272.fqn : null;
  switch(G__5274) {
    case "cells-high":
      return self__.cells_high;
      break;
    case "cells-wide":
      return self__.cells_wide;
      break;
    case "model":
      return self__.model;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k5272, else__4374__auto__);
  }
};
gridlife.gridmodel.GridModel.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4385__auto__, writer__4386__auto__, opts__4387__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  var pr_pair__4388__auto__ = function(this__4385__auto____$1) {
    return function(keyval__4389__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4386__auto__, cljs.core.pr_writer, "", " ", "", opts__4387__auto__, keyval__4389__auto__);
    };
  }(this__4385__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4386__auto__, pr_pair__4388__auto__, "#gridlife.gridmodel.GridModel{", ", ", "}", opts__4387__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "model", "model", 331153215), self__.model], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "cells-wide", "cells-wide", -1579921448), self__.cells_wide], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465), self__.cells_high], null)], null), self__.__extmap));
};
gridlife.gridmodel.GridModel.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4369__auto__) {
  var self__ = this;
  var this__4369__auto____$1 = this;
  return self__.__meta;
};
gridlife.gridmodel.GridModel.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4365__auto__) {
  var self__ = this;
  var this__4365__auto____$1 = this;
  return new gridlife.gridmodel.GridModel(self__.model, self__.cells_wide, self__.cells_high, self__.__meta, self__.__extmap, self__.__hash);
};
gridlife.gridmodel.GridModel.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
gridlife.gridmodel.GridModel.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4366__auto__) {
  var self__ = this;
  var this__4366__auto____$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_imap.call(null, this__4366__auto____$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
gridlife.gridmodel.GridModel.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4367__auto__, other__4368__auto__) {
  var self__ = this;
  var this__4367__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3756__auto__ = other__4368__auto__;
    if (cljs.core.truth_(and__3756__auto__)) {
      return this__4367__auto____$1.constructor === other__4368__auto__.constructor && cljs.core.equiv_map.call(null, this__4367__auto____$1, other__4368__auto__);
    } else {
      return and__3756__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
gridlife.gridmodel.GridModel.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465), null, new cljs.core.Keyword(null, "cells-wide", "cells-wide", -1579921448), null, new cljs.core.Keyword(null, "model", "model", 331153215), null], null), null), k__4381__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4380__auto____$1), self__.__meta), k__4381__auto__);
  } else {
    return new gridlife.gridmodel.GridModel(self__.model, self__.cells_wide, self__.cells_high, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4381__auto__)), null);
  }
};
gridlife.gridmodel.GridModel.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4378__auto__, k__4379__auto__, G__5271) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  var pred__5275 = cljs.core.keyword_identical_QMARK_;
  var expr__5276 = k__4379__auto__;
  if (cljs.core.truth_(pred__5275.call(null, new cljs.core.Keyword(null, "model", "model", 331153215), expr__5276))) {
    return new gridlife.gridmodel.GridModel(G__5271, self__.cells_wide, self__.cells_high, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__5275.call(null, new cljs.core.Keyword(null, "cells-wide", "cells-wide", -1579921448), expr__5276))) {
      return new gridlife.gridmodel.GridModel(self__.model, G__5271, self__.cells_high, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__5275.call(null, new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465), expr__5276))) {
        return new gridlife.gridmodel.GridModel(self__.model, self__.cells_wide, G__5271, self__.__meta, self__.__extmap, null);
      } else {
        return new gridlife.gridmodel.GridModel(self__.model, self__.cells_wide, self__.cells_high, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4379__auto__, G__5271), null);
      }
    }
  }
};
gridlife.gridmodel.GridModel.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4383__auto__) {
  var self__ = this;
  var this__4383__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "model", "model", 331153215), self__.model], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cells-wide", "cells-wide", -1579921448), self__.cells_wide], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465), self__.cells_high], null)], null), self__.__extmap));
};
gridlife.gridmodel.GridModel.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4370__auto__, G__5271) {
  var self__ = this;
  var this__4370__auto____$1 = this;
  return new gridlife.gridmodel.GridModel(self__.model, self__.cells_wide, self__.cells_high, G__5271, self__.__extmap, self__.__hash);
};
gridlife.gridmodel.GridModel.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4376__auto__, entry__4377__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4377__auto__)) {
    return cljs.core._assoc.call(null, this__4376__auto____$1, cljs.core._nth.call(null, entry__4377__auto__, 0), cljs.core._nth.call(null, entry__4377__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4376__auto____$1, entry__4377__auto__);
  }
};
gridlife.gridmodel.GridModel.cljs$lang$type = true;
gridlife.gridmodel.GridModel.cljs$lang$ctorPrSeq = function(this__4405__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "gridlife.gridmodel/GridModel");
};
gridlife.gridmodel.GridModel.cljs$lang$ctorPrWriter = function(this__4405__auto__, writer__4406__auto__) {
  return cljs.core._write.call(null, writer__4406__auto__, "gridlife.gridmodel/GridModel");
};
gridlife.gridmodel.__GT_GridModel = function __GT_GridModel(model, cells_wide, cells_high) {
  return new gridlife.gridmodel.GridModel(model, cells_wide, cells_high, null, null, null);
};
gridlife.gridmodel.map__GT_GridModel = function map__GT_GridModel(G__5273) {
  return new gridlife.gridmodel.GridModel((new cljs.core.Keyword(null, "model", "model", 331153215)).cljs$core$IFn$_invoke$arity$1(G__5273), (new cljs.core.Keyword(null, "cells-wide", "cells-wide", -1579921448)).cljs$core$IFn$_invoke$arity$1(G__5273), (new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465)).cljs$core$IFn$_invoke$arity$1(G__5273), null, cljs.core.dissoc.call(null, G__5273, new cljs.core.Keyword(null, "model", "model", 331153215), new cljs.core.Keyword(null, "cells-wide", 
  "cells-wide", -1579921448), new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465)), null);
};
gridlife.gridmodel.index__GT_headings = new cljs.core.PersistentArrayMap(null, 4, [0, new cljs.core.Keyword(null, "north", "north", 651323902), 1, new cljs.core.Keyword(null, "east", "east", 1189821678), 2, new cljs.core.Keyword(null, "south", "south", 1586796293), 3, new cljs.core.Keyword(null, "west", "west", 708776677)], null);
gridlife.gridmodel.headings__GT_index = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "north", "north", 651323902), 0, new cljs.core.Keyword(null, "east", "east", 1189821678), 1, new cljs.core.Keyword(null, "south", "south", 1586796293), 2, new cljs.core.Keyword(null, "west", "west", 708776677), 3], null);
gridlife.gridmodel.turn = function turn(heading, f) {
  var current_index = cljs.core.get.call(null, gridlife.gridmodel.headings__GT_index, heading);
  var index = f.call(null, current_index, 1);
  var new_index = cljs.core.mod.call(null, index, 4);
  var new_heading = cljs.core.get.call(null, gridlife.gridmodel.index__GT_headings, new_index);
  return new_heading;
};
gridlife.gridmodel.turn_right = function turn_right(heading) {
  return gridlife.gridmodel.turn.call(null, heading, cljs.core._PLUS_);
};
gridlife.gridmodel.turn_left = function turn_left(heading) {
  return gridlife.gridmodel.turn.call(null, heading, cljs.core._);
};
gridlife.gridmodel.random_int = function random_int(min, max) {
  return min + Math.floor(Math.random() * (1 + (max - min)));
};
gridlife.gridmodel.random = function random(size) {
  return gridlife.gridmodel.random_int.call(null, 0, size - 1);
};
gridlife.gridmodel.random_grid_coord = function random_grid_coord(xsize, ysize) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), gridlife.gridmodel.random.call(null, xsize), new cljs.core.Keyword(null, "y", "y", -1757859776), gridlife.gridmodel.random.call(null, ysize)], null);
};
gridlife.gridmodel.white_QMARK_ = function white_QMARK_(contents) {
  return cljs.core._EQ_.call(null, contents, new cljs.core.Keyword(null, "white", "white", -483998618));
};
gridlife.gridmodel.black_QMARK_ = function black_QMARK_(contents) {
  return cljs.core._EQ_.call(null, contents, new cljs.core.Keyword(null, "black", "black", 1294279647));
};
gridlife.gridmodel.toggle_color = function toggle_color(color) {
  if (gridlife.gridmodel.white_QMARK_.call(null, color)) {
    return new cljs.core.Keyword(null, "black", "black", 1294279647);
  } else {
    return new cljs.core.Keyword(null, "white", "white", -483998618);
  }
};
gridlife.gridmodel.color_QMARK_ = function color_QMARK_(contents) {
  return gridlife.gridmodel.white_QMARK_.call(null, contents) || gridlife.gridmodel.black_QMARK_.call(null, contents);
};
gridlife.gridmodel.toggle_if_color = function toggle_if_color(contents) {
  if (gridlife.gridmodel.color_QMARK_.call(null, contents)) {
    return gridlife.gridmodel.toggle_color.call(null, contents);
  } else {
    return contents;
  }
};
gridlife.gridmodel.compass = function compass(cells_wide, cells_high, location, distance) {
  var old_x = (new cljs.core.Keyword(null, "x", "x", 2099068185)).cljs$core$IFn$_invoke$arity$1(location);
  var old_y = (new cljs.core.Keyword(null, "y", "y", -1757859776)).cljs$core$IFn$_invoke$arity$1(location);
  return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "north", "north", 651323902), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), old_x, new cljs.core.Keyword(null, "y", "y", -1757859776), cljs.core.mod.call(null, old_y - distance, cells_high)], null), new cljs.core.Keyword(null, "south", "south", 1586796293), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), old_x, new cljs.core.Keyword(null, 
  "y", "y", -1757859776), cljs.core.mod.call(null, old_y + distance, cells_high)], null), new cljs.core.Keyword(null, "east", "east", 1189821678), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), cljs.core.mod.call(null, old_x + distance, cells_wide), new cljs.core.Keyword(null, "y", "y", -1757859776), old_y], null), new cljs.core.Keyword(null, "west", "west", 708776677), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 
  2099068185), cljs.core.mod.call(null, old_x - distance, cells_wide), new cljs.core.Keyword(null, "y", "y", -1757859776), old_y], null)], null);
};
gridlife.gridmodel.new_location = function new_location(cells_wide, cells_high, location, heading, distance) {
  return cljs.core.get.call(null, gridlife.gridmodel.compass.call(null, cells_wide, cells_high, location, distance), heading);
};
goog.provide("gridlife.random");
goog.require("cljs.core");
goog.require("gridlife.gamemodel");
goog.require("gridlife.gridmodel");
gridlife.random.RandomNoise = function(__meta, __extmap, __hash) {
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
gridlife.random.RandomNoise.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4371__auto__, k__4372__auto__) {
  var self__ = this;
  var this__4371__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4371__auto____$1, k__4372__auto__, null);
};
gridlife.random.RandomNoise.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4373__auto__, k11180, else__4374__auto__) {
  var self__ = this;
  var this__4373__auto____$1 = this;
  var G__11182 = k11180;
  switch(G__11182) {
    default:
      return cljs.core.get.call(null, self__.__extmap, k11180, else__4374__auto__);
  }
};
gridlife.random.RandomNoise.prototype.gridlife$gamemodel$game$ = true;
gridlife.random.RandomNoise.prototype.gridlife$gamemodel$game$game_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return "Random Noise";
};
gridlife.random.RandomNoise.prototype.gridlife$gamemodel$game$to_str$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return "Random Noise";
};
gridlife.random.RandomNoise.prototype.gridlife$gamemodel$game$tick$arity$2 = function(this$, gridmodel) {
  var self__ = this;
  var this$__$1 = this;
  var model = (new cljs.core.Keyword(null, "model", "model", 331153215)).cljs$core$IFn$_invoke$arity$1(gridmodel);
  var cells_wide = (new cljs.core.Keyword(null, "cells-wide", "cells-wide", -1579921448)).cljs$core$IFn$_invoke$arity$1(gridmodel);
  var cells_high = (new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465)).cljs$core$IFn$_invoke$arity$1(gridmodel);
  var random_coord = gridlife.gridmodel.random_grid_coord.call(null, cells_wide, cells_high);
  var new_color = gridlife.gridmodel.toggle_if_color.call(null, cljs.core.get.call(null, model, random_coord));
  var new_model = cljs.core.assoc.call(null, model, random_coord, new_color);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, gridmodel, new cljs.core.Keyword(null, "model", "model", 331153215), new_model), this$__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [random_coord, new_color], null)], null)], null);
};
gridlife.random.RandomNoise.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4385__auto__, writer__4386__auto__, opts__4387__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  var pr_pair__4388__auto__ = function(this__4385__auto____$1) {
    return function(keyval__4389__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4386__auto__, cljs.core.pr_writer, "", " ", "", opts__4387__auto__, keyval__4389__auto__);
    };
  }(this__4385__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4386__auto__, pr_pair__4388__auto__, "#gridlife.random.RandomNoise{", ", ", "}", opts__4387__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.EMPTY, self__.__extmap));
};
gridlife.random.RandomNoise.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4369__auto__) {
  var self__ = this;
  var this__4369__auto____$1 = this;
  return self__.__meta;
};
gridlife.random.RandomNoise.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4365__auto__) {
  var self__ = this;
  var this__4365__auto____$1 = this;
  return new gridlife.random.RandomNoise(self__.__meta, self__.__extmap, self__.__hash);
};
gridlife.random.RandomNoise.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return 0 + cljs.core.count.call(null, self__.__extmap);
};
gridlife.random.RandomNoise.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4366__auto__) {
  var self__ = this;
  var this__4366__auto____$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_imap.call(null, this__4366__auto____$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
gridlife.random.RandomNoise.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4367__auto__, other__4368__auto__) {
  var self__ = this;
  var this__4367__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3756__auto__ = other__4368__auto__;
    if (cljs.core.truth_(and__3756__auto__)) {
      return this__4367__auto____$1.constructor === other__4368__auto__.constructor && cljs.core.equiv_map.call(null, this__4367__auto____$1, other__4368__auto__);
    } else {
      return and__3756__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
gridlife.random.RandomNoise.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.EMPTY, k__4381__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4380__auto____$1), self__.__meta), k__4381__auto__);
  } else {
    return new gridlife.random.RandomNoise(self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4381__auto__)), null);
  }
};
gridlife.random.RandomNoise.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4378__auto__, k__4379__auto__, G__11179) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  var pred__11183 = cljs.core.keyword_identical_QMARK_;
  var expr__11184 = k__4379__auto__;
  return new gridlife.random.RandomNoise(self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4379__auto__, G__11179), null);
};
gridlife.random.RandomNoise.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4383__auto__) {
  var self__ = this;
  var this__4383__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.EMPTY, self__.__extmap));
};
gridlife.random.RandomNoise.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4370__auto__, G__11179) {
  var self__ = this;
  var this__4370__auto____$1 = this;
  return new gridlife.random.RandomNoise(G__11179, self__.__extmap, self__.__hash);
};
gridlife.random.RandomNoise.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4376__auto__, entry__4377__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4377__auto__)) {
    return cljs.core._assoc.call(null, this__4376__auto____$1, cljs.core._nth.call(null, entry__4377__auto__, 0), cljs.core._nth.call(null, entry__4377__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4376__auto____$1, entry__4377__auto__);
  }
};
gridlife.random.RandomNoise.cljs$lang$type = true;
gridlife.random.RandomNoise.cljs$lang$ctorPrSeq = function(this__4405__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "gridlife.random/RandomNoise");
};
gridlife.random.RandomNoise.cljs$lang$ctorPrWriter = function(this__4405__auto__, writer__4406__auto__) {
  return cljs.core._write.call(null, writer__4406__auto__, "gridlife.random/RandomNoise");
};
gridlife.random.__GT_RandomNoise = function __GT_RandomNoise() {
  return new gridlife.random.RandomNoise(null, null, null);
};
gridlife.random.map__GT_RandomNoise = function map__GT_RandomNoise(G__11181) {
  return new gridlife.random.RandomNoise(null, cljs.core.dissoc.call(null, G__11181), null);
};
gridlife.random.new_random_noise = function new_random_noise() {
  return new gridlife.random.RandomNoise(null, null, null);
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS") && !goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return goog.labs.userAgent.browser.getOperaVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.labs.userAgent.browser.getOperaVersion_ = function(userAgent) {
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgent);
  var lastTuple = goog.array.peek(versionTuples);
  if (lastTuple[0] == "OPR" && lastTuple[1]) {
    return lastTuple[1];
  }
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.getVersionFromTuples_ = function(versionTuples) {
  goog.asserts.assert(versionTuples.length > 2, "Couldn't extract version tuple from user agent string");
  return versionTuples[2] && versionTuples[2][1] ? versionTuples[2][1] : "";
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit");
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = tuples[1];
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && goog.string.contains(ua, "Android");
  goog.userAgent.detectedIPhone_ = !!ua && goog.string.contains(ua, "iPhone");
  goog.userAgent.detectedIPad_ = !!ua && goog.string.contains(ua, "iPad");
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  if (goog.userAgent.GECKO) {
    re = /rv\:([^\);]+)(\)|;)/;
  } else {
    if (goog.userAgent.IE) {
      re = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.WEBKIT) {
        re = /WebKit\/(\S+)/;
      }
    }
  }
  if (re) {
    var arr = re.exec(goog.userAgent.getUserAgentString());
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj20473 = {};
  return obj20473;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3756__auto__ = port;
    if (and__3756__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4412__auto__ = port == null ? null : port;
    return function() {
      var or__3768__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj20475 = {};
  return obj20475;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn1_handler) {
  if (function() {
    var and__3756__auto__ = port;
    if (and__3756__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__4412__auto__ = port == null ? null : port;
    return function() {
      var or__3768__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn1_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj20477 = {};
  return obj20477;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3756__auto__ = chan;
    if (and__3756__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4412__auto__ = chan == null ? null : chan;
    return function() {
      var or__3768__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function closed_QMARK_(chan) {
  if (function() {
    var and__3756__auto__ = chan;
    if (and__3756__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__4412__auto__ = chan == null ? null : chan;
    return function() {
      var or__3768__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj20479 = {};
  return obj20479;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3756__auto__ = h;
    if (and__3756__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4412__auto__ = h == null ? null : h;
    return function() {
      var or__3768__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3756__auto__ = h;
    if (and__3756__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4412__auto__ = h == null ? null : h;
    return function() {
      var or__3768__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj20481 = {};
  return obj20481;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3756__auto__ = b;
    if (and__3756__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4412__auto__ = b == null ? null : b;
    return function() {
      var or__3768__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3756__auto__ = b;
    if (and__3756__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4412__auto__ = b == null ? null : b;
    return function() {
      var or__3768__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function add_BANG__STAR_(b, itm) {
  if (function() {
    var and__3756__auto__ = b;
    if (and__3756__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__4412__auto__ = b == null ? null : b;
    return function() {
      var or__3768__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function() {
  var add_BANG_ = null;
  var add_BANG___1 = function(b) {
    return b;
  };
  var add_BANG___2 = function(b, itm) {
    if (!(itm == null)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "itm", "itm", -713282527, null)))))].join(""));
    }
    return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
  };
  add_BANG_ = function(b, itm) {
    switch(arguments.length) {
      case 1:
        return add_BANG___1.call(this, b);
      case 2:
        return add_BANG___2.call(this, b, itm);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_BANG_.cljs$core$IFn$_invoke$arity$1 = add_BANG___1;
  add_BANG_.cljs$core$IFn$_invoke$arity$2 = add_BANG___2;
  return add_BANG_;
}();
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj20483 = {};
  return obj20483;
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t20431 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t20431 = function(f, fn_handler, meta20432) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta20432 = meta20432;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t20431.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t20431.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t20431.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t20431.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20433) {
      var self__ = this;
      var _20433__$1 = this;
      return self__.meta20432;
    };
    cljs.core.async.impl.ioc_helpers.t20431.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20433, meta20432__$1) {
      var self__ = this;
      var _20433__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t20431(self__.f, self__.fn_handler, meta20432__$1);
    };
    cljs.core.async.impl.ioc_helpers.t20431.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t20431.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t20431";
    cljs.core.async.impl.ioc_helpers.t20431.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
      return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async.impl.ioc-helpers/t20431");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t20431 = function __GT_t20431(f__$1, fn_handler__$1, meta20432) {
      return new cljs.core.async.impl.ioc_helpers.t20431(f__$1, fn_handler__$1, meta20432);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t20431(f, fn_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 19, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 30, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 27, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core\\async\\impl\\ioc_helpers.cljs"], 
  null));
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e20435) {
    if (e20435 instanceof Object) {
      var ex = e20435;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e20435;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_20438_20440 = state;
    statearr_20438_20440[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_20438_20440[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_20439_20441 = state;
    statearr_20439_20441[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_20439_20441[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_20444_20446 = state;
    statearr_20444_20446[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_20444_20446[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_20445_20447 = state;
    statearr_20445_20447[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_20445_20447[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap, __hash) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4371__auto__, k__4372__auto__) {
  var self__ = this;
  var this__4371__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4371__auto____$1, k__4372__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4373__auto__, k20449, else__4374__auto__) {
  var self__ = this;
  var this__4373__auto____$1 = this;
  var G__20451 = k20449 instanceof cljs.core.Keyword ? k20449.fqn : null;
  switch(G__20451) {
    case "prev":
      return self__.prev;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "catch-block":
      return self__.catch_block;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20449, else__4374__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4385__auto__, writer__4386__auto__, opts__4387__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  var pr_pair__4388__auto__ = function(this__4385__auto____$1) {
    return function(keyval__4389__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4386__auto__, cljs.core.pr_writer, "", " ", "", opts__4387__auto__, keyval__4389__auto__);
    };
  }(this__4385__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4386__auto__, pr_pair__4388__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4387__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4369__auto__) {
  var self__ = this;
  var this__4369__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4365__auto__) {
  var self__ = this;
  var this__4365__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4366__auto__) {
  var self__ = this;
  var this__4366__auto____$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_imap.call(null, this__4366__auto____$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4367__auto__, other__4368__auto__) {
  var self__ = this;
  var this__4367__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3756__auto__ = other__4368__auto__;
    if (cljs.core.truth_(and__3756__auto__)) {
      return this__4367__auto____$1.constructor === other__4368__auto__.constructor && cljs.core.equiv_map.call(null, this__4367__auto____$1, other__4368__auto__);
    } else {
      return and__3756__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__4381__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4380__auto____$1), self__.__meta), k__4381__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4381__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4378__auto__, k__4379__auto__, G__20448) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  var pred__20452 = cljs.core.keyword_identical_QMARK_;
  var expr__20453 = k__4379__auto__;
  if (cljs.core.truth_(pred__20452.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__20453))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__20448, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__20452.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__20453))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__20448, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__20452.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__20453))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__20448, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__20452.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__20453))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__20448, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__20452.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__20453))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__20448, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4379__auto__, G__20448), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4383__auto__) {
  var self__ = this;
  var this__4383__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4370__auto__, G__20448) {
  var self__ = this;
  var this__4370__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__20448, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4376__auto__, entry__4377__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4377__auto__)) {
    return cljs.core._assoc.call(null, this__4376__auto____$1, cljs.core._nth.call(null, entry__4377__auto__, 0), cljs.core._nth.call(null, entry__4377__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4376__auto____$1, entry__4377__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4405__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4405__auto__, writer__4406__auto__) {
  return cljs.core._write.call(null, writer__4406__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__20450) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__20450), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__20450), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__20450), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__20450), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__20450), null, cljs.core.dissoc.call(null, G__20450, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)), 
  null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_20457 = state;
  statearr_20457[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_20457;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3756__auto__ = exception;
      if (cljs.core.truth_(and__3756__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3756__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3756__auto__ = exception;
        if (cljs.core.truth_(and__3756__auto__)) {
          var and__3756__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3756__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3756__auto____$1;
          }
        } else {
          return and__3756__auto__;
        }
      }())) {
        var statearr_20463 = state;
        statearr_20463[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_20463[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_20463[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_20463[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_20463;
      } else {
        if (cljs.core.truth_(function() {
          var and__3756__auto__ = exception;
          if (cljs.core.truth_(and__3756__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3756__auto__;
          }
        }())) {
          var statearr_20464_20468 = state;
          statearr_20464_20468[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__20469 = state;
          state = G__20469;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3756__auto__ = exception;
            if (cljs.core.truth_(and__3756__auto__)) {
              var and__3756__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3756__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3756__auto____$1;
              }
            } else {
              return and__3756__auto__;
            }
          }())) {
            var statearr_20465 = state;
            statearr_20465[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_20465[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_20465;
          } else {
            if (cljs.core.truth_(function() {
              var and__3756__auto__ = cljs.core.not.call(null, exception);
              if (and__3756__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3756__auto__;
              }
            }())) {
              var statearr_20466 = state;
              statearr_20466[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_20466[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_20466;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_20467 = state;
                statearr_20467[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_20467[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_20467;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.functions");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener) {
    Channel = function() {
      var iframe = document.createElement("iframe");
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (e.origin != origin && e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined") {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      head = head.next;
      var cb = head.cb;
      head.cb = null;
      cb();
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement("script")) {
    return function(cb) {
      var script = document.createElement("script");
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__20486 = cnt + 1;
      cnt = G__20486;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4655__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4655__auto__) {
      var v_20487 = this$.pop();
      if (keep_QMARK_.call(null, v_20487)) {
        this$.unshift(v_20487);
      } else {
      }
      var G__20488 = x + 1;
      x = G__20488;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("om.dom");
goog.require("cljs.core");
goog.require("goog.object");
om.dom.a = function() {
  var a__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var a = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21232__i = 0, G__21232__a = new Array(arguments.length - 1);
      while (G__21232__i < G__21232__a.length) {
        G__21232__a[G__21232__i] = arguments[G__21232__i + 1];
        ++G__21232__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21232__a, 0);
    }
    return a__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__21233) {
    var opts__10704__auto__ = cljs.core.first(arglist__21233);
    var children__10705__auto__ = cljs.core.rest(arglist__21233);
    return a__delegate(opts__10704__auto__, children__10705__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var abbr = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21234__i = 0, G__21234__a = new Array(arguments.length - 1);
      while (G__21234__i < G__21234__a.length) {
        G__21234__a[G__21234__i] = arguments[G__21234__i + 1];
        ++G__21234__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21234__a, 0);
    }
    return abbr__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__21235) {
    var opts__10704__auto__ = cljs.core.first(arglist__21235);
    var children__10705__auto__ = cljs.core.rest(arglist__21235);
    return abbr__delegate(opts__10704__auto__, children__10705__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var address = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21236__i = 0, G__21236__a = new Array(arguments.length - 1);
      while (G__21236__i < G__21236__a.length) {
        G__21236__a[G__21236__i] = arguments[G__21236__i + 1];
        ++G__21236__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21236__a, 0);
    }
    return address__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__21237) {
    var opts__10704__auto__ = cljs.core.first(arglist__21237);
    var children__10705__auto__ = cljs.core.rest(arglist__21237);
    return address__delegate(opts__10704__auto__, children__10705__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var area = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21238__i = 0, G__21238__a = new Array(arguments.length - 1);
      while (G__21238__i < G__21238__a.length) {
        G__21238__a[G__21238__i] = arguments[G__21238__i + 1];
        ++G__21238__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21238__a, 0);
    }
    return area__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__21239) {
    var opts__10704__auto__ = cljs.core.first(arglist__21239);
    var children__10705__auto__ = cljs.core.rest(arglist__21239);
    return area__delegate(opts__10704__auto__, children__10705__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var article = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21240__i = 0, G__21240__a = new Array(arguments.length - 1);
      while (G__21240__i < G__21240__a.length) {
        G__21240__a[G__21240__i] = arguments[G__21240__i + 1];
        ++G__21240__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21240__a, 0);
    }
    return article__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__21241) {
    var opts__10704__auto__ = cljs.core.first(arglist__21241);
    var children__10705__auto__ = cljs.core.rest(arglist__21241);
    return article__delegate(opts__10704__auto__, children__10705__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var aside = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21242__i = 0, G__21242__a = new Array(arguments.length - 1);
      while (G__21242__i < G__21242__a.length) {
        G__21242__a[G__21242__i] = arguments[G__21242__i + 1];
        ++G__21242__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21242__a, 0);
    }
    return aside__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__21243) {
    var opts__10704__auto__ = cljs.core.first(arglist__21243);
    var children__10705__auto__ = cljs.core.rest(arglist__21243);
    return aside__delegate(opts__10704__auto__, children__10705__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var audio = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21244__i = 0, G__21244__a = new Array(arguments.length - 1);
      while (G__21244__i < G__21244__a.length) {
        G__21244__a[G__21244__i] = arguments[G__21244__i + 1];
        ++G__21244__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21244__a, 0);
    }
    return audio__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__21245) {
    var opts__10704__auto__ = cljs.core.first(arglist__21245);
    var children__10705__auto__ = cljs.core.rest(arglist__21245);
    return audio__delegate(opts__10704__auto__, children__10705__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var b = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21246__i = 0, G__21246__a = new Array(arguments.length - 1);
      while (G__21246__i < G__21246__a.length) {
        G__21246__a[G__21246__i] = arguments[G__21246__i + 1];
        ++G__21246__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21246__a, 0);
    }
    return b__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__21247) {
    var opts__10704__auto__ = cljs.core.first(arglist__21247);
    var children__10705__auto__ = cljs.core.rest(arglist__21247);
    return b__delegate(opts__10704__auto__, children__10705__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var base = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21248__i = 0, G__21248__a = new Array(arguments.length - 1);
      while (G__21248__i < G__21248__a.length) {
        G__21248__a[G__21248__i] = arguments[G__21248__i + 1];
        ++G__21248__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21248__a, 0);
    }
    return base__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__21249) {
    var opts__10704__auto__ = cljs.core.first(arglist__21249);
    var children__10705__auto__ = cljs.core.rest(arglist__21249);
    return base__delegate(opts__10704__auto__, children__10705__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var bdi = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21250__i = 0, G__21250__a = new Array(arguments.length - 1);
      while (G__21250__i < G__21250__a.length) {
        G__21250__a[G__21250__i] = arguments[G__21250__i + 1];
        ++G__21250__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21250__a, 0);
    }
    return bdi__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__21251) {
    var opts__10704__auto__ = cljs.core.first(arglist__21251);
    var children__10705__auto__ = cljs.core.rest(arglist__21251);
    return bdi__delegate(opts__10704__auto__, children__10705__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var bdo = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21252__i = 0, G__21252__a = new Array(arguments.length - 1);
      while (G__21252__i < G__21252__a.length) {
        G__21252__a[G__21252__i] = arguments[G__21252__i + 1];
        ++G__21252__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21252__a, 0);
    }
    return bdo__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__21253) {
    var opts__10704__auto__ = cljs.core.first(arglist__21253);
    var children__10705__auto__ = cljs.core.rest(arglist__21253);
    return bdo__delegate(opts__10704__auto__, children__10705__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var big = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21254__i = 0, G__21254__a = new Array(arguments.length - 1);
      while (G__21254__i < G__21254__a.length) {
        G__21254__a[G__21254__i] = arguments[G__21254__i + 1];
        ++G__21254__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21254__a, 0);
    }
    return big__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__21255) {
    var opts__10704__auto__ = cljs.core.first(arglist__21255);
    var children__10705__auto__ = cljs.core.rest(arglist__21255);
    return big__delegate(opts__10704__auto__, children__10705__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var blockquote = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21256__i = 0, G__21256__a = new Array(arguments.length - 1);
      while (G__21256__i < G__21256__a.length) {
        G__21256__a[G__21256__i] = arguments[G__21256__i + 1];
        ++G__21256__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21256__a, 0);
    }
    return blockquote__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__21257) {
    var opts__10704__auto__ = cljs.core.first(arglist__21257);
    var children__10705__auto__ = cljs.core.rest(arglist__21257);
    return blockquote__delegate(opts__10704__auto__, children__10705__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var body = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21258__i = 0, G__21258__a = new Array(arguments.length - 1);
      while (G__21258__i < G__21258__a.length) {
        G__21258__a[G__21258__i] = arguments[G__21258__i + 1];
        ++G__21258__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21258__a, 0);
    }
    return body__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__21259) {
    var opts__10704__auto__ = cljs.core.first(arglist__21259);
    var children__10705__auto__ = cljs.core.rest(arglist__21259);
    return body__delegate(opts__10704__auto__, children__10705__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var br = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21260__i = 0, G__21260__a = new Array(arguments.length - 1);
      while (G__21260__i < G__21260__a.length) {
        G__21260__a[G__21260__i] = arguments[G__21260__i + 1];
        ++G__21260__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21260__a, 0);
    }
    return br__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__21261) {
    var opts__10704__auto__ = cljs.core.first(arglist__21261);
    var children__10705__auto__ = cljs.core.rest(arglist__21261);
    return br__delegate(opts__10704__auto__, children__10705__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var button = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21262__i = 0, G__21262__a = new Array(arguments.length - 1);
      while (G__21262__i < G__21262__a.length) {
        G__21262__a[G__21262__i] = arguments[G__21262__i + 1];
        ++G__21262__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21262__a, 0);
    }
    return button__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__21263) {
    var opts__10704__auto__ = cljs.core.first(arglist__21263);
    var children__10705__auto__ = cljs.core.rest(arglist__21263);
    return button__delegate(opts__10704__auto__, children__10705__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var canvas = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21264__i = 0, G__21264__a = new Array(arguments.length - 1);
      while (G__21264__i < G__21264__a.length) {
        G__21264__a[G__21264__i] = arguments[G__21264__i + 1];
        ++G__21264__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21264__a, 0);
    }
    return canvas__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__21265) {
    var opts__10704__auto__ = cljs.core.first(arglist__21265);
    var children__10705__auto__ = cljs.core.rest(arglist__21265);
    return canvas__delegate(opts__10704__auto__, children__10705__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var caption = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21266__i = 0, G__21266__a = new Array(arguments.length - 1);
      while (G__21266__i < G__21266__a.length) {
        G__21266__a[G__21266__i] = arguments[G__21266__i + 1];
        ++G__21266__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21266__a, 0);
    }
    return caption__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__21267) {
    var opts__10704__auto__ = cljs.core.first(arglist__21267);
    var children__10705__auto__ = cljs.core.rest(arglist__21267);
    return caption__delegate(opts__10704__auto__, children__10705__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var cite = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21268__i = 0, G__21268__a = new Array(arguments.length - 1);
      while (G__21268__i < G__21268__a.length) {
        G__21268__a[G__21268__i] = arguments[G__21268__i + 1];
        ++G__21268__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21268__a, 0);
    }
    return cite__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__21269) {
    var opts__10704__auto__ = cljs.core.first(arglist__21269);
    var children__10705__auto__ = cljs.core.rest(arglist__21269);
    return cite__delegate(opts__10704__auto__, children__10705__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var code = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21270__i = 0, G__21270__a = new Array(arguments.length - 1);
      while (G__21270__i < G__21270__a.length) {
        G__21270__a[G__21270__i] = arguments[G__21270__i + 1];
        ++G__21270__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21270__a, 0);
    }
    return code__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__21271) {
    var opts__10704__auto__ = cljs.core.first(arglist__21271);
    var children__10705__auto__ = cljs.core.rest(arglist__21271);
    return code__delegate(opts__10704__auto__, children__10705__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var col = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21272__i = 0, G__21272__a = new Array(arguments.length - 1);
      while (G__21272__i < G__21272__a.length) {
        G__21272__a[G__21272__i] = arguments[G__21272__i + 1];
        ++G__21272__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21272__a, 0);
    }
    return col__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__21273) {
    var opts__10704__auto__ = cljs.core.first(arglist__21273);
    var children__10705__auto__ = cljs.core.rest(arglist__21273);
    return col__delegate(opts__10704__auto__, children__10705__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var colgroup = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21274__i = 0, G__21274__a = new Array(arguments.length - 1);
      while (G__21274__i < G__21274__a.length) {
        G__21274__a[G__21274__i] = arguments[G__21274__i + 1];
        ++G__21274__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21274__a, 0);
    }
    return colgroup__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__21275) {
    var opts__10704__auto__ = cljs.core.first(arglist__21275);
    var children__10705__auto__ = cljs.core.rest(arglist__21275);
    return colgroup__delegate(opts__10704__auto__, children__10705__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var data = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21276__i = 0, G__21276__a = new Array(arguments.length - 1);
      while (G__21276__i < G__21276__a.length) {
        G__21276__a[G__21276__i] = arguments[G__21276__i + 1];
        ++G__21276__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21276__a, 0);
    }
    return data__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__21277) {
    var opts__10704__auto__ = cljs.core.first(arglist__21277);
    var children__10705__auto__ = cljs.core.rest(arglist__21277);
    return data__delegate(opts__10704__auto__, children__10705__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var datalist = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21278__i = 0, G__21278__a = new Array(arguments.length - 1);
      while (G__21278__i < G__21278__a.length) {
        G__21278__a[G__21278__i] = arguments[G__21278__i + 1];
        ++G__21278__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21278__a, 0);
    }
    return datalist__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__21279) {
    var opts__10704__auto__ = cljs.core.first(arglist__21279);
    var children__10705__auto__ = cljs.core.rest(arglist__21279);
    return datalist__delegate(opts__10704__auto__, children__10705__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var dd = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21280__i = 0, G__21280__a = new Array(arguments.length - 1);
      while (G__21280__i < G__21280__a.length) {
        G__21280__a[G__21280__i] = arguments[G__21280__i + 1];
        ++G__21280__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21280__a, 0);
    }
    return dd__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__21281) {
    var opts__10704__auto__ = cljs.core.first(arglist__21281);
    var children__10705__auto__ = cljs.core.rest(arglist__21281);
    return dd__delegate(opts__10704__auto__, children__10705__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var del = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21282__i = 0, G__21282__a = new Array(arguments.length - 1);
      while (G__21282__i < G__21282__a.length) {
        G__21282__a[G__21282__i] = arguments[G__21282__i + 1];
        ++G__21282__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21282__a, 0);
    }
    return del__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__21283) {
    var opts__10704__auto__ = cljs.core.first(arglist__21283);
    var children__10705__auto__ = cljs.core.rest(arglist__21283);
    return del__delegate(opts__10704__auto__, children__10705__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var dfn = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21284__i = 0, G__21284__a = new Array(arguments.length - 1);
      while (G__21284__i < G__21284__a.length) {
        G__21284__a[G__21284__i] = arguments[G__21284__i + 1];
        ++G__21284__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21284__a, 0);
    }
    return dfn__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__21285) {
    var opts__10704__auto__ = cljs.core.first(arglist__21285);
    var children__10705__auto__ = cljs.core.rest(arglist__21285);
    return dfn__delegate(opts__10704__auto__, children__10705__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var div = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21286__i = 0, G__21286__a = new Array(arguments.length - 1);
      while (G__21286__i < G__21286__a.length) {
        G__21286__a[G__21286__i] = arguments[G__21286__i + 1];
        ++G__21286__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21286__a, 0);
    }
    return div__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__21287) {
    var opts__10704__auto__ = cljs.core.first(arglist__21287);
    var children__10705__auto__ = cljs.core.rest(arglist__21287);
    return div__delegate(opts__10704__auto__, children__10705__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var dl = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21288__i = 0, G__21288__a = new Array(arguments.length - 1);
      while (G__21288__i < G__21288__a.length) {
        G__21288__a[G__21288__i] = arguments[G__21288__i + 1];
        ++G__21288__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21288__a, 0);
    }
    return dl__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__21289) {
    var opts__10704__auto__ = cljs.core.first(arglist__21289);
    var children__10705__auto__ = cljs.core.rest(arglist__21289);
    return dl__delegate(opts__10704__auto__, children__10705__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var dt = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21290__i = 0, G__21290__a = new Array(arguments.length - 1);
      while (G__21290__i < G__21290__a.length) {
        G__21290__a[G__21290__i] = arguments[G__21290__i + 1];
        ++G__21290__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21290__a, 0);
    }
    return dt__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__21291) {
    var opts__10704__auto__ = cljs.core.first(arglist__21291);
    var children__10705__auto__ = cljs.core.rest(arglist__21291);
    return dt__delegate(opts__10704__auto__, children__10705__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var em = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21292__i = 0, G__21292__a = new Array(arguments.length - 1);
      while (G__21292__i < G__21292__a.length) {
        G__21292__a[G__21292__i] = arguments[G__21292__i + 1];
        ++G__21292__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21292__a, 0);
    }
    return em__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__21293) {
    var opts__10704__auto__ = cljs.core.first(arglist__21293);
    var children__10705__auto__ = cljs.core.rest(arglist__21293);
    return em__delegate(opts__10704__auto__, children__10705__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var embed = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21294__i = 0, G__21294__a = new Array(arguments.length - 1);
      while (G__21294__i < G__21294__a.length) {
        G__21294__a[G__21294__i] = arguments[G__21294__i + 1];
        ++G__21294__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21294__a, 0);
    }
    return embed__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__21295) {
    var opts__10704__auto__ = cljs.core.first(arglist__21295);
    var children__10705__auto__ = cljs.core.rest(arglist__21295);
    return embed__delegate(opts__10704__auto__, children__10705__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var fieldset = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21296__i = 0, G__21296__a = new Array(arguments.length - 1);
      while (G__21296__i < G__21296__a.length) {
        G__21296__a[G__21296__i] = arguments[G__21296__i + 1];
        ++G__21296__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21296__a, 0);
    }
    return fieldset__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__21297) {
    var opts__10704__auto__ = cljs.core.first(arglist__21297);
    var children__10705__auto__ = cljs.core.rest(arglist__21297);
    return fieldset__delegate(opts__10704__auto__, children__10705__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var figcaption = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21298__i = 0, G__21298__a = new Array(arguments.length - 1);
      while (G__21298__i < G__21298__a.length) {
        G__21298__a[G__21298__i] = arguments[G__21298__i + 1];
        ++G__21298__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21298__a, 0);
    }
    return figcaption__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__21299) {
    var opts__10704__auto__ = cljs.core.first(arglist__21299);
    var children__10705__auto__ = cljs.core.rest(arglist__21299);
    return figcaption__delegate(opts__10704__auto__, children__10705__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var figure = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21300__i = 0, G__21300__a = new Array(arguments.length - 1);
      while (G__21300__i < G__21300__a.length) {
        G__21300__a[G__21300__i] = arguments[G__21300__i + 1];
        ++G__21300__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21300__a, 0);
    }
    return figure__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__21301) {
    var opts__10704__auto__ = cljs.core.first(arglist__21301);
    var children__10705__auto__ = cljs.core.rest(arglist__21301);
    return figure__delegate(opts__10704__auto__, children__10705__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var footer = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21302__i = 0, G__21302__a = new Array(arguments.length - 1);
      while (G__21302__i < G__21302__a.length) {
        G__21302__a[G__21302__i] = arguments[G__21302__i + 1];
        ++G__21302__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21302__a, 0);
    }
    return footer__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__21303) {
    var opts__10704__auto__ = cljs.core.first(arglist__21303);
    var children__10705__auto__ = cljs.core.rest(arglist__21303);
    return footer__delegate(opts__10704__auto__, children__10705__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var form = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21304__i = 0, G__21304__a = new Array(arguments.length - 1);
      while (G__21304__i < G__21304__a.length) {
        G__21304__a[G__21304__i] = arguments[G__21304__i + 1];
        ++G__21304__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21304__a, 0);
    }
    return form__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__21305) {
    var opts__10704__auto__ = cljs.core.first(arglist__21305);
    var children__10705__auto__ = cljs.core.rest(arglist__21305);
    return form__delegate(opts__10704__auto__, children__10705__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var h1 = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21306__i = 0, G__21306__a = new Array(arguments.length - 1);
      while (G__21306__i < G__21306__a.length) {
        G__21306__a[G__21306__i] = arguments[G__21306__i + 1];
        ++G__21306__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21306__a, 0);
    }
    return h1__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__21307) {
    var opts__10704__auto__ = cljs.core.first(arglist__21307);
    var children__10705__auto__ = cljs.core.rest(arglist__21307);
    return h1__delegate(opts__10704__auto__, children__10705__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var h2 = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21308__i = 0, G__21308__a = new Array(arguments.length - 1);
      while (G__21308__i < G__21308__a.length) {
        G__21308__a[G__21308__i] = arguments[G__21308__i + 1];
        ++G__21308__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21308__a, 0);
    }
    return h2__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__21309) {
    var opts__10704__auto__ = cljs.core.first(arglist__21309);
    var children__10705__auto__ = cljs.core.rest(arglist__21309);
    return h2__delegate(opts__10704__auto__, children__10705__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var h3 = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21310__i = 0, G__21310__a = new Array(arguments.length - 1);
      while (G__21310__i < G__21310__a.length) {
        G__21310__a[G__21310__i] = arguments[G__21310__i + 1];
        ++G__21310__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21310__a, 0);
    }
    return h3__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__21311) {
    var opts__10704__auto__ = cljs.core.first(arglist__21311);
    var children__10705__auto__ = cljs.core.rest(arglist__21311);
    return h3__delegate(opts__10704__auto__, children__10705__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var h4 = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21312__i = 0, G__21312__a = new Array(arguments.length - 1);
      while (G__21312__i < G__21312__a.length) {
        G__21312__a[G__21312__i] = arguments[G__21312__i + 1];
        ++G__21312__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21312__a, 0);
    }
    return h4__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__21313) {
    var opts__10704__auto__ = cljs.core.first(arglist__21313);
    var children__10705__auto__ = cljs.core.rest(arglist__21313);
    return h4__delegate(opts__10704__auto__, children__10705__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var h5 = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21314__i = 0, G__21314__a = new Array(arguments.length - 1);
      while (G__21314__i < G__21314__a.length) {
        G__21314__a[G__21314__i] = arguments[G__21314__i + 1];
        ++G__21314__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21314__a, 0);
    }
    return h5__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__21315) {
    var opts__10704__auto__ = cljs.core.first(arglist__21315);
    var children__10705__auto__ = cljs.core.rest(arglist__21315);
    return h5__delegate(opts__10704__auto__, children__10705__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var h6 = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21316__i = 0, G__21316__a = new Array(arguments.length - 1);
      while (G__21316__i < G__21316__a.length) {
        G__21316__a[G__21316__i] = arguments[G__21316__i + 1];
        ++G__21316__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21316__a, 0);
    }
    return h6__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__21317) {
    var opts__10704__auto__ = cljs.core.first(arglist__21317);
    var children__10705__auto__ = cljs.core.rest(arglist__21317);
    return h6__delegate(opts__10704__auto__, children__10705__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var head = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21318__i = 0, G__21318__a = new Array(arguments.length - 1);
      while (G__21318__i < G__21318__a.length) {
        G__21318__a[G__21318__i] = arguments[G__21318__i + 1];
        ++G__21318__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21318__a, 0);
    }
    return head__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__21319) {
    var opts__10704__auto__ = cljs.core.first(arglist__21319);
    var children__10705__auto__ = cljs.core.rest(arglist__21319);
    return head__delegate(opts__10704__auto__, children__10705__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var header = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21320__i = 0, G__21320__a = new Array(arguments.length - 1);
      while (G__21320__i < G__21320__a.length) {
        G__21320__a[G__21320__i] = arguments[G__21320__i + 1];
        ++G__21320__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21320__a, 0);
    }
    return header__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__21321) {
    var opts__10704__auto__ = cljs.core.first(arglist__21321);
    var children__10705__auto__ = cljs.core.rest(arglist__21321);
    return header__delegate(opts__10704__auto__, children__10705__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var hr = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21322__i = 0, G__21322__a = new Array(arguments.length - 1);
      while (G__21322__i < G__21322__a.length) {
        G__21322__a[G__21322__i] = arguments[G__21322__i + 1];
        ++G__21322__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21322__a, 0);
    }
    return hr__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__21323) {
    var opts__10704__auto__ = cljs.core.first(arglist__21323);
    var children__10705__auto__ = cljs.core.rest(arglist__21323);
    return hr__delegate(opts__10704__auto__, children__10705__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var html = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21324__i = 0, G__21324__a = new Array(arguments.length - 1);
      while (G__21324__i < G__21324__a.length) {
        G__21324__a[G__21324__i] = arguments[G__21324__i + 1];
        ++G__21324__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21324__a, 0);
    }
    return html__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__21325) {
    var opts__10704__auto__ = cljs.core.first(arglist__21325);
    var children__10705__auto__ = cljs.core.rest(arglist__21325);
    return html__delegate(opts__10704__auto__, children__10705__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var i = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21326__i = 0, G__21326__a = new Array(arguments.length - 1);
      while (G__21326__i < G__21326__a.length) {
        G__21326__a[G__21326__i] = arguments[G__21326__i + 1];
        ++G__21326__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21326__a, 0);
    }
    return i__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__21327) {
    var opts__10704__auto__ = cljs.core.first(arglist__21327);
    var children__10705__auto__ = cljs.core.rest(arglist__21327);
    return i__delegate(opts__10704__auto__, children__10705__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var iframe = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21328__i = 0, G__21328__a = new Array(arguments.length - 1);
      while (G__21328__i < G__21328__a.length) {
        G__21328__a[G__21328__i] = arguments[G__21328__i + 1];
        ++G__21328__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21328__a, 0);
    }
    return iframe__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__21329) {
    var opts__10704__auto__ = cljs.core.first(arglist__21329);
    var children__10705__auto__ = cljs.core.rest(arglist__21329);
    return iframe__delegate(opts__10704__auto__, children__10705__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var img = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21330__i = 0, G__21330__a = new Array(arguments.length - 1);
      while (G__21330__i < G__21330__a.length) {
        G__21330__a[G__21330__i] = arguments[G__21330__i + 1];
        ++G__21330__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21330__a, 0);
    }
    return img__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__21331) {
    var opts__10704__auto__ = cljs.core.first(arglist__21331);
    var children__10705__auto__ = cljs.core.rest(arglist__21331);
    return img__delegate(opts__10704__auto__, children__10705__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var ins = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21332__i = 0, G__21332__a = new Array(arguments.length - 1);
      while (G__21332__i < G__21332__a.length) {
        G__21332__a[G__21332__i] = arguments[G__21332__i + 1];
        ++G__21332__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21332__a, 0);
    }
    return ins__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__21333) {
    var opts__10704__auto__ = cljs.core.first(arglist__21333);
    var children__10705__auto__ = cljs.core.rest(arglist__21333);
    return ins__delegate(opts__10704__auto__, children__10705__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var kbd = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21334__i = 0, G__21334__a = new Array(arguments.length - 1);
      while (G__21334__i < G__21334__a.length) {
        G__21334__a[G__21334__i] = arguments[G__21334__i + 1];
        ++G__21334__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21334__a, 0);
    }
    return kbd__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__21335) {
    var opts__10704__auto__ = cljs.core.first(arglist__21335);
    var children__10705__auto__ = cljs.core.rest(arglist__21335);
    return kbd__delegate(opts__10704__auto__, children__10705__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var keygen = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21336__i = 0, G__21336__a = new Array(arguments.length - 1);
      while (G__21336__i < G__21336__a.length) {
        G__21336__a[G__21336__i] = arguments[G__21336__i + 1];
        ++G__21336__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21336__a, 0);
    }
    return keygen__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__21337) {
    var opts__10704__auto__ = cljs.core.first(arglist__21337);
    var children__10705__auto__ = cljs.core.rest(arglist__21337);
    return keygen__delegate(opts__10704__auto__, children__10705__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var label = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21338__i = 0, G__21338__a = new Array(arguments.length - 1);
      while (G__21338__i < G__21338__a.length) {
        G__21338__a[G__21338__i] = arguments[G__21338__i + 1];
        ++G__21338__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21338__a, 0);
    }
    return label__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__21339) {
    var opts__10704__auto__ = cljs.core.first(arglist__21339);
    var children__10705__auto__ = cljs.core.rest(arglist__21339);
    return label__delegate(opts__10704__auto__, children__10705__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var legend = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21340__i = 0, G__21340__a = new Array(arguments.length - 1);
      while (G__21340__i < G__21340__a.length) {
        G__21340__a[G__21340__i] = arguments[G__21340__i + 1];
        ++G__21340__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21340__a, 0);
    }
    return legend__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__21341) {
    var opts__10704__auto__ = cljs.core.first(arglist__21341);
    var children__10705__auto__ = cljs.core.rest(arglist__21341);
    return legend__delegate(opts__10704__auto__, children__10705__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var li = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21342__i = 0, G__21342__a = new Array(arguments.length - 1);
      while (G__21342__i < G__21342__a.length) {
        G__21342__a[G__21342__i] = arguments[G__21342__i + 1];
        ++G__21342__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21342__a, 0);
    }
    return li__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__21343) {
    var opts__10704__auto__ = cljs.core.first(arglist__21343);
    var children__10705__auto__ = cljs.core.rest(arglist__21343);
    return li__delegate(opts__10704__auto__, children__10705__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var link = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21344__i = 0, G__21344__a = new Array(arguments.length - 1);
      while (G__21344__i < G__21344__a.length) {
        G__21344__a[G__21344__i] = arguments[G__21344__i + 1];
        ++G__21344__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21344__a, 0);
    }
    return link__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__21345) {
    var opts__10704__auto__ = cljs.core.first(arglist__21345);
    var children__10705__auto__ = cljs.core.rest(arglist__21345);
    return link__delegate(opts__10704__auto__, children__10705__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var main = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21346__i = 0, G__21346__a = new Array(arguments.length - 1);
      while (G__21346__i < G__21346__a.length) {
        G__21346__a[G__21346__i] = arguments[G__21346__i + 1];
        ++G__21346__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21346__a, 0);
    }
    return main__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__21347) {
    var opts__10704__auto__ = cljs.core.first(arglist__21347);
    var children__10705__auto__ = cljs.core.rest(arglist__21347);
    return main__delegate(opts__10704__auto__, children__10705__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var map = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21348__i = 0, G__21348__a = new Array(arguments.length - 1);
      while (G__21348__i < G__21348__a.length) {
        G__21348__a[G__21348__i] = arguments[G__21348__i + 1];
        ++G__21348__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21348__a, 0);
    }
    return map__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__21349) {
    var opts__10704__auto__ = cljs.core.first(arglist__21349);
    var children__10705__auto__ = cljs.core.rest(arglist__21349);
    return map__delegate(opts__10704__auto__, children__10705__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var mark = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21350__i = 0, G__21350__a = new Array(arguments.length - 1);
      while (G__21350__i < G__21350__a.length) {
        G__21350__a[G__21350__i] = arguments[G__21350__i + 1];
        ++G__21350__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21350__a, 0);
    }
    return mark__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__21351) {
    var opts__10704__auto__ = cljs.core.first(arglist__21351);
    var children__10705__auto__ = cljs.core.rest(arglist__21351);
    return mark__delegate(opts__10704__auto__, children__10705__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.marquee = function() {
  var marquee__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.marquee.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var marquee = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21352__i = 0, G__21352__a = new Array(arguments.length - 1);
      while (G__21352__i < G__21352__a.length) {
        G__21352__a[G__21352__i] = arguments[G__21352__i + 1];
        ++G__21352__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21352__a, 0);
    }
    return marquee__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  marquee.cljs$lang$maxFixedArity = 1;
  marquee.cljs$lang$applyTo = function(arglist__21353) {
    var opts__10704__auto__ = cljs.core.first(arglist__21353);
    var children__10705__auto__ = cljs.core.rest(arglist__21353);
    return marquee__delegate(opts__10704__auto__, children__10705__auto__);
  };
  marquee.cljs$core$IFn$_invoke$arity$variadic = marquee__delegate;
  return marquee;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var menu = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21354__i = 0, G__21354__a = new Array(arguments.length - 1);
      while (G__21354__i < G__21354__a.length) {
        G__21354__a[G__21354__i] = arguments[G__21354__i + 1];
        ++G__21354__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21354__a, 0);
    }
    return menu__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__21355) {
    var opts__10704__auto__ = cljs.core.first(arglist__21355);
    var children__10705__auto__ = cljs.core.rest(arglist__21355);
    return menu__delegate(opts__10704__auto__, children__10705__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var menuitem = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21356__i = 0, G__21356__a = new Array(arguments.length - 1);
      while (G__21356__i < G__21356__a.length) {
        G__21356__a[G__21356__i] = arguments[G__21356__i + 1];
        ++G__21356__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21356__a, 0);
    }
    return menuitem__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__21357) {
    var opts__10704__auto__ = cljs.core.first(arglist__21357);
    var children__10705__auto__ = cljs.core.rest(arglist__21357);
    return menuitem__delegate(opts__10704__auto__, children__10705__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var meta = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21358__i = 0, G__21358__a = new Array(arguments.length - 1);
      while (G__21358__i < G__21358__a.length) {
        G__21358__a[G__21358__i] = arguments[G__21358__i + 1];
        ++G__21358__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21358__a, 0);
    }
    return meta__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__21359) {
    var opts__10704__auto__ = cljs.core.first(arglist__21359);
    var children__10705__auto__ = cljs.core.rest(arglist__21359);
    return meta__delegate(opts__10704__auto__, children__10705__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var meter = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21360__i = 0, G__21360__a = new Array(arguments.length - 1);
      while (G__21360__i < G__21360__a.length) {
        G__21360__a[G__21360__i] = arguments[G__21360__i + 1];
        ++G__21360__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21360__a, 0);
    }
    return meter__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__21361) {
    var opts__10704__auto__ = cljs.core.first(arglist__21361);
    var children__10705__auto__ = cljs.core.rest(arglist__21361);
    return meter__delegate(opts__10704__auto__, children__10705__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var nav = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21362__i = 0, G__21362__a = new Array(arguments.length - 1);
      while (G__21362__i < G__21362__a.length) {
        G__21362__a[G__21362__i] = arguments[G__21362__i + 1];
        ++G__21362__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21362__a, 0);
    }
    return nav__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__21363) {
    var opts__10704__auto__ = cljs.core.first(arglist__21363);
    var children__10705__auto__ = cljs.core.rest(arglist__21363);
    return nav__delegate(opts__10704__auto__, children__10705__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var noscript = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21364__i = 0, G__21364__a = new Array(arguments.length - 1);
      while (G__21364__i < G__21364__a.length) {
        G__21364__a[G__21364__i] = arguments[G__21364__i + 1];
        ++G__21364__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21364__a, 0);
    }
    return noscript__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__21365) {
    var opts__10704__auto__ = cljs.core.first(arglist__21365);
    var children__10705__auto__ = cljs.core.rest(arglist__21365);
    return noscript__delegate(opts__10704__auto__, children__10705__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var object = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21366__i = 0, G__21366__a = new Array(arguments.length - 1);
      while (G__21366__i < G__21366__a.length) {
        G__21366__a[G__21366__i] = arguments[G__21366__i + 1];
        ++G__21366__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21366__a, 0);
    }
    return object__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__21367) {
    var opts__10704__auto__ = cljs.core.first(arglist__21367);
    var children__10705__auto__ = cljs.core.rest(arglist__21367);
    return object__delegate(opts__10704__auto__, children__10705__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var ol = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21368__i = 0, G__21368__a = new Array(arguments.length - 1);
      while (G__21368__i < G__21368__a.length) {
        G__21368__a[G__21368__i] = arguments[G__21368__i + 1];
        ++G__21368__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21368__a, 0);
    }
    return ol__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__21369) {
    var opts__10704__auto__ = cljs.core.first(arglist__21369);
    var children__10705__auto__ = cljs.core.rest(arglist__21369);
    return ol__delegate(opts__10704__auto__, children__10705__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var optgroup = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21370__i = 0, G__21370__a = new Array(arguments.length - 1);
      while (G__21370__i < G__21370__a.length) {
        G__21370__a[G__21370__i] = arguments[G__21370__i + 1];
        ++G__21370__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21370__a, 0);
    }
    return optgroup__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__21371) {
    var opts__10704__auto__ = cljs.core.first(arglist__21371);
    var children__10705__auto__ = cljs.core.rest(arglist__21371);
    return optgroup__delegate(opts__10704__auto__, children__10705__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var output = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21372__i = 0, G__21372__a = new Array(arguments.length - 1);
      while (G__21372__i < G__21372__a.length) {
        G__21372__a[G__21372__i] = arguments[G__21372__i + 1];
        ++G__21372__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21372__a, 0);
    }
    return output__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__21373) {
    var opts__10704__auto__ = cljs.core.first(arglist__21373);
    var children__10705__auto__ = cljs.core.rest(arglist__21373);
    return output__delegate(opts__10704__auto__, children__10705__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var p = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21374__i = 0, G__21374__a = new Array(arguments.length - 1);
      while (G__21374__i < G__21374__a.length) {
        G__21374__a[G__21374__i] = arguments[G__21374__i + 1];
        ++G__21374__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21374__a, 0);
    }
    return p__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__21375) {
    var opts__10704__auto__ = cljs.core.first(arglist__21375);
    var children__10705__auto__ = cljs.core.rest(arglist__21375);
    return p__delegate(opts__10704__auto__, children__10705__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var param = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21376__i = 0, G__21376__a = new Array(arguments.length - 1);
      while (G__21376__i < G__21376__a.length) {
        G__21376__a[G__21376__i] = arguments[G__21376__i + 1];
        ++G__21376__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21376__a, 0);
    }
    return param__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__21377) {
    var opts__10704__auto__ = cljs.core.first(arglist__21377);
    var children__10705__auto__ = cljs.core.rest(arglist__21377);
    return param__delegate(opts__10704__auto__, children__10705__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var pre = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21378__i = 0, G__21378__a = new Array(arguments.length - 1);
      while (G__21378__i < G__21378__a.length) {
        G__21378__a[G__21378__i] = arguments[G__21378__i + 1];
        ++G__21378__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21378__a, 0);
    }
    return pre__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__21379) {
    var opts__10704__auto__ = cljs.core.first(arglist__21379);
    var children__10705__auto__ = cljs.core.rest(arglist__21379);
    return pre__delegate(opts__10704__auto__, children__10705__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var progress = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21380__i = 0, G__21380__a = new Array(arguments.length - 1);
      while (G__21380__i < G__21380__a.length) {
        G__21380__a[G__21380__i] = arguments[G__21380__i + 1];
        ++G__21380__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21380__a, 0);
    }
    return progress__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__21381) {
    var opts__10704__auto__ = cljs.core.first(arglist__21381);
    var children__10705__auto__ = cljs.core.rest(arglist__21381);
    return progress__delegate(opts__10704__auto__, children__10705__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var q = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21382__i = 0, G__21382__a = new Array(arguments.length - 1);
      while (G__21382__i < G__21382__a.length) {
        G__21382__a[G__21382__i] = arguments[G__21382__i + 1];
        ++G__21382__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21382__a, 0);
    }
    return q__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__21383) {
    var opts__10704__auto__ = cljs.core.first(arglist__21383);
    var children__10705__auto__ = cljs.core.rest(arglist__21383);
    return q__delegate(opts__10704__auto__, children__10705__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var rp = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21384__i = 0, G__21384__a = new Array(arguments.length - 1);
      while (G__21384__i < G__21384__a.length) {
        G__21384__a[G__21384__i] = arguments[G__21384__i + 1];
        ++G__21384__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21384__a, 0);
    }
    return rp__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__21385) {
    var opts__10704__auto__ = cljs.core.first(arglist__21385);
    var children__10705__auto__ = cljs.core.rest(arglist__21385);
    return rp__delegate(opts__10704__auto__, children__10705__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var rt = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21386__i = 0, G__21386__a = new Array(arguments.length - 1);
      while (G__21386__i < G__21386__a.length) {
        G__21386__a[G__21386__i] = arguments[G__21386__i + 1];
        ++G__21386__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21386__a, 0);
    }
    return rt__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__21387) {
    var opts__10704__auto__ = cljs.core.first(arglist__21387);
    var children__10705__auto__ = cljs.core.rest(arglist__21387);
    return rt__delegate(opts__10704__auto__, children__10705__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var ruby = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21388__i = 0, G__21388__a = new Array(arguments.length - 1);
      while (G__21388__i < G__21388__a.length) {
        G__21388__a[G__21388__i] = arguments[G__21388__i + 1];
        ++G__21388__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21388__a, 0);
    }
    return ruby__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__21389) {
    var opts__10704__auto__ = cljs.core.first(arglist__21389);
    var children__10705__auto__ = cljs.core.rest(arglist__21389);
    return ruby__delegate(opts__10704__auto__, children__10705__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var s = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21390__i = 0, G__21390__a = new Array(arguments.length - 1);
      while (G__21390__i < G__21390__a.length) {
        G__21390__a[G__21390__i] = arguments[G__21390__i + 1];
        ++G__21390__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21390__a, 0);
    }
    return s__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__21391) {
    var opts__10704__auto__ = cljs.core.first(arglist__21391);
    var children__10705__auto__ = cljs.core.rest(arglist__21391);
    return s__delegate(opts__10704__auto__, children__10705__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var samp = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21392__i = 0, G__21392__a = new Array(arguments.length - 1);
      while (G__21392__i < G__21392__a.length) {
        G__21392__a[G__21392__i] = arguments[G__21392__i + 1];
        ++G__21392__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21392__a, 0);
    }
    return samp__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__21393) {
    var opts__10704__auto__ = cljs.core.first(arglist__21393);
    var children__10705__auto__ = cljs.core.rest(arglist__21393);
    return samp__delegate(opts__10704__auto__, children__10705__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var script = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21394__i = 0, G__21394__a = new Array(arguments.length - 1);
      while (G__21394__i < G__21394__a.length) {
        G__21394__a[G__21394__i] = arguments[G__21394__i + 1];
        ++G__21394__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21394__a, 0);
    }
    return script__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__21395) {
    var opts__10704__auto__ = cljs.core.first(arglist__21395);
    var children__10705__auto__ = cljs.core.rest(arglist__21395);
    return script__delegate(opts__10704__auto__, children__10705__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var section = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21396__i = 0, G__21396__a = new Array(arguments.length - 1);
      while (G__21396__i < G__21396__a.length) {
        G__21396__a[G__21396__i] = arguments[G__21396__i + 1];
        ++G__21396__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21396__a, 0);
    }
    return section__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__21397) {
    var opts__10704__auto__ = cljs.core.first(arglist__21397);
    var children__10705__auto__ = cljs.core.rest(arglist__21397);
    return section__delegate(opts__10704__auto__, children__10705__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var select = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21398__i = 0, G__21398__a = new Array(arguments.length - 1);
      while (G__21398__i < G__21398__a.length) {
        G__21398__a[G__21398__i] = arguments[G__21398__i + 1];
        ++G__21398__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21398__a, 0);
    }
    return select__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__21399) {
    var opts__10704__auto__ = cljs.core.first(arglist__21399);
    var children__10705__auto__ = cljs.core.rest(arglist__21399);
    return select__delegate(opts__10704__auto__, children__10705__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var small = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21400__i = 0, G__21400__a = new Array(arguments.length - 1);
      while (G__21400__i < G__21400__a.length) {
        G__21400__a[G__21400__i] = arguments[G__21400__i + 1];
        ++G__21400__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21400__a, 0);
    }
    return small__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__21401) {
    var opts__10704__auto__ = cljs.core.first(arglist__21401);
    var children__10705__auto__ = cljs.core.rest(arglist__21401);
    return small__delegate(opts__10704__auto__, children__10705__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var source = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21402__i = 0, G__21402__a = new Array(arguments.length - 1);
      while (G__21402__i < G__21402__a.length) {
        G__21402__a[G__21402__i] = arguments[G__21402__i + 1];
        ++G__21402__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21402__a, 0);
    }
    return source__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__21403) {
    var opts__10704__auto__ = cljs.core.first(arglist__21403);
    var children__10705__auto__ = cljs.core.rest(arglist__21403);
    return source__delegate(opts__10704__auto__, children__10705__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var span = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21404__i = 0, G__21404__a = new Array(arguments.length - 1);
      while (G__21404__i < G__21404__a.length) {
        G__21404__a[G__21404__i] = arguments[G__21404__i + 1];
        ++G__21404__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21404__a, 0);
    }
    return span__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__21405) {
    var opts__10704__auto__ = cljs.core.first(arglist__21405);
    var children__10705__auto__ = cljs.core.rest(arglist__21405);
    return span__delegate(opts__10704__auto__, children__10705__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var strong = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21406__i = 0, G__21406__a = new Array(arguments.length - 1);
      while (G__21406__i < G__21406__a.length) {
        G__21406__a[G__21406__i] = arguments[G__21406__i + 1];
        ++G__21406__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21406__a, 0);
    }
    return strong__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__21407) {
    var opts__10704__auto__ = cljs.core.first(arglist__21407);
    var children__10705__auto__ = cljs.core.rest(arglist__21407);
    return strong__delegate(opts__10704__auto__, children__10705__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var style = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21408__i = 0, G__21408__a = new Array(arguments.length - 1);
      while (G__21408__i < G__21408__a.length) {
        G__21408__a[G__21408__i] = arguments[G__21408__i + 1];
        ++G__21408__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21408__a, 0);
    }
    return style__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__21409) {
    var opts__10704__auto__ = cljs.core.first(arglist__21409);
    var children__10705__auto__ = cljs.core.rest(arglist__21409);
    return style__delegate(opts__10704__auto__, children__10705__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var sub = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21410__i = 0, G__21410__a = new Array(arguments.length - 1);
      while (G__21410__i < G__21410__a.length) {
        G__21410__a[G__21410__i] = arguments[G__21410__i + 1];
        ++G__21410__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21410__a, 0);
    }
    return sub__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__21411) {
    var opts__10704__auto__ = cljs.core.first(arglist__21411);
    var children__10705__auto__ = cljs.core.rest(arglist__21411);
    return sub__delegate(opts__10704__auto__, children__10705__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var summary = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21412__i = 0, G__21412__a = new Array(arguments.length - 1);
      while (G__21412__i < G__21412__a.length) {
        G__21412__a[G__21412__i] = arguments[G__21412__i + 1];
        ++G__21412__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21412__a, 0);
    }
    return summary__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__21413) {
    var opts__10704__auto__ = cljs.core.first(arglist__21413);
    var children__10705__auto__ = cljs.core.rest(arglist__21413);
    return summary__delegate(opts__10704__auto__, children__10705__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var sup = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21414__i = 0, G__21414__a = new Array(arguments.length - 1);
      while (G__21414__i < G__21414__a.length) {
        G__21414__a[G__21414__i] = arguments[G__21414__i + 1];
        ++G__21414__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21414__a, 0);
    }
    return sup__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__21415) {
    var opts__10704__auto__ = cljs.core.first(arglist__21415);
    var children__10705__auto__ = cljs.core.rest(arglist__21415);
    return sup__delegate(opts__10704__auto__, children__10705__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var table = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21416__i = 0, G__21416__a = new Array(arguments.length - 1);
      while (G__21416__i < G__21416__a.length) {
        G__21416__a[G__21416__i] = arguments[G__21416__i + 1];
        ++G__21416__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21416__a, 0);
    }
    return table__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__21417) {
    var opts__10704__auto__ = cljs.core.first(arglist__21417);
    var children__10705__auto__ = cljs.core.rest(arglist__21417);
    return table__delegate(opts__10704__auto__, children__10705__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var tbody = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21418__i = 0, G__21418__a = new Array(arguments.length - 1);
      while (G__21418__i < G__21418__a.length) {
        G__21418__a[G__21418__i] = arguments[G__21418__i + 1];
        ++G__21418__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21418__a, 0);
    }
    return tbody__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__21419) {
    var opts__10704__auto__ = cljs.core.first(arglist__21419);
    var children__10705__auto__ = cljs.core.rest(arglist__21419);
    return tbody__delegate(opts__10704__auto__, children__10705__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var td = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21420__i = 0, G__21420__a = new Array(arguments.length - 1);
      while (G__21420__i < G__21420__a.length) {
        G__21420__a[G__21420__i] = arguments[G__21420__i + 1];
        ++G__21420__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21420__a, 0);
    }
    return td__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__21421) {
    var opts__10704__auto__ = cljs.core.first(arglist__21421);
    var children__10705__auto__ = cljs.core.rest(arglist__21421);
    return td__delegate(opts__10704__auto__, children__10705__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var tfoot = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21422__i = 0, G__21422__a = new Array(arguments.length - 1);
      while (G__21422__i < G__21422__a.length) {
        G__21422__a[G__21422__i] = arguments[G__21422__i + 1];
        ++G__21422__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21422__a, 0);
    }
    return tfoot__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__21423) {
    var opts__10704__auto__ = cljs.core.first(arglist__21423);
    var children__10705__auto__ = cljs.core.rest(arglist__21423);
    return tfoot__delegate(opts__10704__auto__, children__10705__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var th = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21424__i = 0, G__21424__a = new Array(arguments.length - 1);
      while (G__21424__i < G__21424__a.length) {
        G__21424__a[G__21424__i] = arguments[G__21424__i + 1];
        ++G__21424__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21424__a, 0);
    }
    return th__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__21425) {
    var opts__10704__auto__ = cljs.core.first(arglist__21425);
    var children__10705__auto__ = cljs.core.rest(arglist__21425);
    return th__delegate(opts__10704__auto__, children__10705__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var thead = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21426__i = 0, G__21426__a = new Array(arguments.length - 1);
      while (G__21426__i < G__21426__a.length) {
        G__21426__a[G__21426__i] = arguments[G__21426__i + 1];
        ++G__21426__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21426__a, 0);
    }
    return thead__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__21427) {
    var opts__10704__auto__ = cljs.core.first(arglist__21427);
    var children__10705__auto__ = cljs.core.rest(arglist__21427);
    return thead__delegate(opts__10704__auto__, children__10705__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var time = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21428__i = 0, G__21428__a = new Array(arguments.length - 1);
      while (G__21428__i < G__21428__a.length) {
        G__21428__a[G__21428__i] = arguments[G__21428__i + 1];
        ++G__21428__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21428__a, 0);
    }
    return time__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__21429) {
    var opts__10704__auto__ = cljs.core.first(arglist__21429);
    var children__10705__auto__ = cljs.core.rest(arglist__21429);
    return time__delegate(opts__10704__auto__, children__10705__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var title = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21430__i = 0, G__21430__a = new Array(arguments.length - 1);
      while (G__21430__i < G__21430__a.length) {
        G__21430__a[G__21430__i] = arguments[G__21430__i + 1];
        ++G__21430__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21430__a, 0);
    }
    return title__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__21431) {
    var opts__10704__auto__ = cljs.core.first(arglist__21431);
    var children__10705__auto__ = cljs.core.rest(arglist__21431);
    return title__delegate(opts__10704__auto__, children__10705__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var tr = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21432__i = 0, G__21432__a = new Array(arguments.length - 1);
      while (G__21432__i < G__21432__a.length) {
        G__21432__a[G__21432__i] = arguments[G__21432__i + 1];
        ++G__21432__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21432__a, 0);
    }
    return tr__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__21433) {
    var opts__10704__auto__ = cljs.core.first(arglist__21433);
    var children__10705__auto__ = cljs.core.rest(arglist__21433);
    return tr__delegate(opts__10704__auto__, children__10705__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var track = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21434__i = 0, G__21434__a = new Array(arguments.length - 1);
      while (G__21434__i < G__21434__a.length) {
        G__21434__a[G__21434__i] = arguments[G__21434__i + 1];
        ++G__21434__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21434__a, 0);
    }
    return track__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__21435) {
    var opts__10704__auto__ = cljs.core.first(arglist__21435);
    var children__10705__auto__ = cljs.core.rest(arglist__21435);
    return track__delegate(opts__10704__auto__, children__10705__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var u = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21436__i = 0, G__21436__a = new Array(arguments.length - 1);
      while (G__21436__i < G__21436__a.length) {
        G__21436__a[G__21436__i] = arguments[G__21436__i + 1];
        ++G__21436__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21436__a, 0);
    }
    return u__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__21437) {
    var opts__10704__auto__ = cljs.core.first(arglist__21437);
    var children__10705__auto__ = cljs.core.rest(arglist__21437);
    return u__delegate(opts__10704__auto__, children__10705__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var ul = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21438__i = 0, G__21438__a = new Array(arguments.length - 1);
      while (G__21438__i < G__21438__a.length) {
        G__21438__a[G__21438__i] = arguments[G__21438__i + 1];
        ++G__21438__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21438__a, 0);
    }
    return ul__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__21439) {
    var opts__10704__auto__ = cljs.core.first(arglist__21439);
    var children__10705__auto__ = cljs.core.rest(arglist__21439);
    return ul__delegate(opts__10704__auto__, children__10705__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var var$ = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21440__i = 0, G__21440__a = new Array(arguments.length - 1);
      while (G__21440__i < G__21440__a.length) {
        G__21440__a[G__21440__i] = arguments[G__21440__i + 1];
        ++G__21440__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21440__a, 0);
    }
    return var$__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__21441) {
    var opts__10704__auto__ = cljs.core.first(arglist__21441);
    var children__10705__auto__ = cljs.core.rest(arglist__21441);
    return var$__delegate(opts__10704__auto__, children__10705__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var video = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21442__i = 0, G__21442__a = new Array(arguments.length - 1);
      while (G__21442__i < G__21442__a.length) {
        G__21442__a[G__21442__i] = arguments[G__21442__i + 1];
        ++G__21442__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21442__a, 0);
    }
    return video__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__21443) {
    var opts__10704__auto__ = cljs.core.first(arglist__21443);
    var children__10705__auto__ = cljs.core.rest(arglist__21443);
    return video__delegate(opts__10704__auto__, children__10705__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var wbr = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21444__i = 0, G__21444__a = new Array(arguments.length - 1);
      while (G__21444__i < G__21444__a.length) {
        G__21444__a[G__21444__i] = arguments[G__21444__i + 1];
        ++G__21444__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21444__a, 0);
    }
    return wbr__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__21445) {
    var opts__10704__auto__ = cljs.core.first(arglist__21445);
    var children__10705__auto__ = cljs.core.rest(arglist__21445);
    return wbr__delegate(opts__10704__auto__, children__10705__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var circle = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21446__i = 0, G__21446__a = new Array(arguments.length - 1);
      while (G__21446__i < G__21446__a.length) {
        G__21446__a[G__21446__i] = arguments[G__21446__i + 1];
        ++G__21446__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21446__a, 0);
    }
    return circle__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__21447) {
    var opts__10704__auto__ = cljs.core.first(arglist__21447);
    var children__10705__auto__ = cljs.core.rest(arglist__21447);
    return circle__delegate(opts__10704__auto__, children__10705__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.ellipse = function() {
  var ellipse__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.ellipse.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var ellipse = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21448__i = 0, G__21448__a = new Array(arguments.length - 1);
      while (G__21448__i < G__21448__a.length) {
        G__21448__a[G__21448__i] = arguments[G__21448__i + 1];
        ++G__21448__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21448__a, 0);
    }
    return ellipse__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  ellipse.cljs$lang$maxFixedArity = 1;
  ellipse.cljs$lang$applyTo = function(arglist__21449) {
    var opts__10704__auto__ = cljs.core.first(arglist__21449);
    var children__10705__auto__ = cljs.core.rest(arglist__21449);
    return ellipse__delegate(opts__10704__auto__, children__10705__auto__);
  };
  ellipse.cljs$core$IFn$_invoke$arity$variadic = ellipse__delegate;
  return ellipse;
}();
om.dom.g = function() {
  var g__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var g = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21450__i = 0, G__21450__a = new Array(arguments.length - 1);
      while (G__21450__i < G__21450__a.length) {
        G__21450__a[G__21450__i] = arguments[G__21450__i + 1];
        ++G__21450__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21450__a, 0);
    }
    return g__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__21451) {
    var opts__10704__auto__ = cljs.core.first(arglist__21451);
    var children__10705__auto__ = cljs.core.rest(arglist__21451);
    return g__delegate(opts__10704__auto__, children__10705__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var line = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21452__i = 0, G__21452__a = new Array(arguments.length - 1);
      while (G__21452__i < G__21452__a.length) {
        G__21452__a[G__21452__i] = arguments[G__21452__i + 1];
        ++G__21452__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21452__a, 0);
    }
    return line__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__21453) {
    var opts__10704__auto__ = cljs.core.first(arglist__21453);
    var children__10705__auto__ = cljs.core.rest(arglist__21453);
    return line__delegate(opts__10704__auto__, children__10705__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var path = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21454__i = 0, G__21454__a = new Array(arguments.length - 1);
      while (G__21454__i < G__21454__a.length) {
        G__21454__a[G__21454__i] = arguments[G__21454__i + 1];
        ++G__21454__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21454__a, 0);
    }
    return path__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__21455) {
    var opts__10704__auto__ = cljs.core.first(arglist__21455);
    var children__10705__auto__ = cljs.core.rest(arglist__21455);
    return path__delegate(opts__10704__auto__, children__10705__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var polyline = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21456__i = 0, G__21456__a = new Array(arguments.length - 1);
      while (G__21456__i < G__21456__a.length) {
        G__21456__a[G__21456__i] = arguments[G__21456__i + 1];
        ++G__21456__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21456__a, 0);
    }
    return polyline__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__21457) {
    var opts__10704__auto__ = cljs.core.first(arglist__21457);
    var children__10705__auto__ = cljs.core.rest(arglist__21457);
    return polyline__delegate(opts__10704__auto__, children__10705__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var rect = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21458__i = 0, G__21458__a = new Array(arguments.length - 1);
      while (G__21458__i < G__21458__a.length) {
        G__21458__a[G__21458__i] = arguments[G__21458__i + 1];
        ++G__21458__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21458__a, 0);
    }
    return rect__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__21459) {
    var opts__10704__auto__ = cljs.core.first(arglist__21459);
    var children__10705__auto__ = cljs.core.rest(arglist__21459);
    return rect__delegate(opts__10704__auto__, children__10705__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var svg = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21460__i = 0, G__21460__a = new Array(arguments.length - 1);
      while (G__21460__i < G__21460__a.length) {
        G__21460__a[G__21460__i] = arguments[G__21460__i + 1];
        ++G__21460__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21460__a, 0);
    }
    return svg__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__21461) {
    var opts__10704__auto__ = cljs.core.first(arglist__21461);
    var children__10705__auto__ = cljs.core.rest(arglist__21461);
    return svg__delegate(opts__10704__auto__, children__10705__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var text = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21462__i = 0, G__21462__a = new Array(arguments.length - 1);
      while (G__21462__i < G__21462__a.length) {
        G__21462__a[G__21462__i] = arguments[G__21462__i + 1];
        ++G__21462__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21462__a, 0);
    }
    return text__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__21463) {
    var opts__10704__auto__ = cljs.core.first(arglist__21463);
    var children__10705__auto__ = cljs.core.rest(arglist__21463);
    return text__delegate(opts__10704__auto__, children__10705__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.defs = function() {
  var defs__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.defs.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var defs = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21464__i = 0, G__21464__a = new Array(arguments.length - 1);
      while (G__21464__i < G__21464__a.length) {
        G__21464__a[G__21464__i] = arguments[G__21464__i + 1];
        ++G__21464__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21464__a, 0);
    }
    return defs__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  defs.cljs$lang$maxFixedArity = 1;
  defs.cljs$lang$applyTo = function(arglist__21465) {
    var opts__10704__auto__ = cljs.core.first(arglist__21465);
    var children__10705__auto__ = cljs.core.rest(arglist__21465);
    return defs__delegate(opts__10704__auto__, children__10705__auto__);
  };
  defs.cljs$core$IFn$_invoke$arity$variadic = defs__delegate;
  return defs;
}();
om.dom.linearGradient = function() {
  var linearGradient__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.linearGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var linearGradient = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21466__i = 0, G__21466__a = new Array(arguments.length - 1);
      while (G__21466__i < G__21466__a.length) {
        G__21466__a[G__21466__i] = arguments[G__21466__i + 1];
        ++G__21466__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21466__a, 0);
    }
    return linearGradient__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  linearGradient.cljs$lang$maxFixedArity = 1;
  linearGradient.cljs$lang$applyTo = function(arglist__21467) {
    var opts__10704__auto__ = cljs.core.first(arglist__21467);
    var children__10705__auto__ = cljs.core.rest(arglist__21467);
    return linearGradient__delegate(opts__10704__auto__, children__10705__auto__);
  };
  linearGradient.cljs$core$IFn$_invoke$arity$variadic = linearGradient__delegate;
  return linearGradient;
}();
om.dom.polygon = function() {
  var polygon__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.polygon.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var polygon = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21468__i = 0, G__21468__a = new Array(arguments.length - 1);
      while (G__21468__i < G__21468__a.length) {
        G__21468__a[G__21468__i] = arguments[G__21468__i + 1];
        ++G__21468__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21468__a, 0);
    }
    return polygon__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  polygon.cljs$lang$maxFixedArity = 1;
  polygon.cljs$lang$applyTo = function(arglist__21469) {
    var opts__10704__auto__ = cljs.core.first(arglist__21469);
    var children__10705__auto__ = cljs.core.rest(arglist__21469);
    return polygon__delegate(opts__10704__auto__, children__10705__auto__);
  };
  polygon.cljs$core$IFn$_invoke$arity$variadic = polygon__delegate;
  return polygon;
}();
om.dom.radialGradient = function() {
  var radialGradient__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.radialGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var radialGradient = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21470__i = 0, G__21470__a = new Array(arguments.length - 1);
      while (G__21470__i < G__21470__a.length) {
        G__21470__a[G__21470__i] = arguments[G__21470__i + 1];
        ++G__21470__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21470__a, 0);
    }
    return radialGradient__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  radialGradient.cljs$lang$maxFixedArity = 1;
  radialGradient.cljs$lang$applyTo = function(arglist__21471) {
    var opts__10704__auto__ = cljs.core.first(arglist__21471);
    var children__10705__auto__ = cljs.core.rest(arglist__21471);
    return radialGradient__delegate(opts__10704__auto__, children__10705__auto__);
  };
  radialGradient.cljs$core$IFn$_invoke$arity$variadic = radialGradient__delegate;
  return radialGradient;
}();
om.dom.stop = function() {
  var stop__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.stop.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var stop = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21472__i = 0, G__21472__a = new Array(arguments.length - 1);
      while (G__21472__i < G__21472__a.length) {
        G__21472__a[G__21472__i] = arguments[G__21472__i + 1];
        ++G__21472__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21472__a, 0);
    }
    return stop__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  stop.cljs$lang$maxFixedArity = 1;
  stop.cljs$lang$applyTo = function(arglist__21473) {
    var opts__10704__auto__ = cljs.core.first(arglist__21473);
    var children__10705__auto__ = cljs.core.rest(arglist__21473);
    return stop__delegate(opts__10704__auto__, children__10705__auto__);
  };
  stop.cljs$core$IFn$_invoke$arity$variadic = stop__delegate;
  return stop;
}();
om.dom.tspan = function() {
  var tspan__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.tspan.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var tspan = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21474__i = 0, G__21474__a = new Array(arguments.length - 1);
      while (G__21474__i < G__21474__a.length) {
        G__21474__a[G__21474__i] = arguments[G__21474__i + 1];
        ++G__21474__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21474__a, 0);
    }
    return tspan__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  tspan.cljs$lang$maxFixedArity = 1;
  tspan.cljs$lang$applyTo = function(arglist__21475) {
    var opts__10704__auto__ = cljs.core.first(arglist__21475);
    var children__10705__auto__ = cljs.core.rest(arglist__21475);
    return tspan__delegate(opts__10704__auto__, children__10705__auto__);
  };
  tspan.cljs$core$IFn$_invoke$arity$variadic = tspan__delegate;
  return tspan;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createFactory(React.createClass({"render":function() {
    var this$ = this;
    var props = {};
    goog.object.extend(props, this$.props, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]});
    return ctor.call(null, props);
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }}));
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input, "input");
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea, "textarea");
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option, "option");
om.dom.render = function render(component, el) {
  return React.render(component, el);
};
om.dom.render_to_str = function render_to_str(c) {
  return React.renderToString(c);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("goog.async.nextTick");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_20491 = 0;
  while (true) {
    var m_20492 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_20492 == null) {
    } else {
      m_20492.call(null);
      if (count_20491 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__20493 = count_20491 + 1;
        count_20491 = G__20493;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3756__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (cljs.core.truth_(and__3756__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3756__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t20499 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t20499 = function(val, box, meta20500) {
      this.val = val;
      this.box = box;
      this.meta20500 = meta20500;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t20499.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t20499.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20501) {
      var self__ = this;
      var _20501__$1 = this;
      return self__.meta20500;
    };
    cljs.core.async.impl.channels.t20499.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20501, meta20500__$1) {
      var self__ = this;
      var _20501__$1 = this;
      return new cljs.core.async.impl.channels.t20499(self__.val, self__.box, meta20500__$1);
    };
    cljs.core.async.impl.channels.t20499.cljs$lang$type = true;
    cljs.core.async.impl.channels.t20499.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t20499";
    cljs.core.async.impl.channels.t20499.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
      return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async.impl.channels/t20499");
    };
    cljs.core.async.impl.channels.__GT_t20499 = function __GT_t20499(val__$1, box__$1, meta20500) {
      return new cljs.core.async.impl.channels.t20499(val__$1, box__$1, meta20500);
    };
  }
  return new cljs.core.async.impl.channels.t20499(val, box, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 22, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 18, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 17, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core\\async\\impl\\channels.cljs"], 
  null));
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
  var obj20503 = {};
  return obj20503;
}();
cljs.core.async.impl.channels.abort = function abort(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.cljs$core$async$impl$channels$MMC$abort$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.impl.channels.abort["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__3756__auto__ = self__.buf;
      if (cljs.core.truth_(and__3756__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__3756__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_20504 = self__.takes.pop();
      if (taker_20504 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_20504)) {
          var take_cb_20505 = cljs.core.async.impl.protocols.commit.call(null, taker_20504);
          var val_20506 = cljs.core.truth_(function() {
            var and__3756__auto__ = self__.buf;
            if (cljs.core.truth_(and__3756__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__3756__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_20505, val_20506, taker_20504, this$__$1) {
            return function() {
              return take_cb_20505.call(null, val_20506);
            };
          }(take_cb_20505, val_20506, taker_20504, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
        } else {
          var putter_20507 = self__.puts.pop();
          if (putter_20507 == null) {
          } else {
            var put_handler_20508 = putter_20507.handler;
            var val_20509 = putter_20507.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_20508)) {
              var put_cb_20510 = cljs.core.async.impl.protocols.commit.call(null, put_handler_20508);
              cljs.core.async.impl.protocols.commit.call(null, handler);
              cljs.core.async.impl.dispatch.run.call(null, function(put_cb_20510, put_handler_20508, val_20509, putter_20507, _, retval, this$__$1) {
                return function() {
                  return put_cb_20510.call(null, true);
                };
              }(put_cb_20510, put_handler_20508, val_20509, putter_20507, _, retval, this$__$1));
              if (cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val_20509))) {
                cljs.core.async.impl.channels.abort.call(null, this$__$1);
              } else {
              }
            } else {
            }
            continue;
          }
        }
        break;
      }
      return retval;
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__3756__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__3756__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__3756__auto__;
            }
          }())) {
            var has_val = function() {
              var and__3756__auto__ = self__.buf;
              if (cljs.core.truth_(and__3756__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__3756__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, "takes", 
            "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
          }
          self__.takes.unbounded_unshift(handler);
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__3756__auto__ = self__.buf;
      if (cljs.core.truth_(and__3756__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__3756__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      while (true) {
        if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
          var taker_20511 = self__.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_20511)) {
            var take_cb_20512 = cljs.core.async.impl.protocols.commit.call(null, taker_20511);
            var val_20513__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
            cljs.core.async.impl.dispatch.run.call(null, function(take_cb_20512, val_20513__$1, taker_20511, done_QMARK_, closed__$1, this$__$1) {
              return function() {
                return take_cb_20512.call(null, val_20513__$1);
              };
            }(take_cb_20512, val_20513__$1, taker_20511, done_QMARK_, closed__$1, this$__$1));
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
          -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
        }
        self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_20514 = self__.puts.pop();
    if (putter_20514 == null) {
    } else {
      var put_handler_20515 = putter_20514.handler;
      var val_20516 = putter_20514.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_20515)) {
        var put_cb_20517 = cljs.core.async.impl.protocols.commit.call(null, put_handler_20515);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_20517, put_handler_20515, val_20516, putter_20514, this$__$1) {
          return function() {
            return put_cb_20517.call(null, true);
          };
        }(put_cb_20517, put_handler_20515, val_20516, putter_20514, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function handle(buf, exh, t) {
  var else$ = function() {
    var or__3768__auto__ = exh;
    if (cljs.core.truth_(or__3768__auto__)) {
      return or__3768__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function() {
  var chan = null;
  var chan__1 = function(buf) {
    return chan.call(null, buf, null);
  };
  var chan__2 = function(buf, xform) {
    return chan.call(null, buf, xform, null);
  };
  var chan__3 = function(buf, xform, exh) {
    return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
      var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
      return function(add_BANG_) {
        return function() {
          var G__20522 = null;
          var G__20522__1 = function(buf__$1) {
            try {
              return add_BANG_.call(null, buf__$1);
            } catch (e20520) {
              var t = e20520;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          var G__20522__2 = function(buf__$1, val) {
            try {
              return add_BANG_.call(null, buf__$1, val);
            } catch (e20521) {
              var t = e20521;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          G__20522 = function(buf__$1, val) {
            switch(arguments.length) {
              case 1:
                return G__20522__1.call(this, buf__$1);
              case 2:
                return G__20522__2.call(this, buf__$1, val);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20522.cljs$core$IFn$_invoke$arity$1 = G__20522__1;
          G__20522.cljs$core$IFn$_invoke$arity$2 = G__20522__2;
          return G__20522;
        }();
      }(add_BANG_);
    }());
  };
  chan = function(buf, xform, exh) {
    switch(arguments.length) {
      case 1:
        return chan__1.call(this, buf);
      case 2:
        return chan__2.call(this, buf, xform);
      case 3:
        return chan__3.call(this, buf, xform, exh);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = doc.documentElement;
    if (!body && !docEl) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element["getBoundingClientRect"]) ? element.getBoundingClientRect() : {"height":element.offsetHeight, "width":element.offsetWidth};
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.devicePixelRatio_;
goog.dom.getPixelRatio = goog.functions.cacheReturnValue(function() {
  var win = goog.dom.getWindow();
  var isFirefoxMobile = goog.userAgent.GECKO && goog.userAgent.MOBILE;
  if (goog.isDef(win.devicePixelRatio) && !isFirefoxMobile) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1;
    }
  }
  return 1;
});
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var iterator = goog.iter.toIterator(arguments);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.chainFromIterable = function(iterable) {
  return goog.iter.chain.apply(undefined, iterable);
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  return goog.iter.every(pairs, function(pair) {
    return pair[0] == pair[1];
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return!!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return[this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return[];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt((opt_end)) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return!goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  goog.uri.utils.phishingProtection_();
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.needsPhishingProtection_ = goog.userAgent.WEBKIT;
goog.uri.utils.phishingProtection_ = function() {
  if (goog.uri.utils.needsPhishingProtection_) {
    goog.uri.utils.needsPhishingProtection_ = false;
    var location = goog.global["location"];
    if (location) {
      var href = location["href"];
      if (href) {
        var domain = goog.uri.utils.getDomain(href);
        if (domain && domain != location["hostname"]) {
          goog.uri.utils.needsPhishingProtection_ = true;
          throw Error();
        }
      }
    }
  }
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var paramArr = [uri, "\x26", key];
  if (goog.isDefAndNotNull(opt_value)) {
    paramArr.push("\x3d", goog.string.urlEncode(opt_value));
  }
  return goog.uri.utils.appendQueryData_(paramArr);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":");
  }
  var domain = this.getDomain();
  if (domain) {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@");
    }
    out.push(goog.string.urlEncode(domain));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, (values));
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return(this.queryData_.get(paramName));
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : "";
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  if (goog.isString(unescapedPart)) {
    return encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("\x26");
      for (var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("\x3d");
        var name = null;
        var value = null;
        if (indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1);
        } else {
          name = pairs[i];
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "");
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ -= this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = (this.keyMap_.getValues());
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for (var j = 0;j < val.length;j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = (this.keyMap_.getValues());
    for (var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ -= this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ += values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__20694_SHARP_) {
      return max === p1__20694_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var union__1 = function(s1) {
    return s1;
  };
  var union__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
    }
  };
  var union__3 = function() {
    var G__20695__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__20695 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        var G__20696__i = 0, G__20696__a = new Array(arguments.length - 2);
        while (G__20696__i < G__20696__a.length) {
          G__20696__a[G__20696__i] = arguments[G__20696__i + 2];
          ++G__20696__i;
        }
        sets = new cljs.core.IndexedSeq(G__20696__a, 0);
      }
      return G__20695__delegate.call(this, s1, s2, sets);
    };
    G__20695.cljs$lang$maxFixedArity = 2;
    G__20695.cljs$lang$applyTo = function(arglist__20697) {
      var s1 = cljs.core.first(arglist__20697);
      arglist__20697 = cljs.core.next(arglist__20697);
      var s2 = cljs.core.first(arglist__20697);
      var sets = cljs.core.rest(arglist__20697);
      return G__20695__delegate(s1, s2, sets);
    };
    G__20695.cljs$core$IFn$_invoke$arity$variadic = G__20695__delegate;
    return G__20695;
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        var G__20698 = null;
        if (arguments.length > 2) {
          var G__20699__i = 0, G__20699__a = new Array(arguments.length - 2);
          while (G__20699__i < G__20699__a.length) {
            G__20699__a[G__20699__i] = arguments[G__20699__i + 2];
            ++G__20699__i;
          }
          G__20698 = new cljs.core.IndexedSeq(G__20699__a, 0);
        }
        return union__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, G__20698);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$core$IFn$_invoke$arity$0 = union__0;
  union.cljs$core$IFn$_invoke$arity$1 = union__1;
  union.cljs$core$IFn$_invoke$arity$2 = union__2;
  union.cljs$core$IFn$_invoke$arity$variadic = union__3.cljs$core$IFn$_invoke$arity$variadic;
  return union;
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1;
  };
  var intersection__2 = function(s1, s2) {
    while (true) {
      if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__20701 = s2;
        var G__20702 = s1;
        s1 = G__20701;
        s2 = G__20702;
        continue;
      } else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if (cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result;
            } else {
              return cljs.core.disj.call(null, result, item);
            }
          };
        }(s1, s2), s1, s1);
      }
      break;
    }
  };
  var intersection__3 = function() {
    var G__20703__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__20700_SHARP_) {
        return-cljs.core.count.call(null, p1__20700_SHARP_);
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__20703 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        var G__20704__i = 0, G__20704__a = new Array(arguments.length - 2);
        while (G__20704__i < G__20704__a.length) {
          G__20704__a[G__20704__i] = arguments[G__20704__i + 2];
          ++G__20704__i;
        }
        sets = new cljs.core.IndexedSeq(G__20704__a, 0);
      }
      return G__20703__delegate.call(this, s1, s2, sets);
    };
    G__20703.cljs$lang$maxFixedArity = 2;
    G__20703.cljs$lang$applyTo = function(arglist__20705) {
      var s1 = cljs.core.first(arglist__20705);
      arglist__20705 = cljs.core.next(arglist__20705);
      var s2 = cljs.core.first(arglist__20705);
      var sets = cljs.core.rest(arglist__20705);
      return G__20703__delegate(s1, s2, sets);
    };
    G__20703.cljs$core$IFn$_invoke$arity$variadic = G__20703__delegate;
    return G__20703;
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        var G__20706 = null;
        if (arguments.length > 2) {
          var G__20707__i = 0, G__20707__a = new Array(arguments.length - 2);
          while (G__20707__i < G__20707__a.length) {
            G__20707__a[G__20707__i] = arguments[G__20707__i + 2];
            ++G__20707__i;
          }
          G__20706 = new cljs.core.IndexedSeq(G__20707__a, 0);
        }
        return intersection__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, G__20706);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$core$IFn$_invoke$arity$1 = intersection__1;
  intersection.cljs$core$IFn$_invoke$arity$2 = intersection__2;
  intersection.cljs$core$IFn$_invoke$arity$variadic = intersection__3.cljs$core$IFn$_invoke$arity$variadic;
  return intersection;
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1;
  };
  var difference__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if (cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item);
        } else {
          return result;
        }
      }, s1, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
    }
  };
  var difference__3 = function() {
    var G__20708__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2));
    };
    var G__20708 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        var G__20709__i = 0, G__20709__a = new Array(arguments.length - 2);
        while (G__20709__i < G__20709__a.length) {
          G__20709__a[G__20709__i] = arguments[G__20709__i + 2];
          ++G__20709__i;
        }
        sets = new cljs.core.IndexedSeq(G__20709__a, 0);
      }
      return G__20708__delegate.call(this, s1, s2, sets);
    };
    G__20708.cljs$lang$maxFixedArity = 2;
    G__20708.cljs$lang$applyTo = function(arglist__20710) {
      var s1 = cljs.core.first(arglist__20710);
      arglist__20710 = cljs.core.next(arglist__20710);
      var s2 = cljs.core.first(arglist__20710);
      var sets = cljs.core.rest(arglist__20710);
      return G__20708__delegate(s1, s2, sets);
    };
    G__20708.cljs$core$IFn$_invoke$arity$variadic = G__20708__delegate;
    return G__20708;
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        var G__20711 = null;
        if (arguments.length > 2) {
          var G__20712__i = 0, G__20712__a = new Array(arguments.length - 2);
          while (G__20712__i < G__20712__a.length) {
            G__20712__a[G__20712__i] = arguments[G__20712__i + 2];
            ++G__20712__i;
          }
          G__20711 = new cljs.core.IndexedSeq(G__20712__a, 0);
        }
        return difference__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, G__20711);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$core$IFn$_invoke$arity$1 = difference__1;
  difference.cljs$core$IFn$_invoke$arity$2 = difference__2;
  difference.cljs$core$IFn$_invoke$arity$variadic = difference__3.cljs$core$IFn$_invoke$arity$variadic;
  return difference;
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__20713_SHARP_) {
    return cljs.core.select_keys.call(null, p1__20713_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__20716) {
    var vec__20717 = p__20716;
    var old = cljs.core.nth.call(null, vec__20717, 0, null);
    var new$ = cljs.core.nth.call(null, vec__20717, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__20718_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__20718_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__20721) {
    var vec__20722 = p__20721;
    var k = cljs.core.nth.call(null, vec__20722, 0, null);
    var v = cljs.core.nth.call(null, vec__20722, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
      var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__20729 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
      var r = cljs.core.nth.call(null, vec__20729, 0, null);
      var s = cljs.core.nth.call(null, vec__20729, 1, null);
      var idx = clojure.set.index.call(null, r, ks);
      return cljs.core.reduce.call(null, function(ks, vec__20729, r, s, idx) {
        return function(ret, x) {
          var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
          if (cljs.core.truth_(found)) {
            return cljs.core.reduce.call(null, function(found, ks, vec__20729, r, s, idx) {
              return function(p1__20723_SHARP_, p2__20724_SHARP_) {
                return cljs.core.conj.call(null, p1__20723_SHARP_, cljs.core.merge.call(null, p2__20724_SHARP_, x));
              };
            }(found, ks, vec__20729, r, s, idx), ret, found);
          } else {
            return ret;
          }
        };
      }(ks, vec__20729, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__20730 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
    var r = cljs.core.nth.call(null, vec__20730, 0, null);
    var s = cljs.core.nth.call(null, vec__20730, 1, null);
    var k = cljs.core.nth.call(null, vec__20730, 2, null);
    var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
    return cljs.core.reduce.call(null, function(vec__20730, r, s, k, idx) {
      return function(ret, x) {
        var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, vec__20730, r, s, k, idx) {
            return function(p1__20725_SHARP_, p2__20726_SHARP_) {
              return cljs.core.conj.call(null, p1__20725_SHARP_, cljs.core.merge.call(null, p2__20726_SHARP_, x));
            };
          }(found, vec__20730, r, s, k, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(vec__20730, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  join.cljs$core$IFn$_invoke$arity$3 = join__3;
  return join;
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__20731_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__20731_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__20732_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__20732_SHARP_);
  }, set2);
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var G__20644 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var G__20645 = cljs.core.next.call(null, coll__$1);
        sb = G__20644;
        coll__$1 = G__20645;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  var join__2 = function(separator, coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var coll__$2 = cljs.core.next.call(null, coll__$1);
        if (coll__$2 == null) {
        } else {
          sb.append(separator);
        }
        var G__20646 = sb;
        var G__20647 = coll__$2;
        sb = G__20646;
        coll__$1 = G__20647;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__20648 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__20648;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__20652 = cljs.core._EQ_;
    var expr__20653 = limit;
    if (cljs.core.truth_(pred__20652.call(null, 1, expr__20653))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__20652.call(null, 2, expr__20653))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__20655 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__20656 = limit__$1 - 1;
            var G__20657 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__20655;
            limit__$1 = G__20656;
            parts = G__20657;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__20658 = index - 1;
        index = G__20658;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___20659 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___20659)) {
        var replacement_20660 = temp__4124__auto___20659;
        buffer.append([cljs.core.str(replacement_20660)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__20661 = index + 1;
      index = G__20661;
      continue;
    }
    break;
  }
};
goog.provide("sablono.util");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.set");
goog.require("goog.Uri");
sablono.util._STAR_base_url_STAR_ = null;
sablono.util.ToString = function() {
  var obj20671 = {};
  return obj20671;
}();
sablono.util.to_str = function to_str(x) {
  if (function() {
    var and__3756__auto__ = x;
    if (and__3756__auto__) {
      return x.sablono$util$ToString$to_str$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return x.sablono$util$ToString$to_str$arity$1(x);
  } else {
    var x__4412__auto__ = x == null ? null : x;
    return function() {
      var or__3768__auto__ = sablono.util.to_str[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = sablono.util.to_str["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ToString.to-str", x);
        }
      }
    }().call(null, x);
  }
};
sablono.util.ToURI = function() {
  var obj20673 = {};
  return obj20673;
}();
sablono.util.to_uri = function to_uri(x) {
  if (function() {
    var and__3756__auto__ = x;
    if (and__3756__auto__) {
      return x.sablono$util$ToURI$to_uri$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return x.sablono$util$ToURI$to_uri$arity$1(x);
  } else {
    var x__4412__auto__ = x == null ? null : x;
    return function() {
      var or__3768__auto__ = sablono.util.to_uri[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = sablono.util.to_uri["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ToURI.to-uri", x);
        }
      }
    }().call(null, x);
  }
};
sablono.util.as_str = function() {
  var as_str__delegate = function(xs) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, sablono.util.to_str, xs));
  };
  var as_str = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__20674__i = 0, G__20674__a = new Array(arguments.length - 0);
      while (G__20674__i < G__20674__a.length) {
        G__20674__a[G__20674__i] = arguments[G__20674__i + 0];
        ++G__20674__i;
      }
      xs = new cljs.core.IndexedSeq(G__20674__a, 0);
    }
    return as_str__delegate.call(this, xs);
  };
  as_str.cljs$lang$maxFixedArity = 0;
  as_str.cljs$lang$applyTo = function(arglist__20675) {
    var xs = cljs.core.seq(arglist__20675);
    return as_str__delegate(xs);
  };
  as_str.cljs$core$IFn$_invoke$arity$variadic = as_str__delegate;
  return as_str;
}();
sablono.util.camel_case = function camel_case(k) {
  if (cljs.core.truth_(k)) {
    var vec__20677 = clojure.string.split.call(null, cljs.core.name.call(null, k), /-/);
    var first_word = cljs.core.nth.call(null, vec__20677, 0, null);
    var words = cljs.core.nthnext.call(null, vec__20677, 1);
    if (cljs.core.empty_QMARK_.call(null, words) || cljs.core._EQ_.call(null, "aria", first_word) || cljs.core._EQ_.call(null, "data", first_word)) {
      return k;
    } else {
      return cljs.core.keyword.call(null, clojure.string.join.call(null, cljs.core.conj.call(null, cljs.core.map.call(null, clojure.string.capitalize, words), first_word)));
    }
  } else {
    return null;
  }
};
sablono.util.camel_case_keys = function camel_case_keys(m) {
  if (cljs.core.map_QMARK_.call(null, m)) {
    var ks = cljs.core.keys.call(null, m);
    var kmap = cljs.core.zipmap.call(null, ks, cljs.core.map.call(null, sablono.util.camel_case, ks));
    var G__20679 = clojure.set.rename_keys.call(null, m, kmap);
    var G__20679__$1 = cljs.core.map_QMARK_.call(null, (new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(m)) ? cljs.core.update_in.call(null, G__20679, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "style", "style", -496642736)], null), camel_case_keys) : G__20679;
    return G__20679__$1;
  } else {
    return m;
  }
};
sablono.util.html_to_dom_attrs = function html_to_dom_attrs(attrs) {
  return clojure.set.rename_keys.call(null, sablono.util.camel_case_keys.call(null, attrs), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.Keyword(null, "className", "className", -1983287057), new cljs.core.Keyword(null, "for", "for", -1323786319), new cljs.core.Keyword(null, "htmlFor", "htmlFor", -1050291720)], null));
};
sablono.util.compact_map = function compact_map(m) {
  return cljs.core.reduce.call(null, function(m__$1, k) {
    var v = cljs.core.get.call(null, m__$1, k);
    if (cljs.core.empty_QMARK_.call(null, v)) {
      return cljs.core.dissoc.call(null, m__$1, k);
    } else {
      return m__$1;
    }
  }, m, cljs.core.keys.call(null, m));
};
sablono.util.merge_with_class = function() {
  var merge_with_class__delegate = function(maps) {
    var classes = cljs.core.vec.call(null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.mapcat.call(null, function(p1__20680_SHARP_) {
      if (cljs.core.list_QMARK_.call(null, p1__20680_SHARP_)) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__20680_SHARP_], null);
      } else {
        if (cljs.core.sequential_QMARK_.call(null, p1__20680_SHARP_)) {
          return p1__20680_SHARP_;
        } else {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__20680_SHARP_], null);
        }
      }
    }, cljs.core.map.call(null, new cljs.core.Keyword(null, "class", "class", -2030961996), maps))));
    var maps__$1 = cljs.core.apply.call(null, cljs.core.merge, maps);
    if (cljs.core.empty_QMARK_.call(null, classes)) {
      return maps__$1;
    } else {
      return cljs.core.assoc.call(null, maps__$1, new cljs.core.Keyword(null, "class", "class", -2030961996), classes);
    }
  };
  var merge_with_class = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      var G__20681__i = 0, G__20681__a = new Array(arguments.length - 0);
      while (G__20681__i < G__20681__a.length) {
        G__20681__a[G__20681__i] = arguments[G__20681__i + 0];
        ++G__20681__i;
      }
      maps = new cljs.core.IndexedSeq(G__20681__a, 0);
    }
    return merge_with_class__delegate.call(this, maps);
  };
  merge_with_class.cljs$lang$maxFixedArity = 0;
  merge_with_class.cljs$lang$applyTo = function(arglist__20682) {
    var maps = cljs.core.seq(arglist__20682);
    return merge_with_class__delegate(maps);
  };
  merge_with_class.cljs$core$IFn$_invoke$arity$variadic = merge_with_class__delegate;
  return merge_with_class;
}();
sablono.util.strip_css = function strip_css(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, s, /^[.#]/, "");
  } else {
    return null;
  }
};
sablono.util.match_tag = function match_tag(s) {
  var matches = cljs.core.re_seq.call(null, /[#.]?[^#.]+/, cljs.core.name.call(null, s));
  var vec__20686 = cljs.core.empty_QMARK_.call(null, matches) ? function() {
    throw cljs.core.ex_info.call(null, [cljs.core.str("Can't match CSS tag: "), cljs.core.str(s)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), s], null));
  }() : cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["#", null, ".", null], null), null)).call(null, cljs.core.ffirst.call(null, matches))) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["div", matches], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, matches), cljs.core.rest.call(null, matches)], null);
  var tag_name = cljs.core.nth.call(null, vec__20686, 0, null);
  var names = cljs.core.nth.call(null, vec__20686, 1, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_name, cljs.core.first.call(null, cljs.core.map.call(null, sablono.util.strip_css, cljs.core.filter.call(null, function(matches, vec__20686, tag_name, names) {
    return function(p1__20683_SHARP_) {
      return cljs.core._EQ_.call(null, "#", cljs.core.first.call(null, p1__20683_SHARP_));
    };
  }(matches, vec__20686, tag_name, names), names))), cljs.core.vec.call(null, cljs.core.map.call(null, sablono.util.strip_css, cljs.core.filter.call(null, function(matches, vec__20686, tag_name, names) {
    return function(p1__20684_SHARP_) {
      return cljs.core._EQ_.call(null, ".", cljs.core.first.call(null, p1__20684_SHARP_));
    };
  }(matches, vec__20686, tag_name, names), names)))], null);
};
sablono.util.normalize_element = function normalize_element(p__20687) {
  var vec__20690 = p__20687;
  var tag = cljs.core.nth.call(null, vec__20690, 0, null);
  var content = cljs.core.nthnext.call(null, vec__20690, 1);
  if (!(tag instanceof cljs.core.Keyword || tag instanceof cljs.core.Symbol || typeof tag === "string")) {
    throw cljs.core.ex_info.call(null, [cljs.core.str(tag), cljs.core.str(" is not a valid element name.")].join(""), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag, new cljs.core.Keyword(null, "content", "content", 15833224), content], null));
  } else {
  }
  var vec__20691 = sablono.util.match_tag.call(null, tag);
  var tag__$1 = cljs.core.nth.call(null, vec__20691, 0, null);
  var id = cljs.core.nth.call(null, vec__20691, 1, null);
  var class$ = cljs.core.nth.call(null, vec__20691, 2, null);
  var tag_attrs = sablono.util.compact_map.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), id, new cljs.core.Keyword(null, "class", "class", -2030961996), class$], null));
  var map_attrs = cljs.core.first.call(null, content);
  if (cljs.core.map_QMARK_.call(null, map_attrs)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, sablono.util.merge_with_class.call(null, tag_attrs, map_attrs), cljs.core.next.call(null, content)], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, tag_attrs, content], null);
  }
};
sablono.util.join_classes = function join_classes(classes) {
  return clojure.string.join.call(null, " ", cljs.core.flatten.call(null, classes));
};
sablono.util.react_symbol = function react_symbol(tag) {
  return cljs.core.symbol.call(null, "js", [cljs.core.str("React.DOM."), cljs.core.str(cljs.core.name.call(null, tag))].join(""));
};
sablono.util.react_fn = function react_fn(tag) {
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "textarea", "textarea", -650375824), null, new cljs.core.Keyword(null, "option", "option", 65132272), null, new cljs.core.Keyword(null, "input", "input", 556931961), null], null), null), cljs.core.keyword.call(null, tag))) {
    return cljs.core.symbol.call(null, "sablono.interpreter", cljs.core.name.call(null, tag));
  } else {
    return sablono.util.react_symbol.call(null, tag);
  }
};
sablono.util.attr_pattern = function attr_pattern(attr) {
  return cljs.core.re_pattern.call(null, [cljs.core.str("\\s+"), cljs.core.str(cljs.core.name.call(null, attr)), cljs.core.str("\\s*\x3d\\s*['\"][^\"']+['\"]")].join(""));
};
sablono.util.strip_attr = function strip_attr(s, attr) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, s, sablono.util.attr_pattern.call(null, attr), "");
  } else {
    return null;
  }
};
sablono.util.strip_outer = function strip_outer(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, clojure.string.replace.call(null, s, /^\s*<[^>]+>\s*/, ""), /\s*<\/[^>]+>\s*$/, "");
  } else {
    return null;
  }
};
sablono.util.ToString["_"] = true;
sablono.util.to_str["_"] = function(x) {
  return[cljs.core.str(x)].join("");
};
sablono.util.ToString["number"] = true;
sablono.util.to_str["number"] = function(x) {
  return[cljs.core.str(x)].join("");
};
sablono.util.ToString["null"] = true;
sablono.util.to_str["null"] = function(_) {
  return "";
};
goog.Uri.prototype.sablono$util$ToString$ = true;
goog.Uri.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  if (cljs.core.truth_(function() {
    var or__3768__auto__ = x__$1.hasDomain();
    if (cljs.core.truth_(or__3768__auto__)) {
      return or__3768__auto__;
    } else {
      return x__$1.getPath() == null || cljs.core.not.call(null, cljs.core.re_matches.call(null, /^\/.*/, x__$1.getPath()));
    }
  }())) {
    return[cljs.core.str(x__$1)].join("");
  } else {
    var base = [cljs.core.str(sablono.util._STAR_base_url_STAR_)].join("");
    if (cljs.core.truth_(cljs.core.re_matches.call(null, /.*\/$/, base))) {
      return[cljs.core.str(cljs.core.subs.call(null, base, 0, cljs.core.count.call(null, base) - 1)), cljs.core.str(x__$1)].join("");
    } else {
      return[cljs.core.str(base), cljs.core.str(x__$1)].join("");
    }
  }
};
cljs.core.Keyword.prototype.sablono$util$ToString$ = true;
cljs.core.Keyword.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  return cljs.core.name.call(null, x__$1);
};
sablono.util.ToURI["_"] = true;
sablono.util.to_uri["_"] = function(x) {
  return new goog.Uri([cljs.core.str(x)].join(""));
};
goog.Uri.prototype.sablono$util$ToURI$ = true;
goog.Uri.prototype.sablono$util$ToURI$to_uri$arity$1 = function(x) {
  var x__$1 = this;
  return x__$1;
};
goog.provide("sablono.interpreter");
goog.require("cljs.core");
goog.require("sablono.util");
goog.require("clojure.string");
sablono.interpreter.IInterpreter = function() {
  var obj20665 = {};
  return obj20665;
}();
sablono.interpreter.interpret = function interpret(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.sablono$interpreter$IInterpreter$interpret$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.sablono$interpreter$IInterpreter$interpret$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = sablono.interpreter.interpret[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = sablono.interpreter.interpret["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInterpreter.interpret", this$);
        }
      }
    }().call(null, this$);
  }
};
sablono.interpreter.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
sablono.interpreter.input = sablono.interpreter.wrap_form_element.call(null, React.DOM.input, "input");
sablono.interpreter.option = sablono.interpreter.wrap_form_element.call(null, React.DOM.option, "option");
sablono.interpreter.textarea = sablono.interpreter.wrap_form_element.call(null, React.DOM.textarea, "textarea");
sablono.interpreter.dom_fn = function dom_fn(tag) {
  var temp__4124__auto__ = React.DOM[cljs.core.name.call(null, tag)];
  if (cljs.core.truth_(temp__4124__auto__)) {
    var dom_fn__$1 = temp__4124__auto__;
    return cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "input", "input", 556931961), sablono.interpreter.input, new cljs.core.Keyword(null, "option", "option", 65132272), sablono.interpreter.option, new cljs.core.Keyword(null, "textarea", "textarea", -650375824), sablono.interpreter.textarea], null), cljs.core.keyword.call(null, tag), dom_fn__$1);
  } else {
    throw cljs.core.ex_info.call(null, [cljs.core.str("Unsupported HTML tag: "), cljs.core.str(cljs.core.name.call(null, tag))].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag], null));
  }
};
sablono.interpreter.attributes = function attributes(attrs) {
  var attrs__$1 = cljs.core.clj__GT_js.call(null, sablono.util.html_to_dom_attrs.call(null, attrs));
  var class$ = attrs__$1.className;
  var class$__$1 = class$ instanceof Array ? clojure.string.join.call(null, " ", class$) : class$;
  if (cljs.core.truth_(clojure.string.blank_QMARK_.call(null, class$__$1))) {
    delete attrs__$1["className"];
  } else {
    attrs__$1.className = class$__$1;
  }
  return attrs__$1;
};
sablono.interpreter.element = function element(element__$1) {
  var vec__20667 = sablono.util.normalize_element.call(null, element__$1);
  var tag = cljs.core.nth.call(null, vec__20667, 0, null);
  var attrs = cljs.core.nth.call(null, vec__20667, 1, null);
  var content = cljs.core.nth.call(null, vec__20667, 2, null);
  var f = sablono.interpreter.dom_fn.call(null, tag);
  var js_attrs = sablono.interpreter.attributes.call(null, attrs);
  if (cljs.core.sequential_QMARK_.call(null, content) && cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, content))) {
    return f.call(null, js_attrs, sablono.interpreter.interpret.call(null, cljs.core.first.call(null, content)));
  } else {
    if (cljs.core.truth_(content)) {
      return cljs.core.apply.call(null, f, js_attrs, sablono.interpreter.interpret.call(null, content));
    } else {
      return f.call(null, js_attrs, null);
    }
  }
};
sablono.interpreter.interpret_seq = function interpret_seq(s) {
  return cljs.core.into_array.call(null, cljs.core.map.call(null, sablono.interpreter.interpret, s));
};
sablono.interpreter.IInterpreter["null"] = true;
sablono.interpreter.interpret["null"] = function(this$) {
  return null;
};
sablono.interpreter.IInterpreter["_"] = true;
sablono.interpreter.interpret["_"] = function(this$) {
  return this$;
};
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.element.call(null, this$__$1);
};
cljs.core.Subvec.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.Subvec.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.element.call(null, this$__$1);
};
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.List.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.List.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return ":" + (this.nextId_++).toString(36);
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__20402 = level + 1;
        level = G__20402;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_20403 = 0;
    while (true) {
      if (i_20403 < arr.length) {
        arr[i_20403] = null;
        var G__20404 = i_20403 + 1;
        i_20403 = G__20404;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__20405 = x_SINGLEQUOTE_;
                x__$1 = G__20405;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__20406 = x__$1;
        var G__20407 = k;
        var G__20408 = level - 1;
        var G__20409 = update;
        x = G__20406;
        k = G__20407;
        level = G__20408;
        update = G__20409;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_20410 = self__.level + 1;
      while (true) {
        if (i_20410 <= new_level + 1) {
          update[i_20410] = self__.header;
          var G__20411 = i_20410 + 1;
          i_20410 = G__20411;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_20412 = 0;
    while (true) {
      if (i_20412 <= self__.level) {
        var links_20413 = update[i_20412].forward;
        if (links_20413[i_20412] === x__$1) {
          links_20413[i_20412] = x__$1.forward[i_20412];
          var G__20414 = i_20412 + 1;
          i_20412 = G__20414;
          continue;
        } else {
          var G__20415 = i_20412 + 1;
          i_20412 = G__20415;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__20416 = x_SINGLEQUOTE_;
              x__$1 = G__20416;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__20417 = nx;
        var G__20418 = level__$1 - 1;
        x = G__20417;
        level__$1 = G__20418;
        continue;
      } else {
        var G__20419 = x;
        var G__20420 = level__$1 - 1;
        x = G__20419;
        level__$1 = G__20420;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__20421 = x_SINGLEQUOTE_;
              x__$1 = G__20421;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__20422 = nx;
        var G__20423 = level__$1 - 1;
        x = G__20422;
        level__$1 = G__20423;
        continue;
      } else {
        var G__20424 = x;
        var G__20425 = level__$1 - 1;
        x = G__20424;
        level__$1 = G__20425;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3768__auto__ = cljs.core.truth_(function() {
    var and__3756__auto__ = me;
    if (cljs.core.truth_(and__3756__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3756__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3768__auto__)) {
    return or__3768__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3768__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3768__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t17313 !== "undefined") {
  } else {
    cljs.core.async.t17313 = function(f, fn_handler, meta17314) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta17314 = meta17314;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t17313.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t17313.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t17313.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t17313.prototype.cljs$core$IMeta$_meta$arity$1 = function(_17315) {
      var self__ = this;
      var _17315__$1 = this;
      return self__.meta17314;
    };
    cljs.core.async.t17313.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_17315, meta17314__$1) {
      var self__ = this;
      var _17315__$1 = this;
      return new cljs.core.async.t17313(self__.f, self__.fn_handler, meta17314__$1);
    };
    cljs.core.async.t17313.cljs$lang$type = true;
    cljs.core.async.t17313.cljs$lang$ctorStr = "cljs.core.async/t17313";
    cljs.core.async.t17313.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
      return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async/t17313");
    };
    cljs.core.async.__GT_t17313 = function __GT_t17313(f__$1, fn_handler__$1, meta17314) {
      return new cljs.core.async.t17313(f__$1, fn_handler__$1, meta17314);
    };
  }
  return new cljs.core.async.t17313(f, fn_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 20, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 16, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 13, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core\\async.cljs"], 
  null));
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__17317 = buff;
  if (G__17317) {
    var bit__4449__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3768__auto__ = bit__4449__auto__;
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        return G__17317.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__17317.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__17317);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__17317);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    return chan.call(null, buf_or_n, null, null);
  };
  var chan__2 = function(buf_or_n, xform) {
    return chan.call(null, buf_or_n, xform, null);
  };
  var chan__3 = function(buf_or_n, xform, ex_handler) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    if (cljs.core.truth_(xform)) {
      if (cljs.core.truth_(buf_or_n__$1)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("buffer must be supplied when transducer is"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "buf-or-n", "buf-or-n", -1646815050, null)))].join(""));
      }
    } else {
    }
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
  };
  chan = function(buf_or_n, xform, ex_handler) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
      case 2:
        return chan__2.call(this, buf_or_n, xform);
      case 3:
        return chan__3.call(this, buf_or_n, xform, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_17318 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_17318);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_17318, ret) {
          return function() {
            return fn1.call(null, val_17318);
          };
        }(val_17318, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var ret = temp__4124__auto__;
      return cljs.core.deref.call(null, ret);
    } else {
      return true;
    }
  };
  var put_BANG___3 = function(port, val, fn1) {
    return put_BANG_.call(null, port, val, fn1, true);
  };
  var put_BANG___4 = function(port, val, fn1, on_caller_QMARK_) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(temp__4124__auto__)) {
      var retb = temp__4124__auto__;
      var ret = cljs.core.deref.call(null, retb);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, ret);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4124__auto__) {
          return function() {
            return fn1.call(null, ret);
          };
        }(ret, retb, temp__4124__auto__));
      }
      return ret;
    } else {
      return true;
    }
  };
  put_BANG_ = function(port, val, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn1);
      case 4:
        return put_BANG___4.call(this, port, val, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4655__auto___17319 = n;
  var x_17320 = 0;
  while (true) {
    if (x_17320 < n__4655__auto___17319) {
      a[x_17320] = 0;
      var G__17321 = x_17320 + 1;
      x_17320 = G__17321;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__17322 = i + 1;
      i = G__17322;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t17326 !== "undefined") {
  } else {
    cljs.core.async.t17326 = function(flag, alt_flag, meta17327) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta17327 = meta17327;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t17326.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t17326.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t17326.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t17326.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_17328) {
        var self__ = this;
        var _17328__$1 = this;
        return self__.meta17327;
      };
    }(flag);
    cljs.core.async.t17326.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_17328, meta17327__$1) {
        var self__ = this;
        var _17328__$1 = this;
        return new cljs.core.async.t17326(self__.flag, self__.alt_flag, meta17327__$1);
      };
    }(flag);
    cljs.core.async.t17326.cljs$lang$type = true;
    cljs.core.async.t17326.cljs$lang$ctorStr = "cljs.core.async/t17326";
    cljs.core.async.t17326.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
        return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async/t17326");
      };
    }(flag);
    cljs.core.async.__GT_t17326 = function(flag) {
      return function __GT_t17326(flag__$1, alt_flag__$1, meta17327) {
        return new cljs.core.async.t17326(flag__$1, alt_flag__$1, meta17327);
      };
    }(flag);
  }
  return new cljs.core.async.t17326(flag, alt_flag, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 15, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 146, new cljs.core.Keyword(null, "column", "column", 2078222095), 5, new cljs.core.Keyword(null, "line", "line", 212345235), 141, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core\\async.cljs"], 
  null));
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t17332 !== "undefined") {
  } else {
    cljs.core.async.t17332 = function(cb, flag, alt_handler, meta17333) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta17333 = meta17333;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t17332.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t17332.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t17332.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t17332.prototype.cljs$core$IMeta$_meta$arity$1 = function(_17334) {
      var self__ = this;
      var _17334__$1 = this;
      return self__.meta17333;
    };
    cljs.core.async.t17332.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_17334, meta17333__$1) {
      var self__ = this;
      var _17334__$1 = this;
      return new cljs.core.async.t17332(self__.cb, self__.flag, self__.alt_handler, meta17333__$1);
    };
    cljs.core.async.t17332.cljs$lang$type = true;
    cljs.core.async.t17332.cljs$lang$ctorStr = "cljs.core.async/t17332";
    cljs.core.async.t17332.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
      return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async/t17332");
    };
    cljs.core.async.__GT_t17332 = function __GT_t17332(cb__$1, flag__$1, alt_handler__$1, meta17333) {
      return new cljs.core.async.t17332(cb__$1, flag__$1, alt_handler__$1, meta17333);
    };
  }
  return new cljs.core.async.t17332(cb, flag, alt_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 11, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 154, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 149, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core\\async.cljs"], 
  null));
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__17335_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__17335_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__17336_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__17336_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3768__auto__ = wport;
            if (cljs.core.truth_(or__3768__auto__)) {
              return or__3768__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__17337 = i + 1;
          i = G__17337;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3768__auto__ = ret;
  if (cljs.core.truth_(or__3768__auto__)) {
    return or__3768__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4126__auto__ = function() {
        var and__3756__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3756__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3756__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__17338) {
    var map__17340 = p__17338;
    var map__17340__$1 = cljs.core.seq_QMARK_.call(null, map__17340) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17340) : map__17340;
    var opts = map__17340__$1;
    throw new Error("alts! used not in (go ...) block");
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__17338 = null;
    if (arguments.length > 1) {
      var G__17341__i = 0, G__17341__a = new Array(arguments.length - 1);
      while (G__17341__i < G__17341__a.length) {
        G__17341__a[G__17341__i] = arguments[G__17341__i + 1];
        ++G__17341__i;
      }
      p__17338 = new cljs.core.IndexedSeq(G__17341__a, 0);
    }
    return alts_BANG___delegate.call(this, ports, p__17338);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__17342) {
    var ports = cljs.core.first(arglist__17342);
    var p__17338 = cljs.core.rest(arglist__17342);
    return alts_BANG___delegate(ports, p__17338);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__6560__auto___17437 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___17437) {
      return function() {
        var f__6561__auto__ = function() {
          var switch__6504__auto__ = function(c__6560__auto___17437) {
            return function(state_17413) {
              var state_val_17414 = state_17413[1];
              if (state_val_17414 === 7) {
                var inst_17409 = state_17413[2];
                var state_17413__$1 = state_17413;
                var statearr_17415_17438 = state_17413__$1;
                statearr_17415_17438[2] = inst_17409;
                statearr_17415_17438[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_17414 === 1) {
                  var state_17413__$1 = state_17413;
                  var statearr_17416_17439 = state_17413__$1;
                  statearr_17416_17439[2] = null;
                  statearr_17416_17439[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17414 === 4) {
                    var inst_17392 = state_17413[7];
                    var inst_17392__$1 = state_17413[2];
                    var inst_17393 = inst_17392__$1 == null;
                    var state_17413__$1 = function() {
                      var statearr_17417 = state_17413;
                      statearr_17417[7] = inst_17392__$1;
                      return statearr_17417;
                    }();
                    if (cljs.core.truth_(inst_17393)) {
                      var statearr_17418_17440 = state_17413__$1;
                      statearr_17418_17440[1] = 5;
                    } else {
                      var statearr_17419_17441 = state_17413__$1;
                      statearr_17419_17441[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_17414 === 13) {
                      var state_17413__$1 = state_17413;
                      var statearr_17420_17442 = state_17413__$1;
                      statearr_17420_17442[2] = null;
                      statearr_17420_17442[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17414 === 6) {
                        var inst_17392 = state_17413[7];
                        var state_17413__$1 = state_17413;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17413__$1, 11, to, inst_17392);
                      } else {
                        if (state_val_17414 === 3) {
                          var inst_17411 = state_17413[2];
                          var state_17413__$1 = state_17413;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17413__$1, inst_17411);
                        } else {
                          if (state_val_17414 === 12) {
                            var state_17413__$1 = state_17413;
                            var statearr_17421_17443 = state_17413__$1;
                            statearr_17421_17443[2] = null;
                            statearr_17421_17443[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_17414 === 2) {
                              var state_17413__$1 = state_17413;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17413__$1, 4, from);
                            } else {
                              if (state_val_17414 === 11) {
                                var inst_17402 = state_17413[2];
                                var state_17413__$1 = state_17413;
                                if (cljs.core.truth_(inst_17402)) {
                                  var statearr_17422_17444 = state_17413__$1;
                                  statearr_17422_17444[1] = 12;
                                } else {
                                  var statearr_17423_17445 = state_17413__$1;
                                  statearr_17423_17445[1] = 13;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_17414 === 9) {
                                  var state_17413__$1 = state_17413;
                                  var statearr_17424_17446 = state_17413__$1;
                                  statearr_17424_17446[2] = null;
                                  statearr_17424_17446[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_17414 === 5) {
                                    var state_17413__$1 = state_17413;
                                    if (cljs.core.truth_(close_QMARK_)) {
                                      var statearr_17425_17447 = state_17413__$1;
                                      statearr_17425_17447[1] = 8;
                                    } else {
                                      var statearr_17426_17448 = state_17413__$1;
                                      statearr_17426_17448[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_17414 === 14) {
                                      var inst_17407 = state_17413[2];
                                      var state_17413__$1 = state_17413;
                                      var statearr_17427_17449 = state_17413__$1;
                                      statearr_17427_17449[2] = inst_17407;
                                      statearr_17427_17449[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_17414 === 10) {
                                        var inst_17399 = state_17413[2];
                                        var state_17413__$1 = state_17413;
                                        var statearr_17428_17450 = state_17413__$1;
                                        statearr_17428_17450[2] = inst_17399;
                                        statearr_17428_17450[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_17414 === 8) {
                                          var inst_17396 = cljs.core.async.close_BANG_.call(null, to);
                                          var state_17413__$1 = state_17413;
                                          var statearr_17429_17451 = state_17413__$1;
                                          statearr_17429_17451[2] = inst_17396;
                                          statearr_17429_17451[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6560__auto___17437);
          return function(switch__6504__auto__, c__6560__auto___17437) {
            return function() {
              var state_machine__6505__auto__ = null;
              var state_machine__6505__auto____0 = function() {
                var statearr_17433 = [null, null, null, null, null, null, null, null];
                statearr_17433[0] = state_machine__6505__auto__;
                statearr_17433[1] = 1;
                return statearr_17433;
              };
              var state_machine__6505__auto____1 = function(state_17413) {
                while (true) {
                  var ret_value__6506__auto__ = function() {
                    try {
                      while (true) {
                        var result__6507__auto__ = switch__6504__auto__.call(null, state_17413);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6507__auto__;
                        }
                        break;
                      }
                    } catch (e17434) {
                      if (e17434 instanceof Object) {
                        var ex__6508__auto__ = e17434;
                        var statearr_17435_17452 = state_17413;
                        statearr_17435_17452[5] = ex__6508__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17413);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e17434;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__17453 = state_17413;
                    state_17413 = G__17453;
                    continue;
                  } else {
                    return ret_value__6506__auto__;
                  }
                  break;
                }
              };
              state_machine__6505__auto__ = function(state_17413) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6505__auto____0.call(this);
                  case 1:
                    return state_machine__6505__auto____1.call(this, state_17413);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
              return state_machine__6505__auto__;
            }();
          }(switch__6504__auto__, c__6560__auto___17437);
        }();
        var state__6562__auto__ = function() {
          var statearr_17436 = f__6561__auto__.call(null);
          statearr_17436[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___17437;
          return statearr_17436;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
      };
    }(c__6560__auto___17437));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.pipeline_STAR_ = function pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null))))].join(""));
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__17637) {
      var vec__17638 = p__17637;
      var v = cljs.core.nth.call(null, vec__17638, 0, null);
      var p = cljs.core.nth.call(null, vec__17638, 1, null);
      var job = vec__17638;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__6560__auto___17820 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___17820, res, vec__17638, v, p, job, jobs, results) {
          return function() {
            var f__6561__auto__ = function() {
              var switch__6504__auto__ = function(c__6560__auto___17820, res, vec__17638, v, p, job, jobs, results) {
                return function(state_17643) {
                  var state_val_17644 = state_17643[1];
                  if (state_val_17644 === 2) {
                    var inst_17640 = state_17643[2];
                    var inst_17641 = cljs.core.async.close_BANG_.call(null, res);
                    var state_17643__$1 = function() {
                      var statearr_17645 = state_17643;
                      statearr_17645[7] = inst_17640;
                      return statearr_17645;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17643__$1, inst_17641);
                  } else {
                    if (state_val_17644 === 1) {
                      var state_17643__$1 = state_17643;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17643__$1, 2, res, v);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__6560__auto___17820, res, vec__17638, v, p, job, jobs, results);
              return function(switch__6504__auto__, c__6560__auto___17820, res, vec__17638, v, p, job, jobs, results) {
                return function() {
                  var state_machine__6505__auto__ = null;
                  var state_machine__6505__auto____0 = function() {
                    var statearr_17649 = [null, null, null, null, null, null, null, null];
                    statearr_17649[0] = state_machine__6505__auto__;
                    statearr_17649[1] = 1;
                    return statearr_17649;
                  };
                  var state_machine__6505__auto____1 = function(state_17643) {
                    while (true) {
                      var ret_value__6506__auto__ = function() {
                        try {
                          while (true) {
                            var result__6507__auto__ = switch__6504__auto__.call(null, state_17643);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__6507__auto__;
                            }
                            break;
                          }
                        } catch (e17650) {
                          if (e17650 instanceof Object) {
                            var ex__6508__auto__ = e17650;
                            var statearr_17651_17821 = state_17643;
                            statearr_17651_17821[5] = ex__6508__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17643);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e17650;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__17822 = state_17643;
                        state_17643 = G__17822;
                        continue;
                      } else {
                        return ret_value__6506__auto__;
                      }
                      break;
                    }
                  };
                  state_machine__6505__auto__ = function(state_17643) {
                    switch(arguments.length) {
                      case 0:
                        return state_machine__6505__auto____0.call(this);
                      case 1:
                        return state_machine__6505__auto____1.call(this, state_17643);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
                  state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
                  return state_machine__6505__auto__;
                }();
              }(switch__6504__auto__, c__6560__auto___17820, res, vec__17638, v, p, job, jobs, results);
            }();
            var state__6562__auto__ = function() {
              var statearr_17652 = f__6561__auto__.call(null);
              statearr_17652[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___17820;
              return statearr_17652;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
          };
        }(c__6560__auto___17820, res, vec__17638, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__17653) {
      var vec__17654 = p__17653;
      var v = cljs.core.nth.call(null, vec__17654, 0, null);
      var p = cljs.core.nth.call(null, vec__17654, 1, null);
      var job = vec__17654;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__4655__auto___17823 = n;
  var __17824 = 0;
  while (true) {
    if (__17824 < n__4655__auto___17823) {
      var G__17655_17825 = type instanceof cljs.core.Keyword ? type.fqn : null;
      switch(G__17655_17825) {
        case "async":
          var c__6560__auto___17827 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__17824, c__6560__auto___17827, G__17655_17825, n__4655__auto___17823, jobs, results, process, async) {
            return function() {
              var f__6561__auto__ = function() {
                var switch__6504__auto__ = function(__17824, c__6560__auto___17827, G__17655_17825, n__4655__auto___17823, jobs, results, process, async) {
                  return function(state_17668) {
                    var state_val_17669 = state_17668[1];
                    if (state_val_17669 === 7) {
                      var inst_17664 = state_17668[2];
                      var state_17668__$1 = state_17668;
                      var statearr_17670_17828 = state_17668__$1;
                      statearr_17670_17828[2] = inst_17664;
                      statearr_17670_17828[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17669 === 6) {
                        var state_17668__$1 = state_17668;
                        var statearr_17671_17829 = state_17668__$1;
                        statearr_17671_17829[2] = null;
                        statearr_17671_17829[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17669 === 5) {
                          var state_17668__$1 = state_17668;
                          var statearr_17672_17830 = state_17668__$1;
                          statearr_17672_17830[2] = null;
                          statearr_17672_17830[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_17669 === 4) {
                            var inst_17658 = state_17668[2];
                            var inst_17659 = async.call(null, inst_17658);
                            var state_17668__$1 = state_17668;
                            if (cljs.core.truth_(inst_17659)) {
                              var statearr_17673_17831 = state_17668__$1;
                              statearr_17673_17831[1] = 5;
                            } else {
                              var statearr_17674_17832 = state_17668__$1;
                              statearr_17674_17832[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_17669 === 3) {
                              var inst_17666 = state_17668[2];
                              var state_17668__$1 = state_17668;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17668__$1, inst_17666);
                            } else {
                              if (state_val_17669 === 2) {
                                var state_17668__$1 = state_17668;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17668__$1, 4, jobs);
                              } else {
                                if (state_val_17669 === 1) {
                                  var state_17668__$1 = state_17668;
                                  var statearr_17675_17833 = state_17668__$1;
                                  statearr_17675_17833[2] = null;
                                  statearr_17675_17833[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__17824, c__6560__auto___17827, G__17655_17825, n__4655__auto___17823, jobs, results, process, async);
                return function(__17824, switch__6504__auto__, c__6560__auto___17827, G__17655_17825, n__4655__auto___17823, jobs, results, process, async) {
                  return function() {
                    var state_machine__6505__auto__ = null;
                    var state_machine__6505__auto____0 = function() {
                      var statearr_17679 = [null, null, null, null, null, null, null];
                      statearr_17679[0] = state_machine__6505__auto__;
                      statearr_17679[1] = 1;
                      return statearr_17679;
                    };
                    var state_machine__6505__auto____1 = function(state_17668) {
                      while (true) {
                        var ret_value__6506__auto__ = function() {
                          try {
                            while (true) {
                              var result__6507__auto__ = switch__6504__auto__.call(null, state_17668);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6507__auto__;
                              }
                              break;
                            }
                          } catch (e17680) {
                            if (e17680 instanceof Object) {
                              var ex__6508__auto__ = e17680;
                              var statearr_17681_17834 = state_17668;
                              statearr_17681_17834[5] = ex__6508__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17668);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e17680;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__17835 = state_17668;
                          state_17668 = G__17835;
                          continue;
                        } else {
                          return ret_value__6506__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6505__auto__ = function(state_17668) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6505__auto____0.call(this);
                        case 1:
                          return state_machine__6505__auto____1.call(this, state_17668);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
                    state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
                    return state_machine__6505__auto__;
                  }();
                }(__17824, switch__6504__auto__, c__6560__auto___17827, G__17655_17825, n__4655__auto___17823, jobs, results, process, async);
              }();
              var state__6562__auto__ = function() {
                var statearr_17682 = f__6561__auto__.call(null);
                statearr_17682[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___17827;
                return statearr_17682;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
            };
          }(__17824, c__6560__auto___17827, G__17655_17825, n__4655__auto___17823, jobs, results, process, async));
          break;
        case "compute":
          var c__6560__auto___17836 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__17824, c__6560__auto___17836, G__17655_17825, n__4655__auto___17823, jobs, results, process, async) {
            return function() {
              var f__6561__auto__ = function() {
                var switch__6504__auto__ = function(__17824, c__6560__auto___17836, G__17655_17825, n__4655__auto___17823, jobs, results, process, async) {
                  return function(state_17695) {
                    var state_val_17696 = state_17695[1];
                    if (state_val_17696 === 7) {
                      var inst_17691 = state_17695[2];
                      var state_17695__$1 = state_17695;
                      var statearr_17697_17837 = state_17695__$1;
                      statearr_17697_17837[2] = inst_17691;
                      statearr_17697_17837[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17696 === 6) {
                        var state_17695__$1 = state_17695;
                        var statearr_17698_17838 = state_17695__$1;
                        statearr_17698_17838[2] = null;
                        statearr_17698_17838[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17696 === 5) {
                          var state_17695__$1 = state_17695;
                          var statearr_17699_17839 = state_17695__$1;
                          statearr_17699_17839[2] = null;
                          statearr_17699_17839[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_17696 === 4) {
                            var inst_17685 = state_17695[2];
                            var inst_17686 = process.call(null, inst_17685);
                            var state_17695__$1 = state_17695;
                            if (cljs.core.truth_(inst_17686)) {
                              var statearr_17700_17840 = state_17695__$1;
                              statearr_17700_17840[1] = 5;
                            } else {
                              var statearr_17701_17841 = state_17695__$1;
                              statearr_17701_17841[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_17696 === 3) {
                              var inst_17693 = state_17695[2];
                              var state_17695__$1 = state_17695;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17695__$1, inst_17693);
                            } else {
                              if (state_val_17696 === 2) {
                                var state_17695__$1 = state_17695;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17695__$1, 4, jobs);
                              } else {
                                if (state_val_17696 === 1) {
                                  var state_17695__$1 = state_17695;
                                  var statearr_17702_17842 = state_17695__$1;
                                  statearr_17702_17842[2] = null;
                                  statearr_17702_17842[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__17824, c__6560__auto___17836, G__17655_17825, n__4655__auto___17823, jobs, results, process, async);
                return function(__17824, switch__6504__auto__, c__6560__auto___17836, G__17655_17825, n__4655__auto___17823, jobs, results, process, async) {
                  return function() {
                    var state_machine__6505__auto__ = null;
                    var state_machine__6505__auto____0 = function() {
                      var statearr_17706 = [null, null, null, null, null, null, null];
                      statearr_17706[0] = state_machine__6505__auto__;
                      statearr_17706[1] = 1;
                      return statearr_17706;
                    };
                    var state_machine__6505__auto____1 = function(state_17695) {
                      while (true) {
                        var ret_value__6506__auto__ = function() {
                          try {
                            while (true) {
                              var result__6507__auto__ = switch__6504__auto__.call(null, state_17695);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6507__auto__;
                              }
                              break;
                            }
                          } catch (e17707) {
                            if (e17707 instanceof Object) {
                              var ex__6508__auto__ = e17707;
                              var statearr_17708_17843 = state_17695;
                              statearr_17708_17843[5] = ex__6508__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17695);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e17707;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__17844 = state_17695;
                          state_17695 = G__17844;
                          continue;
                        } else {
                          return ret_value__6506__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6505__auto__ = function(state_17695) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6505__auto____0.call(this);
                        case 1:
                          return state_machine__6505__auto____1.call(this, state_17695);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
                    state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
                    return state_machine__6505__auto__;
                  }();
                }(__17824, switch__6504__auto__, c__6560__auto___17836, G__17655_17825, n__4655__auto___17823, jobs, results, process, async);
              }();
              var state__6562__auto__ = function() {
                var statearr_17709 = f__6561__auto__.call(null);
                statearr_17709[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___17836;
                return statearr_17709;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
            };
          }(__17824, c__6560__auto___17836, G__17655_17825, n__4655__auto___17823, jobs, results, process, async));
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
      }
      var G__17845 = __17824 + 1;
      __17824 = G__17845;
      continue;
    } else {
    }
    break;
  }
  var c__6560__auto___17846 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___17846, jobs, results, process, async) {
    return function() {
      var f__6561__auto__ = function() {
        var switch__6504__auto__ = function(c__6560__auto___17846, jobs, results, process, async) {
          return function(state_17731) {
            var state_val_17732 = state_17731[1];
            if (state_val_17732 === 9) {
              var inst_17724 = state_17731[2];
              var state_17731__$1 = function() {
                var statearr_17733 = state_17731;
                statearr_17733[7] = inst_17724;
                return statearr_17733;
              }();
              var statearr_17734_17847 = state_17731__$1;
              statearr_17734_17847[2] = null;
              statearr_17734_17847[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_17732 === 8) {
                var inst_17717 = state_17731[8];
                var inst_17722 = state_17731[2];
                var state_17731__$1 = function() {
                  var statearr_17735 = state_17731;
                  statearr_17735[9] = inst_17722;
                  return statearr_17735;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17731__$1, 9, results, inst_17717);
              } else {
                if (state_val_17732 === 7) {
                  var inst_17727 = state_17731[2];
                  var state_17731__$1 = state_17731;
                  var statearr_17736_17848 = state_17731__$1;
                  statearr_17736_17848[2] = inst_17727;
                  statearr_17736_17848[1] = 3;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17732 === 6) {
                    var inst_17717 = state_17731[8];
                    var inst_17712 = state_17731[10];
                    var inst_17717__$1 = cljs.core.async.chan.call(null, 1);
                    var inst_17718 = cljs.core.PersistentVector.EMPTY_NODE;
                    var inst_17719 = [inst_17712, inst_17717__$1];
                    var inst_17720 = new cljs.core.PersistentVector(null, 2, 5, inst_17718, inst_17719, null);
                    var state_17731__$1 = function() {
                      var statearr_17737 = state_17731;
                      statearr_17737[8] = inst_17717__$1;
                      return statearr_17737;
                    }();
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17731__$1, 8, jobs, inst_17720);
                  } else {
                    if (state_val_17732 === 5) {
                      var inst_17715 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_17731__$1 = state_17731;
                      var statearr_17738_17849 = state_17731__$1;
                      statearr_17738_17849[2] = inst_17715;
                      statearr_17738_17849[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17732 === 4) {
                        var inst_17712 = state_17731[10];
                        var inst_17712__$1 = state_17731[2];
                        var inst_17713 = inst_17712__$1 == null;
                        var state_17731__$1 = function() {
                          var statearr_17739 = state_17731;
                          statearr_17739[10] = inst_17712__$1;
                          return statearr_17739;
                        }();
                        if (cljs.core.truth_(inst_17713)) {
                          var statearr_17740_17850 = state_17731__$1;
                          statearr_17740_17850[1] = 5;
                        } else {
                          var statearr_17741_17851 = state_17731__$1;
                          statearr_17741_17851[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17732 === 3) {
                          var inst_17729 = state_17731[2];
                          var state_17731__$1 = state_17731;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17731__$1, inst_17729);
                        } else {
                          if (state_val_17732 === 2) {
                            var state_17731__$1 = state_17731;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17731__$1, 4, from);
                          } else {
                            if (state_val_17732 === 1) {
                              var state_17731__$1 = state_17731;
                              var statearr_17742_17852 = state_17731__$1;
                              statearr_17742_17852[2] = null;
                              statearr_17742_17852[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6560__auto___17846, jobs, results, process, async);
        return function(switch__6504__auto__, c__6560__auto___17846, jobs, results, process, async) {
          return function() {
            var state_machine__6505__auto__ = null;
            var state_machine__6505__auto____0 = function() {
              var statearr_17746 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_17746[0] = state_machine__6505__auto__;
              statearr_17746[1] = 1;
              return statearr_17746;
            };
            var state_machine__6505__auto____1 = function(state_17731) {
              while (true) {
                var ret_value__6506__auto__ = function() {
                  try {
                    while (true) {
                      var result__6507__auto__ = switch__6504__auto__.call(null, state_17731);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6507__auto__;
                      }
                      break;
                    }
                  } catch (e17747) {
                    if (e17747 instanceof Object) {
                      var ex__6508__auto__ = e17747;
                      var statearr_17748_17853 = state_17731;
                      statearr_17748_17853[5] = ex__6508__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17731);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e17747;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__17854 = state_17731;
                  state_17731 = G__17854;
                  continue;
                } else {
                  return ret_value__6506__auto__;
                }
                break;
              }
            };
            state_machine__6505__auto__ = function(state_17731) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6505__auto____0.call(this);
                case 1:
                  return state_machine__6505__auto____1.call(this, state_17731);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
            state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
            return state_machine__6505__auto__;
          }();
        }(switch__6504__auto__, c__6560__auto___17846, jobs, results, process, async);
      }();
      var state__6562__auto__ = function() {
        var statearr_17749 = f__6561__auto__.call(null);
        statearr_17749[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___17846;
        return statearr_17749;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
    };
  }(c__6560__auto___17846, jobs, results, process, async));
  var c__6560__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto__, jobs, results, process, async) {
    return function() {
      var f__6561__auto__ = function() {
        var switch__6504__auto__ = function(c__6560__auto__, jobs, results, process, async) {
          return function(state_17787) {
            var state_val_17788 = state_17787[1];
            if (state_val_17788 === 7) {
              var inst_17783 = state_17787[2];
              var state_17787__$1 = state_17787;
              var statearr_17789_17855 = state_17787__$1;
              statearr_17789_17855[2] = inst_17783;
              statearr_17789_17855[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_17788 === 20) {
                var state_17787__$1 = state_17787;
                var statearr_17790_17856 = state_17787__$1;
                statearr_17790_17856[2] = null;
                statearr_17790_17856[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_17788 === 1) {
                  var state_17787__$1 = state_17787;
                  var statearr_17791_17857 = state_17787__$1;
                  statearr_17791_17857[2] = null;
                  statearr_17791_17857[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17788 === 4) {
                    var inst_17752 = state_17787[7];
                    var inst_17752__$1 = state_17787[2];
                    var inst_17753 = inst_17752__$1 == null;
                    var state_17787__$1 = function() {
                      var statearr_17792 = state_17787;
                      statearr_17792[7] = inst_17752__$1;
                      return statearr_17792;
                    }();
                    if (cljs.core.truth_(inst_17753)) {
                      var statearr_17793_17858 = state_17787__$1;
                      statearr_17793_17858[1] = 5;
                    } else {
                      var statearr_17794_17859 = state_17787__$1;
                      statearr_17794_17859[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_17788 === 15) {
                      var inst_17765 = state_17787[8];
                      var state_17787__$1 = state_17787;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17787__$1, 18, to, inst_17765);
                    } else {
                      if (state_val_17788 === 21) {
                        var inst_17778 = state_17787[2];
                        var state_17787__$1 = state_17787;
                        var statearr_17795_17860 = state_17787__$1;
                        statearr_17795_17860[2] = inst_17778;
                        statearr_17795_17860[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17788 === 13) {
                          var inst_17780 = state_17787[2];
                          var state_17787__$1 = function() {
                            var statearr_17796 = state_17787;
                            statearr_17796[9] = inst_17780;
                            return statearr_17796;
                          }();
                          var statearr_17797_17861 = state_17787__$1;
                          statearr_17797_17861[2] = null;
                          statearr_17797_17861[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_17788 === 6) {
                            var inst_17752 = state_17787[7];
                            var state_17787__$1 = state_17787;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17787__$1, 11, inst_17752);
                          } else {
                            if (state_val_17788 === 17) {
                              var inst_17773 = state_17787[2];
                              var state_17787__$1 = state_17787;
                              if (cljs.core.truth_(inst_17773)) {
                                var statearr_17798_17862 = state_17787__$1;
                                statearr_17798_17862[1] = 19;
                              } else {
                                var statearr_17799_17863 = state_17787__$1;
                                statearr_17799_17863[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_17788 === 3) {
                                var inst_17785 = state_17787[2];
                                var state_17787__$1 = state_17787;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17787__$1, inst_17785);
                              } else {
                                if (state_val_17788 === 12) {
                                  var inst_17762 = state_17787[10];
                                  var state_17787__$1 = state_17787;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17787__$1, 14, inst_17762);
                                } else {
                                  if (state_val_17788 === 2) {
                                    var state_17787__$1 = state_17787;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17787__$1, 4, results);
                                  } else {
                                    if (state_val_17788 === 19) {
                                      var state_17787__$1 = state_17787;
                                      var statearr_17800_17864 = state_17787__$1;
                                      statearr_17800_17864[2] = null;
                                      statearr_17800_17864[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_17788 === 11) {
                                        var inst_17762 = state_17787[2];
                                        var state_17787__$1 = function() {
                                          var statearr_17801 = state_17787;
                                          statearr_17801[10] = inst_17762;
                                          return statearr_17801;
                                        }();
                                        var statearr_17802_17865 = state_17787__$1;
                                        statearr_17802_17865[2] = null;
                                        statearr_17802_17865[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_17788 === 9) {
                                          var state_17787__$1 = state_17787;
                                          var statearr_17803_17866 = state_17787__$1;
                                          statearr_17803_17866[2] = null;
                                          statearr_17803_17866[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_17788 === 5) {
                                            var state_17787__$1 = state_17787;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_17804_17867 = state_17787__$1;
                                              statearr_17804_17867[1] = 8;
                                            } else {
                                              var statearr_17805_17868 = state_17787__$1;
                                              statearr_17805_17868[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_17788 === 14) {
                                              var inst_17767 = state_17787[11];
                                              var inst_17765 = state_17787[8];
                                              var inst_17765__$1 = state_17787[2];
                                              var inst_17766 = inst_17765__$1 == null;
                                              var inst_17767__$1 = cljs.core.not.call(null, inst_17766);
                                              var state_17787__$1 = function() {
                                                var statearr_17806 = state_17787;
                                                statearr_17806[11] = inst_17767__$1;
                                                statearr_17806[8] = inst_17765__$1;
                                                return statearr_17806;
                                              }();
                                              if (inst_17767__$1) {
                                                var statearr_17807_17869 = state_17787__$1;
                                                statearr_17807_17869[1] = 15;
                                              } else {
                                                var statearr_17808_17870 = state_17787__$1;
                                                statearr_17808_17870[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_17788 === 16) {
                                                var inst_17767 = state_17787[11];
                                                var state_17787__$1 = state_17787;
                                                var statearr_17809_17871 = state_17787__$1;
                                                statearr_17809_17871[2] = inst_17767;
                                                statearr_17809_17871[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_17788 === 10) {
                                                  var inst_17759 = state_17787[2];
                                                  var state_17787__$1 = state_17787;
                                                  var statearr_17810_17872 = state_17787__$1;
                                                  statearr_17810_17872[2] = inst_17759;
                                                  statearr_17810_17872[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_17788 === 18) {
                                                    var inst_17770 = state_17787[2];
                                                    var state_17787__$1 = state_17787;
                                                    var statearr_17811_17873 = state_17787__$1;
                                                    statearr_17811_17873[2] = inst_17770;
                                                    statearr_17811_17873[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_17788 === 8) {
                                                      var inst_17756 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_17787__$1 = state_17787;
                                                      var statearr_17812_17874 = state_17787__$1;
                                                      statearr_17812_17874[2] = inst_17756;
                                                      statearr_17812_17874[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6560__auto__, jobs, results, process, async);
        return function(switch__6504__auto__, c__6560__auto__, jobs, results, process, async) {
          return function() {
            var state_machine__6505__auto__ = null;
            var state_machine__6505__auto____0 = function() {
              var statearr_17816 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_17816[0] = state_machine__6505__auto__;
              statearr_17816[1] = 1;
              return statearr_17816;
            };
            var state_machine__6505__auto____1 = function(state_17787) {
              while (true) {
                var ret_value__6506__auto__ = function() {
                  try {
                    while (true) {
                      var result__6507__auto__ = switch__6504__auto__.call(null, state_17787);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6507__auto__;
                      }
                      break;
                    }
                  } catch (e17817) {
                    if (e17817 instanceof Object) {
                      var ex__6508__auto__ = e17817;
                      var statearr_17818_17875 = state_17787;
                      statearr_17818_17875[5] = ex__6508__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17787);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e17817;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__17876 = state_17787;
                  state_17787 = G__17876;
                  continue;
                } else {
                  return ret_value__6506__auto__;
                }
                break;
              }
            };
            state_machine__6505__auto__ = function(state_17787) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6505__auto____0.call(this);
                case 1:
                  return state_machine__6505__auto____1.call(this, state_17787);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
            state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
            return state_machine__6505__auto__;
          }();
        }(switch__6504__auto__, c__6560__auto__, jobs, results, process, async);
      }();
      var state__6562__auto__ = function() {
        var statearr_17819 = f__6561__auto__.call(null);
        statearr_17819[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto__;
        return statearr_17819;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
    };
  }(c__6560__auto__, jobs, results, process, async));
  return c__6560__auto__;
};
cljs.core.async.pipeline_async = function() {
  var pipeline_async = null;
  var pipeline_async__4 = function(n, to, af, from) {
    return pipeline_async.call(null, n, to, af, from, true);
  };
  var pipeline_async__5 = function(n, to, af, from, close_QMARK_) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
  };
  pipeline_async = function(n, to, af, from, close_QMARK_) {
    switch(arguments.length) {
      case 4:
        return pipeline_async__4.call(this, n, to, af, from);
      case 5:
        return pipeline_async__5.call(this, n, to, af, from, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline_async.cljs$core$IFn$_invoke$arity$4 = pipeline_async__4;
  pipeline_async.cljs$core$IFn$_invoke$arity$5 = pipeline_async__5;
  return pipeline_async;
}();
cljs.core.async.pipeline = function() {
  var pipeline = null;
  var pipeline__4 = function(n, to, xf, from) {
    return pipeline.call(null, n, to, xf, from, true);
  };
  var pipeline__5 = function(n, to, xf, from, close_QMARK_) {
    return pipeline.call(null, n, to, xf, from, close_QMARK_, null);
  };
  var pipeline__6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
  };
  pipeline = function(n, to, xf, from, close_QMARK_, ex_handler) {
    switch(arguments.length) {
      case 4:
        return pipeline__4.call(this, n, to, xf, from);
      case 5:
        return pipeline__5.call(this, n, to, xf, from, close_QMARK_);
      case 6:
        return pipeline__6.call(this, n, to, xf, from, close_QMARK_, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline.cljs$core$IFn$_invoke$arity$4 = pipeline__4;
  pipeline.cljs$core$IFn$_invoke$arity$5 = pipeline__5;
  pipeline.cljs$core$IFn$_invoke$arity$6 = pipeline__6;
  return pipeline;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__6560__auto___17977 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___17977, tc, fc) {
      return function() {
        var f__6561__auto__ = function() {
          var switch__6504__auto__ = function(c__6560__auto___17977, tc, fc) {
            return function(state_17952) {
              var state_val_17953 = state_17952[1];
              if (state_val_17953 === 7) {
                var inst_17948 = state_17952[2];
                var state_17952__$1 = state_17952;
                var statearr_17954_17978 = state_17952__$1;
                statearr_17954_17978[2] = inst_17948;
                statearr_17954_17978[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_17953 === 1) {
                  var state_17952__$1 = state_17952;
                  var statearr_17955_17979 = state_17952__$1;
                  statearr_17955_17979[2] = null;
                  statearr_17955_17979[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17953 === 4) {
                    var inst_17929 = state_17952[7];
                    var inst_17929__$1 = state_17952[2];
                    var inst_17930 = inst_17929__$1 == null;
                    var state_17952__$1 = function() {
                      var statearr_17956 = state_17952;
                      statearr_17956[7] = inst_17929__$1;
                      return statearr_17956;
                    }();
                    if (cljs.core.truth_(inst_17930)) {
                      var statearr_17957_17980 = state_17952__$1;
                      statearr_17957_17980[1] = 5;
                    } else {
                      var statearr_17958_17981 = state_17952__$1;
                      statearr_17958_17981[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_17953 === 13) {
                      var state_17952__$1 = state_17952;
                      var statearr_17959_17982 = state_17952__$1;
                      statearr_17959_17982[2] = null;
                      statearr_17959_17982[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17953 === 6) {
                        var inst_17929 = state_17952[7];
                        var inst_17935 = p.call(null, inst_17929);
                        var state_17952__$1 = state_17952;
                        if (cljs.core.truth_(inst_17935)) {
                          var statearr_17960_17983 = state_17952__$1;
                          statearr_17960_17983[1] = 9;
                        } else {
                          var statearr_17961_17984 = state_17952__$1;
                          statearr_17961_17984[1] = 10;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17953 === 3) {
                          var inst_17950 = state_17952[2];
                          var state_17952__$1 = state_17952;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17952__$1, inst_17950);
                        } else {
                          if (state_val_17953 === 12) {
                            var state_17952__$1 = state_17952;
                            var statearr_17962_17985 = state_17952__$1;
                            statearr_17962_17985[2] = null;
                            statearr_17962_17985[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_17953 === 2) {
                              var state_17952__$1 = state_17952;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17952__$1, 4, ch);
                            } else {
                              if (state_val_17953 === 11) {
                                var inst_17929 = state_17952[7];
                                var inst_17939 = state_17952[2];
                                var state_17952__$1 = state_17952;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17952__$1, 8, inst_17939, inst_17929);
                              } else {
                                if (state_val_17953 === 9) {
                                  var state_17952__$1 = state_17952;
                                  var statearr_17963_17986 = state_17952__$1;
                                  statearr_17963_17986[2] = tc;
                                  statearr_17963_17986[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_17953 === 5) {
                                    var inst_17932 = cljs.core.async.close_BANG_.call(null, tc);
                                    var inst_17933 = cljs.core.async.close_BANG_.call(null, fc);
                                    var state_17952__$1 = function() {
                                      var statearr_17964 = state_17952;
                                      statearr_17964[8] = inst_17932;
                                      return statearr_17964;
                                    }();
                                    var statearr_17965_17987 = state_17952__$1;
                                    statearr_17965_17987[2] = inst_17933;
                                    statearr_17965_17987[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_17953 === 14) {
                                      var inst_17946 = state_17952[2];
                                      var state_17952__$1 = state_17952;
                                      var statearr_17966_17988 = state_17952__$1;
                                      statearr_17966_17988[2] = inst_17946;
                                      statearr_17966_17988[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_17953 === 10) {
                                        var state_17952__$1 = state_17952;
                                        var statearr_17967_17989 = state_17952__$1;
                                        statearr_17967_17989[2] = fc;
                                        statearr_17967_17989[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_17953 === 8) {
                                          var inst_17941 = state_17952[2];
                                          var state_17952__$1 = state_17952;
                                          if (cljs.core.truth_(inst_17941)) {
                                            var statearr_17968_17990 = state_17952__$1;
                                            statearr_17968_17990[1] = 12;
                                          } else {
                                            var statearr_17969_17991 = state_17952__$1;
                                            statearr_17969_17991[1] = 13;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6560__auto___17977, tc, fc);
          return function(switch__6504__auto__, c__6560__auto___17977, tc, fc) {
            return function() {
              var state_machine__6505__auto__ = null;
              var state_machine__6505__auto____0 = function() {
                var statearr_17973 = [null, null, null, null, null, null, null, null, null];
                statearr_17973[0] = state_machine__6505__auto__;
                statearr_17973[1] = 1;
                return statearr_17973;
              };
              var state_machine__6505__auto____1 = function(state_17952) {
                while (true) {
                  var ret_value__6506__auto__ = function() {
                    try {
                      while (true) {
                        var result__6507__auto__ = switch__6504__auto__.call(null, state_17952);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6507__auto__;
                        }
                        break;
                      }
                    } catch (e17974) {
                      if (e17974 instanceof Object) {
                        var ex__6508__auto__ = e17974;
                        var statearr_17975_17992 = state_17952;
                        statearr_17975_17992[5] = ex__6508__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17952);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e17974;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__17993 = state_17952;
                    state_17952 = G__17993;
                    continue;
                  } else {
                    return ret_value__6506__auto__;
                  }
                  break;
                }
              };
              state_machine__6505__auto__ = function(state_17952) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6505__auto____0.call(this);
                  case 1:
                    return state_machine__6505__auto____1.call(this, state_17952);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
              return state_machine__6505__auto__;
            }();
          }(switch__6504__auto__, c__6560__auto___17977, tc, fc);
        }();
        var state__6562__auto__ = function() {
          var statearr_17976 = f__6561__auto__.call(null);
          statearr_17976[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___17977;
          return statearr_17976;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
      };
    }(c__6560__auto___17977, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__6560__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto__) {
    return function() {
      var f__6561__auto__ = function() {
        var switch__6504__auto__ = function(c__6560__auto__) {
          return function(state_18040) {
            var state_val_18041 = state_18040[1];
            if (state_val_18041 === 7) {
              var inst_18036 = state_18040[2];
              var state_18040__$1 = state_18040;
              var statearr_18042_18058 = state_18040__$1;
              statearr_18042_18058[2] = inst_18036;
              statearr_18042_18058[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_18041 === 6) {
                var inst_18026 = state_18040[7];
                var inst_18029 = state_18040[8];
                var inst_18033 = f.call(null, inst_18026, inst_18029);
                var inst_18026__$1 = inst_18033;
                var state_18040__$1 = function() {
                  var statearr_18043 = state_18040;
                  statearr_18043[7] = inst_18026__$1;
                  return statearr_18043;
                }();
                var statearr_18044_18059 = state_18040__$1;
                statearr_18044_18059[2] = null;
                statearr_18044_18059[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18041 === 5) {
                  var inst_18026 = state_18040[7];
                  var state_18040__$1 = state_18040;
                  var statearr_18045_18060 = state_18040__$1;
                  statearr_18045_18060[2] = inst_18026;
                  statearr_18045_18060[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18041 === 4) {
                    var inst_18029 = state_18040[8];
                    var inst_18029__$1 = state_18040[2];
                    var inst_18030 = inst_18029__$1 == null;
                    var state_18040__$1 = function() {
                      var statearr_18046 = state_18040;
                      statearr_18046[8] = inst_18029__$1;
                      return statearr_18046;
                    }();
                    if (cljs.core.truth_(inst_18030)) {
                      var statearr_18047_18061 = state_18040__$1;
                      statearr_18047_18061[1] = 5;
                    } else {
                      var statearr_18048_18062 = state_18040__$1;
                      statearr_18048_18062[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18041 === 3) {
                      var inst_18038 = state_18040[2];
                      var state_18040__$1 = state_18040;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18040__$1, inst_18038);
                    } else {
                      if (state_val_18041 === 2) {
                        var state_18040__$1 = state_18040;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18040__$1, 4, ch);
                      } else {
                        if (state_val_18041 === 1) {
                          var inst_18026 = init;
                          var state_18040__$1 = function() {
                            var statearr_18049 = state_18040;
                            statearr_18049[7] = inst_18026;
                            return statearr_18049;
                          }();
                          var statearr_18050_18063 = state_18040__$1;
                          statearr_18050_18063[2] = null;
                          statearr_18050_18063[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6560__auto__);
        return function(switch__6504__auto__, c__6560__auto__) {
          return function() {
            var state_machine__6505__auto__ = null;
            var state_machine__6505__auto____0 = function() {
              var statearr_18054 = [null, null, null, null, null, null, null, null, null];
              statearr_18054[0] = state_machine__6505__auto__;
              statearr_18054[1] = 1;
              return statearr_18054;
            };
            var state_machine__6505__auto____1 = function(state_18040) {
              while (true) {
                var ret_value__6506__auto__ = function() {
                  try {
                    while (true) {
                      var result__6507__auto__ = switch__6504__auto__.call(null, state_18040);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6507__auto__;
                      }
                      break;
                    }
                  } catch (e18055) {
                    if (e18055 instanceof Object) {
                      var ex__6508__auto__ = e18055;
                      var statearr_18056_18064 = state_18040;
                      statearr_18056_18064[5] = ex__6508__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18040);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e18055;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__18065 = state_18040;
                  state_18040 = G__18065;
                  continue;
                } else {
                  return ret_value__6506__auto__;
                }
                break;
              }
            };
            state_machine__6505__auto__ = function(state_18040) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6505__auto____0.call(this);
                case 1:
                  return state_machine__6505__auto____1.call(this, state_18040);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
            state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
            return state_machine__6505__auto__;
          }();
        }(switch__6504__auto__, c__6560__auto__);
      }();
      var state__6562__auto__ = function() {
        var statearr_18057 = f__6561__auto__.call(null);
        statearr_18057[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto__;
        return statearr_18057;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
    };
  }(c__6560__auto__));
  return c__6560__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__6560__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto__) {
      return function() {
        var f__6561__auto__ = function() {
          var switch__6504__auto__ = function(c__6560__auto__) {
            return function(state_18139) {
              var state_val_18140 = state_18139[1];
              if (state_val_18140 === 7) {
                var inst_18121 = state_18139[2];
                var state_18139__$1 = state_18139;
                var statearr_18141_18164 = state_18139__$1;
                statearr_18141_18164[2] = inst_18121;
                statearr_18141_18164[1] = 6;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18140 === 1) {
                  var inst_18115 = cljs.core.seq.call(null, coll);
                  var inst_18116 = inst_18115;
                  var state_18139__$1 = function() {
                    var statearr_18142 = state_18139;
                    statearr_18142[7] = inst_18116;
                    return statearr_18142;
                  }();
                  var statearr_18143_18165 = state_18139__$1;
                  statearr_18143_18165[2] = null;
                  statearr_18143_18165[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18140 === 4) {
                    var inst_18116 = state_18139[7];
                    var inst_18119 = cljs.core.first.call(null, inst_18116);
                    var state_18139__$1 = state_18139;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18139__$1, 7, ch, inst_18119);
                  } else {
                    if (state_val_18140 === 13) {
                      var inst_18133 = state_18139[2];
                      var state_18139__$1 = state_18139;
                      var statearr_18144_18166 = state_18139__$1;
                      statearr_18144_18166[2] = inst_18133;
                      statearr_18144_18166[1] = 10;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18140 === 6) {
                        var inst_18124 = state_18139[2];
                        var state_18139__$1 = state_18139;
                        if (cljs.core.truth_(inst_18124)) {
                          var statearr_18145_18167 = state_18139__$1;
                          statearr_18145_18167[1] = 8;
                        } else {
                          var statearr_18146_18168 = state_18139__$1;
                          statearr_18146_18168[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_18140 === 3) {
                          var inst_18137 = state_18139[2];
                          var state_18139__$1 = state_18139;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18139__$1, inst_18137);
                        } else {
                          if (state_val_18140 === 12) {
                            var state_18139__$1 = state_18139;
                            var statearr_18147_18169 = state_18139__$1;
                            statearr_18147_18169[2] = null;
                            statearr_18147_18169[1] = 13;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18140 === 2) {
                              var inst_18116 = state_18139[7];
                              var state_18139__$1 = state_18139;
                              if (cljs.core.truth_(inst_18116)) {
                                var statearr_18148_18170 = state_18139__$1;
                                statearr_18148_18170[1] = 4;
                              } else {
                                var statearr_18149_18171 = state_18139__$1;
                                statearr_18149_18171[1] = 5;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_18140 === 11) {
                                var inst_18130 = cljs.core.async.close_BANG_.call(null, ch);
                                var state_18139__$1 = state_18139;
                                var statearr_18150_18172 = state_18139__$1;
                                statearr_18150_18172[2] = inst_18130;
                                statearr_18150_18172[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_18140 === 9) {
                                  var state_18139__$1 = state_18139;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_18151_18173 = state_18139__$1;
                                    statearr_18151_18173[1] = 11;
                                  } else {
                                    var statearr_18152_18174 = state_18139__$1;
                                    statearr_18152_18174[1] = 12;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18140 === 5) {
                                    var inst_18116 = state_18139[7];
                                    var state_18139__$1 = state_18139;
                                    var statearr_18153_18175 = state_18139__$1;
                                    statearr_18153_18175[2] = inst_18116;
                                    statearr_18153_18175[1] = 6;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_18140 === 10) {
                                      var inst_18135 = state_18139[2];
                                      var state_18139__$1 = state_18139;
                                      var statearr_18154_18176 = state_18139__$1;
                                      statearr_18154_18176[2] = inst_18135;
                                      statearr_18154_18176[1] = 3;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_18140 === 8) {
                                        var inst_18116 = state_18139[7];
                                        var inst_18126 = cljs.core.next.call(null, inst_18116);
                                        var inst_18116__$1 = inst_18126;
                                        var state_18139__$1 = function() {
                                          var statearr_18155 = state_18139;
                                          statearr_18155[7] = inst_18116__$1;
                                          return statearr_18155;
                                        }();
                                        var statearr_18156_18177 = state_18139__$1;
                                        statearr_18156_18177[2] = null;
                                        statearr_18156_18177[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6560__auto__);
          return function(switch__6504__auto__, c__6560__auto__) {
            return function() {
              var state_machine__6505__auto__ = null;
              var state_machine__6505__auto____0 = function() {
                var statearr_18160 = [null, null, null, null, null, null, null, null];
                statearr_18160[0] = state_machine__6505__auto__;
                statearr_18160[1] = 1;
                return statearr_18160;
              };
              var state_machine__6505__auto____1 = function(state_18139) {
                while (true) {
                  var ret_value__6506__auto__ = function() {
                    try {
                      while (true) {
                        var result__6507__auto__ = switch__6504__auto__.call(null, state_18139);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6507__auto__;
                        }
                        break;
                      }
                    } catch (e18161) {
                      if (e18161 instanceof Object) {
                        var ex__6508__auto__ = e18161;
                        var statearr_18162_18178 = state_18139;
                        statearr_18162_18178[5] = ex__6508__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18139);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e18161;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__18179 = state_18139;
                    state_18139 = G__18179;
                    continue;
                  } else {
                    return ret_value__6506__auto__;
                  }
                  break;
                }
              };
              state_machine__6505__auto__ = function(state_18139) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6505__auto____0.call(this);
                  case 1:
                    return state_machine__6505__auto____1.call(this, state_18139);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
              return state_machine__6505__auto__;
            }();
          }(switch__6504__auto__, c__6560__auto__);
        }();
        var state__6562__auto__ = function() {
          var statearr_18163 = f__6561__auto__.call(null);
          statearr_18163[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto__;
          return statearr_18163;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
      };
    }(c__6560__auto__));
    return c__6560__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj18181 = {};
  return obj18181;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3756__auto__ = _;
    if (and__3756__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4412__auto__ = _ == null ? null : _;
    return function() {
      var or__3768__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj18183 = {};
  return obj18183;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3756__auto__ = m;
    if (and__3756__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4412__auto__ = m == null ? null : m;
    return function() {
      var or__3768__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3756__auto__ = m;
    if (and__3756__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4412__auto__ = m == null ? null : m;
    return function() {
      var or__3768__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3756__auto__ = m;
    if (and__3756__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4412__auto__ = m == null ? null : m;
    return function() {
      var or__3768__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t18405 !== "undefined") {
    } else {
      cljs.core.async.t18405 = function(cs, ch, mult, meta18406) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta18406 = meta18406;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t18405.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t18405.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t18405.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t18405.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t18405.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t18405.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t18405.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_18407) {
          var self__ = this;
          var _18407__$1 = this;
          return self__.meta18406;
        };
      }(cs);
      cljs.core.async.t18405.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_18407, meta18406__$1) {
          var self__ = this;
          var _18407__$1 = this;
          return new cljs.core.async.t18405(self__.cs, self__.ch, self__.mult, meta18406__$1);
        };
      }(cs);
      cljs.core.async.t18405.cljs$lang$type = true;
      cljs.core.async.t18405.cljs$lang$ctorStr = "cljs.core.async/t18405";
      cljs.core.async.t18405.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
          return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async/t18405");
        };
      }(cs);
      cljs.core.async.__GT_t18405 = function(cs) {
        return function __GT_t18405(cs__$1, ch__$1, mult__$1, meta18406) {
          return new cljs.core.async.t18405(cs__$1, ch__$1, mult__$1, meta18406);
        };
      }(cs);
    }
    return new cljs.core.async.t18405(cs, ch, mult, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 48, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 397, new cljs.core.Keyword(null, "column", "column", 2078222095), 11, new cljs.core.Keyword(null, "line", "line", 212345235), 390, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core\\async.cljs"], 
    null));
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__6560__auto___18626 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___18626, cs, m, dchan, dctr, done) {
    return function() {
      var f__6561__auto__ = function() {
        var switch__6504__auto__ = function(c__6560__auto___18626, cs, m, dchan, dctr, done) {
          return function(state_18538) {
            var state_val_18539 = state_18538[1];
            if (state_val_18539 === 7) {
              var inst_18534 = state_18538[2];
              var state_18538__$1 = state_18538;
              var statearr_18540_18627 = state_18538__$1;
              statearr_18540_18627[2] = inst_18534;
              statearr_18540_18627[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_18539 === 20) {
                var inst_18439 = state_18538[7];
                var inst_18449 = cljs.core.first.call(null, inst_18439);
                var inst_18450 = cljs.core.nth.call(null, inst_18449, 0, null);
                var inst_18451 = cljs.core.nth.call(null, inst_18449, 1, null);
                var state_18538__$1 = function() {
                  var statearr_18541 = state_18538;
                  statearr_18541[8] = inst_18450;
                  return statearr_18541;
                }();
                if (cljs.core.truth_(inst_18451)) {
                  var statearr_18542_18628 = state_18538__$1;
                  statearr_18542_18628[1] = 22;
                } else {
                  var statearr_18543_18629 = state_18538__$1;
                  statearr_18543_18629[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18539 === 27) {
                  var inst_18486 = state_18538[9];
                  var inst_18481 = state_18538[10];
                  var inst_18410 = state_18538[11];
                  var inst_18479 = state_18538[12];
                  var inst_18486__$1 = cljs.core._nth.call(null, inst_18479, inst_18481);
                  var inst_18487 = cljs.core.async.put_BANG_.call(null, inst_18486__$1, inst_18410, done);
                  var state_18538__$1 = function() {
                    var statearr_18544 = state_18538;
                    statearr_18544[9] = inst_18486__$1;
                    return statearr_18544;
                  }();
                  if (cljs.core.truth_(inst_18487)) {
                    var statearr_18545_18630 = state_18538__$1;
                    statearr_18545_18630[1] = 30;
                  } else {
                    var statearr_18546_18631 = state_18538__$1;
                    statearr_18546_18631[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18539 === 1) {
                    var state_18538__$1 = state_18538;
                    var statearr_18547_18632 = state_18538__$1;
                    statearr_18547_18632[2] = null;
                    statearr_18547_18632[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18539 === 24) {
                      var inst_18439 = state_18538[7];
                      var inst_18456 = state_18538[2];
                      var inst_18457 = cljs.core.next.call(null, inst_18439);
                      var inst_18419 = inst_18457;
                      var inst_18420 = null;
                      var inst_18421 = 0;
                      var inst_18422 = 0;
                      var state_18538__$1 = function() {
                        var statearr_18548 = state_18538;
                        statearr_18548[13] = inst_18456;
                        statearr_18548[14] = inst_18420;
                        statearr_18548[15] = inst_18419;
                        statearr_18548[16] = inst_18421;
                        statearr_18548[17] = inst_18422;
                        return statearr_18548;
                      }();
                      var statearr_18549_18633 = state_18538__$1;
                      statearr_18549_18633[2] = null;
                      statearr_18549_18633[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18539 === 39) {
                        var state_18538__$1 = state_18538;
                        var statearr_18553_18634 = state_18538__$1;
                        statearr_18553_18634[2] = null;
                        statearr_18553_18634[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_18539 === 4) {
                          var inst_18410 = state_18538[11];
                          var inst_18410__$1 = state_18538[2];
                          var inst_18411 = inst_18410__$1 == null;
                          var state_18538__$1 = function() {
                            var statearr_18554 = state_18538;
                            statearr_18554[11] = inst_18410__$1;
                            return statearr_18554;
                          }();
                          if (cljs.core.truth_(inst_18411)) {
                            var statearr_18555_18635 = state_18538__$1;
                            statearr_18555_18635[1] = 5;
                          } else {
                            var statearr_18556_18636 = state_18538__$1;
                            statearr_18556_18636[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_18539 === 15) {
                            var inst_18420 = state_18538[14];
                            var inst_18419 = state_18538[15];
                            var inst_18421 = state_18538[16];
                            var inst_18422 = state_18538[17];
                            var inst_18435 = state_18538[2];
                            var inst_18436 = inst_18422 + 1;
                            var tmp18550 = inst_18420;
                            var tmp18551 = inst_18419;
                            var tmp18552 = inst_18421;
                            var inst_18419__$1 = tmp18551;
                            var inst_18420__$1 = tmp18550;
                            var inst_18421__$1 = tmp18552;
                            var inst_18422__$1 = inst_18436;
                            var state_18538__$1 = function() {
                              var statearr_18557 = state_18538;
                              statearr_18557[14] = inst_18420__$1;
                              statearr_18557[15] = inst_18419__$1;
                              statearr_18557[16] = inst_18421__$1;
                              statearr_18557[18] = inst_18435;
                              statearr_18557[17] = inst_18422__$1;
                              return statearr_18557;
                            }();
                            var statearr_18558_18637 = state_18538__$1;
                            statearr_18558_18637[2] = null;
                            statearr_18558_18637[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18539 === 21) {
                              var inst_18460 = state_18538[2];
                              var state_18538__$1 = state_18538;
                              var statearr_18562_18638 = state_18538__$1;
                              statearr_18562_18638[2] = inst_18460;
                              statearr_18562_18638[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_18539 === 31) {
                                var inst_18486 = state_18538[9];
                                var inst_18490 = done.call(null, null);
                                var inst_18491 = cljs.core.async.untap_STAR_.call(null, m, inst_18486);
                                var state_18538__$1 = function() {
                                  var statearr_18563 = state_18538;
                                  statearr_18563[19] = inst_18490;
                                  return statearr_18563;
                                }();
                                var statearr_18564_18639 = state_18538__$1;
                                statearr_18564_18639[2] = inst_18491;
                                statearr_18564_18639[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_18539 === 32) {
                                  var inst_18481 = state_18538[10];
                                  var inst_18478 = state_18538[20];
                                  var inst_18479 = state_18538[12];
                                  var inst_18480 = state_18538[21];
                                  var inst_18493 = state_18538[2];
                                  var inst_18494 = inst_18481 + 1;
                                  var tmp18559 = inst_18478;
                                  var tmp18560 = inst_18479;
                                  var tmp18561 = inst_18480;
                                  var inst_18478__$1 = tmp18559;
                                  var inst_18479__$1 = tmp18560;
                                  var inst_18480__$1 = tmp18561;
                                  var inst_18481__$1 = inst_18494;
                                  var state_18538__$1 = function() {
                                    var statearr_18565 = state_18538;
                                    statearr_18565[22] = inst_18493;
                                    statearr_18565[10] = inst_18481__$1;
                                    statearr_18565[20] = inst_18478__$1;
                                    statearr_18565[12] = inst_18479__$1;
                                    statearr_18565[21] = inst_18480__$1;
                                    return statearr_18565;
                                  }();
                                  var statearr_18566_18640 = state_18538__$1;
                                  statearr_18566_18640[2] = null;
                                  statearr_18566_18640[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18539 === 40) {
                                    var inst_18506 = state_18538[23];
                                    var inst_18510 = done.call(null, null);
                                    var inst_18511 = cljs.core.async.untap_STAR_.call(null, m, inst_18506);
                                    var state_18538__$1 = function() {
                                      var statearr_18567 = state_18538;
                                      statearr_18567[24] = inst_18510;
                                      return statearr_18567;
                                    }();
                                    var statearr_18568_18641 = state_18538__$1;
                                    statearr_18568_18641[2] = inst_18511;
                                    statearr_18568_18641[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_18539 === 33) {
                                      var inst_18497 = state_18538[25];
                                      var inst_18499 = cljs.core.chunked_seq_QMARK_.call(null, inst_18497);
                                      var state_18538__$1 = state_18538;
                                      if (inst_18499) {
                                        var statearr_18569_18642 = state_18538__$1;
                                        statearr_18569_18642[1] = 36;
                                      } else {
                                        var statearr_18570_18643 = state_18538__$1;
                                        statearr_18570_18643[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_18539 === 13) {
                                        var inst_18429 = state_18538[26];
                                        var inst_18432 = cljs.core.async.close_BANG_.call(null, inst_18429);
                                        var state_18538__$1 = state_18538;
                                        var statearr_18571_18644 = state_18538__$1;
                                        statearr_18571_18644[2] = inst_18432;
                                        statearr_18571_18644[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_18539 === 22) {
                                          var inst_18450 = state_18538[8];
                                          var inst_18453 = cljs.core.async.close_BANG_.call(null, inst_18450);
                                          var state_18538__$1 = state_18538;
                                          var statearr_18572_18645 = state_18538__$1;
                                          statearr_18572_18645[2] = inst_18453;
                                          statearr_18572_18645[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_18539 === 36) {
                                            var inst_18497 = state_18538[25];
                                            var inst_18501 = cljs.core.chunk_first.call(null, inst_18497);
                                            var inst_18502 = cljs.core.chunk_rest.call(null, inst_18497);
                                            var inst_18503 = cljs.core.count.call(null, inst_18501);
                                            var inst_18478 = inst_18502;
                                            var inst_18479 = inst_18501;
                                            var inst_18480 = inst_18503;
                                            var inst_18481 = 0;
                                            var state_18538__$1 = function() {
                                              var statearr_18573 = state_18538;
                                              statearr_18573[10] = inst_18481;
                                              statearr_18573[20] = inst_18478;
                                              statearr_18573[12] = inst_18479;
                                              statearr_18573[21] = inst_18480;
                                              return statearr_18573;
                                            }();
                                            var statearr_18574_18646 = state_18538__$1;
                                            statearr_18574_18646[2] = null;
                                            statearr_18574_18646[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_18539 === 41) {
                                              var inst_18497 = state_18538[25];
                                              var inst_18513 = state_18538[2];
                                              var inst_18514 = cljs.core.next.call(null, inst_18497);
                                              var inst_18478 = inst_18514;
                                              var inst_18479 = null;
                                              var inst_18480 = 0;
                                              var inst_18481 = 0;
                                              var state_18538__$1 = function() {
                                                var statearr_18575 = state_18538;
                                                statearr_18575[10] = inst_18481;
                                                statearr_18575[27] = inst_18513;
                                                statearr_18575[20] = inst_18478;
                                                statearr_18575[12] = inst_18479;
                                                statearr_18575[21] = inst_18480;
                                                return statearr_18575;
                                              }();
                                              var statearr_18576_18647 = state_18538__$1;
                                              statearr_18576_18647[2] = null;
                                              statearr_18576_18647[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_18539 === 43) {
                                                var state_18538__$1 = state_18538;
                                                var statearr_18577_18648 = state_18538__$1;
                                                statearr_18577_18648[2] = null;
                                                statearr_18577_18648[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_18539 === 29) {
                                                  var inst_18522 = state_18538[2];
                                                  var state_18538__$1 = state_18538;
                                                  var statearr_18578_18649 = state_18538__$1;
                                                  statearr_18578_18649[2] = inst_18522;
                                                  statearr_18578_18649[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_18539 === 44) {
                                                    var inst_18531 = state_18538[2];
                                                    var state_18538__$1 = function() {
                                                      var statearr_18579 = state_18538;
                                                      statearr_18579[28] = inst_18531;
                                                      return statearr_18579;
                                                    }();
                                                    var statearr_18580_18650 = state_18538__$1;
                                                    statearr_18580_18650[2] = null;
                                                    statearr_18580_18650[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_18539 === 6) {
                                                      var inst_18470 = state_18538[29];
                                                      var inst_18469 = cljs.core.deref.call(null, cs);
                                                      var inst_18470__$1 = cljs.core.keys.call(null, inst_18469);
                                                      var inst_18471 = cljs.core.count.call(null, inst_18470__$1);
                                                      var inst_18472 = cljs.core.reset_BANG_.call(null, dctr, inst_18471);
                                                      var inst_18477 = cljs.core.seq.call(null, inst_18470__$1);
                                                      var inst_18478 = inst_18477;
                                                      var inst_18479 = null;
                                                      var inst_18480 = 0;
                                                      var inst_18481 = 0;
                                                      var state_18538__$1 = function() {
                                                        var statearr_18581 = state_18538;
                                                        statearr_18581[10] = inst_18481;
                                                        statearr_18581[30] = inst_18472;
                                                        statearr_18581[20] = inst_18478;
                                                        statearr_18581[12] = inst_18479;
                                                        statearr_18581[29] = inst_18470__$1;
                                                        statearr_18581[21] = inst_18480;
                                                        return statearr_18581;
                                                      }();
                                                      var statearr_18582_18651 = state_18538__$1;
                                                      statearr_18582_18651[2] = null;
                                                      statearr_18582_18651[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_18539 === 28) {
                                                        var inst_18497 = state_18538[25];
                                                        var inst_18478 = state_18538[20];
                                                        var inst_18497__$1 = cljs.core.seq.call(null, inst_18478);
                                                        var state_18538__$1 = function() {
                                                          var statearr_18583 = state_18538;
                                                          statearr_18583[25] = inst_18497__$1;
                                                          return statearr_18583;
                                                        }();
                                                        if (inst_18497__$1) {
                                                          var statearr_18584_18652 = state_18538__$1;
                                                          statearr_18584_18652[1] = 33;
                                                        } else {
                                                          var statearr_18585_18653 = state_18538__$1;
                                                          statearr_18585_18653[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_18539 === 25) {
                                                          var inst_18481 = state_18538[10];
                                                          var inst_18480 = state_18538[21];
                                                          var inst_18483 = inst_18481 < inst_18480;
                                                          var inst_18484 = inst_18483;
                                                          var state_18538__$1 = state_18538;
                                                          if (cljs.core.truth_(inst_18484)) {
                                                            var statearr_18586_18654 = state_18538__$1;
                                                            statearr_18586_18654[1] = 27;
                                                          } else {
                                                            var statearr_18587_18655 = state_18538__$1;
                                                            statearr_18587_18655[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_18539 === 34) {
                                                            var state_18538__$1 = state_18538;
                                                            var statearr_18588_18656 = state_18538__$1;
                                                            statearr_18588_18656[2] = null;
                                                            statearr_18588_18656[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_18539 === 17) {
                                                              var state_18538__$1 = state_18538;
                                                              var statearr_18589_18657 = state_18538__$1;
                                                              statearr_18589_18657[2] = null;
                                                              statearr_18589_18657[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_18539 === 3) {
                                                                var inst_18536 = state_18538[2];
                                                                var state_18538__$1 = state_18538;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18538__$1, inst_18536);
                                                              } else {
                                                                if (state_val_18539 === 12) {
                                                                  var inst_18465 = state_18538[2];
                                                                  var state_18538__$1 = state_18538;
                                                                  var statearr_18590_18658 = state_18538__$1;
                                                                  statearr_18590_18658[2] = inst_18465;
                                                                  statearr_18590_18658[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_18539 === 2) {
                                                                    var state_18538__$1 = state_18538;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18538__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_18539 === 23) {
                                                                      var state_18538__$1 = state_18538;
                                                                      var statearr_18591_18659 = state_18538__$1;
                                                                      statearr_18591_18659[2] = null;
                                                                      statearr_18591_18659[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_18539 === 35) {
                                                                        var inst_18520 = state_18538[2];
                                                                        var state_18538__$1 = state_18538;
                                                                        var statearr_18592_18660 = state_18538__$1;
                                                                        statearr_18592_18660[2] = inst_18520;
                                                                        statearr_18592_18660[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_18539 === 19) {
                                                                          var inst_18439 = state_18538[7];
                                                                          var inst_18443 = cljs.core.chunk_first.call(null, inst_18439);
                                                                          var inst_18444 = cljs.core.chunk_rest.call(null, inst_18439);
                                                                          var inst_18445 = cljs.core.count.call(null, inst_18443);
                                                                          var inst_18419 = inst_18444;
                                                                          var inst_18420 = inst_18443;
                                                                          var inst_18421 = inst_18445;
                                                                          var inst_18422 = 0;
                                                                          var state_18538__$1 = function() {
                                                                            var statearr_18593 = state_18538;
                                                                            statearr_18593[14] = inst_18420;
                                                                            statearr_18593[15] = inst_18419;
                                                                            statearr_18593[16] = inst_18421;
                                                                            statearr_18593[17] = inst_18422;
                                                                            return statearr_18593;
                                                                          }();
                                                                          var statearr_18594_18661 = state_18538__$1;
                                                                          statearr_18594_18661[2] = null;
                                                                          statearr_18594_18661[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_18539 === 11) {
                                                                            var inst_18439 = state_18538[7];
                                                                            var inst_18419 = state_18538[15];
                                                                            var inst_18439__$1 = cljs.core.seq.call(null, inst_18419);
                                                                            var state_18538__$1 = function() {
                                                                              var statearr_18595 = state_18538;
                                                                              statearr_18595[7] = inst_18439__$1;
                                                                              return statearr_18595;
                                                                            }();
                                                                            if (inst_18439__$1) {
                                                                              var statearr_18596_18662 = state_18538__$1;
                                                                              statearr_18596_18662[1] = 16;
                                                                            } else {
                                                                              var statearr_18597_18663 = state_18538__$1;
                                                                              statearr_18597_18663[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_18539 === 9) {
                                                                              var inst_18467 = state_18538[2];
                                                                              var state_18538__$1 = state_18538;
                                                                              var statearr_18598_18664 = state_18538__$1;
                                                                              statearr_18598_18664[2] = inst_18467;
                                                                              statearr_18598_18664[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_18539 === 5) {
                                                                                var inst_18417 = cljs.core.deref.call(null, cs);
                                                                                var inst_18418 = cljs.core.seq.call(null, inst_18417);
                                                                                var inst_18419 = inst_18418;
                                                                                var inst_18420 = null;
                                                                                var inst_18421 = 0;
                                                                                var inst_18422 = 0;
                                                                                var state_18538__$1 = function() {
                                                                                  var statearr_18599 = state_18538;
                                                                                  statearr_18599[14] = inst_18420;
                                                                                  statearr_18599[15] = inst_18419;
                                                                                  statearr_18599[16] = inst_18421;
                                                                                  statearr_18599[17] = inst_18422;
                                                                                  return statearr_18599;
                                                                                }();
                                                                                var statearr_18600_18665 = state_18538__$1;
                                                                                statearr_18600_18665[2] = null;
                                                                                statearr_18600_18665[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_18539 === 14) {
                                                                                  var state_18538__$1 = state_18538;
                                                                                  var statearr_18601_18666 = state_18538__$1;
                                                                                  statearr_18601_18666[2] = null;
                                                                                  statearr_18601_18666[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_18539 === 45) {
                                                                                    var inst_18528 = state_18538[2];
                                                                                    var state_18538__$1 = state_18538;
                                                                                    var statearr_18602_18667 = state_18538__$1;
                                                                                    statearr_18602_18667[2] = inst_18528;
                                                                                    statearr_18602_18667[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_18539 === 26) {
                                                                                      var inst_18470 = state_18538[29];
                                                                                      var inst_18524 = state_18538[2];
                                                                                      var inst_18525 = cljs.core.seq.call(null, inst_18470);
                                                                                      var state_18538__$1 = function() {
                                                                                        var statearr_18603 = state_18538;
                                                                                        statearr_18603[31] = inst_18524;
                                                                                        return statearr_18603;
                                                                                      }();
                                                                                      if (inst_18525) {
                                                                                        var statearr_18604_18668 = state_18538__$1;
                                                                                        statearr_18604_18668[1] = 42;
                                                                                      } else {
                                                                                        var statearr_18605_18669 = state_18538__$1;
                                                                                        statearr_18605_18669[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_18539 === 16) {
                                                                                        var inst_18439 = state_18538[7];
                                                                                        var inst_18441 = cljs.core.chunked_seq_QMARK_.call(null, inst_18439);
                                                                                        var state_18538__$1 = state_18538;
                                                                                        if (inst_18441) {
                                                                                          var statearr_18606_18670 = state_18538__$1;
                                                                                          statearr_18606_18670[1] = 19;
                                                                                        } else {
                                                                                          var statearr_18607_18671 = state_18538__$1;
                                                                                          statearr_18607_18671[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_18539 === 38) {
                                                                                          var inst_18517 = state_18538[2];
                                                                                          var state_18538__$1 = state_18538;
                                                                                          var statearr_18608_18672 = state_18538__$1;
                                                                                          statearr_18608_18672[2] = inst_18517;
                                                                                          statearr_18608_18672[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_18539 === 30) {
                                                                                            var state_18538__$1 = state_18538;
                                                                                            var statearr_18609_18673 = state_18538__$1;
                                                                                            statearr_18609_18673[2] = null;
                                                                                            statearr_18609_18673[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_18539 === 10) {
                                                                                              var inst_18420 = state_18538[14];
                                                                                              var inst_18422 = state_18538[17];
                                                                                              var inst_18428 = cljs.core._nth.call(null, inst_18420, inst_18422);
                                                                                              var inst_18429 = cljs.core.nth.call(null, inst_18428, 0, null);
                                                                                              var inst_18430 = cljs.core.nth.call(null, inst_18428, 1, null);
                                                                                              var state_18538__$1 = function() {
                                                                                                var statearr_18610 = state_18538;
                                                                                                statearr_18610[26] = inst_18429;
                                                                                                return statearr_18610;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_18430)) {
                                                                                                var statearr_18611_18674 = state_18538__$1;
                                                                                                statearr_18611_18674[1] = 13;
                                                                                              } else {
                                                                                                var statearr_18612_18675 = state_18538__$1;
                                                                                                statearr_18612_18675[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_18539 === 18) {
                                                                                                var inst_18463 = state_18538[2];
                                                                                                var state_18538__$1 = state_18538;
                                                                                                var statearr_18613_18676 = state_18538__$1;
                                                                                                statearr_18613_18676[2] = inst_18463;
                                                                                                statearr_18613_18676[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_18539 === 42) {
                                                                                                  var state_18538__$1 = state_18538;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18538__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_18539 === 37) {
                                                                                                    var inst_18506 = state_18538[23];
                                                                                                    var inst_18410 = state_18538[11];
                                                                                                    var inst_18497 = state_18538[25];
                                                                                                    var inst_18506__$1 = cljs.core.first.call(null, inst_18497);
                                                                                                    var inst_18507 = cljs.core.async.put_BANG_.call(null, inst_18506__$1, inst_18410, done);
                                                                                                    var state_18538__$1 = function() {
                                                                                                      var statearr_18614 = state_18538;
                                                                                                      statearr_18614[23] = inst_18506__$1;
                                                                                                      return statearr_18614;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_18507)) {
                                                                                                      var statearr_18615_18677 = state_18538__$1;
                                                                                                      statearr_18615_18677[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_18616_18678 = state_18538__$1;
                                                                                                      statearr_18616_18678[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_18539 === 8) {
                                                                                                      var inst_18421 = state_18538[16];
                                                                                                      var inst_18422 = state_18538[17];
                                                                                                      var inst_18424 = inst_18422 < inst_18421;
                                                                                                      var inst_18425 = inst_18424;
                                                                                                      var state_18538__$1 = state_18538;
                                                                                                      if (cljs.core.truth_(inst_18425)) {
                                                                                                        var statearr_18617_18679 = state_18538__$1;
                                                                                                        statearr_18617_18679[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_18618_18680 = state_18538__$1;
                                                                                                        statearr_18618_18680[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6560__auto___18626, cs, m, dchan, dctr, done);
        return function(switch__6504__auto__, c__6560__auto___18626, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__6505__auto__ = null;
            var state_machine__6505__auto____0 = function() {
              var statearr_18622 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_18622[0] = state_machine__6505__auto__;
              statearr_18622[1] = 1;
              return statearr_18622;
            };
            var state_machine__6505__auto____1 = function(state_18538) {
              while (true) {
                var ret_value__6506__auto__ = function() {
                  try {
                    while (true) {
                      var result__6507__auto__ = switch__6504__auto__.call(null, state_18538);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6507__auto__;
                      }
                      break;
                    }
                  } catch (e18623) {
                    if (e18623 instanceof Object) {
                      var ex__6508__auto__ = e18623;
                      var statearr_18624_18681 = state_18538;
                      statearr_18624_18681[5] = ex__6508__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18538);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e18623;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__18682 = state_18538;
                  state_18538 = G__18682;
                  continue;
                } else {
                  return ret_value__6506__auto__;
                }
                break;
              }
            };
            state_machine__6505__auto__ = function(state_18538) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6505__auto____0.call(this);
                case 1:
                  return state_machine__6505__auto____1.call(this, state_18538);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
            state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
            return state_machine__6505__auto__;
          }();
        }(switch__6504__auto__, c__6560__auto___18626, cs, m, dchan, dctr, done);
      }();
      var state__6562__auto__ = function() {
        var statearr_18625 = f__6561__auto__.call(null);
        statearr_18625[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___18626;
        return statearr_18625;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
    };
  }(c__6560__auto___18626, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj18684 = {};
  return obj18684;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3756__auto__ = m;
    if (and__3756__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4412__auto__ = m == null ? null : m;
    return function() {
      var or__3768__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3756__auto__ = m;
    if (and__3756__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4412__auto__ = m == null ? null : m;
    return function() {
      var or__3768__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3756__auto__ = m;
    if (and__3756__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4412__auto__ = m == null ? null : m;
    return function() {
      var or__3768__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3756__auto__ = m;
    if (and__3756__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4412__auto__ = m == null ? null : m;
    return function() {
      var or__3768__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3756__auto__ = m;
    if (and__3756__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4412__auto__ = m == null ? null : m;
    return function() {
      var or__3768__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__18685) {
    var map__18690 = p__18685;
    var map__18690__$1 = cljs.core.seq_QMARK_.call(null, map__18690) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18690) : map__18690;
    var opts = map__18690__$1;
    var statearr_18691_18694 = state;
    statearr_18691_18694[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__18690, map__18690__$1, opts) {
      return function(val) {
        var statearr_18692_18695 = state;
        statearr_18692_18695[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__18690, map__18690__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_18693_18696 = state;
      statearr_18693_18696[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__18685 = null;
    if (arguments.length > 3) {
      var G__18697__i = 0, G__18697__a = new Array(arguments.length - 3);
      while (G__18697__i < G__18697__a.length) {
        G__18697__a[G__18697__i] = arguments[G__18697__i + 3];
        ++G__18697__i;
      }
      p__18685 = new cljs.core.IndexedSeq(G__18697__a, 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__18685);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__18698) {
    var state = cljs.core.first(arglist__18698);
    arglist__18698 = cljs.core.next(arglist__18698);
    var cont_block = cljs.core.first(arglist__18698);
    arglist__18698 = cljs.core.next(arglist__18698);
    var ports = cljs.core.first(arglist__18698);
    var p__18685 = cljs.core.rest(arglist__18698);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__18685);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t18818 !== "undefined") {
    } else {
      cljs.core.async.t18818 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta18819) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta18819 = meta18819;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t18818.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t18818.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18818.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18818.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18818.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18818.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18818.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t18818.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18818.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_18820) {
          var self__ = this;
          var _18820__$1 = this;
          return self__.meta18819;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18818.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_18820, meta18819__$1) {
          var self__ = this;
          var _18820__$1 = this;
          return new cljs.core.async.t18818(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta18819__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18818.cljs$lang$type = true;
      cljs.core.async.t18818.cljs$lang$ctorStr = "cljs.core.async/t18818";
      cljs.core.async.t18818.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
          return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async/t18818");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t18818 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t18818(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta18819) {
          return new cljs.core.async.t18818(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta18819);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t18818(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 25, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 510, new cljs.core.Keyword(null, "column", "column", 2078222095), 11, new cljs.core.Keyword(null, "line", "line", 212345235), 499, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core\\async.cljs"], 
    null));
  }();
  var c__6560__auto___18937 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___18937, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__6561__auto__ = function() {
        var switch__6504__auto__ = function(c__6560__auto___18937, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_18890) {
            var state_val_18891 = state_18890[1];
            if (state_val_18891 === 7) {
              var inst_18834 = state_18890[7];
              var inst_18839 = cljs.core.apply.call(null, cljs.core.hash_map, inst_18834);
              var state_18890__$1 = state_18890;
              var statearr_18892_18938 = state_18890__$1;
              statearr_18892_18938[2] = inst_18839;
              statearr_18892_18938[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_18891 === 20) {
                var inst_18849 = state_18890[8];
                var state_18890__$1 = state_18890;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18890__$1, 23, out, inst_18849);
              } else {
                if (state_val_18891 === 1) {
                  var inst_18824 = state_18890[9];
                  var inst_18824__$1 = calc_state.call(null);
                  var inst_18825 = cljs.core.seq_QMARK_.call(null, inst_18824__$1);
                  var state_18890__$1 = function() {
                    var statearr_18893 = state_18890;
                    statearr_18893[9] = inst_18824__$1;
                    return statearr_18893;
                  }();
                  if (inst_18825) {
                    var statearr_18894_18939 = state_18890__$1;
                    statearr_18894_18939[1] = 2;
                  } else {
                    var statearr_18895_18940 = state_18890__$1;
                    statearr_18895_18940[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18891 === 24) {
                    var inst_18842 = state_18890[10];
                    var inst_18834 = inst_18842;
                    var state_18890__$1 = function() {
                      var statearr_18896 = state_18890;
                      statearr_18896[7] = inst_18834;
                      return statearr_18896;
                    }();
                    var statearr_18897_18941 = state_18890__$1;
                    statearr_18897_18941[2] = null;
                    statearr_18897_18941[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18891 === 4) {
                      var inst_18824 = state_18890[9];
                      var inst_18830 = state_18890[2];
                      var inst_18831 = cljs.core.get.call(null, inst_18830, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                      var inst_18832 = cljs.core.get.call(null, inst_18830, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                      var inst_18833 = cljs.core.get.call(null, inst_18830, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                      var inst_18834 = inst_18824;
                      var state_18890__$1 = function() {
                        var statearr_18898 = state_18890;
                        statearr_18898[7] = inst_18834;
                        statearr_18898[11] = inst_18833;
                        statearr_18898[12] = inst_18831;
                        statearr_18898[13] = inst_18832;
                        return statearr_18898;
                      }();
                      var statearr_18899_18942 = state_18890__$1;
                      statearr_18899_18942[2] = null;
                      statearr_18899_18942[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18891 === 15) {
                        var state_18890__$1 = state_18890;
                        var statearr_18900_18943 = state_18890__$1;
                        statearr_18900_18943[2] = null;
                        statearr_18900_18943[1] = 16;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_18891 === 21) {
                          var inst_18842 = state_18890[10];
                          var inst_18834 = inst_18842;
                          var state_18890__$1 = function() {
                            var statearr_18901 = state_18890;
                            statearr_18901[7] = inst_18834;
                            return statearr_18901;
                          }();
                          var statearr_18902_18944 = state_18890__$1;
                          statearr_18902_18944[2] = null;
                          statearr_18902_18944[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_18891 === 13) {
                            var inst_18886 = state_18890[2];
                            var state_18890__$1 = state_18890;
                            var statearr_18903_18945 = state_18890__$1;
                            statearr_18903_18945[2] = inst_18886;
                            statearr_18903_18945[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18891 === 22) {
                              var inst_18884 = state_18890[2];
                              var state_18890__$1 = state_18890;
                              var statearr_18904_18946 = state_18890__$1;
                              statearr_18904_18946[2] = inst_18884;
                              statearr_18904_18946[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_18891 === 6) {
                                var inst_18888 = state_18890[2];
                                var state_18890__$1 = state_18890;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18890__$1, inst_18888);
                              } else {
                                if (state_val_18891 === 25) {
                                  var state_18890__$1 = state_18890;
                                  var statearr_18905_18947 = state_18890__$1;
                                  statearr_18905_18947[2] = null;
                                  statearr_18905_18947[1] = 26;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18891 === 17) {
                                    var inst_18864 = state_18890[14];
                                    var state_18890__$1 = state_18890;
                                    var statearr_18906_18948 = state_18890__$1;
                                    statearr_18906_18948[2] = inst_18864;
                                    statearr_18906_18948[1] = 19;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_18891 === 3) {
                                      var inst_18824 = state_18890[9];
                                      var state_18890__$1 = state_18890;
                                      var statearr_18907_18949 = state_18890__$1;
                                      statearr_18907_18949[2] = inst_18824;
                                      statearr_18907_18949[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_18891 === 12) {
                                        var inst_18845 = state_18890[15];
                                        var inst_18864 = state_18890[14];
                                        var inst_18850 = state_18890[16];
                                        var inst_18864__$1 = inst_18845.call(null, inst_18850);
                                        var state_18890__$1 = function() {
                                          var statearr_18908 = state_18890;
                                          statearr_18908[14] = inst_18864__$1;
                                          return statearr_18908;
                                        }();
                                        if (cljs.core.truth_(inst_18864__$1)) {
                                          var statearr_18909_18950 = state_18890__$1;
                                          statearr_18909_18950[1] = 17;
                                        } else {
                                          var statearr_18910_18951 = state_18890__$1;
                                          statearr_18910_18951[1] = 18;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_18891 === 2) {
                                          var inst_18824 = state_18890[9];
                                          var inst_18827 = cljs.core.apply.call(null, cljs.core.hash_map, inst_18824);
                                          var state_18890__$1 = state_18890;
                                          var statearr_18911_18952 = state_18890__$1;
                                          statearr_18911_18952[2] = inst_18827;
                                          statearr_18911_18952[1] = 4;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_18891 === 23) {
                                            var inst_18875 = state_18890[2];
                                            var state_18890__$1 = state_18890;
                                            if (cljs.core.truth_(inst_18875)) {
                                              var statearr_18912_18953 = state_18890__$1;
                                              statearr_18912_18953[1] = 24;
                                            } else {
                                              var statearr_18913_18954 = state_18890__$1;
                                              statearr_18913_18954[1] = 25;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_18891 === 19) {
                                              var inst_18872 = state_18890[2];
                                              var state_18890__$1 = state_18890;
                                              if (cljs.core.truth_(inst_18872)) {
                                                var statearr_18914_18955 = state_18890__$1;
                                                statearr_18914_18955[1] = 20;
                                              } else {
                                                var statearr_18915_18956 = state_18890__$1;
                                                statearr_18915_18956[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_18891 === 11) {
                                                var inst_18849 = state_18890[8];
                                                var inst_18855 = inst_18849 == null;
                                                var state_18890__$1 = state_18890;
                                                if (cljs.core.truth_(inst_18855)) {
                                                  var statearr_18916_18957 = state_18890__$1;
                                                  statearr_18916_18957[1] = 14;
                                                } else {
                                                  var statearr_18917_18958 = state_18890__$1;
                                                  statearr_18917_18958[1] = 15;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_18891 === 9) {
                                                  var inst_18842 = state_18890[10];
                                                  var inst_18842__$1 = state_18890[2];
                                                  var inst_18843 = cljs.core.get.call(null, inst_18842__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                  var inst_18844 = cljs.core.get.call(null, inst_18842__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                  var inst_18845 = cljs.core.get.call(null, inst_18842__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                  var state_18890__$1 = function() {
                                                    var statearr_18918 = state_18890;
                                                    statearr_18918[15] = inst_18845;
                                                    statearr_18918[10] = inst_18842__$1;
                                                    statearr_18918[17] = inst_18844;
                                                    return statearr_18918;
                                                  }();
                                                  return cljs.core.async.ioc_alts_BANG_.call(null, state_18890__$1, 10, inst_18843);
                                                } else {
                                                  if (state_val_18891 === 5) {
                                                    var inst_18834 = state_18890[7];
                                                    var inst_18837 = cljs.core.seq_QMARK_.call(null, inst_18834);
                                                    var state_18890__$1 = state_18890;
                                                    if (inst_18837) {
                                                      var statearr_18919_18959 = state_18890__$1;
                                                      statearr_18919_18959[1] = 7;
                                                    } else {
                                                      var statearr_18920_18960 = state_18890__$1;
                                                      statearr_18920_18960[1] = 8;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_18891 === 14) {
                                                      var inst_18850 = state_18890[16];
                                                      var inst_18857 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_18850);
                                                      var state_18890__$1 = state_18890;
                                                      var statearr_18921_18961 = state_18890__$1;
                                                      statearr_18921_18961[2] = inst_18857;
                                                      statearr_18921_18961[1] = 16;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_18891 === 26) {
                                                        var inst_18880 = state_18890[2];
                                                        var state_18890__$1 = state_18890;
                                                        var statearr_18922_18962 = state_18890__$1;
                                                        statearr_18922_18962[2] = inst_18880;
                                                        statearr_18922_18962[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_18891 === 16) {
                                                          var inst_18860 = state_18890[2];
                                                          var inst_18861 = calc_state.call(null);
                                                          var inst_18834 = inst_18861;
                                                          var state_18890__$1 = function() {
                                                            var statearr_18923 = state_18890;
                                                            statearr_18923[7] = inst_18834;
                                                            statearr_18923[18] = inst_18860;
                                                            return statearr_18923;
                                                          }();
                                                          var statearr_18924_18963 = state_18890__$1;
                                                          statearr_18924_18963[2] = null;
                                                          statearr_18924_18963[1] = 5;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_18891 === 10) {
                                                            var inst_18850 = state_18890[16];
                                                            var inst_18849 = state_18890[8];
                                                            var inst_18848 = state_18890[2];
                                                            var inst_18849__$1 = cljs.core.nth.call(null, inst_18848, 0, null);
                                                            var inst_18850__$1 = cljs.core.nth.call(null, inst_18848, 1, null);
                                                            var inst_18851 = inst_18849__$1 == null;
                                                            var inst_18852 = cljs.core._EQ_.call(null, inst_18850__$1, change);
                                                            var inst_18853 = inst_18851 || inst_18852;
                                                            var state_18890__$1 = function() {
                                                              var statearr_18925 = state_18890;
                                                              statearr_18925[16] = inst_18850__$1;
                                                              statearr_18925[8] = inst_18849__$1;
                                                              return statearr_18925;
                                                            }();
                                                            if (cljs.core.truth_(inst_18853)) {
                                                              var statearr_18926_18964 = state_18890__$1;
                                                              statearr_18926_18964[1] = 11;
                                                            } else {
                                                              var statearr_18927_18965 = state_18890__$1;
                                                              statearr_18927_18965[1] = 12;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_18891 === 18) {
                                                              var inst_18845 = state_18890[15];
                                                              var inst_18844 = state_18890[17];
                                                              var inst_18850 = state_18890[16];
                                                              var inst_18867 = cljs.core.empty_QMARK_.call(null, inst_18845);
                                                              var inst_18868 = inst_18844.call(null, inst_18850);
                                                              var inst_18869 = cljs.core.not.call(null, inst_18868);
                                                              var inst_18870 = inst_18867 && inst_18869;
                                                              var state_18890__$1 = state_18890;
                                                              var statearr_18928_18966 = state_18890__$1;
                                                              statearr_18928_18966[2] = inst_18870;
                                                              statearr_18928_18966[1] = 19;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_18891 === 8) {
                                                                var inst_18834 = state_18890[7];
                                                                var state_18890__$1 = state_18890;
                                                                var statearr_18929_18967 = state_18890__$1;
                                                                statearr_18929_18967[2] = inst_18834;
                                                                statearr_18929_18967[1] = 9;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6560__auto___18937, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__6504__auto__, c__6560__auto___18937, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__6505__auto__ = null;
            var state_machine__6505__auto____0 = function() {
              var statearr_18933 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_18933[0] = state_machine__6505__auto__;
              statearr_18933[1] = 1;
              return statearr_18933;
            };
            var state_machine__6505__auto____1 = function(state_18890) {
              while (true) {
                var ret_value__6506__auto__ = function() {
                  try {
                    while (true) {
                      var result__6507__auto__ = switch__6504__auto__.call(null, state_18890);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6507__auto__;
                      }
                      break;
                    }
                  } catch (e18934) {
                    if (e18934 instanceof Object) {
                      var ex__6508__auto__ = e18934;
                      var statearr_18935_18968 = state_18890;
                      statearr_18935_18968[5] = ex__6508__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18890);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e18934;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__18969 = state_18890;
                  state_18890 = G__18969;
                  continue;
                } else {
                  return ret_value__6506__auto__;
                }
                break;
              }
            };
            state_machine__6505__auto__ = function(state_18890) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6505__auto____0.call(this);
                case 1:
                  return state_machine__6505__auto____1.call(this, state_18890);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
            state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
            return state_machine__6505__auto__;
          }();
        }(switch__6504__auto__, c__6560__auto___18937, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__6562__auto__ = function() {
        var statearr_18936 = f__6561__auto__.call(null);
        statearr_18936[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___18937;
        return statearr_18936;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
    };
  }(c__6560__auto___18937, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj18971 = {};
  return obj18971;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3756__auto__ = p;
    if (and__3756__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4412__auto__ = p == null ? null : p;
    return function() {
      var or__3768__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3756__auto__ = p;
    if (and__3756__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4412__auto__ = p == null ? null : p;
    return function() {
      var or__3768__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3756__auto__ = p;
      if (and__3756__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4412__auto__ = p == null ? null : p;
      return function() {
        var or__3768__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4412__auto__)];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3756__auto__ = p;
      if (and__3756__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4412__auto__ = p == null ? null : p;
      return function() {
        var or__3768__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4412__auto__)];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3768__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3768__auto__, mults) {
            return function(p1__18972_SHARP_) {
              if (cljs.core.truth_(p1__18972_SHARP_.call(null, topic))) {
                return p1__18972_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__18972_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3768__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t19095 !== "undefined") {
      } else {
        cljs.core.async.t19095 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta19096) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta19096 = meta19096;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t19095.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t19095.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t19095.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$1);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t19095.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t19095.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t19095.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t19095.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t19095.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_19097) {
            var self__ = this;
            var _19097__$1 = this;
            return self__.meta19096;
          };
        }(mults, ensure_mult);
        cljs.core.async.t19095.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_19097, meta19096__$1) {
            var self__ = this;
            var _19097__$1 = this;
            return new cljs.core.async.t19095(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta19096__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.t19095.cljs$lang$type = true;
        cljs.core.async.t19095.cljs$lang$ctorStr = "cljs.core.async/t19095";
        cljs.core.async.t19095.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
            return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async/t19095");
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t19095 = function(mults, ensure_mult) {
          return function __GT_t19095(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta19096) {
            return new cljs.core.async.t19095(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta19096);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t19095(ensure_mult, mults, buf_fn, topic_fn, ch, pub, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 65, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 603, new cljs.core.Keyword(null, "column", "column", 2078222095), 14, new cljs.core.Keyword(null, "line", "line", 212345235), 591, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core\\async.cljs"], 
      null));
    }();
    var c__6560__auto___19217 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___19217, mults, ensure_mult, p) {
      return function() {
        var f__6561__auto__ = function() {
          var switch__6504__auto__ = function(c__6560__auto___19217, mults, ensure_mult, p) {
            return function(state_19169) {
              var state_val_19170 = state_19169[1];
              if (state_val_19170 === 7) {
                var inst_19165 = state_19169[2];
                var state_19169__$1 = state_19169;
                var statearr_19171_19218 = state_19169__$1;
                statearr_19171_19218[2] = inst_19165;
                statearr_19171_19218[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19170 === 20) {
                  var state_19169__$1 = state_19169;
                  var statearr_19172_19219 = state_19169__$1;
                  statearr_19172_19219[2] = null;
                  statearr_19172_19219[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19170 === 1) {
                    var state_19169__$1 = state_19169;
                    var statearr_19173_19220 = state_19169__$1;
                    statearr_19173_19220[2] = null;
                    statearr_19173_19220[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19170 === 24) {
                      var inst_19148 = state_19169[7];
                      var inst_19157 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_19148);
                      var state_19169__$1 = state_19169;
                      var statearr_19174_19221 = state_19169__$1;
                      statearr_19174_19221[2] = inst_19157;
                      statearr_19174_19221[1] = 25;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19170 === 4) {
                        var inst_19100 = state_19169[8];
                        var inst_19100__$1 = state_19169[2];
                        var inst_19101 = inst_19100__$1 == null;
                        var state_19169__$1 = function() {
                          var statearr_19175 = state_19169;
                          statearr_19175[8] = inst_19100__$1;
                          return statearr_19175;
                        }();
                        if (cljs.core.truth_(inst_19101)) {
                          var statearr_19176_19222 = state_19169__$1;
                          statearr_19176_19222[1] = 5;
                        } else {
                          var statearr_19177_19223 = state_19169__$1;
                          statearr_19177_19223[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_19170 === 15) {
                          var inst_19142 = state_19169[2];
                          var state_19169__$1 = state_19169;
                          var statearr_19178_19224 = state_19169__$1;
                          statearr_19178_19224[2] = inst_19142;
                          statearr_19178_19224[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_19170 === 21) {
                            var inst_19162 = state_19169[2];
                            var state_19169__$1 = function() {
                              var statearr_19179 = state_19169;
                              statearr_19179[9] = inst_19162;
                              return statearr_19179;
                            }();
                            var statearr_19180_19225 = state_19169__$1;
                            statearr_19180_19225[2] = null;
                            statearr_19180_19225[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_19170 === 13) {
                              var inst_19124 = state_19169[10];
                              var inst_19126 = cljs.core.chunked_seq_QMARK_.call(null, inst_19124);
                              var state_19169__$1 = state_19169;
                              if (inst_19126) {
                                var statearr_19181_19226 = state_19169__$1;
                                statearr_19181_19226[1] = 16;
                              } else {
                                var statearr_19182_19227 = state_19169__$1;
                                statearr_19182_19227[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_19170 === 22) {
                                var inst_19154 = state_19169[2];
                                var state_19169__$1 = state_19169;
                                if (cljs.core.truth_(inst_19154)) {
                                  var statearr_19183_19228 = state_19169__$1;
                                  statearr_19183_19228[1] = 23;
                                } else {
                                  var statearr_19184_19229 = state_19169__$1;
                                  statearr_19184_19229[1] = 24;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_19170 === 6) {
                                  var inst_19150 = state_19169[11];
                                  var inst_19148 = state_19169[7];
                                  var inst_19100 = state_19169[8];
                                  var inst_19148__$1 = topic_fn.call(null, inst_19100);
                                  var inst_19149 = cljs.core.deref.call(null, mults);
                                  var inst_19150__$1 = cljs.core.get.call(null, inst_19149, inst_19148__$1);
                                  var state_19169__$1 = function() {
                                    var statearr_19185 = state_19169;
                                    statearr_19185[11] = inst_19150__$1;
                                    statearr_19185[7] = inst_19148__$1;
                                    return statearr_19185;
                                  }();
                                  if (cljs.core.truth_(inst_19150__$1)) {
                                    var statearr_19186_19230 = state_19169__$1;
                                    statearr_19186_19230[1] = 19;
                                  } else {
                                    var statearr_19187_19231 = state_19169__$1;
                                    statearr_19187_19231[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_19170 === 25) {
                                    var inst_19159 = state_19169[2];
                                    var state_19169__$1 = state_19169;
                                    var statearr_19188_19232 = state_19169__$1;
                                    statearr_19188_19232[2] = inst_19159;
                                    statearr_19188_19232[1] = 21;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_19170 === 17) {
                                      var inst_19124 = state_19169[10];
                                      var inst_19133 = cljs.core.first.call(null, inst_19124);
                                      var inst_19134 = cljs.core.async.muxch_STAR_.call(null, inst_19133);
                                      var inst_19135 = cljs.core.async.close_BANG_.call(null, inst_19134);
                                      var inst_19136 = cljs.core.next.call(null, inst_19124);
                                      var inst_19110 = inst_19136;
                                      var inst_19111 = null;
                                      var inst_19112 = 0;
                                      var inst_19113 = 0;
                                      var state_19169__$1 = function() {
                                        var statearr_19189 = state_19169;
                                        statearr_19189[12] = inst_19113;
                                        statearr_19189[13] = inst_19110;
                                        statearr_19189[14] = inst_19135;
                                        statearr_19189[15] = inst_19111;
                                        statearr_19189[16] = inst_19112;
                                        return statearr_19189;
                                      }();
                                      var statearr_19190_19233 = state_19169__$1;
                                      statearr_19190_19233[2] = null;
                                      statearr_19190_19233[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_19170 === 3) {
                                        var inst_19167 = state_19169[2];
                                        var state_19169__$1 = state_19169;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19169__$1, inst_19167);
                                      } else {
                                        if (state_val_19170 === 12) {
                                          var inst_19144 = state_19169[2];
                                          var state_19169__$1 = state_19169;
                                          var statearr_19191_19234 = state_19169__$1;
                                          statearr_19191_19234[2] = inst_19144;
                                          statearr_19191_19234[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_19170 === 2) {
                                            var state_19169__$1 = state_19169;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19169__$1, 4, ch);
                                          } else {
                                            if (state_val_19170 === 23) {
                                              var state_19169__$1 = state_19169;
                                              var statearr_19192_19235 = state_19169__$1;
                                              statearr_19192_19235[2] = null;
                                              statearr_19192_19235[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_19170 === 19) {
                                                var inst_19150 = state_19169[11];
                                                var inst_19100 = state_19169[8];
                                                var inst_19152 = cljs.core.async.muxch_STAR_.call(null, inst_19150);
                                                var state_19169__$1 = state_19169;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19169__$1, 22, inst_19152, inst_19100);
                                              } else {
                                                if (state_val_19170 === 11) {
                                                  var inst_19110 = state_19169[13];
                                                  var inst_19124 = state_19169[10];
                                                  var inst_19124__$1 = cljs.core.seq.call(null, inst_19110);
                                                  var state_19169__$1 = function() {
                                                    var statearr_19193 = state_19169;
                                                    statearr_19193[10] = inst_19124__$1;
                                                    return statearr_19193;
                                                  }();
                                                  if (inst_19124__$1) {
                                                    var statearr_19194_19236 = state_19169__$1;
                                                    statearr_19194_19236[1] = 13;
                                                  } else {
                                                    var statearr_19195_19237 = state_19169__$1;
                                                    statearr_19195_19237[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_19170 === 9) {
                                                    var inst_19146 = state_19169[2];
                                                    var state_19169__$1 = state_19169;
                                                    var statearr_19196_19238 = state_19169__$1;
                                                    statearr_19196_19238[2] = inst_19146;
                                                    statearr_19196_19238[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_19170 === 5) {
                                                      var inst_19107 = cljs.core.deref.call(null, mults);
                                                      var inst_19108 = cljs.core.vals.call(null, inst_19107);
                                                      var inst_19109 = cljs.core.seq.call(null, inst_19108);
                                                      var inst_19110 = inst_19109;
                                                      var inst_19111 = null;
                                                      var inst_19112 = 0;
                                                      var inst_19113 = 0;
                                                      var state_19169__$1 = function() {
                                                        var statearr_19197 = state_19169;
                                                        statearr_19197[12] = inst_19113;
                                                        statearr_19197[13] = inst_19110;
                                                        statearr_19197[15] = inst_19111;
                                                        statearr_19197[16] = inst_19112;
                                                        return statearr_19197;
                                                      }();
                                                      var statearr_19198_19239 = state_19169__$1;
                                                      statearr_19198_19239[2] = null;
                                                      statearr_19198_19239[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_19170 === 14) {
                                                        var state_19169__$1 = state_19169;
                                                        var statearr_19202_19240 = state_19169__$1;
                                                        statearr_19202_19240[2] = null;
                                                        statearr_19202_19240[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_19170 === 16) {
                                                          var inst_19124 = state_19169[10];
                                                          var inst_19128 = cljs.core.chunk_first.call(null, inst_19124);
                                                          var inst_19129 = cljs.core.chunk_rest.call(null, inst_19124);
                                                          var inst_19130 = cljs.core.count.call(null, inst_19128);
                                                          var inst_19110 = inst_19129;
                                                          var inst_19111 = inst_19128;
                                                          var inst_19112 = inst_19130;
                                                          var inst_19113 = 0;
                                                          var state_19169__$1 = function() {
                                                            var statearr_19203 = state_19169;
                                                            statearr_19203[12] = inst_19113;
                                                            statearr_19203[13] = inst_19110;
                                                            statearr_19203[15] = inst_19111;
                                                            statearr_19203[16] = inst_19112;
                                                            return statearr_19203;
                                                          }();
                                                          var statearr_19204_19241 = state_19169__$1;
                                                          statearr_19204_19241[2] = null;
                                                          statearr_19204_19241[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_19170 === 10) {
                                                            var inst_19113 = state_19169[12];
                                                            var inst_19110 = state_19169[13];
                                                            var inst_19111 = state_19169[15];
                                                            var inst_19112 = state_19169[16];
                                                            var inst_19118 = cljs.core._nth.call(null, inst_19111, inst_19113);
                                                            var inst_19119 = cljs.core.async.muxch_STAR_.call(null, inst_19118);
                                                            var inst_19120 = cljs.core.async.close_BANG_.call(null, inst_19119);
                                                            var inst_19121 = inst_19113 + 1;
                                                            var tmp19199 = inst_19110;
                                                            var tmp19200 = inst_19111;
                                                            var tmp19201 = inst_19112;
                                                            var inst_19110__$1 = tmp19199;
                                                            var inst_19111__$1 = tmp19200;
                                                            var inst_19112__$1 = tmp19201;
                                                            var inst_19113__$1 = inst_19121;
                                                            var state_19169__$1 = function() {
                                                              var statearr_19205 = state_19169;
                                                              statearr_19205[12] = inst_19113__$1;
                                                              statearr_19205[17] = inst_19120;
                                                              statearr_19205[13] = inst_19110__$1;
                                                              statearr_19205[15] = inst_19111__$1;
                                                              statearr_19205[16] = inst_19112__$1;
                                                              return statearr_19205;
                                                            }();
                                                            var statearr_19206_19242 = state_19169__$1;
                                                            statearr_19206_19242[2] = null;
                                                            statearr_19206_19242[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_19170 === 18) {
                                                              var inst_19139 = state_19169[2];
                                                              var state_19169__$1 = state_19169;
                                                              var statearr_19207_19243 = state_19169__$1;
                                                              statearr_19207_19243[2] = inst_19139;
                                                              statearr_19207_19243[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_19170 === 8) {
                                                                var inst_19113 = state_19169[12];
                                                                var inst_19112 = state_19169[16];
                                                                var inst_19115 = inst_19113 < inst_19112;
                                                                var inst_19116 = inst_19115;
                                                                var state_19169__$1 = state_19169;
                                                                if (cljs.core.truth_(inst_19116)) {
                                                                  var statearr_19208_19244 = state_19169__$1;
                                                                  statearr_19208_19244[1] = 10;
                                                                } else {
                                                                  var statearr_19209_19245 = state_19169__$1;
                                                                  statearr_19209_19245[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6560__auto___19217, mults, ensure_mult, p);
          return function(switch__6504__auto__, c__6560__auto___19217, mults, ensure_mult, p) {
            return function() {
              var state_machine__6505__auto__ = null;
              var state_machine__6505__auto____0 = function() {
                var statearr_19213 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_19213[0] = state_machine__6505__auto__;
                statearr_19213[1] = 1;
                return statearr_19213;
              };
              var state_machine__6505__auto____1 = function(state_19169) {
                while (true) {
                  var ret_value__6506__auto__ = function() {
                    try {
                      while (true) {
                        var result__6507__auto__ = switch__6504__auto__.call(null, state_19169);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6507__auto__;
                        }
                        break;
                      }
                    } catch (e19214) {
                      if (e19214 instanceof Object) {
                        var ex__6508__auto__ = e19214;
                        var statearr_19215_19246 = state_19169;
                        statearr_19215_19246[5] = ex__6508__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19169);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e19214;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__19247 = state_19169;
                    state_19169 = G__19247;
                    continue;
                  } else {
                    return ret_value__6506__auto__;
                  }
                  break;
                }
              };
              state_machine__6505__auto__ = function(state_19169) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6505__auto____0.call(this);
                  case 1:
                    return state_machine__6505__auto____1.call(this, state_19169);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
              return state_machine__6505__auto__;
            }();
          }(switch__6504__auto__, c__6560__auto___19217, mults, ensure_mult, p);
        }();
        var state__6562__auto__ = function() {
          var statearr_19216 = f__6561__auto__.call(null);
          statearr_19216[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___19217;
          return statearr_19216;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
      };
    }(c__6560__auto___19217, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__6560__auto___19384 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___19384, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__6561__auto__ = function() {
          var switch__6504__auto__ = function(c__6560__auto___19384, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_19354) {
              var state_val_19355 = state_19354[1];
              if (state_val_19355 === 7) {
                var state_19354__$1 = state_19354;
                var statearr_19356_19385 = state_19354__$1;
                statearr_19356_19385[2] = null;
                statearr_19356_19385[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19355 === 1) {
                  var state_19354__$1 = state_19354;
                  var statearr_19357_19386 = state_19354__$1;
                  statearr_19357_19386[2] = null;
                  statearr_19357_19386[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19355 === 4) {
                    var inst_19318 = state_19354[7];
                    var inst_19320 = inst_19318 < cnt;
                    var state_19354__$1 = state_19354;
                    if (cljs.core.truth_(inst_19320)) {
                      var statearr_19358_19387 = state_19354__$1;
                      statearr_19358_19387[1] = 6;
                    } else {
                      var statearr_19359_19388 = state_19354__$1;
                      statearr_19359_19388[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19355 === 15) {
                      var inst_19350 = state_19354[2];
                      var state_19354__$1 = state_19354;
                      var statearr_19360_19389 = state_19354__$1;
                      statearr_19360_19389[2] = inst_19350;
                      statearr_19360_19389[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19355 === 13) {
                        var inst_19343 = cljs.core.async.close_BANG_.call(null, out);
                        var state_19354__$1 = state_19354;
                        var statearr_19361_19390 = state_19354__$1;
                        statearr_19361_19390[2] = inst_19343;
                        statearr_19361_19390[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_19355 === 6) {
                          var state_19354__$1 = state_19354;
                          var statearr_19362_19391 = state_19354__$1;
                          statearr_19362_19391[2] = null;
                          statearr_19362_19391[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_19355 === 3) {
                            var inst_19352 = state_19354[2];
                            var state_19354__$1 = state_19354;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19354__$1, inst_19352);
                          } else {
                            if (state_val_19355 === 12) {
                              var inst_19340 = state_19354[8];
                              var inst_19340__$1 = state_19354[2];
                              var inst_19341 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_19340__$1);
                              var state_19354__$1 = function() {
                                var statearr_19363 = state_19354;
                                statearr_19363[8] = inst_19340__$1;
                                return statearr_19363;
                              }();
                              if (cljs.core.truth_(inst_19341)) {
                                var statearr_19364_19392 = state_19354__$1;
                                statearr_19364_19392[1] = 13;
                              } else {
                                var statearr_19365_19393 = state_19354__$1;
                                statearr_19365_19393[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_19355 === 2) {
                                var inst_19317 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_19318 = 0;
                                var state_19354__$1 = function() {
                                  var statearr_19366 = state_19354;
                                  statearr_19366[7] = inst_19318;
                                  statearr_19366[9] = inst_19317;
                                  return statearr_19366;
                                }();
                                var statearr_19367_19394 = state_19354__$1;
                                statearr_19367_19394[2] = null;
                                statearr_19367_19394[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_19355 === 11) {
                                  var inst_19318 = state_19354[7];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_19354, 10, Object, null, 9);
                                  var inst_19327 = chs__$1.call(null, inst_19318);
                                  var inst_19328 = done.call(null, inst_19318);
                                  var inst_19329 = cljs.core.async.take_BANG_.call(null, inst_19327, inst_19328);
                                  var state_19354__$1 = state_19354;
                                  var statearr_19368_19395 = state_19354__$1;
                                  statearr_19368_19395[2] = inst_19329;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19354__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_19355 === 9) {
                                    var inst_19318 = state_19354[7];
                                    var inst_19331 = state_19354[2];
                                    var inst_19332 = inst_19318 + 1;
                                    var inst_19318__$1 = inst_19332;
                                    var state_19354__$1 = function() {
                                      var statearr_19369 = state_19354;
                                      statearr_19369[10] = inst_19331;
                                      statearr_19369[7] = inst_19318__$1;
                                      return statearr_19369;
                                    }();
                                    var statearr_19370_19396 = state_19354__$1;
                                    statearr_19370_19396[2] = null;
                                    statearr_19370_19396[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_19355 === 5) {
                                      var inst_19338 = state_19354[2];
                                      var state_19354__$1 = function() {
                                        var statearr_19371 = state_19354;
                                        statearr_19371[11] = inst_19338;
                                        return statearr_19371;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19354__$1, 12, dchan);
                                    } else {
                                      if (state_val_19355 === 14) {
                                        var inst_19340 = state_19354[8];
                                        var inst_19345 = cljs.core.apply.call(null, f, inst_19340);
                                        var state_19354__$1 = state_19354;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19354__$1, 16, out, inst_19345);
                                      } else {
                                        if (state_val_19355 === 16) {
                                          var inst_19347 = state_19354[2];
                                          var state_19354__$1 = function() {
                                            var statearr_19372 = state_19354;
                                            statearr_19372[12] = inst_19347;
                                            return statearr_19372;
                                          }();
                                          var statearr_19373_19397 = state_19354__$1;
                                          statearr_19373_19397[2] = null;
                                          statearr_19373_19397[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_19355 === 10) {
                                            var inst_19322 = state_19354[2];
                                            var inst_19323 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_19354__$1 = function() {
                                              var statearr_19374 = state_19354;
                                              statearr_19374[13] = inst_19322;
                                              return statearr_19374;
                                            }();
                                            var statearr_19375_19398 = state_19354__$1;
                                            statearr_19375_19398[2] = inst_19323;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19354__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_19355 === 8) {
                                              var inst_19336 = state_19354[2];
                                              var state_19354__$1 = state_19354;
                                              var statearr_19376_19399 = state_19354__$1;
                                              statearr_19376_19399[2] = inst_19336;
                                              statearr_19376_19399[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6560__auto___19384, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__6504__auto__, c__6560__auto___19384, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__6505__auto__ = null;
              var state_machine__6505__auto____0 = function() {
                var statearr_19380 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_19380[0] = state_machine__6505__auto__;
                statearr_19380[1] = 1;
                return statearr_19380;
              };
              var state_machine__6505__auto____1 = function(state_19354) {
                while (true) {
                  var ret_value__6506__auto__ = function() {
                    try {
                      while (true) {
                        var result__6507__auto__ = switch__6504__auto__.call(null, state_19354);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6507__auto__;
                        }
                        break;
                      }
                    } catch (e19381) {
                      if (e19381 instanceof Object) {
                        var ex__6508__auto__ = e19381;
                        var statearr_19382_19400 = state_19354;
                        statearr_19382_19400[5] = ex__6508__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19354);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e19381;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__19401 = state_19354;
                    state_19354 = G__19401;
                    continue;
                  } else {
                    return ret_value__6506__auto__;
                  }
                  break;
                }
              };
              state_machine__6505__auto__ = function(state_19354) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6505__auto____0.call(this);
                  case 1:
                    return state_machine__6505__auto____1.call(this, state_19354);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
              return state_machine__6505__auto__;
            }();
          }(switch__6504__auto__, c__6560__auto___19384, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__6562__auto__ = function() {
          var statearr_19383 = f__6561__auto__.call(null);
          statearr_19383[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___19384;
          return statearr_19383;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
      };
    }(c__6560__auto___19384, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6560__auto___19509 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___19509, out) {
      return function() {
        var f__6561__auto__ = function() {
          var switch__6504__auto__ = function(c__6560__auto___19509, out) {
            return function(state_19485) {
              var state_val_19486 = state_19485[1];
              if (state_val_19486 === 7) {
                var inst_19465 = state_19485[7];
                var inst_19464 = state_19485[8];
                var inst_19464__$1 = state_19485[2];
                var inst_19465__$1 = cljs.core.nth.call(null, inst_19464__$1, 0, null);
                var inst_19466 = cljs.core.nth.call(null, inst_19464__$1, 1, null);
                var inst_19467 = inst_19465__$1 == null;
                var state_19485__$1 = function() {
                  var statearr_19487 = state_19485;
                  statearr_19487[7] = inst_19465__$1;
                  statearr_19487[9] = inst_19466;
                  statearr_19487[8] = inst_19464__$1;
                  return statearr_19487;
                }();
                if (cljs.core.truth_(inst_19467)) {
                  var statearr_19488_19510 = state_19485__$1;
                  statearr_19488_19510[1] = 8;
                } else {
                  var statearr_19489_19511 = state_19485__$1;
                  statearr_19489_19511[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19486 === 1) {
                  var inst_19456 = cljs.core.vec.call(null, chs);
                  var inst_19457 = inst_19456;
                  var state_19485__$1 = function() {
                    var statearr_19490 = state_19485;
                    statearr_19490[10] = inst_19457;
                    return statearr_19490;
                  }();
                  var statearr_19491_19512 = state_19485__$1;
                  statearr_19491_19512[2] = null;
                  statearr_19491_19512[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19486 === 4) {
                    var inst_19457 = state_19485[10];
                    var state_19485__$1 = state_19485;
                    return cljs.core.async.ioc_alts_BANG_.call(null, state_19485__$1, 7, inst_19457);
                  } else {
                    if (state_val_19486 === 6) {
                      var inst_19481 = state_19485[2];
                      var state_19485__$1 = state_19485;
                      var statearr_19492_19513 = state_19485__$1;
                      statearr_19492_19513[2] = inst_19481;
                      statearr_19492_19513[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19486 === 3) {
                        var inst_19483 = state_19485[2];
                        var state_19485__$1 = state_19485;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19485__$1, inst_19483);
                      } else {
                        if (state_val_19486 === 2) {
                          var inst_19457 = state_19485[10];
                          var inst_19459 = cljs.core.count.call(null, inst_19457);
                          var inst_19460 = inst_19459 > 0;
                          var state_19485__$1 = state_19485;
                          if (cljs.core.truth_(inst_19460)) {
                            var statearr_19494_19514 = state_19485__$1;
                            statearr_19494_19514[1] = 4;
                          } else {
                            var statearr_19495_19515 = state_19485__$1;
                            statearr_19495_19515[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_19486 === 11) {
                            var inst_19457 = state_19485[10];
                            var inst_19474 = state_19485[2];
                            var tmp19493 = inst_19457;
                            var inst_19457__$1 = tmp19493;
                            var state_19485__$1 = function() {
                              var statearr_19496 = state_19485;
                              statearr_19496[11] = inst_19474;
                              statearr_19496[10] = inst_19457__$1;
                              return statearr_19496;
                            }();
                            var statearr_19497_19516 = state_19485__$1;
                            statearr_19497_19516[2] = null;
                            statearr_19497_19516[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_19486 === 9) {
                              var inst_19465 = state_19485[7];
                              var state_19485__$1 = state_19485;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19485__$1, 11, out, inst_19465);
                            } else {
                              if (state_val_19486 === 5) {
                                var inst_19479 = cljs.core.async.close_BANG_.call(null, out);
                                var state_19485__$1 = state_19485;
                                var statearr_19498_19517 = state_19485__$1;
                                statearr_19498_19517[2] = inst_19479;
                                statearr_19498_19517[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_19486 === 10) {
                                  var inst_19477 = state_19485[2];
                                  var state_19485__$1 = state_19485;
                                  var statearr_19499_19518 = state_19485__$1;
                                  statearr_19499_19518[2] = inst_19477;
                                  statearr_19499_19518[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_19486 === 8) {
                                    var inst_19465 = state_19485[7];
                                    var inst_19466 = state_19485[9];
                                    var inst_19457 = state_19485[10];
                                    var inst_19464 = state_19485[8];
                                    var inst_19469 = function() {
                                      var c = inst_19466;
                                      var v = inst_19465;
                                      var vec__19462 = inst_19464;
                                      var cs = inst_19457;
                                      return function(c, v, vec__19462, cs, inst_19465, inst_19466, inst_19457, inst_19464, state_val_19486, c__6560__auto___19509, out) {
                                        return function(p1__19402_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__19402_SHARP_);
                                        };
                                      }(c, v, vec__19462, cs, inst_19465, inst_19466, inst_19457, inst_19464, state_val_19486, c__6560__auto___19509, out);
                                    }();
                                    var inst_19470 = cljs.core.filterv.call(null, inst_19469, inst_19457);
                                    var inst_19457__$1 = inst_19470;
                                    var state_19485__$1 = function() {
                                      var statearr_19500 = state_19485;
                                      statearr_19500[10] = inst_19457__$1;
                                      return statearr_19500;
                                    }();
                                    var statearr_19501_19519 = state_19485__$1;
                                    statearr_19501_19519[2] = null;
                                    statearr_19501_19519[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6560__auto___19509, out);
          return function(switch__6504__auto__, c__6560__auto___19509, out) {
            return function() {
              var state_machine__6505__auto__ = null;
              var state_machine__6505__auto____0 = function() {
                var statearr_19505 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_19505[0] = state_machine__6505__auto__;
                statearr_19505[1] = 1;
                return statearr_19505;
              };
              var state_machine__6505__auto____1 = function(state_19485) {
                while (true) {
                  var ret_value__6506__auto__ = function() {
                    try {
                      while (true) {
                        var result__6507__auto__ = switch__6504__auto__.call(null, state_19485);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6507__auto__;
                        }
                        break;
                      }
                    } catch (e19506) {
                      if (e19506 instanceof Object) {
                        var ex__6508__auto__ = e19506;
                        var statearr_19507_19520 = state_19485;
                        statearr_19507_19520[5] = ex__6508__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19485);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e19506;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__19521 = state_19485;
                    state_19485 = G__19521;
                    continue;
                  } else {
                    return ret_value__6506__auto__;
                  }
                  break;
                }
              };
              state_machine__6505__auto__ = function(state_19485) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6505__auto____0.call(this);
                  case 1:
                    return state_machine__6505__auto____1.call(this, state_19485);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
              return state_machine__6505__auto__;
            }();
          }(switch__6504__auto__, c__6560__auto___19509, out);
        }();
        var state__6562__auto__ = function() {
          var statearr_19508 = f__6561__auto__.call(null);
          statearr_19508[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___19509;
          return statearr_19508;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
      };
    }(c__6560__auto___19509, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6560__auto___19614 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___19614, out) {
      return function() {
        var f__6561__auto__ = function() {
          var switch__6504__auto__ = function(c__6560__auto___19614, out) {
            return function(state_19591) {
              var state_val_19592 = state_19591[1];
              if (state_val_19592 === 7) {
                var inst_19573 = state_19591[7];
                var inst_19573__$1 = state_19591[2];
                var inst_19574 = inst_19573__$1 == null;
                var inst_19575 = cljs.core.not.call(null, inst_19574);
                var state_19591__$1 = function() {
                  var statearr_19593 = state_19591;
                  statearr_19593[7] = inst_19573__$1;
                  return statearr_19593;
                }();
                if (inst_19575) {
                  var statearr_19594_19615 = state_19591__$1;
                  statearr_19594_19615[1] = 8;
                } else {
                  var statearr_19595_19616 = state_19591__$1;
                  statearr_19595_19616[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19592 === 1) {
                  var inst_19568 = 0;
                  var state_19591__$1 = function() {
                    var statearr_19596 = state_19591;
                    statearr_19596[8] = inst_19568;
                    return statearr_19596;
                  }();
                  var statearr_19597_19617 = state_19591__$1;
                  statearr_19597_19617[2] = null;
                  statearr_19597_19617[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19592 === 4) {
                    var state_19591__$1 = state_19591;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19591__$1, 7, ch);
                  } else {
                    if (state_val_19592 === 6) {
                      var inst_19586 = state_19591[2];
                      var state_19591__$1 = state_19591;
                      var statearr_19598_19618 = state_19591__$1;
                      statearr_19598_19618[2] = inst_19586;
                      statearr_19598_19618[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19592 === 3) {
                        var inst_19588 = state_19591[2];
                        var inst_19589 = cljs.core.async.close_BANG_.call(null, out);
                        var state_19591__$1 = function() {
                          var statearr_19599 = state_19591;
                          statearr_19599[9] = inst_19588;
                          return statearr_19599;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19591__$1, inst_19589);
                      } else {
                        if (state_val_19592 === 2) {
                          var inst_19568 = state_19591[8];
                          var inst_19570 = inst_19568 < n;
                          var state_19591__$1 = state_19591;
                          if (cljs.core.truth_(inst_19570)) {
                            var statearr_19600_19619 = state_19591__$1;
                            statearr_19600_19619[1] = 4;
                          } else {
                            var statearr_19601_19620 = state_19591__$1;
                            statearr_19601_19620[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_19592 === 11) {
                            var inst_19568 = state_19591[8];
                            var inst_19578 = state_19591[2];
                            var inst_19579 = inst_19568 + 1;
                            var inst_19568__$1 = inst_19579;
                            var state_19591__$1 = function() {
                              var statearr_19602 = state_19591;
                              statearr_19602[8] = inst_19568__$1;
                              statearr_19602[10] = inst_19578;
                              return statearr_19602;
                            }();
                            var statearr_19603_19621 = state_19591__$1;
                            statearr_19603_19621[2] = null;
                            statearr_19603_19621[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_19592 === 9) {
                              var state_19591__$1 = state_19591;
                              var statearr_19604_19622 = state_19591__$1;
                              statearr_19604_19622[2] = null;
                              statearr_19604_19622[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_19592 === 5) {
                                var state_19591__$1 = state_19591;
                                var statearr_19605_19623 = state_19591__$1;
                                statearr_19605_19623[2] = null;
                                statearr_19605_19623[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_19592 === 10) {
                                  var inst_19583 = state_19591[2];
                                  var state_19591__$1 = state_19591;
                                  var statearr_19606_19624 = state_19591__$1;
                                  statearr_19606_19624[2] = inst_19583;
                                  statearr_19606_19624[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_19592 === 8) {
                                    var inst_19573 = state_19591[7];
                                    var state_19591__$1 = state_19591;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19591__$1, 11, out, inst_19573);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6560__auto___19614, out);
          return function(switch__6504__auto__, c__6560__auto___19614, out) {
            return function() {
              var state_machine__6505__auto__ = null;
              var state_machine__6505__auto____0 = function() {
                var statearr_19610 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_19610[0] = state_machine__6505__auto__;
                statearr_19610[1] = 1;
                return statearr_19610;
              };
              var state_machine__6505__auto____1 = function(state_19591) {
                while (true) {
                  var ret_value__6506__auto__ = function() {
                    try {
                      while (true) {
                        var result__6507__auto__ = switch__6504__auto__.call(null, state_19591);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6507__auto__;
                        }
                        break;
                      }
                    } catch (e19611) {
                      if (e19611 instanceof Object) {
                        var ex__6508__auto__ = e19611;
                        var statearr_19612_19625 = state_19591;
                        statearr_19612_19625[5] = ex__6508__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19591);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e19611;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__19626 = state_19591;
                    state_19591 = G__19626;
                    continue;
                  } else {
                    return ret_value__6506__auto__;
                  }
                  break;
                }
              };
              state_machine__6505__auto__ = function(state_19591) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6505__auto____0.call(this);
                  case 1:
                    return state_machine__6505__auto____1.call(this, state_19591);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
              return state_machine__6505__auto__;
            }();
          }(switch__6504__auto__, c__6560__auto___19614, out);
        }();
        var state__6562__auto__ = function() {
          var statearr_19613 = f__6561__auto__.call(null);
          statearr_19613[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___19614;
          return statearr_19613;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
      };
    }(c__6560__auto___19614, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t19634 !== "undefined") {
  } else {
    cljs.core.async.t19634 = function(ch, f, map_LT_, meta19635) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta19635 = meta19635;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t19634.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t19634.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t19634.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t19634.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t19637 !== "undefined") {
        } else {
          cljs.core.async.t19637 = function(fn1, _, meta19635, map_LT_, f, ch, meta19638) {
            this.fn1 = fn1;
            this._ = _;
            this.meta19635 = meta19635;
            this.map_LT_ = map_LT_;
            this.f = f;
            this.ch = ch;
            this.meta19638 = meta19638;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t19637.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t19637.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t19637.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__19627_SHARP_) {
                  return f1.call(null, p1__19627_SHARP_ == null ? null : self__.f.call(null, p1__19627_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t19637.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_19639) {
              var self__ = this;
              var _19639__$1 = this;
              return self__.meta19638;
            };
          }(___$1);
          cljs.core.async.t19637.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_19639, meta19638__$1) {
              var self__ = this;
              var _19639__$1 = this;
              return new cljs.core.async.t19637(self__.fn1, self__._, self__.meta19635, self__.map_LT_, self__.f, self__.ch, meta19638__$1);
            };
          }(___$1);
          cljs.core.async.t19637.cljs$lang$type = true;
          cljs.core.async.t19637.cljs$lang$ctorStr = "cljs.core.async/t19637";
          cljs.core.async.t19637.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
              return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async/t19637");
            };
          }(___$1);
          cljs.core.async.__GT_t19637 = function(___$1) {
            return function __GT_t19637(fn1__$1, ___$2, meta19635__$1, map_LT___$1, f__$1, ch__$1, meta19638) {
              return new cljs.core.async.t19637(fn1__$1, ___$2, meta19635__$1, map_LT___$1, f__$1, ch__$1, meta19638);
            };
          }(___$1);
        }
        return new cljs.core.async.t19637(fn1, ___$1, self__.meta19635, self__.map_LT_, self__.f, self__.ch, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 46, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 737, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 731, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core\\async.cljs"], 
        null));
      }());
      if (cljs.core.truth_(function() {
        var and__3756__auto__ = ret;
        if (cljs.core.truth_(and__3756__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3756__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t19634.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t19634.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t19634.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t19634.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19636) {
      var self__ = this;
      var _19636__$1 = this;
      return self__.meta19635;
    };
    cljs.core.async.t19634.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19636, meta19635__$1) {
      var self__ = this;
      var _19636__$1 = this;
      return new cljs.core.async.t19634(self__.ch, self__.f, self__.map_LT_, meta19635__$1);
    };
    cljs.core.async.t19634.cljs$lang$type = true;
    cljs.core.async.t19634.cljs$lang$ctorStr = "cljs.core.async/t19634";
    cljs.core.async.t19634.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
      return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async/t19634");
    };
    cljs.core.async.__GT_t19634 = function __GT_t19634(ch__$1, f__$1, map_LT___$1, meta19635) {
      return new cljs.core.async.t19634(ch__$1, f__$1, map_LT___$1, meta19635);
    };
  }
  return new cljs.core.async.t19634(ch, f, map_LT_, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 46, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 743, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 722, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core\\async.cljs"], 
  null));
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t19643 !== "undefined") {
  } else {
    cljs.core.async.t19643 = function(ch, f, map_GT_, meta19644) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta19644 = meta19644;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t19643.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t19643.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t19643.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t19643.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t19643.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t19643.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t19643.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19645) {
      var self__ = this;
      var _19645__$1 = this;
      return self__.meta19644;
    };
    cljs.core.async.t19643.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19645, meta19644__$1) {
      var self__ = this;
      var _19645__$1 = this;
      return new cljs.core.async.t19643(self__.ch, self__.f, self__.map_GT_, meta19644__$1);
    };
    cljs.core.async.t19643.cljs$lang$type = true;
    cljs.core.async.t19643.cljs$lang$ctorStr = "cljs.core.async/t19643";
    cljs.core.async.t19643.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
      return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async/t19643");
    };
    cljs.core.async.__GT_t19643 = function __GT_t19643(ch__$1, f__$1, map_GT___$1, meta19644) {
      return new cljs.core.async.t19643(ch__$1, f__$1, map_GT___$1, meta19644);
    };
  }
  return new cljs.core.async.t19643(ch, f, map_GT_, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 34, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 757, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 748, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core\\async.cljs"], 
  null));
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t19649 !== "undefined") {
  } else {
    cljs.core.async.t19649 = function(ch, p, filter_GT_, meta19650) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta19650 = meta19650;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t19649.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t19649.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t19649.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t19649.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t19649.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t19649.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t19649.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t19649.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19651) {
      var self__ = this;
      var _19651__$1 = this;
      return self__.meta19650;
    };
    cljs.core.async.t19649.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19651, meta19650__$1) {
      var self__ = this;
      var _19651__$1 = this;
      return new cljs.core.async.t19649(self__.ch, self__.p, self__.filter_GT_, meta19650__$1);
    };
    cljs.core.async.t19649.cljs$lang$type = true;
    cljs.core.async.t19649.cljs$lang$ctorStr = "cljs.core.async/t19649";
    cljs.core.async.t19649.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
      return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async/t19649");
    };
    cljs.core.async.__GT_t19649 = function __GT_t19649(ch__$1, p__$1, filter_GT___$1, meta19650) {
      return new cljs.core.async.t19649(ch__$1, p__$1, filter_GT___$1, meta19650);
    };
  }
  return new cljs.core.async.t19649(ch, p, filter_GT_, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 48, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 774, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 762, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core\\async.cljs"], 
  null));
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6560__auto___19734 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___19734, out) {
      return function() {
        var f__6561__auto__ = function() {
          var switch__6504__auto__ = function(c__6560__auto___19734, out) {
            return function(state_19713) {
              var state_val_19714 = state_19713[1];
              if (state_val_19714 === 7) {
                var inst_19709 = state_19713[2];
                var state_19713__$1 = state_19713;
                var statearr_19715_19735 = state_19713__$1;
                statearr_19715_19735[2] = inst_19709;
                statearr_19715_19735[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19714 === 1) {
                  var state_19713__$1 = state_19713;
                  var statearr_19716_19736 = state_19713__$1;
                  statearr_19716_19736[2] = null;
                  statearr_19716_19736[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19714 === 4) {
                    var inst_19695 = state_19713[7];
                    var inst_19695__$1 = state_19713[2];
                    var inst_19696 = inst_19695__$1 == null;
                    var state_19713__$1 = function() {
                      var statearr_19717 = state_19713;
                      statearr_19717[7] = inst_19695__$1;
                      return statearr_19717;
                    }();
                    if (cljs.core.truth_(inst_19696)) {
                      var statearr_19718_19737 = state_19713__$1;
                      statearr_19718_19737[1] = 5;
                    } else {
                      var statearr_19719_19738 = state_19713__$1;
                      statearr_19719_19738[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19714 === 6) {
                      var inst_19695 = state_19713[7];
                      var inst_19700 = p.call(null, inst_19695);
                      var state_19713__$1 = state_19713;
                      if (cljs.core.truth_(inst_19700)) {
                        var statearr_19720_19739 = state_19713__$1;
                        statearr_19720_19739[1] = 8;
                      } else {
                        var statearr_19721_19740 = state_19713__$1;
                        statearr_19721_19740[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19714 === 3) {
                        var inst_19711 = state_19713[2];
                        var state_19713__$1 = state_19713;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19713__$1, inst_19711);
                      } else {
                        if (state_val_19714 === 2) {
                          var state_19713__$1 = state_19713;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19713__$1, 4, ch);
                        } else {
                          if (state_val_19714 === 11) {
                            var inst_19703 = state_19713[2];
                            var state_19713__$1 = state_19713;
                            var statearr_19722_19741 = state_19713__$1;
                            statearr_19722_19741[2] = inst_19703;
                            statearr_19722_19741[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_19714 === 9) {
                              var state_19713__$1 = state_19713;
                              var statearr_19723_19742 = state_19713__$1;
                              statearr_19723_19742[2] = null;
                              statearr_19723_19742[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_19714 === 5) {
                                var inst_19698 = cljs.core.async.close_BANG_.call(null, out);
                                var state_19713__$1 = state_19713;
                                var statearr_19724_19743 = state_19713__$1;
                                statearr_19724_19743[2] = inst_19698;
                                statearr_19724_19743[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_19714 === 10) {
                                  var inst_19706 = state_19713[2];
                                  var state_19713__$1 = function() {
                                    var statearr_19725 = state_19713;
                                    statearr_19725[8] = inst_19706;
                                    return statearr_19725;
                                  }();
                                  var statearr_19726_19744 = state_19713__$1;
                                  statearr_19726_19744[2] = null;
                                  statearr_19726_19744[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_19714 === 8) {
                                    var inst_19695 = state_19713[7];
                                    var state_19713__$1 = state_19713;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19713__$1, 11, out, inst_19695);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6560__auto___19734, out);
          return function(switch__6504__auto__, c__6560__auto___19734, out) {
            return function() {
              var state_machine__6505__auto__ = null;
              var state_machine__6505__auto____0 = function() {
                var statearr_19730 = [null, null, null, null, null, null, null, null, null];
                statearr_19730[0] = state_machine__6505__auto__;
                statearr_19730[1] = 1;
                return statearr_19730;
              };
              var state_machine__6505__auto____1 = function(state_19713) {
                while (true) {
                  var ret_value__6506__auto__ = function() {
                    try {
                      while (true) {
                        var result__6507__auto__ = switch__6504__auto__.call(null, state_19713);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6507__auto__;
                        }
                        break;
                      }
                    } catch (e19731) {
                      if (e19731 instanceof Object) {
                        var ex__6508__auto__ = e19731;
                        var statearr_19732_19745 = state_19713;
                        statearr_19732_19745[5] = ex__6508__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19713);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e19731;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__19746 = state_19713;
                    state_19713 = G__19746;
                    continue;
                  } else {
                    return ret_value__6506__auto__;
                  }
                  break;
                }
              };
              state_machine__6505__auto__ = function(state_19713) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6505__auto____0.call(this);
                  case 1:
                    return state_machine__6505__auto____1.call(this, state_19713);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
              return state_machine__6505__auto__;
            }();
          }(switch__6504__auto__, c__6560__auto___19734, out);
        }();
        var state__6562__auto__ = function() {
          var statearr_19733 = f__6561__auto__.call(null);
          statearr_19733[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___19734;
          return statearr_19733;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
      };
    }(c__6560__auto___19734, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__6560__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto__) {
    return function() {
      var f__6561__auto__ = function() {
        var switch__6504__auto__ = function(c__6560__auto__) {
          return function(state_19912) {
            var state_val_19913 = state_19912[1];
            if (state_val_19913 === 7) {
              var inst_19908 = state_19912[2];
              var state_19912__$1 = state_19912;
              var statearr_19914_19955 = state_19912__$1;
              statearr_19914_19955[2] = inst_19908;
              statearr_19914_19955[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_19913 === 20) {
                var inst_19878 = state_19912[7];
                var inst_19889 = state_19912[2];
                var inst_19890 = cljs.core.next.call(null, inst_19878);
                var inst_19864 = inst_19890;
                var inst_19865 = null;
                var inst_19866 = 0;
                var inst_19867 = 0;
                var state_19912__$1 = function() {
                  var statearr_19915 = state_19912;
                  statearr_19915[8] = inst_19889;
                  statearr_19915[9] = inst_19867;
                  statearr_19915[10] = inst_19864;
                  statearr_19915[11] = inst_19866;
                  statearr_19915[12] = inst_19865;
                  return statearr_19915;
                }();
                var statearr_19916_19956 = state_19912__$1;
                statearr_19916_19956[2] = null;
                statearr_19916_19956[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19913 === 1) {
                  var state_19912__$1 = state_19912;
                  var statearr_19917_19957 = state_19912__$1;
                  statearr_19917_19957[2] = null;
                  statearr_19917_19957[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19913 === 4) {
                    var inst_19853 = state_19912[13];
                    var inst_19853__$1 = state_19912[2];
                    var inst_19854 = inst_19853__$1 == null;
                    var state_19912__$1 = function() {
                      var statearr_19918 = state_19912;
                      statearr_19918[13] = inst_19853__$1;
                      return statearr_19918;
                    }();
                    if (cljs.core.truth_(inst_19854)) {
                      var statearr_19919_19958 = state_19912__$1;
                      statearr_19919_19958[1] = 5;
                    } else {
                      var statearr_19920_19959 = state_19912__$1;
                      statearr_19920_19959[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19913 === 15) {
                      var state_19912__$1 = state_19912;
                      var statearr_19924_19960 = state_19912__$1;
                      statearr_19924_19960[2] = null;
                      statearr_19924_19960[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19913 === 21) {
                        var state_19912__$1 = state_19912;
                        var statearr_19925_19961 = state_19912__$1;
                        statearr_19925_19961[2] = null;
                        statearr_19925_19961[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_19913 === 13) {
                          var inst_19867 = state_19912[9];
                          var inst_19864 = state_19912[10];
                          var inst_19866 = state_19912[11];
                          var inst_19865 = state_19912[12];
                          var inst_19874 = state_19912[2];
                          var inst_19875 = inst_19867 + 1;
                          var tmp19921 = inst_19864;
                          var tmp19922 = inst_19866;
                          var tmp19923 = inst_19865;
                          var inst_19864__$1 = tmp19921;
                          var inst_19865__$1 = tmp19923;
                          var inst_19866__$1 = tmp19922;
                          var inst_19867__$1 = inst_19875;
                          var state_19912__$1 = function() {
                            var statearr_19926 = state_19912;
                            statearr_19926[9] = inst_19867__$1;
                            statearr_19926[10] = inst_19864__$1;
                            statearr_19926[14] = inst_19874;
                            statearr_19926[11] = inst_19866__$1;
                            statearr_19926[12] = inst_19865__$1;
                            return statearr_19926;
                          }();
                          var statearr_19927_19962 = state_19912__$1;
                          statearr_19927_19962[2] = null;
                          statearr_19927_19962[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_19913 === 22) {
                            var state_19912__$1 = state_19912;
                            var statearr_19928_19963 = state_19912__$1;
                            statearr_19928_19963[2] = null;
                            statearr_19928_19963[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_19913 === 6) {
                              var inst_19853 = state_19912[13];
                              var inst_19862 = f.call(null, inst_19853);
                              var inst_19863 = cljs.core.seq.call(null, inst_19862);
                              var inst_19864 = inst_19863;
                              var inst_19865 = null;
                              var inst_19866 = 0;
                              var inst_19867 = 0;
                              var state_19912__$1 = function() {
                                var statearr_19929 = state_19912;
                                statearr_19929[9] = inst_19867;
                                statearr_19929[10] = inst_19864;
                                statearr_19929[11] = inst_19866;
                                statearr_19929[12] = inst_19865;
                                return statearr_19929;
                              }();
                              var statearr_19930_19964 = state_19912__$1;
                              statearr_19930_19964[2] = null;
                              statearr_19930_19964[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_19913 === 17) {
                                var inst_19878 = state_19912[7];
                                var inst_19882 = cljs.core.chunk_first.call(null, inst_19878);
                                var inst_19883 = cljs.core.chunk_rest.call(null, inst_19878);
                                var inst_19884 = cljs.core.count.call(null, inst_19882);
                                var inst_19864 = inst_19883;
                                var inst_19865 = inst_19882;
                                var inst_19866 = inst_19884;
                                var inst_19867 = 0;
                                var state_19912__$1 = function() {
                                  var statearr_19931 = state_19912;
                                  statearr_19931[9] = inst_19867;
                                  statearr_19931[10] = inst_19864;
                                  statearr_19931[11] = inst_19866;
                                  statearr_19931[12] = inst_19865;
                                  return statearr_19931;
                                }();
                                var statearr_19932_19965 = state_19912__$1;
                                statearr_19932_19965[2] = null;
                                statearr_19932_19965[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_19913 === 3) {
                                  var inst_19910 = state_19912[2];
                                  var state_19912__$1 = state_19912;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19912__$1, inst_19910);
                                } else {
                                  if (state_val_19913 === 12) {
                                    var inst_19898 = state_19912[2];
                                    var state_19912__$1 = state_19912;
                                    var statearr_19933_19966 = state_19912__$1;
                                    statearr_19933_19966[2] = inst_19898;
                                    statearr_19933_19966[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_19913 === 2) {
                                      var state_19912__$1 = state_19912;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19912__$1, 4, in$);
                                    } else {
                                      if (state_val_19913 === 23) {
                                        var inst_19906 = state_19912[2];
                                        var state_19912__$1 = state_19912;
                                        var statearr_19934_19967 = state_19912__$1;
                                        statearr_19934_19967[2] = inst_19906;
                                        statearr_19934_19967[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_19913 === 19) {
                                          var inst_19893 = state_19912[2];
                                          var state_19912__$1 = state_19912;
                                          var statearr_19935_19968 = state_19912__$1;
                                          statearr_19935_19968[2] = inst_19893;
                                          statearr_19935_19968[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_19913 === 11) {
                                            var inst_19878 = state_19912[7];
                                            var inst_19864 = state_19912[10];
                                            var inst_19878__$1 = cljs.core.seq.call(null, inst_19864);
                                            var state_19912__$1 = function() {
                                              var statearr_19936 = state_19912;
                                              statearr_19936[7] = inst_19878__$1;
                                              return statearr_19936;
                                            }();
                                            if (inst_19878__$1) {
                                              var statearr_19937_19969 = state_19912__$1;
                                              statearr_19937_19969[1] = 14;
                                            } else {
                                              var statearr_19938_19970 = state_19912__$1;
                                              statearr_19938_19970[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_19913 === 9) {
                                              var inst_19900 = state_19912[2];
                                              var inst_19901 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_19912__$1 = function() {
                                                var statearr_19939 = state_19912;
                                                statearr_19939[15] = inst_19900;
                                                return statearr_19939;
                                              }();
                                              if (cljs.core.truth_(inst_19901)) {
                                                var statearr_19940_19971 = state_19912__$1;
                                                statearr_19940_19971[1] = 21;
                                              } else {
                                                var statearr_19941_19972 = state_19912__$1;
                                                statearr_19941_19972[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_19913 === 5) {
                                                var inst_19856 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_19912__$1 = state_19912;
                                                var statearr_19942_19973 = state_19912__$1;
                                                statearr_19942_19973[2] = inst_19856;
                                                statearr_19942_19973[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_19913 === 14) {
                                                  var inst_19878 = state_19912[7];
                                                  var inst_19880 = cljs.core.chunked_seq_QMARK_.call(null, inst_19878);
                                                  var state_19912__$1 = state_19912;
                                                  if (inst_19880) {
                                                    var statearr_19943_19974 = state_19912__$1;
                                                    statearr_19943_19974[1] = 17;
                                                  } else {
                                                    var statearr_19944_19975 = state_19912__$1;
                                                    statearr_19944_19975[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_19913 === 16) {
                                                    var inst_19896 = state_19912[2];
                                                    var state_19912__$1 = state_19912;
                                                    var statearr_19945_19976 = state_19912__$1;
                                                    statearr_19945_19976[2] = inst_19896;
                                                    statearr_19945_19976[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_19913 === 10) {
                                                      var inst_19867 = state_19912[9];
                                                      var inst_19865 = state_19912[12];
                                                      var inst_19872 = cljs.core._nth.call(null, inst_19865, inst_19867);
                                                      var state_19912__$1 = state_19912;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19912__$1, 13, out, inst_19872);
                                                    } else {
                                                      if (state_val_19913 === 18) {
                                                        var inst_19878 = state_19912[7];
                                                        var inst_19887 = cljs.core.first.call(null, inst_19878);
                                                        var state_19912__$1 = state_19912;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19912__$1, 20, out, inst_19887);
                                                      } else {
                                                        if (state_val_19913 === 8) {
                                                          var inst_19867 = state_19912[9];
                                                          var inst_19866 = state_19912[11];
                                                          var inst_19869 = inst_19867 < inst_19866;
                                                          var inst_19870 = inst_19869;
                                                          var state_19912__$1 = state_19912;
                                                          if (cljs.core.truth_(inst_19870)) {
                                                            var statearr_19946_19977 = state_19912__$1;
                                                            statearr_19946_19977[1] = 10;
                                                          } else {
                                                            var statearr_19947_19978 = state_19912__$1;
                                                            statearr_19947_19978[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6560__auto__);
        return function(switch__6504__auto__, c__6560__auto__) {
          return function() {
            var state_machine__6505__auto__ = null;
            var state_machine__6505__auto____0 = function() {
              var statearr_19951 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_19951[0] = state_machine__6505__auto__;
              statearr_19951[1] = 1;
              return statearr_19951;
            };
            var state_machine__6505__auto____1 = function(state_19912) {
              while (true) {
                var ret_value__6506__auto__ = function() {
                  try {
                    while (true) {
                      var result__6507__auto__ = switch__6504__auto__.call(null, state_19912);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6507__auto__;
                      }
                      break;
                    }
                  } catch (e19952) {
                    if (e19952 instanceof Object) {
                      var ex__6508__auto__ = e19952;
                      var statearr_19953_19979 = state_19912;
                      statearr_19953_19979[5] = ex__6508__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19912);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e19952;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__19980 = state_19912;
                  state_19912 = G__19980;
                  continue;
                } else {
                  return ret_value__6506__auto__;
                }
                break;
              }
            };
            state_machine__6505__auto__ = function(state_19912) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6505__auto____0.call(this);
                case 1:
                  return state_machine__6505__auto____1.call(this, state_19912);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
            state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
            return state_machine__6505__auto__;
          }();
        }(switch__6504__auto__, c__6560__auto__);
      }();
      var state__6562__auto__ = function() {
        var statearr_19954 = f__6561__auto__.call(null);
        statearr_19954[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto__;
        return statearr_19954;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
    };
  }(c__6560__auto__));
  return c__6560__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6560__auto___20077 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___20077, out) {
      return function() {
        var f__6561__auto__ = function() {
          var switch__6504__auto__ = function(c__6560__auto___20077, out) {
            return function(state_20052) {
              var state_val_20053 = state_20052[1];
              if (state_val_20053 === 7) {
                var inst_20047 = state_20052[2];
                var state_20052__$1 = state_20052;
                var statearr_20054_20078 = state_20052__$1;
                statearr_20054_20078[2] = inst_20047;
                statearr_20054_20078[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_20053 === 1) {
                  var inst_20029 = null;
                  var state_20052__$1 = function() {
                    var statearr_20055 = state_20052;
                    statearr_20055[7] = inst_20029;
                    return statearr_20055;
                  }();
                  var statearr_20056_20079 = state_20052__$1;
                  statearr_20056_20079[2] = null;
                  statearr_20056_20079[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_20053 === 4) {
                    var inst_20032 = state_20052[8];
                    var inst_20032__$1 = state_20052[2];
                    var inst_20033 = inst_20032__$1 == null;
                    var inst_20034 = cljs.core.not.call(null, inst_20033);
                    var state_20052__$1 = function() {
                      var statearr_20057 = state_20052;
                      statearr_20057[8] = inst_20032__$1;
                      return statearr_20057;
                    }();
                    if (inst_20034) {
                      var statearr_20058_20080 = state_20052__$1;
                      statearr_20058_20080[1] = 5;
                    } else {
                      var statearr_20059_20081 = state_20052__$1;
                      statearr_20059_20081[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_20053 === 6) {
                      var state_20052__$1 = state_20052;
                      var statearr_20060_20082 = state_20052__$1;
                      statearr_20060_20082[2] = null;
                      statearr_20060_20082[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20053 === 3) {
                        var inst_20049 = state_20052[2];
                        var inst_20050 = cljs.core.async.close_BANG_.call(null, out);
                        var state_20052__$1 = function() {
                          var statearr_20061 = state_20052;
                          statearr_20061[9] = inst_20049;
                          return statearr_20061;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20052__$1, inst_20050);
                      } else {
                        if (state_val_20053 === 2) {
                          var state_20052__$1 = state_20052;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20052__$1, 4, ch);
                        } else {
                          if (state_val_20053 === 11) {
                            var inst_20032 = state_20052[8];
                            var inst_20041 = state_20052[2];
                            var inst_20029 = inst_20032;
                            var state_20052__$1 = function() {
                              var statearr_20062 = state_20052;
                              statearr_20062[7] = inst_20029;
                              statearr_20062[10] = inst_20041;
                              return statearr_20062;
                            }();
                            var statearr_20063_20083 = state_20052__$1;
                            statearr_20063_20083[2] = null;
                            statearr_20063_20083[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_20053 === 9) {
                              var inst_20032 = state_20052[8];
                              var state_20052__$1 = state_20052;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20052__$1, 11, out, inst_20032);
                            } else {
                              if (state_val_20053 === 5) {
                                var inst_20032 = state_20052[8];
                                var inst_20029 = state_20052[7];
                                var inst_20036 = cljs.core._EQ_.call(null, inst_20032, inst_20029);
                                var state_20052__$1 = state_20052;
                                if (inst_20036) {
                                  var statearr_20065_20084 = state_20052__$1;
                                  statearr_20065_20084[1] = 8;
                                } else {
                                  var statearr_20066_20085 = state_20052__$1;
                                  statearr_20066_20085[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_20053 === 10) {
                                  var inst_20044 = state_20052[2];
                                  var state_20052__$1 = state_20052;
                                  var statearr_20067_20086 = state_20052__$1;
                                  statearr_20067_20086[2] = inst_20044;
                                  statearr_20067_20086[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_20053 === 8) {
                                    var inst_20029 = state_20052[7];
                                    var tmp20064 = inst_20029;
                                    var inst_20029__$1 = tmp20064;
                                    var state_20052__$1 = function() {
                                      var statearr_20068 = state_20052;
                                      statearr_20068[7] = inst_20029__$1;
                                      return statearr_20068;
                                    }();
                                    var statearr_20069_20087 = state_20052__$1;
                                    statearr_20069_20087[2] = null;
                                    statearr_20069_20087[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6560__auto___20077, out);
          return function(switch__6504__auto__, c__6560__auto___20077, out) {
            return function() {
              var state_machine__6505__auto__ = null;
              var state_machine__6505__auto____0 = function() {
                var statearr_20073 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_20073[0] = state_machine__6505__auto__;
                statearr_20073[1] = 1;
                return statearr_20073;
              };
              var state_machine__6505__auto____1 = function(state_20052) {
                while (true) {
                  var ret_value__6506__auto__ = function() {
                    try {
                      while (true) {
                        var result__6507__auto__ = switch__6504__auto__.call(null, state_20052);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6507__auto__;
                        }
                        break;
                      }
                    } catch (e20074) {
                      if (e20074 instanceof Object) {
                        var ex__6508__auto__ = e20074;
                        var statearr_20075_20088 = state_20052;
                        statearr_20075_20088[5] = ex__6508__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20052);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e20074;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__20089 = state_20052;
                    state_20052 = G__20089;
                    continue;
                  } else {
                    return ret_value__6506__auto__;
                  }
                  break;
                }
              };
              state_machine__6505__auto__ = function(state_20052) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6505__auto____0.call(this);
                  case 1:
                    return state_machine__6505__auto____1.call(this, state_20052);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
              return state_machine__6505__auto__;
            }();
          }(switch__6504__auto__, c__6560__auto___20077, out);
        }();
        var state__6562__auto__ = function() {
          var statearr_20076 = f__6561__auto__.call(null);
          statearr_20076[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___20077;
          return statearr_20076;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
      };
    }(c__6560__auto___20077, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6560__auto___20224 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___20224, out) {
      return function() {
        var f__6561__auto__ = function() {
          var switch__6504__auto__ = function(c__6560__auto___20224, out) {
            return function(state_20194) {
              var state_val_20195 = state_20194[1];
              if (state_val_20195 === 7) {
                var inst_20190 = state_20194[2];
                var state_20194__$1 = state_20194;
                var statearr_20196_20225 = state_20194__$1;
                statearr_20196_20225[2] = inst_20190;
                statearr_20196_20225[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_20195 === 1) {
                  var inst_20157 = new Array(n);
                  var inst_20158 = inst_20157;
                  var inst_20159 = 0;
                  var state_20194__$1 = function() {
                    var statearr_20197 = state_20194;
                    statearr_20197[7] = inst_20158;
                    statearr_20197[8] = inst_20159;
                    return statearr_20197;
                  }();
                  var statearr_20198_20226 = state_20194__$1;
                  statearr_20198_20226[2] = null;
                  statearr_20198_20226[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_20195 === 4) {
                    var inst_20162 = state_20194[9];
                    var inst_20162__$1 = state_20194[2];
                    var inst_20163 = inst_20162__$1 == null;
                    var inst_20164 = cljs.core.not.call(null, inst_20163);
                    var state_20194__$1 = function() {
                      var statearr_20199 = state_20194;
                      statearr_20199[9] = inst_20162__$1;
                      return statearr_20199;
                    }();
                    if (inst_20164) {
                      var statearr_20200_20227 = state_20194__$1;
                      statearr_20200_20227[1] = 5;
                    } else {
                      var statearr_20201_20228 = state_20194__$1;
                      statearr_20201_20228[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_20195 === 15) {
                      var inst_20184 = state_20194[2];
                      var state_20194__$1 = state_20194;
                      var statearr_20202_20229 = state_20194__$1;
                      statearr_20202_20229[2] = inst_20184;
                      statearr_20202_20229[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20195 === 13) {
                        var state_20194__$1 = state_20194;
                        var statearr_20203_20230 = state_20194__$1;
                        statearr_20203_20230[2] = null;
                        statearr_20203_20230[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_20195 === 6) {
                          var inst_20159 = state_20194[8];
                          var inst_20180 = inst_20159 > 0;
                          var state_20194__$1 = state_20194;
                          if (cljs.core.truth_(inst_20180)) {
                            var statearr_20204_20231 = state_20194__$1;
                            statearr_20204_20231[1] = 12;
                          } else {
                            var statearr_20205_20232 = state_20194__$1;
                            statearr_20205_20232[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_20195 === 3) {
                            var inst_20192 = state_20194[2];
                            var state_20194__$1 = state_20194;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20194__$1, inst_20192);
                          } else {
                            if (state_val_20195 === 12) {
                              var inst_20158 = state_20194[7];
                              var inst_20182 = cljs.core.vec.call(null, inst_20158);
                              var state_20194__$1 = state_20194;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20194__$1, 15, out, inst_20182);
                            } else {
                              if (state_val_20195 === 2) {
                                var state_20194__$1 = state_20194;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20194__$1, 4, ch);
                              } else {
                                if (state_val_20195 === 11) {
                                  var inst_20174 = state_20194[2];
                                  var inst_20175 = new Array(n);
                                  var inst_20158 = inst_20175;
                                  var inst_20159 = 0;
                                  var state_20194__$1 = function() {
                                    var statearr_20206 = state_20194;
                                    statearr_20206[7] = inst_20158;
                                    statearr_20206[8] = inst_20159;
                                    statearr_20206[10] = inst_20174;
                                    return statearr_20206;
                                  }();
                                  var statearr_20207_20233 = state_20194__$1;
                                  statearr_20207_20233[2] = null;
                                  statearr_20207_20233[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_20195 === 9) {
                                    var inst_20158 = state_20194[7];
                                    var inst_20172 = cljs.core.vec.call(null, inst_20158);
                                    var state_20194__$1 = state_20194;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20194__$1, 11, out, inst_20172);
                                  } else {
                                    if (state_val_20195 === 5) {
                                      var inst_20158 = state_20194[7];
                                      var inst_20162 = state_20194[9];
                                      var inst_20159 = state_20194[8];
                                      var inst_20167 = state_20194[11];
                                      var inst_20166 = inst_20158[inst_20159] = inst_20162;
                                      var inst_20167__$1 = inst_20159 + 1;
                                      var inst_20168 = inst_20167__$1 < n;
                                      var state_20194__$1 = function() {
                                        var statearr_20208 = state_20194;
                                        statearr_20208[11] = inst_20167__$1;
                                        statearr_20208[12] = inst_20166;
                                        return statearr_20208;
                                      }();
                                      if (cljs.core.truth_(inst_20168)) {
                                        var statearr_20209_20234 = state_20194__$1;
                                        statearr_20209_20234[1] = 8;
                                      } else {
                                        var statearr_20210_20235 = state_20194__$1;
                                        statearr_20210_20235[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_20195 === 14) {
                                        var inst_20187 = state_20194[2];
                                        var inst_20188 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_20194__$1 = function() {
                                          var statearr_20212 = state_20194;
                                          statearr_20212[13] = inst_20187;
                                          return statearr_20212;
                                        }();
                                        var statearr_20213_20236 = state_20194__$1;
                                        statearr_20213_20236[2] = inst_20188;
                                        statearr_20213_20236[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_20195 === 10) {
                                          var inst_20178 = state_20194[2];
                                          var state_20194__$1 = state_20194;
                                          var statearr_20214_20237 = state_20194__$1;
                                          statearr_20214_20237[2] = inst_20178;
                                          statearr_20214_20237[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_20195 === 8) {
                                            var inst_20158 = state_20194[7];
                                            var inst_20167 = state_20194[11];
                                            var tmp20211 = inst_20158;
                                            var inst_20158__$1 = tmp20211;
                                            var inst_20159 = inst_20167;
                                            var state_20194__$1 = function() {
                                              var statearr_20215 = state_20194;
                                              statearr_20215[7] = inst_20158__$1;
                                              statearr_20215[8] = inst_20159;
                                              return statearr_20215;
                                            }();
                                            var statearr_20216_20238 = state_20194__$1;
                                            statearr_20216_20238[2] = null;
                                            statearr_20216_20238[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6560__auto___20224, out);
          return function(switch__6504__auto__, c__6560__auto___20224, out) {
            return function() {
              var state_machine__6505__auto__ = null;
              var state_machine__6505__auto____0 = function() {
                var statearr_20220 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_20220[0] = state_machine__6505__auto__;
                statearr_20220[1] = 1;
                return statearr_20220;
              };
              var state_machine__6505__auto____1 = function(state_20194) {
                while (true) {
                  var ret_value__6506__auto__ = function() {
                    try {
                      while (true) {
                        var result__6507__auto__ = switch__6504__auto__.call(null, state_20194);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6507__auto__;
                        }
                        break;
                      }
                    } catch (e20221) {
                      if (e20221 instanceof Object) {
                        var ex__6508__auto__ = e20221;
                        var statearr_20222_20239 = state_20194;
                        statearr_20222_20239[5] = ex__6508__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20194);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e20221;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__20240 = state_20194;
                    state_20194 = G__20240;
                    continue;
                  } else {
                    return ret_value__6506__auto__;
                  }
                  break;
                }
              };
              state_machine__6505__auto__ = function(state_20194) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6505__auto____0.call(this);
                  case 1:
                    return state_machine__6505__auto____1.call(this, state_20194);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
              return state_machine__6505__auto__;
            }();
          }(switch__6504__auto__, c__6560__auto___20224, out);
        }();
        var state__6562__auto__ = function() {
          var statearr_20223 = f__6561__auto__.call(null);
          statearr_20223[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___20224;
          return statearr_20223;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
      };
    }(c__6560__auto___20224, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6560__auto___20383 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___20383, out) {
      return function() {
        var f__6561__auto__ = function() {
          var switch__6504__auto__ = function(c__6560__auto___20383, out) {
            return function(state_20353) {
              var state_val_20354 = state_20353[1];
              if (state_val_20354 === 7) {
                var inst_20349 = state_20353[2];
                var state_20353__$1 = state_20353;
                var statearr_20355_20384 = state_20353__$1;
                statearr_20355_20384[2] = inst_20349;
                statearr_20355_20384[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_20354 === 1) {
                  var inst_20312 = [];
                  var inst_20313 = inst_20312;
                  var inst_20314 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                  var state_20353__$1 = function() {
                    var statearr_20356 = state_20353;
                    statearr_20356[7] = inst_20314;
                    statearr_20356[8] = inst_20313;
                    return statearr_20356;
                  }();
                  var statearr_20357_20385 = state_20353__$1;
                  statearr_20357_20385[2] = null;
                  statearr_20357_20385[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_20354 === 4) {
                    var inst_20317 = state_20353[9];
                    var inst_20317__$1 = state_20353[2];
                    var inst_20318 = inst_20317__$1 == null;
                    var inst_20319 = cljs.core.not.call(null, inst_20318);
                    var state_20353__$1 = function() {
                      var statearr_20358 = state_20353;
                      statearr_20358[9] = inst_20317__$1;
                      return statearr_20358;
                    }();
                    if (inst_20319) {
                      var statearr_20359_20386 = state_20353__$1;
                      statearr_20359_20386[1] = 5;
                    } else {
                      var statearr_20360_20387 = state_20353__$1;
                      statearr_20360_20387[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_20354 === 15) {
                      var inst_20343 = state_20353[2];
                      var state_20353__$1 = state_20353;
                      var statearr_20361_20388 = state_20353__$1;
                      statearr_20361_20388[2] = inst_20343;
                      statearr_20361_20388[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20354 === 13) {
                        var state_20353__$1 = state_20353;
                        var statearr_20362_20389 = state_20353__$1;
                        statearr_20362_20389[2] = null;
                        statearr_20362_20389[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_20354 === 6) {
                          var inst_20313 = state_20353[8];
                          var inst_20338 = inst_20313.length;
                          var inst_20339 = inst_20338 > 0;
                          var state_20353__$1 = state_20353;
                          if (cljs.core.truth_(inst_20339)) {
                            var statearr_20363_20390 = state_20353__$1;
                            statearr_20363_20390[1] = 12;
                          } else {
                            var statearr_20364_20391 = state_20353__$1;
                            statearr_20364_20391[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_20354 === 3) {
                            var inst_20351 = state_20353[2];
                            var state_20353__$1 = state_20353;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20353__$1, inst_20351);
                          } else {
                            if (state_val_20354 === 12) {
                              var inst_20313 = state_20353[8];
                              var inst_20341 = cljs.core.vec.call(null, inst_20313);
                              var state_20353__$1 = state_20353;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20353__$1, 15, out, inst_20341);
                            } else {
                              if (state_val_20354 === 2) {
                                var state_20353__$1 = state_20353;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20353__$1, 4, ch);
                              } else {
                                if (state_val_20354 === 11) {
                                  var inst_20321 = state_20353[10];
                                  var inst_20317 = state_20353[9];
                                  var inst_20331 = state_20353[2];
                                  var inst_20332 = [];
                                  var inst_20333 = inst_20332.push(inst_20317);
                                  var inst_20313 = inst_20332;
                                  var inst_20314 = inst_20321;
                                  var state_20353__$1 = function() {
                                    var statearr_20365 = state_20353;
                                    statearr_20365[11] = inst_20331;
                                    statearr_20365[7] = inst_20314;
                                    statearr_20365[8] = inst_20313;
                                    statearr_20365[12] = inst_20333;
                                    return statearr_20365;
                                  }();
                                  var statearr_20366_20392 = state_20353__$1;
                                  statearr_20366_20392[2] = null;
                                  statearr_20366_20392[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_20354 === 9) {
                                    var inst_20313 = state_20353[8];
                                    var inst_20329 = cljs.core.vec.call(null, inst_20313);
                                    var state_20353__$1 = state_20353;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20353__$1, 11, out, inst_20329);
                                  } else {
                                    if (state_val_20354 === 5) {
                                      var inst_20321 = state_20353[10];
                                      var inst_20317 = state_20353[9];
                                      var inst_20314 = state_20353[7];
                                      var inst_20321__$1 = f.call(null, inst_20317);
                                      var inst_20322 = cljs.core._EQ_.call(null, inst_20321__$1, inst_20314);
                                      var inst_20323 = cljs.core.keyword_identical_QMARK_.call(null, inst_20314, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                      var inst_20324 = inst_20322 || inst_20323;
                                      var state_20353__$1 = function() {
                                        var statearr_20367 = state_20353;
                                        statearr_20367[10] = inst_20321__$1;
                                        return statearr_20367;
                                      }();
                                      if (cljs.core.truth_(inst_20324)) {
                                        var statearr_20368_20393 = state_20353__$1;
                                        statearr_20368_20393[1] = 8;
                                      } else {
                                        var statearr_20369_20394 = state_20353__$1;
                                        statearr_20369_20394[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_20354 === 14) {
                                        var inst_20346 = state_20353[2];
                                        var inst_20347 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_20353__$1 = function() {
                                          var statearr_20371 = state_20353;
                                          statearr_20371[13] = inst_20346;
                                          return statearr_20371;
                                        }();
                                        var statearr_20372_20395 = state_20353__$1;
                                        statearr_20372_20395[2] = inst_20347;
                                        statearr_20372_20395[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_20354 === 10) {
                                          var inst_20336 = state_20353[2];
                                          var state_20353__$1 = state_20353;
                                          var statearr_20373_20396 = state_20353__$1;
                                          statearr_20373_20396[2] = inst_20336;
                                          statearr_20373_20396[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_20354 === 8) {
                                            var inst_20321 = state_20353[10];
                                            var inst_20317 = state_20353[9];
                                            var inst_20313 = state_20353[8];
                                            var inst_20326 = inst_20313.push(inst_20317);
                                            var tmp20370 = inst_20313;
                                            var inst_20313__$1 = tmp20370;
                                            var inst_20314 = inst_20321;
                                            var state_20353__$1 = function() {
                                              var statearr_20374 = state_20353;
                                              statearr_20374[7] = inst_20314;
                                              statearr_20374[8] = inst_20313__$1;
                                              statearr_20374[14] = inst_20326;
                                              return statearr_20374;
                                            }();
                                            var statearr_20375_20397 = state_20353__$1;
                                            statearr_20375_20397[2] = null;
                                            statearr_20375_20397[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6560__auto___20383, out);
          return function(switch__6504__auto__, c__6560__auto___20383, out) {
            return function() {
              var state_machine__6505__auto__ = null;
              var state_machine__6505__auto____0 = function() {
                var statearr_20379 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_20379[0] = state_machine__6505__auto__;
                statearr_20379[1] = 1;
                return statearr_20379;
              };
              var state_machine__6505__auto____1 = function(state_20353) {
                while (true) {
                  var ret_value__6506__auto__ = function() {
                    try {
                      while (true) {
                        var result__6507__auto__ = switch__6504__auto__.call(null, state_20353);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6507__auto__;
                        }
                        break;
                      }
                    } catch (e20380) {
                      if (e20380 instanceof Object) {
                        var ex__6508__auto__ = e20380;
                        var statearr_20381_20398 = state_20353;
                        statearr_20381_20398[5] = ex__6508__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20353);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e20380;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__20399 = state_20353;
                    state_20353 = G__20399;
                    continue;
                  } else {
                    return ret_value__6506__auto__;
                  }
                  break;
                }
              };
              state_machine__6505__auto__ = function(state_20353) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6505__auto____0.call(this);
                  case 1:
                    return state_machine__6505__auto____1.call(this, state_20353);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
              return state_machine__6505__auto__;
            }();
          }(switch__6504__auto__, c__6560__auto___20383, out);
        }();
        var state__6562__auto__ = function() {
          var statearr_20382 = f__6561__auto__.call(null);
          statearr_20382[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___20383;
          return statearr_20382;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
      };
    }(c__6560__auto___20383, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function walk(inner, outer, form) {
  if (cljs.core.seq_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.coll_QMARK_.call(null, form)) {
      return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
    } else {
      return outer.call(null, form);
    }
  }
};
clojure.walk.postwalk = function postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, postwalk, f), f, form);
};
clojure.walk.prewalk = function prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function keywordize_keys(m) {
  var f = function(p__20636) {
    var vec__20637 = p__20636;
    var k = cljs.core.nth.call(null, vec__20637, 0, null);
    var v = cljs.core.nth.call(null, vec__20637, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.stringify_keys = function stringify_keys(m) {
  var f = function(p__20640) {
    var vec__20641 = p__20640;
    var k = cljs.core.nth.call(null, vec__20641, 0, null);
    var v = cljs.core.nth.call(null, vec__20641, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.prewalk_replace = function prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("sablono.core");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("sablono.interpreter");
goog.require("sablono.util");
goog.require("clojure.walk");
goog.require("clojure.string");
sablono.core.wrap_attrs = function wrap_attrs(func) {
  return function() {
    var G__20527__delegate = function(args) {
      if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, args))) {
        var vec__20526 = cljs.core.apply.call(null, func, cljs.core.rest.call(null, args));
        var tag = cljs.core.nth.call(null, vec__20526, 0, null);
        var body = cljs.core.nthnext.call(null, vec__20526, 1);
        if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, body))) {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.merge.call(null, cljs.core.first.call(null, body), cljs.core.first.call(null, args)), cljs.core.rest.call(null, body));
        } else {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.first.call(null, args), body);
        }
      } else {
        return cljs.core.apply.call(null, func, args);
      }
    };
    var G__20527 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__20528__i = 0, G__20528__a = new Array(arguments.length - 0);
        while (G__20528__i < G__20528__a.length) {
          G__20528__a[G__20528__i] = arguments[G__20528__i + 0];
          ++G__20528__i;
        }
        args = new cljs.core.IndexedSeq(G__20528__a, 0);
      }
      return G__20527__delegate.call(this, args);
    };
    G__20527.cljs$lang$maxFixedArity = 0;
    G__20527.cljs$lang$applyTo = function(arglist__20529) {
      var args = cljs.core.seq(arglist__20529);
      return G__20527__delegate(args);
    };
    G__20527.cljs$core$IFn$_invoke$arity$variadic = G__20527__delegate;
    return G__20527;
  }();
};
sablono.core.update_arglists = function update_arglists(arglists) {
  var iter__4524__auto__ = function iter__20534(s__20535) {
    return new cljs.core.LazySeq(null, function() {
      var s__20535__$1 = s__20535;
      while (true) {
        var temp__4126__auto__ = cljs.core.seq.call(null, s__20535__$1);
        if (temp__4126__auto__) {
          var s__20535__$2 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__20535__$2)) {
            var c__4522__auto__ = cljs.core.chunk_first.call(null, s__20535__$2);
            var size__4523__auto__ = cljs.core.count.call(null, c__4522__auto__);
            var b__20537 = cljs.core.chunk_buffer.call(null, size__4523__auto__);
            if (function() {
              var i__20536 = 0;
              while (true) {
                if (i__20536 < size__4523__auto__) {
                  var args = cljs.core._nth.call(null, c__4522__auto__, i__20536);
                  cljs.core.chunk_append.call(null, b__20537, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", 116307443, null), args)));
                  var G__20538 = i__20536 + 1;
                  i__20536 = G__20538;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20537), iter__20534.call(null, cljs.core.chunk_rest.call(null, s__20535__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20537), null);
            }
          } else {
            var args = cljs.core.first.call(null, s__20535__$2);
            return cljs.core.cons.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", 116307443, null), args)), iter__20534.call(null, cljs.core.rest.call(null, s__20535__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__4524__auto__.call(null, arglists);
};
sablono.core.render = function render(component) {
  return React.renderComponentToString(component);
};
sablono.core.include_css = function() {
  var include_css__delegate = function(styles) {
    var iter__4524__auto__ = function iter__20543(s__20544) {
      return new cljs.core.LazySeq(null, function() {
        var s__20544__$1 = s__20544;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__20544__$1);
          if (temp__4126__auto__) {
            var s__20544__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__20544__$2)) {
              var c__4522__auto__ = cljs.core.chunk_first.call(null, s__20544__$2);
              var size__4523__auto__ = cljs.core.count.call(null, c__4522__auto__);
              var b__20546 = cljs.core.chunk_buffer.call(null, size__4523__auto__);
              if (function() {
                var i__20545 = 0;
                while (true) {
                  if (i__20545 < size__4523__auto__) {
                    var style = cljs.core._nth.call(null, c__4522__auto__, i__20545);
                    cljs.core.chunk_append.call(null, b__20546, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", -1769163468), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text/css", new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1378823488), "stylesheet"], null)], null));
                    var G__20547 = i__20545 + 1;
                    i__20545 = G__20547;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20546), iter__20543.call(null, cljs.core.chunk_rest.call(null, s__20544__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20546), null);
              }
            } else {
              var style = cljs.core.first.call(null, s__20544__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", -1769163468), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text/css", new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1378823488), "stylesheet"], null)], null), iter__20543.call(null, 
              cljs.core.rest.call(null, s__20544__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4524__auto__.call(null, styles);
  };
  var include_css = function(var_args) {
    var styles = null;
    if (arguments.length > 0) {
      var G__20548__i = 0, G__20548__a = new Array(arguments.length - 0);
      while (G__20548__i < G__20548__a.length) {
        G__20548__a[G__20548__i] = arguments[G__20548__i + 0];
        ++G__20548__i;
      }
      styles = new cljs.core.IndexedSeq(G__20548__a, 0);
    }
    return include_css__delegate.call(this, styles);
  };
  include_css.cljs$lang$maxFixedArity = 0;
  include_css.cljs$lang$applyTo = function(arglist__20549) {
    var styles = cljs.core.seq(arglist__20549);
    return include_css__delegate(styles);
  };
  include_css.cljs$core$IFn$_invoke$arity$variadic = include_css__delegate;
  return include_css;
}();
sablono.core.include_js = function include_js(src) {
  return goog.dom.appendChild(goog.dom.getDocument().body, goog.dom.createDom("script", {"src":src}));
};
sablono.core.include_react = function include_react() {
  return sablono.core.include_js.call(null, "http://fb.me/react-0.9.0.js");
};
sablono.core.link_to20550 = function() {
  var link_to20550__delegate = function(url, content) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, url)], null), content], null);
  };
  var link_to20550 = function(url, var_args) {
    var content = null;
    if (arguments.length > 1) {
      var G__20551__i = 0, G__20551__a = new Array(arguments.length - 1);
      while (G__20551__i < G__20551__a.length) {
        G__20551__a[G__20551__i] = arguments[G__20551__i + 1];
        ++G__20551__i;
      }
      content = new cljs.core.IndexedSeq(G__20551__a, 0);
    }
    return link_to20550__delegate.call(this, url, content);
  };
  link_to20550.cljs$lang$maxFixedArity = 1;
  link_to20550.cljs$lang$applyTo = function(arglist__20552) {
    var url = cljs.core.first(arglist__20552);
    var content = cljs.core.rest(arglist__20552);
    return link_to20550__delegate(url, content);
  };
  link_to20550.cljs$core$IFn$_invoke$arity$variadic = link_to20550__delegate;
  return link_to20550;
}();
sablono.core.link_to = sablono.core.wrap_attrs.call(null, sablono.core.link_to20550);
sablono.core.mail_to20553 = function() {
  var mail_to20553__delegate = function(e_mail, p__20554) {
    var vec__20556 = p__20554;
    var content = cljs.core.nth.call(null, vec__20556, 0, null);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), [cljs.core.str("mailto:"), cljs.core.str(e_mail)].join("")], null), function() {
      var or__3768__auto__ = content;
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        return e_mail;
      }
    }()], null);
  };
  var mail_to20553 = function(e_mail, var_args) {
    var p__20554 = null;
    if (arguments.length > 1) {
      var G__20557__i = 0, G__20557__a = new Array(arguments.length - 1);
      while (G__20557__i < G__20557__a.length) {
        G__20557__a[G__20557__i] = arguments[G__20557__i + 1];
        ++G__20557__i;
      }
      p__20554 = new cljs.core.IndexedSeq(G__20557__a, 0);
    }
    return mail_to20553__delegate.call(this, e_mail, p__20554);
  };
  mail_to20553.cljs$lang$maxFixedArity = 1;
  mail_to20553.cljs$lang$applyTo = function(arglist__20558) {
    var e_mail = cljs.core.first(arglist__20558);
    var p__20554 = cljs.core.rest(arglist__20558);
    return mail_to20553__delegate(e_mail, p__20554);
  };
  mail_to20553.cljs$core$IFn$_invoke$arity$variadic = mail_to20553__delegate;
  return mail_to20553;
}();
sablono.core.mail_to = sablono.core.wrap_attrs.call(null, sablono.core.mail_to20553);
sablono.core.unordered_list20559 = function unordered_list20559(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", -1349521403), function() {
    var iter__4524__auto__ = function iter__20564(s__20565) {
      return new cljs.core.LazySeq(null, function() {
        var s__20565__$1 = s__20565;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__20565__$1);
          if (temp__4126__auto__) {
            var s__20565__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__20565__$2)) {
              var c__4522__auto__ = cljs.core.chunk_first.call(null, s__20565__$2);
              var size__4523__auto__ = cljs.core.count.call(null, c__4522__auto__);
              var b__20567 = cljs.core.chunk_buffer.call(null, size__4523__auto__);
              if (function() {
                var i__20566 = 0;
                while (true) {
                  if (i__20566 < size__4523__auto__) {
                    var x = cljs.core._nth.call(null, c__4522__auto__, i__20566);
                    cljs.core.chunk_append.call(null, b__20567, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null));
                    var G__20568 = i__20566 + 1;
                    i__20566 = G__20568;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20567), iter__20564.call(null, cljs.core.chunk_rest.call(null, s__20565__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20567), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__20565__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null), iter__20564.call(null, cljs.core.rest.call(null, s__20565__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4524__auto__.call(null, coll);
  }()], null);
};
sablono.core.unordered_list = sablono.core.wrap_attrs.call(null, sablono.core.unordered_list20559);
sablono.core.ordered_list20569 = function ordered_list20569(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ol", "ol", 932524051), function() {
    var iter__4524__auto__ = function iter__20574(s__20575) {
      return new cljs.core.LazySeq(null, function() {
        var s__20575__$1 = s__20575;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__20575__$1);
          if (temp__4126__auto__) {
            var s__20575__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__20575__$2)) {
              var c__4522__auto__ = cljs.core.chunk_first.call(null, s__20575__$2);
              var size__4523__auto__ = cljs.core.count.call(null, c__4522__auto__);
              var b__20577 = cljs.core.chunk_buffer.call(null, size__4523__auto__);
              if (function() {
                var i__20576 = 0;
                while (true) {
                  if (i__20576 < size__4523__auto__) {
                    var x = cljs.core._nth.call(null, c__4522__auto__, i__20576);
                    cljs.core.chunk_append.call(null, b__20577, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null));
                    var G__20578 = i__20576 + 1;
                    i__20576 = G__20578;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20577), iter__20574.call(null, cljs.core.chunk_rest.call(null, s__20575__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20577), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__20575__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null), iter__20574.call(null, cljs.core.rest.call(null, s__20575__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4524__auto__.call(null, coll);
  }()], null);
};
sablono.core.ordered_list = sablono.core.wrap_attrs.call(null, sablono.core.ordered_list20569);
sablono.core.image20579 = function() {
  var image20579 = null;
  var image20579__1 = function(src) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "src", "src", -1651076051), sablono.util.as_str.call(null, src)], null)], null);
  };
  var image20579__2 = function(src, alt) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "src", "src", -1651076051), sablono.util.as_str.call(null, src), new cljs.core.Keyword(null, "alt", "alt", -3214426), alt], null)], null);
  };
  image20579 = function(src, alt) {
    switch(arguments.length) {
      case 1:
        return image20579__1.call(this, src);
      case 2:
        return image20579__2.call(this, src, alt);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  image20579.cljs$core$IFn$_invoke$arity$1 = image20579__1;
  image20579.cljs$core$IFn$_invoke$arity$2 = image20579__2;
  return image20579;
}();
sablono.core.image = sablono.core.wrap_attrs.call(null, sablono.core.image20579);
sablono.core._STAR_group_STAR_ = cljs.core.PersistentVector.EMPTY;
sablono.core.make_name = function make_name(name) {
  return cljs.core.reduce.call(null, function(p1__20580_SHARP_, p2__20581_SHARP_) {
    return[cljs.core.str(p1__20580_SHARP_), cljs.core.str("["), cljs.core.str(p2__20581_SHARP_), cljs.core.str("]")].join("");
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.make_id = function make_id(name) {
  return cljs.core.reduce.call(null, function(p1__20582_SHARP_, p2__20583_SHARP_) {
    return[cljs.core.str(p1__20582_SHARP_), cljs.core.str("-"), cljs.core.str(p2__20583_SHARP_)].join("");
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.input_field_STAR_ = function input_field_STAR_(type, name, value) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), type, new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 305978217), 
  value], null)], null);
};
sablono.core.color_field20584 = function() {
  var color_field20584 = null;
  var color_field20584__1 = function(name__9900__auto__) {
    return color_field20584.call(null, name__9900__auto__, null);
  };
  var color_field20584__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "color", "color", -1642760596, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  color_field20584 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return color_field20584__1.call(this, name__9900__auto__);
      case 2:
        return color_field20584__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  color_field20584.cljs$core$IFn$_invoke$arity$1 = color_field20584__1;
  color_field20584.cljs$core$IFn$_invoke$arity$2 = color_field20584__2;
  return color_field20584;
}();
sablono.core.color_field = sablono.core.wrap_attrs.call(null, sablono.core.color_field20584);
sablono.core.date_field20585 = function() {
  var date_field20585 = null;
  var date_field20585__1 = function(name__9900__auto__) {
    return date_field20585.call(null, name__9900__auto__, null);
  };
  var date_field20585__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "date", "date", 177097065, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  date_field20585 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return date_field20585__1.call(this, name__9900__auto__);
      case 2:
        return date_field20585__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  date_field20585.cljs$core$IFn$_invoke$arity$1 = date_field20585__1;
  date_field20585.cljs$core$IFn$_invoke$arity$2 = date_field20585__2;
  return date_field20585;
}();
sablono.core.date_field = sablono.core.wrap_attrs.call(null, sablono.core.date_field20585);
sablono.core.datetime_field20586 = function() {
  var datetime_field20586 = null;
  var datetime_field20586__1 = function(name__9900__auto__) {
    return datetime_field20586.call(null, name__9900__auto__, null);
  };
  var datetime_field20586__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "datetime", "datetime", 2135207229, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  datetime_field20586 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return datetime_field20586__1.call(this, name__9900__auto__);
      case 2:
        return datetime_field20586__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  datetime_field20586.cljs$core$IFn$_invoke$arity$1 = datetime_field20586__1;
  datetime_field20586.cljs$core$IFn$_invoke$arity$2 = datetime_field20586__2;
  return datetime_field20586;
}();
sablono.core.datetime_field = sablono.core.wrap_attrs.call(null, sablono.core.datetime_field20586);
sablono.core.datetime_local_field20587 = function() {
  var datetime_local_field20587 = null;
  var datetime_local_field20587__1 = function(name__9900__auto__) {
    return datetime_local_field20587.call(null, name__9900__auto__, null);
  };
  var datetime_local_field20587__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "datetime-local", "datetime-local", -507312697, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  datetime_local_field20587 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return datetime_local_field20587__1.call(this, name__9900__auto__);
      case 2:
        return datetime_local_field20587__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  datetime_local_field20587.cljs$core$IFn$_invoke$arity$1 = datetime_local_field20587__1;
  datetime_local_field20587.cljs$core$IFn$_invoke$arity$2 = datetime_local_field20587__2;
  return datetime_local_field20587;
}();
sablono.core.datetime_local_field = sablono.core.wrap_attrs.call(null, sablono.core.datetime_local_field20587);
sablono.core.email_field20588 = function() {
  var email_field20588 = null;
  var email_field20588__1 = function(name__9900__auto__) {
    return email_field20588.call(null, name__9900__auto__, null);
  };
  var email_field20588__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "email", "email", -1238619063, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  email_field20588 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return email_field20588__1.call(this, name__9900__auto__);
      case 2:
        return email_field20588__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  email_field20588.cljs$core$IFn$_invoke$arity$1 = email_field20588__1;
  email_field20588.cljs$core$IFn$_invoke$arity$2 = email_field20588__2;
  return email_field20588;
}();
sablono.core.email_field = sablono.core.wrap_attrs.call(null, sablono.core.email_field20588);
sablono.core.file_field20589 = function() {
  var file_field20589 = null;
  var file_field20589__1 = function(name__9900__auto__) {
    return file_field20589.call(null, name__9900__auto__, null);
  };
  var file_field20589__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "file", "file", 370885649, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  file_field20589 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return file_field20589__1.call(this, name__9900__auto__);
      case 2:
        return file_field20589__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  file_field20589.cljs$core$IFn$_invoke$arity$1 = file_field20589__1;
  file_field20589.cljs$core$IFn$_invoke$arity$2 = file_field20589__2;
  return file_field20589;
}();
sablono.core.file_field = sablono.core.wrap_attrs.call(null, sablono.core.file_field20589);
sablono.core.hidden_field20590 = function() {
  var hidden_field20590 = null;
  var hidden_field20590__1 = function(name__9900__auto__) {
    return hidden_field20590.call(null, name__9900__auto__, null);
  };
  var hidden_field20590__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "hidden", "hidden", 1328025435, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  hidden_field20590 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return hidden_field20590__1.call(this, name__9900__auto__);
      case 2:
        return hidden_field20590__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hidden_field20590.cljs$core$IFn$_invoke$arity$1 = hidden_field20590__1;
  hidden_field20590.cljs$core$IFn$_invoke$arity$2 = hidden_field20590__2;
  return hidden_field20590;
}();
sablono.core.hidden_field = sablono.core.wrap_attrs.call(null, sablono.core.hidden_field20590);
sablono.core.month_field20591 = function() {
  var month_field20591 = null;
  var month_field20591__1 = function(name__9900__auto__) {
    return month_field20591.call(null, name__9900__auto__, null);
  };
  var month_field20591__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "month", "month", -319717006, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  month_field20591 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return month_field20591__1.call(this, name__9900__auto__);
      case 2:
        return month_field20591__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  month_field20591.cljs$core$IFn$_invoke$arity$1 = month_field20591__1;
  month_field20591.cljs$core$IFn$_invoke$arity$2 = month_field20591__2;
  return month_field20591;
}();
sablono.core.month_field = sablono.core.wrap_attrs.call(null, sablono.core.month_field20591);
sablono.core.number_field20592 = function() {
  var number_field20592 = null;
  var number_field20592__1 = function(name__9900__auto__) {
    return number_field20592.call(null, name__9900__auto__, null);
  };
  var number_field20592__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "number", "number", -1084057331, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  number_field20592 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return number_field20592__1.call(this, name__9900__auto__);
      case 2:
        return number_field20592__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  number_field20592.cljs$core$IFn$_invoke$arity$1 = number_field20592__1;
  number_field20592.cljs$core$IFn$_invoke$arity$2 = number_field20592__2;
  return number_field20592;
}();
sablono.core.number_field = sablono.core.wrap_attrs.call(null, sablono.core.number_field20592);
sablono.core.password_field20593 = function() {
  var password_field20593 = null;
  var password_field20593__1 = function(name__9900__auto__) {
    return password_field20593.call(null, name__9900__auto__, null);
  };
  var password_field20593__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "password", "password", 2057553998, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  password_field20593 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return password_field20593__1.call(this, name__9900__auto__);
      case 2:
        return password_field20593__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  password_field20593.cljs$core$IFn$_invoke$arity$1 = password_field20593__1;
  password_field20593.cljs$core$IFn$_invoke$arity$2 = password_field20593__2;
  return password_field20593;
}();
sablono.core.password_field = sablono.core.wrap_attrs.call(null, sablono.core.password_field20593);
sablono.core.range_field20594 = function() {
  var range_field20594 = null;
  var range_field20594__1 = function(name__9900__auto__) {
    return range_field20594.call(null, name__9900__auto__, null);
  };
  var range_field20594__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "range", "range", -1014743483, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  range_field20594 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return range_field20594__1.call(this, name__9900__auto__);
      case 2:
        return range_field20594__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range_field20594.cljs$core$IFn$_invoke$arity$1 = range_field20594__1;
  range_field20594.cljs$core$IFn$_invoke$arity$2 = range_field20594__2;
  return range_field20594;
}();
sablono.core.range_field = sablono.core.wrap_attrs.call(null, sablono.core.range_field20594);
sablono.core.search_field20595 = function() {
  var search_field20595 = null;
  var search_field20595__1 = function(name__9900__auto__) {
    return search_field20595.call(null, name__9900__auto__, null);
  };
  var search_field20595__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "search", "search", -1089495947, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  search_field20595 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return search_field20595__1.call(this, name__9900__auto__);
      case 2:
        return search_field20595__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  search_field20595.cljs$core$IFn$_invoke$arity$1 = search_field20595__1;
  search_field20595.cljs$core$IFn$_invoke$arity$2 = search_field20595__2;
  return search_field20595;
}();
sablono.core.search_field = sablono.core.wrap_attrs.call(null, sablono.core.search_field20595);
sablono.core.tel_field20596 = function() {
  var tel_field20596 = null;
  var tel_field20596__1 = function(name__9900__auto__) {
    return tel_field20596.call(null, name__9900__auto__, null);
  };
  var tel_field20596__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "tel", "tel", 1864669686, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  tel_field20596 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return tel_field20596__1.call(this, name__9900__auto__);
      case 2:
        return tel_field20596__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tel_field20596.cljs$core$IFn$_invoke$arity$1 = tel_field20596__1;
  tel_field20596.cljs$core$IFn$_invoke$arity$2 = tel_field20596__2;
  return tel_field20596;
}();
sablono.core.tel_field = sablono.core.wrap_attrs.call(null, sablono.core.tel_field20596);
sablono.core.text_field20597 = function() {
  var text_field20597 = null;
  var text_field20597__1 = function(name__9900__auto__) {
    return text_field20597.call(null, name__9900__auto__, null);
  };
  var text_field20597__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "text", "text", -150030170, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  text_field20597 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return text_field20597__1.call(this, name__9900__auto__);
      case 2:
        return text_field20597__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text_field20597.cljs$core$IFn$_invoke$arity$1 = text_field20597__1;
  text_field20597.cljs$core$IFn$_invoke$arity$2 = text_field20597__2;
  return text_field20597;
}();
sablono.core.text_field = sablono.core.wrap_attrs.call(null, sablono.core.text_field20597);
sablono.core.time_field20598 = function() {
  var time_field20598 = null;
  var time_field20598__1 = function(name__9900__auto__) {
    return time_field20598.call(null, name__9900__auto__, null);
  };
  var time_field20598__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "time", "time", -1268547887, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  time_field20598 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return time_field20598__1.call(this, name__9900__auto__);
      case 2:
        return time_field20598__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  time_field20598.cljs$core$IFn$_invoke$arity$1 = time_field20598__1;
  time_field20598.cljs$core$IFn$_invoke$arity$2 = time_field20598__2;
  return time_field20598;
}();
sablono.core.time_field = sablono.core.wrap_attrs.call(null, sablono.core.time_field20598);
sablono.core.url_field20599 = function() {
  var url_field20599 = null;
  var url_field20599__1 = function(name__9900__auto__) {
    return url_field20599.call(null, name__9900__auto__, null);
  };
  var url_field20599__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "url", "url", 1916828573, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  url_field20599 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return url_field20599__1.call(this, name__9900__auto__);
      case 2:
        return url_field20599__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  url_field20599.cljs$core$IFn$_invoke$arity$1 = url_field20599__1;
  url_field20599.cljs$core$IFn$_invoke$arity$2 = url_field20599__2;
  return url_field20599;
}();
sablono.core.url_field = sablono.core.wrap_attrs.call(null, sablono.core.url_field20599);
sablono.core.week_field20600 = function() {
  var week_field20600 = null;
  var week_field20600__1 = function(name__9900__auto__) {
    return week_field20600.call(null, name__9900__auto__, null);
  };
  var week_field20600__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "week", "week", 314058249, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  week_field20600 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return week_field20600__1.call(this, name__9900__auto__);
      case 2:
        return week_field20600__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  week_field20600.cljs$core$IFn$_invoke$arity$1 = week_field20600__1;
  week_field20600.cljs$core$IFn$_invoke$arity$2 = week_field20600__2;
  return week_field20600;
}();
sablono.core.week_field = sablono.core.wrap_attrs.call(null, sablono.core.week_field20600);
sablono.core.file_upload = sablono.core.file_field;
sablono.core.check_box20601 = function() {
  var check_box20601 = null;
  var check_box20601__1 = function(name) {
    return check_box20601.call(null, name, null);
  };
  var check_box20601__2 = function(name, checked_QMARK_) {
    return check_box20601.call(null, name, checked_QMARK_, "true");
  };
  var check_box20601__3 = function(name, checked_QMARK_, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 
    305978217), value, new cljs.core.Keyword(null, "checked", "checked", -50955819), checked_QMARK_], null)], null);
  };
  check_box20601 = function(name, checked_QMARK_, value) {
    switch(arguments.length) {
      case 1:
        return check_box20601__1.call(this, name);
      case 2:
        return check_box20601__2.call(this, name, checked_QMARK_);
      case 3:
        return check_box20601__3.call(this, name, checked_QMARK_, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  check_box20601.cljs$core$IFn$_invoke$arity$1 = check_box20601__1;
  check_box20601.cljs$core$IFn$_invoke$arity$2 = check_box20601__2;
  check_box20601.cljs$core$IFn$_invoke$arity$3 = check_box20601__3;
  return check_box20601;
}();
sablono.core.check_box = sablono.core.wrap_attrs.call(null, sablono.core.check_box20601);
sablono.core.radio_button20602 = function() {
  var radio_button20602 = null;
  var radio_button20602__1 = function(group) {
    return radio_button20602.call(null, group, null);
  };
  var radio_button20602__2 = function(group, checked_QMARK_) {
    return radio_button20602.call(null, group, checked_QMARK_, "true");
  };
  var radio_button20602__3 = function(group, checked_QMARK_, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), "radio", new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, group), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, [cljs.core.str(sablono.util.as_str.call(null, group)), 
    cljs.core.str("-"), cljs.core.str(sablono.util.as_str.call(null, value))].join("")), new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "checked", "checked", -50955819), checked_QMARK_], null)], null);
  };
  radio_button20602 = function(group, checked_QMARK_, value) {
    switch(arguments.length) {
      case 1:
        return radio_button20602__1.call(this, group);
      case 2:
        return radio_button20602__2.call(this, group, checked_QMARK_);
      case 3:
        return radio_button20602__3.call(this, group, checked_QMARK_, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  radio_button20602.cljs$core$IFn$_invoke$arity$1 = radio_button20602__1;
  radio_button20602.cljs$core$IFn$_invoke$arity$2 = radio_button20602__2;
  radio_button20602.cljs$core$IFn$_invoke$arity$3 = radio_button20602__3;
  return radio_button20602;
}();
sablono.core.radio_button = sablono.core.wrap_attrs.call(null, sablono.core.radio_button20602);
sablono.core.select_options20603 = function() {
  var select_options20603 = null;
  var select_options20603__1 = function(coll) {
    return select_options20603.call(null, coll, null);
  };
  var select_options20603__2 = function(coll, selected) {
    var iter__4524__auto__ = function iter__20612(s__20613) {
      return new cljs.core.LazySeq(null, function() {
        var s__20613__$1 = s__20613;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__20613__$1);
          if (temp__4126__auto__) {
            var s__20613__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__20613__$2)) {
              var c__4522__auto__ = cljs.core.chunk_first.call(null, s__20613__$2);
              var size__4523__auto__ = cljs.core.count.call(null, c__4522__auto__);
              var b__20615 = cljs.core.chunk_buffer.call(null, size__4523__auto__);
              if (function() {
                var i__20614 = 0;
                while (true) {
                  if (i__20614 < size__4523__auto__) {
                    var x = cljs.core._nth.call(null, c__4522__auto__, i__20614);
                    cljs.core.chunk_append.call(null, b__20615, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                      var vec__20618 = x;
                      var text = cljs.core.nth.call(null, vec__20618, 0, null);
                      var val = cljs.core.nth.call(null, vec__20618, 1, null);
                      var disabled_QMARK_ = cljs.core.nth.call(null, vec__20618, 2, null);
                      var disabled_QMARK___$1 = cljs.core.boolean$.call(null, disabled_QMARK_);
                      if (cljs.core.sequential_QMARK_.call(null, val)) {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 1738282218), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "label", "label", 1718410804), text], null), select_options20603.call(null, val, selected)], null);
                      } else {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 305978217), val, new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, val, selected), new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), disabled_QMARK___$1], null), text], null);
                      }
                    }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, x, selected)], null), x], null));
                    var G__20620 = i__20614 + 1;
                    i__20614 = G__20620;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20615), iter__20612.call(null, cljs.core.chunk_rest.call(null, s__20613__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20615), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__20613__$2);
              return cljs.core.cons.call(null, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                var vec__20619 = x;
                var text = cljs.core.nth.call(null, vec__20619, 0, null);
                var val = cljs.core.nth.call(null, vec__20619, 1, null);
                var disabled_QMARK_ = cljs.core.nth.call(null, vec__20619, 2, null);
                var disabled_QMARK___$1 = cljs.core.boolean$.call(null, disabled_QMARK_);
                if (cljs.core.sequential_QMARK_.call(null, val)) {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 1738282218), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "label", "label", 1718410804), text], null), select_options20603.call(null, val, selected)], null);
                } else {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 305978217), val, new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, val, selected), new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), disabled_QMARK___$1], null), text], null);
                }
              }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, x, selected)], null), x], null), iter__20612.call(null, cljs.core.rest.call(null, s__20613__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4524__auto__.call(null, coll);
  };
  select_options20603 = function(coll, selected) {
    switch(arguments.length) {
      case 1:
        return select_options20603__1.call(this, coll);
      case 2:
        return select_options20603__2.call(this, coll, selected);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  select_options20603.cljs$core$IFn$_invoke$arity$1 = select_options20603__1;
  select_options20603.cljs$core$IFn$_invoke$arity$2 = select_options20603__2;
  return select_options20603;
}();
sablono.core.select_options = sablono.core.wrap_attrs.call(null, sablono.core.select_options20603);
sablono.core.drop_down20621 = function() {
  var drop_down20621 = null;
  var drop_down20621__2 = function(name, options) {
    return drop_down20621.call(null, name, options, null);
  };
  var drop_down20621__3 = function(name, options, selected) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 1147833503), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name)], null), sablono.core.select_options.call(null, options, selected)], null);
  };
  drop_down20621 = function(name, options, selected) {
    switch(arguments.length) {
      case 2:
        return drop_down20621__2.call(this, name, options);
      case 3:
        return drop_down20621__3.call(this, name, options, selected);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_down20621.cljs$core$IFn$_invoke$arity$2 = drop_down20621__2;
  drop_down20621.cljs$core$IFn$_invoke$arity$3 = drop_down20621__3;
  return drop_down20621;
}();
sablono.core.drop_down = sablono.core.wrap_attrs.call(null, sablono.core.drop_down20621);
sablono.core.text_area20622 = function() {
  var text_area20622 = null;
  var text_area20622__1 = function(name) {
    return text_area20622.call(null, name, null);
  };
  var text_area20622__2 = function(name, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "textarea", "textarea", -650375824), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 305978217), value], null)], null);
  };
  text_area20622 = function(name, value) {
    switch(arguments.length) {
      case 1:
        return text_area20622__1.call(this, name);
      case 2:
        return text_area20622__2.call(this, name, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text_area20622.cljs$core$IFn$_invoke$arity$1 = text_area20622__1;
  text_area20622.cljs$core$IFn$_invoke$arity$2 = text_area20622__2;
  return text_area20622;
}();
sablono.core.text_area = sablono.core.wrap_attrs.call(null, sablono.core.text_area20622);
sablono.core.label20623 = function label20623(name, text) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "htmlFor", "htmlFor", -1050291720), sablono.core.make_id.call(null, name)], null), text], null);
};
sablono.core.label = sablono.core.wrap_attrs.call(null, sablono.core.label20623);
sablono.core.submit_button20624 = function submit_button20624(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "submit", new cljs.core.Keyword(null, "value", "value", 305978217), text], null)], null);
};
sablono.core.submit_button = sablono.core.wrap_attrs.call(null, sablono.core.submit_button20624);
sablono.core.reset_button20625 = function reset_button20625(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "reset", new cljs.core.Keyword(null, "value", "value", 305978217), text], null)], null);
};
sablono.core.reset_button = sablono.core.wrap_attrs.call(null, sablono.core.reset_button20625);
sablono.core.form_to20626 = function() {
  var form_to20626__delegate = function(p__20627, body) {
    var vec__20629 = p__20627;
    var method = cljs.core.nth.call(null, vec__20629, 0, null);
    var action = cljs.core.nth.call(null, vec__20629, 1, null);
    var method_str = clojure.string.upper_case.call(null, cljs.core.name.call(null, method));
    var action_uri = sablono.util.to_uri.call(null, action);
    return cljs.core.vec.call(null, cljs.core.concat.call(null, cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "get", "get", 1683182755), null, new cljs.core.Keyword(null, "post", "post", 269697687), null], null), null), method) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.PersistentArrayMap(null, 
    2, [new cljs.core.Keyword(null, "method", "method", 55703592), method_str, new cljs.core.Keyword(null, "action", "action", -811238024), action_uri], null)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), "POST", new cljs.core.Keyword(null, "action", "action", -811238024), action_uri], null), 
    sablono.core.hidden_field.call(null, "_method", method_str)], null), body));
  };
  var form_to20626 = function(p__20627, var_args) {
    var body = null;
    if (arguments.length > 1) {
      var G__20630__i = 0, G__20630__a = new Array(arguments.length - 1);
      while (G__20630__i < G__20630__a.length) {
        G__20630__a[G__20630__i] = arguments[G__20630__i + 1];
        ++G__20630__i;
      }
      body = new cljs.core.IndexedSeq(G__20630__a, 0);
    }
    return form_to20626__delegate.call(this, p__20627, body);
  };
  form_to20626.cljs$lang$maxFixedArity = 1;
  form_to20626.cljs$lang$applyTo = function(arglist__20631) {
    var p__20627 = cljs.core.first(arglist__20631);
    var body = cljs.core.rest(arglist__20631);
    return form_to20626__delegate(p__20627, body);
  };
  form_to20626.cljs$core$IFn$_invoke$arity$variadic = form_to20626__delegate;
  return form_to20626;
}();
sablono.core.form_to = sablono.core.wrap_attrs.call(null, sablono.core.form_to20626);
goog.provide("om.core");
goog.require("cljs.core");
goog.require("goog.ui.IdGenerator");
goog.require("goog.dom");
goog.require("om.dom");
om.core._STAR_parent_STAR_ = null;
om.core._STAR_instrument_STAR_ = null;
om.core._STAR_descriptor_STAR_ = null;
om.core._STAR_state_STAR_ = null;
om.core._STAR_root_key_STAR_ = null;
om.core.IDisplayName = function() {
  var obj20736 = {};
  return obj20736;
}();
om.core.display_name = function display_name(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IDisplayName$display_name$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IDisplayName$display_name$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core.display_name[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core.display_name["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisplayName.display-name", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IInitState = function() {
  var obj20738 = {};
  return obj20738;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core.init_state[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core.init_state["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj20740 = {};
  return obj20740;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core.should_update[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core.should_update["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj20742 = {};
  return obj20742;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core.will_mount[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core.will_mount["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj20744 = {};
  return obj20744;
}();
om.core.did_mount = function did_mount(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core.did_mount[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core.did_mount["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj20746 = {};
  return obj20746;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core.will_unmount[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core.will_unmount["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj20748 = {};
  return obj20748;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core.will_update[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core.will_update["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj20750 = {};
  return obj20750;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core.did_update[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core.did_update["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IWillReceiveProps = function() {
  var obj20752 = {};
  return obj20752;
}();
om.core.will_receive_props = function will_receive_props(this$, next_props) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IWillReceiveProps$will_receive_props$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IWillReceiveProps$will_receive_props$arity$2(this$, next_props);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core.will_receive_props[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core.will_receive_props["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillReceiveProps.will-receive-props", this$);
        }
      }
    }().call(null, this$, next_props);
  }
};
om.core.IRender = function() {
  var obj20754 = {};
  return obj20754;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core.render[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core.render["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderProps = function() {
  var obj20756 = {};
  return obj20756;
}();
om.core.render_props = function render_props(this$, props, state) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IRenderProps$render_props$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IRenderProps$render_props$arity$3(this$, props, state);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core.render_props[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core.render_props["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderProps.render-props", this$);
        }
      }
    }().call(null, this$, props, state);
  }
};
om.core.IRenderState = function() {
  var obj20758 = {};
  return obj20758;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core.render_state[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core.render_state["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.ICheckState = function() {
  var obj20760 = {};
  return obj20760;
}();
om.core.IOmSwap = function() {
  var obj20762 = {};
  return obj20762;
}();
om.core._om_swap_BANG_ = function _om_swap_BANG_(this$, cursor, korks, f, tag) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5(this$, cursor, korks, f, tag);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._om_swap_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._om_swap_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmSwap.-om-swap!", this$);
        }
      }
    }().call(null, this$, cursor, korks, f, tag);
  }
};
om.core.IGetState = function() {
  var obj20764 = {};
  return obj20764;
}();
om.core._get_state = function() {
  var _get_state = null;
  var _get_state__1 = function(this$) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.om$core$IGetState$_get_state$arity$1;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$1(this$);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = om.core._get_state[goog.typeOf(x__4412__auto__)];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = om.core._get_state["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_state__2 = function(this$, ks) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.om$core$IGetState$_get_state$arity$2;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$2(this$, ks);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = om.core._get_state[goog.typeOf(x__4412__auto__)];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = om.core._get_state["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_state__1.call(this, this$);
      case 2:
        return _get_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_state.cljs$core$IFn$_invoke$arity$1 = _get_state__1;
  _get_state.cljs$core$IFn$_invoke$arity$2 = _get_state__2;
  return _get_state;
}();
om.core.IGetRenderState = function() {
  var obj20766 = {};
  return obj20766;
}();
om.core._get_render_state = function() {
  var _get_render_state = null;
  var _get_render_state__1 = function(this$) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$1;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$1(this$);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = om.core._get_render_state[goog.typeOf(x__4412__auto__)];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = om.core._get_render_state["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_render_state__2 = function(this$, ks) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$2;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$2(this$, ks);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = om.core._get_render_state[goog.typeOf(x__4412__auto__)];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = om.core._get_render_state["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_render_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_render_state__1.call(this, this$);
      case 2:
        return _get_render_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_render_state.cljs$core$IFn$_invoke$arity$1 = _get_render_state__1;
  _get_render_state.cljs$core$IFn$_invoke$arity$2 = _get_render_state__2;
  return _get_render_state;
}();
om.core.ISetState = function() {
  var obj20768 = {};
  return obj20768;
}();
om.core._set_state_BANG_ = function() {
  var _set_state_BANG_ = null;
  var _set_state_BANG___3 = function(this$, val, render) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$3;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$3(this$, val, render);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4412__auto__)];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, val, render);
    }
  };
  var _set_state_BANG___4 = function(this$, ks, val, render) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$4;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$4(this$, ks, val, render);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4412__auto__)];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, ks, val, render);
    }
  };
  _set_state_BANG_ = function(this$, ks, val, render) {
    switch(arguments.length) {
      case 3:
        return _set_state_BANG___3.call(this, this$, ks, val);
      case 4:
        return _set_state_BANG___4.call(this, this$, ks, val, render);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = _set_state_BANG___3;
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$4 = _set_state_BANG___4;
  return _set_state_BANG_;
}();
om.core.IRenderQueue = function() {
  var obj20770 = {};
  return obj20770;
}();
om.core._get_queue = function _get_queue(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IRenderQueue$_get_queue$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_get_queue$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._get_queue[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._get_queue["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-get-queue", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._queue_render_BANG_ = function _queue_render_BANG_(this$, c) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2(this$, c);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._queue_render_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._queue_render_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-queue-render!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._empty_queue_BANG_ = function _empty_queue_BANG_(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._empty_queue_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._empty_queue_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-empty-queue!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IValue = function() {
  var obj20772 = {};
  return obj20772;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3756__auto__ = x;
    if (and__3756__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4412__auto__ = x == null ? null : x;
    return function() {
      var or__3768__auto__ = om.core._value[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._value["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj20774 = {};
  return obj20774;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3756__auto__ = cursor;
    if (and__3756__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4412__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3768__auto__ = om.core._path[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._path["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3756__auto__ = cursor;
    if (and__3756__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4412__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3768__auto__ = om.core._state[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._state["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj20776 = {};
  return obj20776;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3756__auto__ = value;
      if (and__3756__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4412__auto__ = value == null ? null : value;
      return function() {
        var or__3768__auto__ = om.core._to_cursor[goog.typeOf(x__4412__auto__)];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = om.core._to_cursor["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3756__auto__ = value;
      if (and__3756__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4412__auto__ = value == null ? null : value;
      return function() {
        var or__3768__auto__ = om.core._to_cursor[goog.typeOf(x__4412__auto__)];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = om.core._to_cursor["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  _to_cursor = function(value, state, path) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  return _to_cursor;
}();
om.core.ICursorDerive = function() {
  var obj20778 = {};
  return obj20778;
}();
om.core._derive = function _derive(cursor, derived, state, path) {
  if (function() {
    var and__3756__auto__ = cursor;
    if (and__3756__auto__) {
      return cursor.om$core$ICursorDerive$_derive$arity$4;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return cursor.om$core$ICursorDerive$_derive$arity$4(cursor, derived, state, path);
  } else {
    var x__4412__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3768__auto__ = om.core._derive[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._derive["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursorDerive.-derive", cursor);
        }
      }
    }().call(null, cursor, derived, state, path);
  }
};
om.core.ICursorDerive["_"] = true;
om.core._derive["_"] = function(this$, derived, state, path) {
  return om.core.to_cursor.call(null, derived, state, path);
};
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.state = function state(cursor) {
  return om.core._state.call(null, cursor);
};
om.core.ITransact = function() {
  var obj20780 = {};
  return obj20780;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, korks, f, tag) {
  if (function() {
    var and__3756__auto__ = cursor;
    if (and__3756__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$4;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$4(cursor, korks, f, tag);
  } else {
    var x__4412__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3768__auto__ = om.core._transact_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f, tag);
  }
};
om.core.INotify = function() {
  var obj20782 = {};
  return obj20782;
}();
om.core._listen_BANG_ = function _listen_BANG_(x, key, tx_listen) {
  if (function() {
    var and__3756__auto__ = x;
    if (and__3756__auto__) {
      return x.om$core$INotify$_listen_BANG_$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return x.om$core$INotify$_listen_BANG_$arity$3(x, key, tx_listen);
  } else {
    var x__4412__auto__ = x == null ? null : x;
    return function() {
      var or__3768__auto__ = om.core._listen_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._listen_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-listen!", x);
        }
      }
    }().call(null, x, key, tx_listen);
  }
};
om.core._unlisten_BANG_ = function _unlisten_BANG_(x, key) {
  if (function() {
    var and__3756__auto__ = x;
    if (and__3756__auto__) {
      return x.om$core$INotify$_unlisten_BANG_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return x.om$core$INotify$_unlisten_BANG_$arity$2(x, key);
  } else {
    var x__4412__auto__ = x == null ? null : x;
    return function() {
      var or__3768__auto__ = om.core._unlisten_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._unlisten_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-unlisten!", x);
        }
      }
    }().call(null, x, key);
  }
};
om.core._notify_BANG_ = function _notify_BANG_(x, tx_data, root_cursor) {
  if (function() {
    var and__3756__auto__ = x;
    if (and__3756__auto__) {
      return x.om$core$INotify$_notify_BANG_$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify_BANG_$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4412__auto__ = x == null ? null : x;
    return function() {
      var or__3768__auto__ = om.core._notify_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._notify_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify!", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.IRootProperties = function() {
  var obj20784 = {};
  return obj20784;
}();
om.core._set_property_BANG_ = function _set_property_BANG_(this$, id, p, val) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IRootProperties$_set_property_BANG_$arity$4;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IRootProperties$_set_property_BANG_$arity$4(this$, id, p, val);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._set_property_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._set_property_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootProperties.-set-property!", this$);
        }
      }
    }().call(null, this$, id, p, val);
  }
};
om.core._remove_property_BANG_ = function _remove_property_BANG_(this$, id, p) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IRootProperties$_remove_property_BANG_$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IRootProperties$_remove_property_BANG_$arity$3(this$, id, p);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._remove_property_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._remove_property_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootProperties.-remove-property!", this$);
        }
      }
    }().call(null, this$, id, p);
  }
};
om.core._remove_properties_BANG_ = function _remove_properties_BANG_(this$, id) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IRootProperties$_remove_properties_BANG_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IRootProperties$_remove_properties_BANG_$arity$2(this$, id);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._remove_properties_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._remove_properties_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootProperties.-remove-properties!", this$);
        }
      }
    }().call(null, this$, id);
  }
};
om.core._get_property = function _get_property(this$, id, p) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IRootProperties$_get_property$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IRootProperties$_get_property$arity$3(this$, id, p);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._get_property[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._get_property["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootProperties.-get-property", this$);
        }
      }
    }().call(null, this$, id, p);
  }
};
om.core.IRootKey = function() {
  var obj20786 = {};
  return obj20786;
}();
om.core._root_key = function _root_key(cursor) {
  if (function() {
    var and__3756__auto__ = cursor;
    if (and__3756__auto__) {
      return cursor.om$core$IRootKey$_root_key$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return cursor.om$core$IRootKey$_root_key$arity$1(cursor);
  } else {
    var x__4412__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3768__auto__ = om.core._root_key[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._root_key["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootKey.-root-key", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IAdapt = function() {
  var obj20788 = {};
  return obj20788;
}();
om.core._adapt = function _adapt(this$, other) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IAdapt$_adapt$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IAdapt$_adapt$arity$2(this$, other);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._adapt[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._adapt["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAdapt.-adapt", this$);
        }
      }
    }().call(null, this$, other);
  }
};
om.core.IAdapt["_"] = true;
om.core._adapt["_"] = function(_, other) {
  return other;
};
om.core.adapt = function adapt(x, other) {
  return om.core._adapt.call(null, x, other);
};
om.core.IOmRef = function() {
  var obj20790 = {};
  return obj20790;
}();
om.core._add_dep_BANG_ = function _add_dep_BANG_(this$, c) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IOmRef$_add_dep_BANG_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IOmRef$_add_dep_BANG_$arity$2(this$, c);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._add_dep_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._add_dep_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmRef.-add-dep!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._remove_dep_BANG_ = function _remove_dep_BANG_(this$, c) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IOmRef$_remove_dep_BANG_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IOmRef$_remove_dep_BANG_$arity$2(this$, c);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._remove_dep_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._remove_dep_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmRef.-remove-dep!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._refresh_deps_BANG_ = function _refresh_deps_BANG_(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IOmRef$_refresh_deps_BANG_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IOmRef$_refresh_deps_BANG_$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._refresh_deps_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._refresh_deps_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmRef.-refresh-deps!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._get_deps = function _get_deps(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IOmRef$_get_deps$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IOmRef$_get_deps$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._get_deps[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._get_deps["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmRef.-get-deps", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.transact_STAR_ = function transact_STAR_(state, cursor, korks, f, tag) {
  var old_state = cljs.core.deref.call(null, state);
  var path = cljs.core.into.call(null, om.core.path.call(null, cursor), korks);
  var ret = function() {
    var G__20792 = state;
    if (G__20792) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20792.om$core$IOmSwap$;
        }
      }())) {
        return true;
      } else {
        if (!G__20792.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__20792);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__20792);
    }
  }() ? om.core._om_swap_BANG_.call(null, state, cursor, korks, f, tag) : cljs.core.empty_QMARK_.call(null, path) ? cljs.core.swap_BANG_.call(null, state, f) : cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f);
  if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "defer", "om.core/defer", -1038866178))) {
    return null;
  } else {
    var tx_data = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "old-value", "old-value", 862546795), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 1087038368), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1039580704), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 
    -490349212), cljs.core.deref.call(null, state)], null);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  }
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__20794 = x;
  if (G__20794) {
    var bit__4449__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3768__auto__ = bit__4449__auto__;
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        return G__20794.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__20794.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__20794);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__20794);
  }
};
om.core.component_QMARK_ = function component_QMARK_(x) {
  return x["isOmComponent"];
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.ifn_QMARK_.call(null, c)) {
    return node.props.children = c.call(null, node);
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, x))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))))].join(""));
  }
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    return om.core._get_state.call(null, owner);
  };
  var get_state__2 = function(owner, korks) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_state.call(null, owner, ks);
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    if (owner == null) {
      return null;
    } else {
      return owner.props["__om_shared"];
    }
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4126__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var pending_state = temp__4126__auto__;
    var G__20796 = state;
    G__20796["__om_prev_state"] = state["__om_state"];
    G__20796["__om_state"] = pending_state;
    G__20796["__om_pending_state"] = null;
    return G__20796;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3768__auto__ = props;
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4126__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4126__auto__)) {
      var props_state = temp__4126__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3768__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.ref_changed_QMARK_ = function ref_changed_QMARK_(ref) {
  var val = om.core.value.call(null, ref);
  var val_SINGLEQUOTE_ = cljs.core.get_in.call(null, cljs.core.deref.call(null, om.core.state.call(null, ref)), om.core.path.call(null, ref), new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275));
  return cljs.core.not_EQ_.call(null, val, val_SINGLEQUOTE_);
};
om.core.update_refs = function update_refs(c) {
  var cstate = c.state;
  var refs = cstate["__om_refs"];
  if (cljs.core.count.call(null, refs) === 0) {
    return null;
  } else {
    return cstate["__om_refs"] = cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.filter.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, function(cstate, refs) {
      return function(ref) {
        var ref_val = om.core.value.call(null, ref);
        var ref_state = om.core.state.call(null, ref);
        var ref_path = om.core.path.call(null, ref);
        var ref_val_SINGLEQUOTE_ = cljs.core.get_in.call(null, cljs.core.deref.call(null, ref_state), ref_path, new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275));
        if (cljs.core.not_EQ_.call(null, ref_val, new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275))) {
          if (cljs.core.not_EQ_.call(null, ref_val, ref_val_SINGLEQUOTE_)) {
            return om.core.adapt.call(null, ref, om.core.to_cursor.call(null, ref_val_SINGLEQUOTE_, ref_state, ref_path));
          } else {
            return ref;
          }
        } else {
          return null;
        }
      };
    }(cstate, refs), refs)));
  }
};
om.core.pure_methods = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", -1983477981), new cljs.core.Keyword(null, "isOmComponent", "isOmComponent", -2070015162), new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), new cljs.core.Keyword(null, "componentWillReceiveProps", "componentWillReceiveProps", 559988974), new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), 
new cljs.core.Keyword(null, "render", "render", -1408033454), new cljs.core.Keyword(null, "componentWillUpdate", "componentWillUpdate", 657390932), new cljs.core.Keyword(null, "getInitialState", "getInitialState", 1541760916), new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 955710936), new cljs.core.Keyword(null, "getDisplayName", "getDisplayName", 1324429466), new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619)], [function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__20798 = c;
    if (G__20798) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20798.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__20798.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__20798);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__20798);
    }
  }()) {
    var state_20819 = this$.state;
    om.core.did_update.call(null, c, om.core.get_props.call(null, {"isOmComponent":true, "props":prev_props}), function() {
      var or__3768__auto__ = state_20819["__om_prev_state"];
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        return state_20819["__om_state"];
      }
    }());
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, true, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var cursor = this$.props["__om_cursor"];
  if (function() {
    var G__20799 = c;
    if (G__20799) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20799.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__20799.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__20799);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__20799);
    }
  }()) {
    om.core.will_unmount.call(null, c);
  } else {
  }
  var temp__4126__auto__ = cljs.core.seq.call(null, this$.state["__om_refs"]);
  if (temp__4126__auto__) {
    var refs = temp__4126__auto__;
    var seq__20800 = cljs.core.seq.call(null, refs);
    var chunk__20801 = null;
    var count__20802 = 0;
    var i__20803 = 0;
    while (true) {
      if (i__20803 < count__20802) {
        var ref = cljs.core._nth.call(null, chunk__20801, i__20803);
        om.core.unobserve.call(null, this$, ref);
        var G__20820 = seq__20800;
        var G__20821 = chunk__20801;
        var G__20822 = count__20802;
        var G__20823 = i__20803 + 1;
        seq__20800 = G__20820;
        chunk__20801 = G__20821;
        count__20802 = G__20822;
        i__20803 = G__20823;
        continue;
      } else {
        var temp__4126__auto____$1 = cljs.core.seq.call(null, seq__20800);
        if (temp__4126__auto____$1) {
          var seq__20800__$1 = temp__4126__auto____$1;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__20800__$1)) {
            var c__4555__auto__ = cljs.core.chunk_first.call(null, seq__20800__$1);
            var G__20824 = cljs.core.chunk_rest.call(null, seq__20800__$1);
            var G__20825 = c__4555__auto__;
            var G__20826 = cljs.core.count.call(null, c__4555__auto__);
            var G__20827 = 0;
            seq__20800 = G__20824;
            chunk__20801 = G__20825;
            count__20802 = G__20826;
            i__20803 = G__20827;
            continue;
          } else {
            var ref = cljs.core.first.call(null, seq__20800__$1);
            om.core.unobserve.call(null, this$, ref);
            var G__20828 = cljs.core.next.call(null, seq__20800__$1);
            var G__20829 = null;
            var G__20830 = 0;
            var G__20831 = 0;
            seq__20800 = G__20828;
            chunk__20801 = G__20829;
            count__20802 = G__20830;
            i__20803 = G__20831;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  } else {
    return null;
  }
}, function(next_props) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__20804 = c;
    if (G__20804) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20804.om$core$IWillReceiveProps$;
        }
      }())) {
        return true;
      } else {
        if (!G__20804.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__20804);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__20804);
    }
  }()) {
    return om.core.will_receive_props.call(null, c, om.core.get_props.call(null, {"isOmComponent":true, "props":next_props}));
  } else {
    return null;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var props = this$.props;
  var state = this$.state;
  var c = om.core.children.call(null, this$);
  om.core.merge_props_state.call(null, this$, next_props);
  if (function() {
    var G__20805 = c;
    if (G__20805) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20805.om$core$IShouldUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__20805.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__20805);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__20805);
    }
  }()) {
    return om.core.should_update.call(null, c, om.core.get_props.call(null, {"isOmComponent":true, "props":next_props}), om.core._get_state.call(null, this$));
  } else {
    var cursor = props["__om_cursor"];
    var next_cursor = next_props["__om_cursor"];
    if (cljs.core.not_EQ_.call(null, om.core._value.call(null, cursor), om.core._value.call(null, next_cursor))) {
      return true;
    } else {
      if (om.core.cursor_QMARK_.call(null, cursor) && om.core.cursor_QMARK_.call(null, next_cursor) && cljs.core.not_EQ_.call(null, om.core._path.call(null, cursor), om.core._path.call(null, next_cursor))) {
        return true;
      } else {
        if (cljs.core.not_EQ_.call(null, om.core._get_state.call(null, this$), om.core._get_render_state.call(null, this$))) {
          return true;
        } else {
          if (cljs.core.truth_(function() {
            var and__3756__auto__ = !(cljs.core.count.call(null, state["__om_refs"]) === 0);
            if (and__3756__auto__) {
              return cljs.core.some.call(null, function(and__3756__auto__, cursor, next_cursor, props, state, c, this$) {
                return function(p1__20797_SHARP_) {
                  return om.core.ref_changed_QMARK_.call(null, p1__20797_SHARP_);
                };
              }(and__3756__auto__, cursor, next_cursor, props, state, c, this$), state["__om_refs"]);
            } else {
              return and__3756__auto__;
            }
          }())) {
            return true;
          } else {
            if (!(props["__om_index"] === next_props["__om_index"])) {
              return true;
            } else {
              return false;
            }
          }
        }
      }
    }
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var _STAR_parent_STAR_20806 = om.core._STAR_parent_STAR_;
  var _STAR_state_STAR_20807 = om.core._STAR_state_STAR_;
  var _STAR_instrument_STAR_20808 = om.core._STAR_instrument_STAR_;
  var _STAR_descriptor_STAR_20809 = om.core._STAR_descriptor_STAR_;
  var _STAR_root_key_STAR_20810 = om.core._STAR_root_key_STAR_;
  om.core._STAR_parent_STAR_ = this$;
  om.core._STAR_state_STAR_ = props["__om_app_state"];
  om.core._STAR_instrument_STAR_ = props["__om_instrument"];
  om.core._STAR_descriptor_STAR_ = props["__om_descriptor"];
  om.core._STAR_root_key_STAR_ = props["__om_root_key"];
  try {
    if (function() {
      var G__20811 = c;
      if (G__20811) {
        var bit__4449__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3768__auto__ = bit__4449__auto__;
          if (cljs.core.truth_(or__3768__auto__)) {
            return or__3768__auto__;
          } else {
            return G__20811.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__20811.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__20811);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__20811);
      }
    }()) {
      return om.core.render.call(null, c);
    } else {
      if (function() {
        var G__20812 = c;
        if (G__20812) {
          var bit__4449__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3768__auto__ = bit__4449__auto__;
            if (cljs.core.truth_(or__3768__auto__)) {
              return or__3768__auto__;
            } else {
              return G__20812.om$core$IRenderProps$;
            }
          }())) {
            return true;
          } else {
            if (!G__20812.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderProps, G__20812);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderProps, G__20812);
        }
      }()) {
        return om.core.render_props.call(null, c, props["__om_cursor"], om.core.get_state.call(null, this$));
      } else {
        if (function() {
          var G__20813 = c;
          if (G__20813) {
            var bit__4449__auto__ = null;
            if (cljs.core.truth_(function() {
              var or__3768__auto__ = bit__4449__auto__;
              if (cljs.core.truth_(or__3768__auto__)) {
                return or__3768__auto__;
              } else {
                return G__20813.om$core$IRenderState$;
              }
            }())) {
              return true;
            } else {
              if (!G__20813.cljs$lang$protocol_mask$partition$) {
                return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__20813);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__20813);
          }
        }()) {
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } else {
          return c;
        }
      }
    }
  } finally {
    om.core._STAR_root_key_STAR_ = _STAR_root_key_STAR_20810;
    om.core._STAR_descriptor_STAR_ = _STAR_descriptor_STAR_20809;
    om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_20808;
    om.core._STAR_state_STAR_ = _STAR_state_STAR_20807;
    om.core._STAR_parent_STAR_ = _STAR_parent_STAR_20806;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var c_20832 = om.core.children.call(null, this$);
  if (function() {
    var G__20814 = c_20832;
    if (G__20814) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20814.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__20814.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__20814);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__20814);
    }
  }()) {
    var state_20833 = this$.state;
    om.core.will_update.call(null, c_20832, om.core.get_props.call(null, {"isOmComponent":true, "props":next_props}), om.core._get_state.call(null, this$));
  } else {
  }
  om.core.merge_pending_state.call(null, this$);
  return om.core.update_refs.call(null, this$);
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3768__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3768__auto__)) {
      return or__3768__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var id = (new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)).cljs$core$IFn$_invoke$arity$1(istate);
  var ret = {"__om_state":cljs.core.merge.call(null, function() {
    var G__20815 = c;
    if (G__20815) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20815.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__20815.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__20815);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__20815);
    }
  }() ? om.core.init_state.call(null, c) : null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693))), "__om_id":function() {
    var or__3768__auto__ = id;
    if (cljs.core.truth_(or__3768__auto__)) {
      return or__3768__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }()};
  props["__om_init_state"] = null;
  return ret;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var cursor = this$.props["__om_cursor"];
  if (function() {
    var G__20816 = c;
    if (G__20816) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20816.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__20816.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__20816);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__20816);
    }
  }()) {
    return om.core.did_mount.call(null, c);
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__20817 = c;
    if (G__20817) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20817.om$core$IDisplayName$;
        }
      }())) {
        return true;
      } else {
        if (!G__20817.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__20817);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__20817);
    }
  }()) {
    return om.core.display_name.call(null, c);
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_20834 = om.core.children.call(null, this$);
  if (function() {
    var G__20818 = c_20834;
    if (G__20818) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20818.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__20818.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__20818);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__20818);
    }
  }()) {
    om.core.will_mount.call(null, c_20834);
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}]);
om.core.specify_state_methods_BANG_ = function specify_state_methods_BANG_(obj) {
  var x20836 = obj;
  x20836.om$core$IGetState$ = true;
  x20836.om$core$IGetState$_get_state$arity$1 = function(x20836) {
    return function(this$) {
      var this$__$1 = this;
      var state = this$__$1.state;
      var or__3768__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        return state["__om_state"];
      }
    };
  }(x20836);
  x20836.om$core$IGetState$_get_state$arity$2 = function(x20836) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x20836);
  x20836.om$core$IGetRenderState$ = true;
  x20836.om$core$IGetRenderState$_get_render_state$arity$1 = function(x20836) {
    return function(this$) {
      var this$__$1 = this;
      return this$__$1.state["__om_state"];
    };
  }(x20836);
  x20836.om$core$IGetRenderState$_get_render_state$arity$2 = function(x20836) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x20836);
  x20836.om$core$ISetState$ = true;
  x20836.om$core$ISetState$_set_state_BANG_$arity$3 = function(x20836) {
    return function(this$, val, render) {
      var this$__$1 = this;
      var props = this$__$1.props;
      var app_state = props["__om_app_state"];
      this$__$1.state["__om_pending_state"] = val;
      if (cljs.core.truth_(function() {
        var and__3756__auto__ = !(app_state == null);
        if (and__3756__auto__) {
          return render;
        } else {
          return and__3756__auto__;
        }
      }())) {
        return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
      } else {
        return null;
      }
    };
  }(x20836);
  x20836.om$core$ISetState$_set_state_BANG_$arity$4 = function(x20836) {
    return function(this$, ks, val, render) {
      var this$__$1 = this;
      var props = this$__$1.props;
      var state = this$__$1.state;
      var pstate = om.core._get_state.call(null, this$__$1);
      var app_state = props["__om_app_state"];
      state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, ks, val);
      if (cljs.core.truth_(function() {
        var and__3756__auto__ = !(app_state == null);
        if (and__3756__auto__) {
          return render;
        } else {
          return and__3756__auto__;
        }
      }())) {
        return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
      } else {
        return null;
      }
    };
  }(x20836);
  return x20836;
};
om.core.pure_descriptor = om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods));
om.core.react_id = function react_id(x) {
  var id = x["_rootNodeID"];
  if (cljs.core.truth_(id)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "id", "id", 252129435, null)))].join(""));
  }
  return id;
};
om.core.get_gstate = function get_gstate(owner) {
  return owner.props["__om_app_state"];
};
om.core.no_local_merge_pending_state = function no_local_merge_pending_state(owner) {
  var gstate = om.core.get_gstate.call(null, owner);
  var spath = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, owner)], null);
  var states = cljs.core.get_in.call(null, cljs.core.deref.call(null, gstate), spath);
  if (cljs.core.truth_((new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973)).cljs$core$IFn$_invoke$arity$1(states))) {
    return cljs.core.swap_BANG_.call(null, gstate, cljs.core.update_in, spath, function(gstate, spath, states) {
      return function(states__$1) {
        return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, cljs.core.assoc.call(null, states__$1, new cljs.core.Keyword(null, "previous-state", "previous-state", 1888227923), (new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)).cljs$core$IFn$_invoke$arity$1(states__$1)), new cljs.core.Keyword(null, "render-state", "render-state", 2053902270), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)).cljs$core$IFn$_invoke$arity$1(states__$1), 
        (new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973)).cljs$core$IFn$_invoke$arity$1(states__$1))), new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973));
      };
    }(gstate, spath, states));
  } else {
    return null;
  }
};
om.core.no_local_state_methods = cljs.core.assoc.call(null, om.core.pure_methods, new cljs.core.Keyword(null, "getInitialState", "getInitialState", 1541760916), function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3768__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3768__auto__)) {
      return or__3768__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var om_id = function() {
    var or__3768__auto__ = (new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)).cljs$core$IFn$_invoke$arity$1(istate);
    if (cljs.core.truth_(or__3768__auto__)) {
      return or__3768__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }();
  var state = cljs.core.merge.call(null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)), function() {
    var G__20837 = c;
    if (G__20837) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20837.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__20837.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__20837);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__20837);
    }
  }() ? om.core.init_state.call(null, c) : null);
  var spath = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$), new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)], null);
  props["__om_init_state"] = null;
  cljs.core.swap_BANG_.call(null, om.core.get_gstate.call(null, this$), cljs.core.assoc_in, spath, state);
  return{"__om_id":om_id};
}, new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619), function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_20846 = om.core.children.call(null, this$);
  if (function() {
    var G__20838 = c_20846;
    if (G__20838) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20838.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__20838.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__20838);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__20838);
    }
  }()) {
    om.core.will_mount.call(null, c_20846);
  } else {
  }
  return om.core.no_local_merge_pending_state.call(null, this$);
}, new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__20839 = c;
    if (G__20839) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20839.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__20839.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__20839);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__20839);
    }
  }()) {
    om.core.will_unmount.call(null, c);
  } else {
  }
  cljs.core.swap_BANG_.call(null, om.core.get_gstate.call(null, this$), cljs.core.dissoc, new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$));
  var temp__4126__auto__ = cljs.core.seq.call(null, this$.state["__om_refs"]);
  if (temp__4126__auto__) {
    var refs = temp__4126__auto__;
    var seq__20840 = cljs.core.seq.call(null, refs);
    var chunk__20841 = null;
    var count__20842 = 0;
    var i__20843 = 0;
    while (true) {
      if (i__20843 < count__20842) {
        var ref = cljs.core._nth.call(null, chunk__20841, i__20843);
        om.core.unobserve.call(null, this$, ref);
        var G__20847 = seq__20840;
        var G__20848 = chunk__20841;
        var G__20849 = count__20842;
        var G__20850 = i__20843 + 1;
        seq__20840 = G__20847;
        chunk__20841 = G__20848;
        count__20842 = G__20849;
        i__20843 = G__20850;
        continue;
      } else {
        var temp__4126__auto____$1 = cljs.core.seq.call(null, seq__20840);
        if (temp__4126__auto____$1) {
          var seq__20840__$1 = temp__4126__auto____$1;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__20840__$1)) {
            var c__4555__auto__ = cljs.core.chunk_first.call(null, seq__20840__$1);
            var G__20851 = cljs.core.chunk_rest.call(null, seq__20840__$1);
            var G__20852 = c__4555__auto__;
            var G__20853 = cljs.core.count.call(null, c__4555__auto__);
            var G__20854 = 0;
            seq__20840 = G__20851;
            chunk__20841 = G__20852;
            count__20842 = G__20853;
            i__20843 = G__20854;
            continue;
          } else {
            var ref = cljs.core.first.call(null, seq__20840__$1);
            om.core.unobserve.call(null, this$, ref);
            var G__20855 = cljs.core.next.call(null, seq__20840__$1);
            var G__20856 = null;
            var G__20857 = 0;
            var G__20858 = 0;
            seq__20840 = G__20855;
            chunk__20841 = G__20856;
            count__20842 = G__20857;
            i__20843 = G__20858;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  } else {
    return null;
  }
}, new cljs.core.Keyword(null, "componentWillUpdate", "componentWillUpdate", 657390932), function(next_props, next_state) {
  var this$ = this;
  var props_20859 = this$.props;
  var c_20860 = om.core.children.call(null, this$);
  if (function() {
    var G__20844 = c_20860;
    if (G__20844) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20844.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__20844.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__20844);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__20844);
    }
  }()) {
    var state_20861 = this$.state;
    om.core.will_update.call(null, c_20860, om.core.get_props.call(null, {"isOmComponent":true, "props":next_props}), om.core._get_state.call(null, this$));
  } else {
  }
  om.core.no_local_merge_pending_state.call(null, this$);
  return om.core.update_refs.call(null, this$);
}, new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", -1983477981), function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var gstate = om.core.get_gstate.call(null, this$);
  var states = cljs.core.get_in.call(null, cljs.core.deref.call(null, gstate), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$)], null));
  var spath = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$)], null);
  if (function() {
    var G__20845 = c;
    if (G__20845) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20845.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__20845.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__20845);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__20845);
    }
  }()) {
    var state_20862 = this$.state;
    om.core.did_update.call(null, c, om.core.get_props.call(null, {"isOmComponent":true, "props":prev_props}), function() {
      var or__3768__auto__ = (new cljs.core.Keyword(null, "previous-state", "previous-state", 1888227923)).cljs$core$IFn$_invoke$arity$1(states);
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        return(new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)).cljs$core$IFn$_invoke$arity$1(states);
      }
    }());
  } else {
  }
  if (cljs.core.truth_((new cljs.core.Keyword(null, "previous-state", "previous-state", 1888227923)).cljs$core$IFn$_invoke$arity$1(states))) {
    return cljs.core.swap_BANG_.call(null, gstate, cljs.core.update_in, spath, cljs.core.dissoc, new cljs.core.Keyword(null, "previous-state", "previous-state", 1888227923));
  } else {
    return null;
  }
});
om.core.no_local_descriptor = function no_local_descriptor(methods$) {
  var x20864 = cljs.core.clj__GT_js.call(null, methods$);
  x20864.om$core$IGetState$ = true;
  x20864.om$core$IGetState$_get_state$arity$1 = function(x20864) {
    return function(this$) {
      var this$__$1 = this;
      var spath = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$__$1)], null);
      var states = cljs.core.get_in.call(null, cljs.core.deref.call(null, om.core.get_gstate.call(null, this$__$1)), spath);
      var or__3768__auto__ = (new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973)).cljs$core$IFn$_invoke$arity$1(states);
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        return(new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)).cljs$core$IFn$_invoke$arity$1(states);
      }
    };
  }(x20864);
  x20864.om$core$IGetState$_get_state$arity$2 = function(x20864) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x20864);
  x20864.om$core$IGetRenderState$ = true;
  x20864.om$core$IGetRenderState$_get_render_state$arity$1 = function(x20864) {
    return function(this$) {
      var this$__$1 = this;
      var spath = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$__$1), new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)], null);
      return cljs.core.get_in.call(null, cljs.core.deref.call(null, om.core.get_gstate.call(null, this$__$1)), spath);
    };
  }(x20864);
  x20864.om$core$IGetRenderState$_get_render_state$arity$2 = function(x20864) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x20864);
  x20864.om$core$ISetState$ = true;
  x20864.om$core$ISetState$_set_state_BANG_$arity$3 = function(x20864) {
    return function(this$, val, render) {
      var this$__$1 = this;
      var gstate = om.core.get_gstate.call(null, this$__$1);
      var spath = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$__$1), new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973)], null);
      cljs.core.swap_BANG_.call(null, om.core.get_gstate.call(null, this$__$1), cljs.core.assoc_in, spath, val);
      if (cljs.core.truth_(function() {
        var and__3756__auto__ = !(gstate == null);
        if (and__3756__auto__) {
          return render;
        } else {
          return and__3756__auto__;
        }
      }())) {
        return om.core._queue_render_BANG_.call(null, gstate, this$__$1);
      } else {
        return null;
      }
    };
  }(x20864);
  x20864.om$core$ISetState$_set_state_BANG_$arity$4 = function(x20864) {
    return function(this$, ks, val, render) {
      var this$__$1 = this;
      return om.core._set_state_BANG_.call(null, this$__$1, cljs.core.assoc_in.call(null, om.core._get_state.call(null, this$__$1), ks, val), render);
    };
  }(x20864);
  return x20864;
};
om.core.valid_QMARK_ = function valid_QMARK_(x) {
  if (function() {
    var G__20866 = x;
    if (G__20866) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20866.om$core$ICursor$;
        }
      }())) {
        return true;
      } else {
        if (!G__20866.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__20866);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__20866);
    }
  }()) {
    return!cljs.core.keyword_identical_QMARK_.call(null, cljs.core.deref.call(null, x), new cljs.core.Keyword("om.core", "invalid", "om.core/invalid", 1948827993));
  } else {
    return true;
  }
};
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2163640079;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var v = cljs.core._lookup.call(null, self__.value, k, new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275));
  if (!cljs.core._EQ_.call(null, v, new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275))) {
    return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k));
  } else {
    return not_found;
  }
};
om.core.MapCursor.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._kv_reduce.call(null, self__.value, f, init);
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._pr_writer.call(null, self__.value, writer, opts);
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.meta.call(null, self__.value);
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._count.call(null, self__.value);
};
om.core.MapCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash.call(null, self__.value);
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core.cursor_QMARK_.call(null, other)) {
    return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
  } else {
    return cljs.core._EQ_.call(null, self__.value, other);
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.MapCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.count.call(null, self__.value) > 0) {
    return cljs.core.map.call(null, function(this$__$1) {
      return function(p__20868) {
        var vec__20869 = p__20868;
        var k = cljs.core.nth.call(null, vec__20869, 0, null);
        var v = cljs.core.nth.call(null, vec__20869, 1, null);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
      };
    }(this$__$1), self__.value);
  } else {
    return null;
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
};
om.core.MapCursor.prototype.call = function() {
  var G__20870 = null;
  var G__20870__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k);
  };
  var G__20870__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k, not_found);
  };
  G__20870 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20870__2.call(this, self__, k);
      case 3:
        return G__20870__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20870.cljs$core$IFn$_invoke$arity$2 = G__20870__2;
  G__20870.cljs$core$IFn$_invoke$arity$3 = G__20870__3;
  return G__20870;
}();
om.core.MapCursor.prototype.apply = function(self__, args20867) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args20867)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k, not_found);
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path, new cljs.core.Keyword("om.core", "invalid", "om.core/invalid", 1948827993));
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write.call(null, writer__4356__auto__, "om.core/MapCursor");
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2180424479;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._nth.call(null, this$__$1, n, null);
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._nth.call(null, this$__$1, n, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._kv_reduce.call(null, self__.value, f, init);
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (n < cljs.core._count.call(null, self__.value)) {
    return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n, not_found), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    return not_found;
  }
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._pr_writer.call(null, self__.value, writer, opts);
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.meta.call(null, self__.value);
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._count.call(null, self__.value);
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return om.core._derive.call(null, this$__$1, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return om.core._derive.call(null, this$__$1, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash.call(null, self__.value);
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core.cursor_QMARK_.call(null, other)) {
    return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
  } else {
    return cljs.core._EQ_.call(null, self__.value, other);
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.IndexedCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, n, v) {
  var self__ = this;
  var this$__$1 = this;
  return om.core._derive.call(null, this$__$1, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.count.call(null, self__.value) > 0) {
    return cljs.core.map.call(null, function(this$__$1) {
      return function(v, i) {
        return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, i));
      };
    }(this$__$1), self__.value, cljs.core.range.call(null));
  } else {
    return null;
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.call = function() {
  var G__20872 = null;
  var G__20872__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k);
  };
  var G__20872__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k, not_found);
  };
  G__20872 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20872__2.call(this, self__, k);
      case 3:
        return G__20872__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20872.cljs$core$IFn$_invoke$arity$2 = G__20872__2;
  G__20872.cljs$core$IFn$_invoke$arity$3 = G__20872__3;
  return G__20872;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args20871) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args20871)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path, new cljs.core.Keyword("om.core", "invalid", "om.core/invalid", 1948827993));
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write.call(null, writer__4356__auto__, "om.core/IndexedCursor");
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path) {
  var x20874 = cljs.core.clone.call(null, val);
  x20874.cljs$core$IEquiv$ = true;
  x20874.cljs$core$IEquiv$_equiv$arity$2 = function(x20874) {
    return function(_, other) {
      var ___$1 = this;
      if (om.core.cursor_QMARK_.call(null, other)) {
        return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
      } else {
        return cljs.core._EQ_.call(null, val, other);
      }
    };
  }(x20874);
  x20874.om$core$ITransact$ = true;
  x20874.om$core$ITransact$_transact_BANG_$arity$4 = function(x20874) {
    return function(this$, korks, f, tag) {
      var this$__$1 = this;
      return om.core.transact_STAR_.call(null, state, this$__$1, korks, f, tag);
    };
  }(x20874);
  x20874.om$core$ICursor$ = true;
  x20874.om$core$ICursor$_path$arity$1 = function(x20874) {
    return function(_) {
      var ___$1 = this;
      return path;
    };
  }(x20874);
  x20874.om$core$ICursor$_state$arity$1 = function(x20874) {
    return function(_) {
      var ___$1 = this;
      return state;
    };
  }(x20874);
  x20874.cljs$core$IDeref$ = true;
  x20874.cljs$core$IDeref$_deref$arity$1 = function(x20874) {
    return function(this$) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path, new cljs.core.Keyword("om.core", "invalid", "om.core/invalid", 1948827993));
    };
  }(x20874);
  return x20874;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__3 = function(val, state, path) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__20877 = val;
        if (G__20877) {
          var bit__4449__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3768__auto__ = bit__4449__auto__;
            if (cljs.core.truth_(or__3768__auto__)) {
              return or__3768__auto__;
            } else {
              return G__20877.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__20877.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__20877);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__20877);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path);
          } else {
            if (function() {
              var G__20878 = val;
              if (G__20878) {
                var bit__4449__auto__ = G__20878.cljs$lang$protocol_mask$partition1$ & 8192;
                if (bit__4449__auto__ || G__20878.cljs$core$ICloneable$) {
                  return true;
                } else {
                  if (!G__20878.cljs$lang$protocol_mask$partition1$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__20878);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__20878);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path);
            } else {
              return val;
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  return to_cursor;
}();
om.core.notify_STAR_ = function notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify_BANG_.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.root_cursor = function root_cursor(atom) {
  if (function() {
    var G__20880 = atom;
    if (G__20880) {
      var bit__4449__auto__ = G__20880.cljs$lang$protocol_mask$partition0$ & 32768;
      if (bit__4449__auto__ || G__20880.cljs$core$IDeref$) {
        return true;
      } else {
        if (!G__20880.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__20880);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__20880);
    }
  }()) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IDeref", "IDeref", 1738423197, null), new cljs.core.Symbol(null, "atom", "atom", 1243487874, null))))].join(""));
  }
  return om.core.to_cursor.call(null, cljs.core.deref.call(null, atom), atom, cljs.core.PersistentVector.EMPTY);
};
om.core._refs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.ref_sub_cursor = function ref_sub_cursor(x, parent) {
  var x20882 = cljs.core.clone.call(null, x);
  x20882.om$core$ITransact$ = true;
  x20882.om$core$ITransact$_transact_BANG_$arity$4 = function(x20882) {
    return function(cursor, korks, f, tag) {
      var cursor__$1 = this;
      om.core.commit_BANG_.call(null, cursor__$1, korks, f);
      return om.core._refresh_deps_BANG_.call(null, parent);
    };
  }(x20882);
  x20882.om$core$ICursorDerive$ = true;
  x20882.om$core$ICursorDerive$_derive$arity$4 = function(x20882) {
    return function(this$, derived, state, path) {
      var this$__$1 = this;
      var cursor_SINGLEQUOTE_ = om.core.to_cursor.call(null, derived, state, path);
      if (om.core.cursor_QMARK_.call(null, cursor_SINGLEQUOTE_)) {
        return om.core.adapt.call(null, this$__$1, cursor_SINGLEQUOTE_);
      } else {
        return cursor_SINGLEQUOTE_;
      }
    };
  }(x20882);
  x20882.om$core$IAdapt$ = true;
  x20882.om$core$IAdapt$_adapt$arity$2 = function(x20882) {
    return function(this$, other) {
      var this$__$1 = this;
      return ref_sub_cursor.call(null, om.core.adapt.call(null, x, other), parent);
    };
  }(x20882);
  x20882.cljs$core$ICloneable$ = true;
  x20882.cljs$core$ICloneable$_clone$arity$1 = function(x20882) {
    return function(this$) {
      var this$__$1 = this;
      return ref_sub_cursor.call(null, cljs.core.clone.call(null, x), parent);
    };
  }(x20882);
  return x20882;
};
om.core.ref_cursor = function ref_cursor(cursor) {
  if (om.core.cursor_QMARK_.call(null, cursor)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
  }
  if (function() {
    var G__20889 = cursor;
    if (G__20889) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20889.om$core$IOmRef$;
        }
      }())) {
        return true;
      } else {
        if (!G__20889.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmRef, G__20889);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmRef, G__20889);
    }
  }()) {
    return cursor;
  } else {
    var path = om.core.path.call(null, cursor);
    var storage = cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, om.core._refs, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null), cljs.core.fnil.call(null, cljs.core.identity, cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY))), path);
    var x20890 = cljs.core.clone.call(null, cursor);
    x20890.om$core$ITransact$ = true;
    x20890.om$core$ITransact$_transact_BANG_$arity$4 = function(x20890, path, storage) {
      return function(cursor__$1, korks, f, tag) {
        var cursor__$2 = this;
        om.core.commit_BANG_.call(null, cursor__$2, korks, f);
        return om.core._refresh_deps_BANG_.call(null, cursor__$2);
      };
    }(x20890, path, storage);
    x20890.om$core$IOmRef$ = true;
    x20890.om$core$IOmRef$_add_dep_BANG_$arity$2 = function(x20890, path, storage) {
      return function(_, c) {
        var ___$1 = this;
        return cljs.core.swap_BANG_.call(null, storage, cljs.core.assoc, om.core.id.call(null, c), c);
      };
    }(x20890, path, storage);
    x20890.om$core$IOmRef$_remove_dep_BANG_$arity$2 = function(x20890, path, storage) {
      return function(_, c) {
        var ___$1 = this;
        var m = cljs.core.swap_BANG_.call(null, storage, cljs.core.dissoc, om.core.id.call(null, c));
        if (cljs.core.count.call(null, m) === 0) {
          return cljs.core.swap_BANG_.call(null, om.core._refs, cljs.core.dissoc, path);
        } else {
          return null;
        }
      };
    }(x20890, path, storage);
    x20890.om$core$IOmRef$_refresh_deps_BANG_$arity$1 = function(x20890, path, storage) {
      return function(_) {
        var ___$1 = this;
        var seq__20891 = cljs.core.seq.call(null, cljs.core.vals.call(null, cljs.core.deref.call(null, storage)));
        var chunk__20892 = null;
        var count__20893 = 0;
        var i__20894 = 0;
        while (true) {
          if (i__20894 < count__20893) {
            var c = cljs.core._nth.call(null, chunk__20892, i__20894);
            om.core._queue_render_BANG_.call(null, om.core.state.call(null, cursor), c);
            var G__20895 = seq__20891;
            var G__20896 = chunk__20892;
            var G__20897 = count__20893;
            var G__20898 = i__20894 + 1;
            seq__20891 = G__20895;
            chunk__20892 = G__20896;
            count__20893 = G__20897;
            i__20894 = G__20898;
            continue;
          } else {
            var temp__4126__auto__ = cljs.core.seq.call(null, seq__20891);
            if (temp__4126__auto__) {
              var seq__20891__$1 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__20891__$1)) {
                var c__4555__auto__ = cljs.core.chunk_first.call(null, seq__20891__$1);
                var G__20899 = cljs.core.chunk_rest.call(null, seq__20891__$1);
                var G__20900 = c__4555__auto__;
                var G__20901 = cljs.core.count.call(null, c__4555__auto__);
                var G__20902 = 0;
                seq__20891 = G__20899;
                chunk__20892 = G__20900;
                count__20893 = G__20901;
                i__20894 = G__20902;
                continue;
              } else {
                var c = cljs.core.first.call(null, seq__20891__$1);
                om.core._queue_render_BANG_.call(null, om.core.state.call(null, cursor), c);
                var G__20903 = cljs.core.next.call(null, seq__20891__$1);
                var G__20904 = null;
                var G__20905 = 0;
                var G__20906 = 0;
                seq__20891 = G__20903;
                chunk__20892 = G__20904;
                count__20893 = G__20905;
                i__20894 = G__20906;
                continue;
              }
            } else {
              return null;
            }
          }
          break;
        }
      };
    }(x20890, path, storage);
    x20890.om$core$IOmRef$_get_deps$arity$1 = function(x20890, path, storage) {
      return function(_) {
        var ___$1 = this;
        return cljs.core.deref.call(null, storage);
      };
    }(x20890, path, storage);
    x20890.om$core$ICursorDerive$ = true;
    x20890.om$core$ICursorDerive$_derive$arity$4 = function(x20890, path, storage) {
      return function(this$, derived, state, path__$1) {
        var this$__$1 = this;
        var cursor_SINGLEQUOTE_ = om.core.to_cursor.call(null, derived, state, path__$1);
        if (om.core.cursor_QMARK_.call(null, cursor_SINGLEQUOTE_)) {
          return om.core.ref_sub_cursor.call(null, cursor_SINGLEQUOTE_, this$__$1);
        } else {
          return cursor_SINGLEQUOTE_;
        }
      };
    }(x20890, path, storage);
    return x20890;
  }
};
om.core.add_ref_to_component_BANG_ = function add_ref_to_component_BANG_(c, ref) {
  var state = c.state;
  var refs = function() {
    var or__3768__auto__ = state["__om_refs"];
    if (cljs.core.truth_(or__3768__auto__)) {
      return or__3768__auto__;
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  }();
  if (cljs.core.contains_QMARK_.call(null, refs, ref)) {
    return null;
  } else {
    return state["__om_refs"] = cljs.core.conj.call(null, refs, ref);
  }
};
om.core.remove_ref_from_component_BANG_ = function remove_ref_from_component_BANG_(c, ref) {
  var state = c.state;
  var refs = state["__om_refs"];
  if (cljs.core.contains_QMARK_.call(null, refs, ref)) {
    return state["__om_refs"] = cljs.core.disj.call(null, refs, ref);
  } else {
    return null;
  }
};
om.core.observe = function observe(c, ref) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  if (om.core.cursor_QMARK_.call(null, ref)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))].join(""));
  }
  om.core.add_ref_to_component_BANG_.call(null, c, ref);
  om.core._add_dep_BANG_.call(null, ref, c);
  return ref;
};
om.core.unobserve = function unobserve(c, ref) {
  om.core.remove_ref_from_component_BANG_.call(null, c, ref);
  om.core._remove_dep_BANG_.call(null, ref, c);
  return ref;
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.get_renderT = function get_renderT(state) {
  var or__3768__auto__ = state.om$render$T;
  if (cljs.core.truth_(or__3768__auto__)) {
    return or__3768__auto__;
  } else {
    return 0;
  }
};
om.core.render_all = function() {
  var render_all = null;
  var render_all__0 = function() {
    return render_all.call(null, null);
  };
  var render_all__1 = function(state) {
    om.core.refresh_queued = false;
    var seq__20911_20915 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
    var chunk__20912_20916 = null;
    var count__20913_20917 = 0;
    var i__20914_20918 = 0;
    while (true) {
      if (i__20914_20918 < count__20913_20917) {
        var f_20919 = cljs.core._nth.call(null, chunk__20912_20916, i__20914_20918);
        f_20919.call(null);
        var G__20920 = seq__20911_20915;
        var G__20921 = chunk__20912_20916;
        var G__20922 = count__20913_20917;
        var G__20923 = i__20914_20918 + 1;
        seq__20911_20915 = G__20920;
        chunk__20912_20916 = G__20921;
        count__20913_20917 = G__20922;
        i__20914_20918 = G__20923;
        continue;
      } else {
        var temp__4126__auto___20924 = cljs.core.seq.call(null, seq__20911_20915);
        if (temp__4126__auto___20924) {
          var seq__20911_20925__$1 = temp__4126__auto___20924;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__20911_20925__$1)) {
            var c__4555__auto___20926 = cljs.core.chunk_first.call(null, seq__20911_20925__$1);
            var G__20927 = cljs.core.chunk_rest.call(null, seq__20911_20925__$1);
            var G__20928 = c__4555__auto___20926;
            var G__20929 = cljs.core.count.call(null, c__4555__auto___20926);
            var G__20930 = 0;
            seq__20911_20915 = G__20927;
            chunk__20912_20916 = G__20928;
            count__20913_20917 = G__20929;
            i__20914_20918 = G__20930;
            continue;
          } else {
            var f_20931 = cljs.core.first.call(null, seq__20911_20925__$1);
            f_20931.call(null);
            var G__20932 = cljs.core.next.call(null, seq__20911_20925__$1);
            var G__20933 = null;
            var G__20934 = 0;
            var G__20935 = 0;
            seq__20911_20915 = G__20932;
            chunk__20912_20916 = G__20933;
            count__20913_20917 = G__20934;
            i__20914_20918 = G__20935;
            continue;
          }
        } else {
        }
      }
      break;
    }
    if (state == null) {
      return null;
    } else {
      return state.om$render$T = om.core.get_renderT.call(null, state) + 1;
    }
  };
  render_all = function(state) {
    switch(arguments.length) {
      case 0:
        return render_all__0.call(this);
      case 1:
        return render_all__1.call(this, state);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  render_all.cljs$core$IFn$_invoke$arity$0 = render_all__0;
  render_all.cljs$core$IFn$_invoke$arity$1 = render_all__1;
  return render_all;
}();
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_component_QMARK_ = function valid_component_QMARK_(x, f) {
  if (function() {
    var or__3768__auto__ = function() {
      var G__20942 = x;
      if (G__20942) {
        var bit__4449__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3768__auto__ = bit__4449__auto__;
          if (cljs.core.truth_(or__3768__auto__)) {
            return or__3768__auto__;
          } else {
            return G__20942.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__20942.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__20942);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__20942);
      }
    }();
    if (or__3768__auto__) {
      return or__3768__auto__;
    } else {
      var or__3768__auto____$1 = function() {
        var G__20944 = x;
        if (G__20944) {
          var bit__4449__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3768__auto____$1 = bit__4449__auto__;
            if (cljs.core.truth_(or__3768__auto____$1)) {
              return or__3768__auto____$1;
            } else {
              return G__20944.om$core$IRenderProps$;
            }
          }())) {
            return true;
          } else {
            if (!G__20944.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderProps, G__20944);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderProps, G__20944);
        }
      }();
      if (or__3768__auto____$1) {
        return or__3768__auto____$1;
      } else {
        var G__20945 = x;
        if (G__20945) {
          var bit__4449__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3768__auto____$2 = bit__4449__auto__;
            if (cljs.core.truth_(or__3768__auto____$2)) {
              return or__3768__auto____$2;
            } else {
              return G__20945.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__20945.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__20945);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__20945);
        }
      }
    }
  }()) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Invalid Om component fn, "), cljs.core.str(f.name), cljs.core.str(" does not return valid instance")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRender", "IRender", 590822196, null), new cljs.core.Symbol(null, 
    "x", "x", -555367584, null)), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRenderProps", "IRenderProps", 2115139472, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRenderState", "IRenderState", -897673898, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))))].join(""));
  }
};
om.core.valid_opts_QMARK_ = function valid_opts_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "instrument", "instrument", -960698844), null, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), null, new cljs.core.Keyword(null, "key", "key", -1516042587), null, new cljs.core.Keyword(null, "init-state", 
  "init-state", 1450863212), null, new cljs.core.Keyword(null, "state", "state", -1988618099), null, new cljs.core.Keyword(null, "key-fn", "key-fn", -636154479), null, new cljs.core.Keyword(null, "opts", "opts", 155075701), null, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), null, new cljs.core.Keyword(null, "shared", "shared", -384145993), null], null), null), cljs.core.keys.call(null, m));
};
om.core.id = function id(owner) {
  return owner.state["__om_id"];
};
om.core.get_descriptor = function() {
  var get_descriptor = null;
  var get_descriptor__1 = function(f) {
    return get_descriptor.call(null, f, null);
  };
  var get_descriptor__2 = function(f, descriptor) {
    if (f["om$descriptor"] == null) {
      f["om$descriptor"] = React.createFactory(React.createClass(function() {
        var or__3768__auto__ = descriptor;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = om.core._STAR_descriptor_STAR_;
          if (cljs.core.truth_(or__3768__auto____$1)) {
            return or__3768__auto____$1;
          } else {
            return om.core.pure_descriptor;
          }
        }
      }()));
    } else {
    }
    return f["om$descriptor"];
  };
  get_descriptor = function(f, descriptor) {
    switch(arguments.length) {
      case 1:
        return get_descriptor__1.call(this, f);
      case 2:
        return get_descriptor__2.call(this, f, descriptor);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_descriptor.cljs$core$IFn$_invoke$arity$1 = get_descriptor__1;
  get_descriptor.cljs$core$IFn$_invoke$arity$2 = get_descriptor__2;
  return get_descriptor;
}();
om.core.getf = function() {
  var getf = null;
  var getf__2 = function(f, cursor) {
    if (f instanceof cljs.core.MultiFn) {
      var dv = f.dispatch_fn.call(null, cursor, null);
      return cljs.core.get_method.call(null, f, dv);
    } else {
      return f;
    }
  };
  var getf__3 = function(f, cursor, opts) {
    if (f instanceof cljs.core.MultiFn) {
      var dv = f.dispatch_fn.call(null, cursor, null, opts);
      return cljs.core.get_method.call(null, f, dv);
    } else {
      return f;
    }
  };
  getf = function(f, cursor, opts) {
    switch(arguments.length) {
      case 2:
        return getf__2.call(this, f, cursor);
      case 3:
        return getf__3.call(this, f, cursor, opts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  getf.cljs$core$IFn$_invoke$arity$2 = getf__2;
  getf.cljs$core$IFn$_invoke$arity$3 = getf__3;
  return getf;
}();
om.core.build_STAR_ = function() {
  var build_STAR_ = null;
  var build_STAR___2 = function(f, cursor) {
    return build_STAR_.call(null, f, cursor, null);
  };
  var build_STAR___3 = function(f, cursor, m) {
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    if (m == null || cljs.core.map_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)))))].join(""));
    }
    if (om.core.valid_opts_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :key-fn :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid-opts?", "valid-opts?", 1000038576, null), new cljs.core.Symbol(null, "m", "m", 
      -1021758608, null))))].join(""));
    }
    if (m == null) {
      var shared = om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
      var ctor = om.core.get_descriptor.call(null, om.core.getf.call(null, f, cursor));
      return ctor.call(null, {"children":function(shared, ctor) {
        return function(this$) {
          var ret = f.call(null, cursor, this$);
          om.core.valid_component_QMARK_.call(null, ret, f);
          return ret;
        };
      }(shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_descriptor":om.core._STAR_descriptor_STAR_, "__om_app_state":om.core._STAR_state_STAR_, "__om_root_key":om.core._STAR_root_key_STAR_, "__om_shared":shared, "__om_cursor":cursor});
    } else {
      var map__20947 = m;
      var map__20947__$1 = cljs.core.seq_QMARK_.call(null, map__20947) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20947) : map__20947;
      var opts = cljs.core.get.call(null, map__20947__$1, new cljs.core.Keyword(null, "opts", "opts", 155075701));
      var init_state = cljs.core.get.call(null, map__20947__$1, new cljs.core.Keyword(null, "init-state", "init-state", 1450863212));
      var state = cljs.core.get.call(null, map__20947__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
      var key_fn = cljs.core.get.call(null, map__20947__$1, new cljs.core.Keyword(null, "key-fn", "key-fn", -636154479));
      var key = cljs.core.get.call(null, map__20947__$1, new cljs.core.Keyword(null, "key", "key", -1516042587));
      var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", -1175266204));
      var cursor_SINGLEQUOTE_ = !(dataf == null) ? function() {
        var temp__4124__auto__ = (new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var i = temp__4124__auto__;
          return dataf.call(null, cursor, i);
        } else {
          return dataf.call(null, cursor);
        }
      }() : cursor;
      var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : !(key_fn == null) ? key_fn.call(null, cursor_SINGLEQUOTE_) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348));
      var shared = function() {
        var or__3768__auto__ = (new cljs.core.Keyword(null, "shared", "shared", -384145993)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = om.core.get_descriptor.call(null, om.core.getf.call(null, f, cursor_SINGLEQUOTE_, opts), (new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018)).cljs$core$IFn$_invoke$arity$1(m));
      return ctor.call(null, {"__om_state":state, "__om_instrument":om.core._STAR_instrument_STAR_, "children":opts == null ? function(map__20947, map__20947__$1, opts, init_state, state, key_fn, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var ret = f.call(null, cursor_SINGLEQUOTE_, this$);
          om.core.valid_component_QMARK_.call(null, ret, f);
          return ret;
        };
      }(map__20947, map__20947__$1, opts, init_state, state, key_fn, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) : function(map__20947, map__20947__$1, opts, init_state, state, key_fn, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var ret = f.call(null, cursor_SINGLEQUOTE_, this$, opts);
          om.core.valid_component_QMARK_.call(null, ret, f);
          return ret;
        };
      }(map__20947, map__20947__$1, opts, init_state, state, key_fn, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor), "__om_init_state":init_state, "key":function() {
        var or__3768__auto__ = rkey;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return undefined;
        }
      }(), "__om_app_state":om.core._STAR_state_STAR_, "__om_cursor":cursor_SINGLEQUOTE_, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m), "__om_shared":shared, "__om_descriptor":om.core._STAR_descriptor_STAR_, "__om_root_key":om.core._STAR_root_key_STAR_});
    }
  };
  build_STAR_ = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build_STAR___2.call(this, f, cursor);
      case 3:
        return build_STAR___3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_STAR_.cljs$core$IFn$_invoke$arity$2 = build_STAR___2;
  build_STAR_.cljs$core$IFn$_invoke$arity$3 = build_STAR___3;
  return build_STAR_;
}();
om.core.build = function() {
  var build = null;
  var build__2 = function(f, x) {
    return build.call(null, f, x, null);
  };
  var build__3 = function(f, x, m) {
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    if (m == null || cljs.core.map_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)))))].join(""));
    }
    if (!(om.core._STAR_instrument_STAR_ == null)) {
      var ret = om.core._STAR_instrument_STAR_.call(null, f, x, m);
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "pass", "om.core/pass", -1453289268))) {
        return om.core.build_STAR_.call(null, f, x, m);
      } else {
        return ret;
      }
    } else {
      return om.core.build_STAR_.call(null, f, x, m);
    }
  };
  build = function(f, x, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, x);
      case 3:
        return build__3.call(this, f, x, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    if (m == null || cljs.core.map_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)))))].join(""));
    }
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.setup = function setup(state, key, tx_listen) {
  if (function() {
    var G__20956 = state;
    if (G__20956) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20956.om$core$INotify$;
        }
      }())) {
        return true;
      } else {
        if (!G__20956.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__20956);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__20956);
    }
  }()) {
  } else {
    var properties_20964 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var listeners_20965 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var render_queue_20966 = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
    var x20957_20967 = state;
    x20957_20967.om$core$IRenderQueue$ = true;
    x20957_20967.om$core$IRenderQueue$_get_queue$arity$1 = function(x20957_20967, properties_20964, listeners_20965, render_queue_20966) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.deref.call(null, render_queue_20966);
      };
    }(x20957_20967, properties_20964, listeners_20965, render_queue_20966);
    x20957_20967.om$core$IRenderQueue$_queue_render_BANG_$arity$2 = function(x20957_20967, properties_20964, listeners_20965, render_queue_20966) {
      return function(this$, c) {
        var this$__$1 = this;
        if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, render_queue_20966), c)) {
          return null;
        } else {
          cljs.core.swap_BANG_.call(null, render_queue_20966, cljs.core.conj, c);
          return cljs.core.swap_BANG_.call(null, this$__$1, cljs.core.identity);
        }
      };
    }(x20957_20967, properties_20964, listeners_20965, render_queue_20966);
    x20957_20967.om$core$IRenderQueue$_empty_queue_BANG_$arity$1 = function(x20957_20967, properties_20964, listeners_20965, render_queue_20966) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.swap_BANG_.call(null, render_queue_20966, cljs.core.empty);
      };
    }(x20957_20967, properties_20964, listeners_20965, render_queue_20966);
    x20957_20967.om$core$INotify$ = true;
    x20957_20967.om$core$INotify$_listen_BANG_$arity$3 = function(x20957_20967, properties_20964, listeners_20965, render_queue_20966) {
      return function(this$, key__$1, tx_listen__$1) {
        var this$__$1 = this;
        if (tx_listen__$1 == null) {
        } else {
          cljs.core.swap_BANG_.call(null, listeners_20965, cljs.core.assoc, key__$1, tx_listen__$1);
        }
        return this$__$1;
      };
    }(x20957_20967, properties_20964, listeners_20965, render_queue_20966);
    x20957_20967.om$core$INotify$_unlisten_BANG_$arity$2 = function(x20957_20967, properties_20964, listeners_20965, render_queue_20966) {
      return function(this$, key__$1) {
        var this$__$1 = this;
        cljs.core.swap_BANG_.call(null, listeners_20965, cljs.core.dissoc, key__$1);
        return this$__$1;
      };
    }(x20957_20967, properties_20964, listeners_20965, render_queue_20966);
    x20957_20967.om$core$INotify$_notify_BANG_$arity$3 = function(x20957_20967, properties_20964, listeners_20965, render_queue_20966) {
      return function(this$, tx_data, root_cursor) {
        var this$__$1 = this;
        var seq__20958_20968 = cljs.core.seq.call(null, cljs.core.deref.call(null, listeners_20965));
        var chunk__20959_20969 = null;
        var count__20960_20970 = 0;
        var i__20961_20971 = 0;
        while (true) {
          if (i__20961_20971 < count__20960_20970) {
            var vec__20962_20972 = cljs.core._nth.call(null, chunk__20959_20969, i__20961_20971);
            var __20973 = cljs.core.nth.call(null, vec__20962_20972, 0, null);
            var f_20974 = cljs.core.nth.call(null, vec__20962_20972, 1, null);
            f_20974.call(null, tx_data, root_cursor);
            var G__20975 = seq__20958_20968;
            var G__20976 = chunk__20959_20969;
            var G__20977 = count__20960_20970;
            var G__20978 = i__20961_20971 + 1;
            seq__20958_20968 = G__20975;
            chunk__20959_20969 = G__20976;
            count__20960_20970 = G__20977;
            i__20961_20971 = G__20978;
            continue;
          } else {
            var temp__4126__auto___20979 = cljs.core.seq.call(null, seq__20958_20968);
            if (temp__4126__auto___20979) {
              var seq__20958_20980__$1 = temp__4126__auto___20979;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__20958_20980__$1)) {
                var c__4555__auto___20981 = cljs.core.chunk_first.call(null, seq__20958_20980__$1);
                var G__20982 = cljs.core.chunk_rest.call(null, seq__20958_20980__$1);
                var G__20983 = c__4555__auto___20981;
                var G__20984 = cljs.core.count.call(null, c__4555__auto___20981);
                var G__20985 = 0;
                seq__20958_20968 = G__20982;
                chunk__20959_20969 = G__20983;
                count__20960_20970 = G__20984;
                i__20961_20971 = G__20985;
                continue;
              } else {
                var vec__20963_20986 = cljs.core.first.call(null, seq__20958_20980__$1);
                var __20987 = cljs.core.nth.call(null, vec__20963_20986, 0, null);
                var f_20988 = cljs.core.nth.call(null, vec__20963_20986, 1, null);
                f_20988.call(null, tx_data, root_cursor);
                var G__20989 = cljs.core.next.call(null, seq__20958_20980__$1);
                var G__20990 = null;
                var G__20991 = 0;
                var G__20992 = 0;
                seq__20958_20968 = G__20989;
                chunk__20959_20969 = G__20990;
                count__20960_20970 = G__20991;
                i__20961_20971 = G__20992;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return this$__$1;
      };
    }(x20957_20967, properties_20964, listeners_20965, render_queue_20966);
    x20957_20967.om$core$IRootProperties$ = true;
    x20957_20967.om$core$IRootProperties$_set_property_BANG_$arity$4 = function(x20957_20967, properties_20964, listeners_20965, render_queue_20966) {
      return function(_, id, k, v) {
        var ___$1 = this;
        return cljs.core.swap_BANG_.call(null, properties_20964, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [id, k], null), v);
      };
    }(x20957_20967, properties_20964, listeners_20965, render_queue_20966);
    x20957_20967.om$core$IRootProperties$_remove_property_BANG_$arity$3 = function(x20957_20967, properties_20964, listeners_20965, render_queue_20966) {
      return function(_, id, k) {
        var ___$1 = this;
        return cljs.core.swap_BANG_.call(null, properties_20964, cljs.core.dissoc, id, k);
      };
    }(x20957_20967, properties_20964, listeners_20965, render_queue_20966);
    x20957_20967.om$core$IRootProperties$_remove_properties_BANG_$arity$2 = function(x20957_20967, properties_20964, listeners_20965, render_queue_20966) {
      return function(_, id) {
        var ___$1 = this;
        return cljs.core.swap_BANG_.call(null, properties_20964, cljs.core.dissoc, id);
      };
    }(x20957_20967, properties_20964, listeners_20965, render_queue_20966);
    x20957_20967.om$core$IRootProperties$_get_property$arity$3 = function(x20957_20967, properties_20964, listeners_20965, render_queue_20966) {
      return function(_, id, k) {
        var ___$1 = this;
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, properties_20964), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [id, k], null));
      };
    }(x20957_20967, properties_20964, listeners_20965, render_queue_20966);
  }
  return om.core._listen_BANG_.call(null, state, key, tx_listen);
};
om.core.tear_down = function tear_down(state, key) {
  return om.core._unlisten_BANG_.call(null, state, key);
};
om.core.tag_root_key = function tag_root_key(cursor, root_key) {
  if (om.core.cursor_QMARK_.call(null, cursor)) {
    var x20994 = cljs.core.clone.call(null, cursor);
    x20994.om$core$IRootKey$ = true;
    x20994.om$core$IRootKey$_root_key$arity$1 = function(x20994) {
      return function(this$) {
        var this$__$1 = this;
        return root_key;
      };
    }(x20994);
    x20994.om$core$IAdapt$ = true;
    x20994.om$core$IAdapt$_adapt$arity$2 = function(x20994) {
      return function(this$, other) {
        var this$__$1 = this;
        return tag_root_key.call(null, om.core.adapt.call(null, cursor, other), root_key);
      };
    }(x20994);
    x20994.cljs$core$ICloneable$ = true;
    x20994.cljs$core$ICloneable$_clone$arity$1 = function(x20994) {
      return function(this$) {
        var this$__$1 = this;
        return tag_root_key.call(null, cljs.core.clone.call(null, cursor), root_key);
      };
    }(x20994);
    return x20994;
  } else {
    return cursor;
  }
};
om.core.root = function root(f, value, p__20995) {
  var map__21058 = p__20995;
  var map__21058__$1 = cljs.core.seq_QMARK_.call(null, map__21058) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21058) : map__21058;
  var options = map__21058__$1;
  var raf = cljs.core.get.call(null, map__21058__$1, new cljs.core.Keyword(null, "raf", "raf", -1295410152));
  var adapt = cljs.core.get.call(null, map__21058__$1, new cljs.core.Keyword(null, "adapt", "adapt", -1817022327));
  var descriptor = cljs.core.get.call(null, map__21058__$1, new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018));
  var instrument = cljs.core.get.call(null, map__21058__$1, new cljs.core.Keyword(null, "instrument", "instrument", -960698844));
  var path = cljs.core.get.call(null, map__21058__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
  var tx_listen = cljs.core.get.call(null, map__21058__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367));
  var target = cljs.core.get.call(null, map__21058__$1, new cljs.core.Keyword(null, "target", "target", 253001721));
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("First argument must be a function"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  if (!(target == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("No target specified to om.core/root"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "target", "target", 1893533248, null)))))].join(""));
  }
  var roots_SINGLEQUOTE__21120 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__21120, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__21120, target).call(null);
  } else {
  }
  var watch_key = cljs.core.gensym.call(null);
  var state = function() {
    var G__21059 = value;
    if (G__21059) {
      var bit__4449__auto__ = G__21059.cljs$lang$protocol_mask$partition1$ & 16384;
      if (bit__4449__auto__ || G__21059.cljs$core$IAtom$) {
        return true;
      } else {
        if (!G__21059.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__21059);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__21059);
    }
  }() ? value : cljs.core.atom.call(null, value);
  var state__$1 = om.core.setup.call(null, state, watch_key, tx_listen);
  var adapt__$1 = function() {
    var or__3768__auto__ = adapt;
    if (cljs.core.truth_(or__3768__auto__)) {
      return or__3768__auto__;
    } else {
      return cljs.core.identity;
    }
  }();
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 253001721), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367), new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, "adapt", "adapt", -1817022327));
  var ret = cljs.core.atom.call(null, null);
  var rootf = function(watch_key, state, state__$1, adapt__$1, m, ret, map__21058, map__21058__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target) {
    return function rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = adapt__$1.call(null, om.core.tag_root_key.call(null, path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path), watch_key));
      if (cljs.core.truth_(om.core._get_property.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "skip-render-root", "skip-render-root", -5219643)))) {
      } else {
        var c_21121 = om.dom.render.call(null, function() {
          var _STAR_descriptor_STAR_21090 = om.core._STAR_descriptor_STAR_;
          var _STAR_instrument_STAR_21091 = om.core._STAR_instrument_STAR_;
          var _STAR_state_STAR_21092 = om.core._STAR_state_STAR_;
          var _STAR_root_key_STAR_21093 = om.core._STAR_root_key_STAR_;
          om.core._STAR_descriptor_STAR_ = descriptor;
          om.core._STAR_instrument_STAR_ = instrument;
          om.core._STAR_state_STAR_ = state__$1;
          om.core._STAR_root_key_STAR_ = watch_key;
          try {
            return om.core.build.call(null, f, cursor, m);
          } finally {
            om.core._STAR_root_key_STAR_ = _STAR_root_key_STAR_21093;
            om.core._STAR_state_STAR_ = _STAR_state_STAR_21092;
            om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_21091;
            om.core._STAR_descriptor_STAR_ = _STAR_descriptor_STAR_21090;
          }
        }(), target);
        if (cljs.core.deref.call(null, ret) == null) {
          cljs.core.reset_BANG_.call(null, ret, c_21121);
        } else {
        }
      }
      var queue_21122 = om.core._get_queue.call(null, state__$1);
      if (cljs.core.empty_QMARK_.call(null, queue_21122)) {
      } else {
        var seq__21094_21123 = cljs.core.seq.call(null, queue_21122);
        var chunk__21095_21124 = null;
        var count__21096_21125 = 0;
        var i__21097_21126 = 0;
        while (true) {
          if (i__21097_21126 < count__21096_21125) {
            var c_21127 = cljs.core._nth.call(null, chunk__21095_21124, i__21097_21126);
            if (cljs.core.truth_(c_21127.isMounted())) {
              var temp__4126__auto___21128 = c_21127.state["__om_next_cursor"];
              if (cljs.core.truth_(temp__4126__auto___21128)) {
                var next_props_21129 = temp__4126__auto___21128;
                c_21127.props["__om_cursor"] = next_props_21129;
                c_21127.state["__om_next_cursor"] = null;
              } else {
              }
              if (cljs.core.truth_(function() {
                var or__3768__auto__ = !function() {
                  var G__21099 = om.core.children.call(null, c_21127);
                  if (G__21099) {
                    var bit__4449__auto__ = null;
                    if (cljs.core.truth_(function() {
                      var or__3768__auto__ = bit__4449__auto__;
                      if (cljs.core.truth_(or__3768__auto__)) {
                        return or__3768__auto__;
                      } else {
                        return G__21099.om$core$ICheckState$;
                      }
                    }())) {
                      return true;
                    } else {
                      if (!G__21099.cljs$lang$protocol_mask$partition$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICheckState, G__21099);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICheckState, G__21099);
                  }
                }();
                if (or__3768__auto__) {
                  return or__3768__auto__;
                } else {
                  return c_21127.shouldComponentUpdate(c_21127.props, c_21127.state);
                }
              }())) {
                c_21127.forceUpdate();
              } else {
              }
            } else {
            }
            var G__21130 = seq__21094_21123;
            var G__21131 = chunk__21095_21124;
            var G__21132 = count__21096_21125;
            var G__21133 = i__21097_21126 + 1;
            seq__21094_21123 = G__21130;
            chunk__21095_21124 = G__21131;
            count__21096_21125 = G__21132;
            i__21097_21126 = G__21133;
            continue;
          } else {
            var temp__4126__auto___21134 = cljs.core.seq.call(null, seq__21094_21123);
            if (temp__4126__auto___21134) {
              var seq__21094_21135__$1 = temp__4126__auto___21134;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__21094_21135__$1)) {
                var c__4555__auto___21136 = cljs.core.chunk_first.call(null, seq__21094_21135__$1);
                var G__21137 = cljs.core.chunk_rest.call(null, seq__21094_21135__$1);
                var G__21138 = c__4555__auto___21136;
                var G__21139 = cljs.core.count.call(null, c__4555__auto___21136);
                var G__21140 = 0;
                seq__21094_21123 = G__21137;
                chunk__21095_21124 = G__21138;
                count__21096_21125 = G__21139;
                i__21097_21126 = G__21140;
                continue;
              } else {
                var c_21141 = cljs.core.first.call(null, seq__21094_21135__$1);
                if (cljs.core.truth_(c_21141.isMounted())) {
                  var temp__4126__auto___21142__$1 = c_21141.state["__om_next_cursor"];
                  if (cljs.core.truth_(temp__4126__auto___21142__$1)) {
                    var next_props_21143 = temp__4126__auto___21142__$1;
                    c_21141.props["__om_cursor"] = next_props_21143;
                    c_21141.state["__om_next_cursor"] = null;
                  } else {
                  }
                  if (cljs.core.truth_(function() {
                    var or__3768__auto__ = !function() {
                      var G__21101 = om.core.children.call(null, c_21141);
                      if (G__21101) {
                        var bit__4449__auto__ = null;
                        if (cljs.core.truth_(function() {
                          var or__3768__auto__ = bit__4449__auto__;
                          if (cljs.core.truth_(or__3768__auto__)) {
                            return or__3768__auto__;
                          } else {
                            return G__21101.om$core$ICheckState$;
                          }
                        }())) {
                          return true;
                        } else {
                          if (!G__21101.cljs$lang$protocol_mask$partition$) {
                            return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICheckState, G__21101);
                          } else {
                            return false;
                          }
                        }
                      } else {
                        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICheckState, G__21101);
                      }
                    }();
                    if (or__3768__auto__) {
                      return or__3768__auto__;
                    } else {
                      return c_21141.shouldComponentUpdate(c_21141.props, c_21141.state);
                    }
                  }())) {
                    c_21141.forceUpdate();
                  } else {
                  }
                } else {
                }
                var G__21144 = cljs.core.next.call(null, seq__21094_21135__$1);
                var G__21145 = null;
                var G__21146 = 0;
                var G__21147 = 0;
                seq__21094_21123 = G__21144;
                chunk__21095_21124 = G__21145;
                count__21096_21125 = G__21146;
                i__21097_21126 = G__21147;
                continue;
              }
            } else {
            }
          }
          break;
        }
        om.core._empty_queue_BANG_.call(null, state__$1);
      }
      var _refs_21148 = cljs.core.deref.call(null, om.core._refs);
      if (cljs.core.empty_QMARK_.call(null, _refs_21148)) {
      } else {
        var seq__21102_21149 = cljs.core.seq.call(null, _refs_21148);
        var chunk__21103_21150 = null;
        var count__21104_21151 = 0;
        var i__21105_21152 = 0;
        while (true) {
          if (i__21105_21152 < count__21104_21151) {
            var vec__21106_21153 = cljs.core._nth.call(null, chunk__21103_21150, i__21105_21152);
            var path_21154__$1 = cljs.core.nth.call(null, vec__21106_21153, 0, null);
            var cs_21155 = cljs.core.nth.call(null, vec__21106_21153, 1, null);
            var cs_21156__$1 = cljs.core.deref.call(null, cs_21155);
            var seq__21107_21157 = cljs.core.seq.call(null, cs_21156__$1);
            var chunk__21108_21158 = null;
            var count__21109_21159 = 0;
            var i__21110_21160 = 0;
            while (true) {
              if (i__21110_21160 < count__21109_21159) {
                var vec__21111_21161 = cljs.core._nth.call(null, chunk__21108_21158, i__21110_21160);
                var id_21162 = cljs.core.nth.call(null, vec__21111_21161, 0, null);
                var c_21163 = cljs.core.nth.call(null, vec__21111_21161, 1, null);
                if (cljs.core.truth_(c_21163.shouldComponentUpdate(c_21163.props, c_21163.state))) {
                  c_21163.forceUpdate();
                } else {
                }
                var G__21164 = seq__21107_21157;
                var G__21165 = chunk__21108_21158;
                var G__21166 = count__21109_21159;
                var G__21167 = i__21110_21160 + 1;
                seq__21107_21157 = G__21164;
                chunk__21108_21158 = G__21165;
                count__21109_21159 = G__21166;
                i__21110_21160 = G__21167;
                continue;
              } else {
                var temp__4126__auto___21168 = cljs.core.seq.call(null, seq__21107_21157);
                if (temp__4126__auto___21168) {
                  var seq__21107_21169__$1 = temp__4126__auto___21168;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__21107_21169__$1)) {
                    var c__4555__auto___21170 = cljs.core.chunk_first.call(null, seq__21107_21169__$1);
                    var G__21171 = cljs.core.chunk_rest.call(null, seq__21107_21169__$1);
                    var G__21172 = c__4555__auto___21170;
                    var G__21173 = cljs.core.count.call(null, c__4555__auto___21170);
                    var G__21174 = 0;
                    seq__21107_21157 = G__21171;
                    chunk__21108_21158 = G__21172;
                    count__21109_21159 = G__21173;
                    i__21110_21160 = G__21174;
                    continue;
                  } else {
                    var vec__21112_21175 = cljs.core.first.call(null, seq__21107_21169__$1);
                    var id_21176 = cljs.core.nth.call(null, vec__21112_21175, 0, null);
                    var c_21177 = cljs.core.nth.call(null, vec__21112_21175, 1, null);
                    if (cljs.core.truth_(c_21177.shouldComponentUpdate(c_21177.props, c_21177.state))) {
                      c_21177.forceUpdate();
                    } else {
                    }
                    var G__21178 = cljs.core.next.call(null, seq__21107_21169__$1);
                    var G__21179 = null;
                    var G__21180 = 0;
                    var G__21181 = 0;
                    seq__21107_21157 = G__21178;
                    chunk__21108_21158 = G__21179;
                    count__21109_21159 = G__21180;
                    i__21110_21160 = G__21181;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            var G__21182 = seq__21102_21149;
            var G__21183 = chunk__21103_21150;
            var G__21184 = count__21104_21151;
            var G__21185 = i__21105_21152 + 1;
            seq__21102_21149 = G__21182;
            chunk__21103_21150 = G__21183;
            count__21104_21151 = G__21184;
            i__21105_21152 = G__21185;
            continue;
          } else {
            var temp__4126__auto___21186 = cljs.core.seq.call(null, seq__21102_21149);
            if (temp__4126__auto___21186) {
              var seq__21102_21187__$1 = temp__4126__auto___21186;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__21102_21187__$1)) {
                var c__4555__auto___21188 = cljs.core.chunk_first.call(null, seq__21102_21187__$1);
                var G__21189 = cljs.core.chunk_rest.call(null, seq__21102_21187__$1);
                var G__21190 = c__4555__auto___21188;
                var G__21191 = cljs.core.count.call(null, c__4555__auto___21188);
                var G__21192 = 0;
                seq__21102_21149 = G__21189;
                chunk__21103_21150 = G__21190;
                count__21104_21151 = G__21191;
                i__21105_21152 = G__21192;
                continue;
              } else {
                var vec__21113_21193 = cljs.core.first.call(null, seq__21102_21187__$1);
                var path_21194__$1 = cljs.core.nth.call(null, vec__21113_21193, 0, null);
                var cs_21195 = cljs.core.nth.call(null, vec__21113_21193, 1, null);
                var cs_21196__$1 = cljs.core.deref.call(null, cs_21195);
                var seq__21114_21197 = cljs.core.seq.call(null, cs_21196__$1);
                var chunk__21115_21198 = null;
                var count__21116_21199 = 0;
                var i__21117_21200 = 0;
                while (true) {
                  if (i__21117_21200 < count__21116_21199) {
                    var vec__21118_21201 = cljs.core._nth.call(null, chunk__21115_21198, i__21117_21200);
                    var id_21202 = cljs.core.nth.call(null, vec__21118_21201, 0, null);
                    var c_21203 = cljs.core.nth.call(null, vec__21118_21201, 1, null);
                    if (cljs.core.truth_(c_21203.shouldComponentUpdate(c_21203.props, c_21203.state))) {
                      c_21203.forceUpdate();
                    } else {
                    }
                    var G__21204 = seq__21114_21197;
                    var G__21205 = chunk__21115_21198;
                    var G__21206 = count__21116_21199;
                    var G__21207 = i__21117_21200 + 1;
                    seq__21114_21197 = G__21204;
                    chunk__21115_21198 = G__21205;
                    count__21116_21199 = G__21206;
                    i__21117_21200 = G__21207;
                    continue;
                  } else {
                    var temp__4126__auto___21208__$1 = cljs.core.seq.call(null, seq__21114_21197);
                    if (temp__4126__auto___21208__$1) {
                      var seq__21114_21209__$1 = temp__4126__auto___21208__$1;
                      if (cljs.core.chunked_seq_QMARK_.call(null, seq__21114_21209__$1)) {
                        var c__4555__auto___21210 = cljs.core.chunk_first.call(null, seq__21114_21209__$1);
                        var G__21211 = cljs.core.chunk_rest.call(null, seq__21114_21209__$1);
                        var G__21212 = c__4555__auto___21210;
                        var G__21213 = cljs.core.count.call(null, c__4555__auto___21210);
                        var G__21214 = 0;
                        seq__21114_21197 = G__21211;
                        chunk__21115_21198 = G__21212;
                        count__21116_21199 = G__21213;
                        i__21117_21200 = G__21214;
                        continue;
                      } else {
                        var vec__21119_21215 = cljs.core.first.call(null, seq__21114_21209__$1);
                        var id_21216 = cljs.core.nth.call(null, vec__21119_21215, 0, null);
                        var c_21217 = cljs.core.nth.call(null, vec__21119_21215, 1, null);
                        if (cljs.core.truth_(c_21217.shouldComponentUpdate(c_21217.props, c_21217.state))) {
                          c_21217.forceUpdate();
                        } else {
                        }
                        var G__21218 = cljs.core.next.call(null, seq__21114_21209__$1);
                        var G__21219 = null;
                        var G__21220 = 0;
                        var G__21221 = 0;
                        seq__21114_21197 = G__21218;
                        chunk__21115_21198 = G__21219;
                        count__21116_21199 = G__21220;
                        i__21117_21200 = G__21221;
                        continue;
                      }
                    } else {
                    }
                  }
                  break;
                }
                var G__21222 = cljs.core.next.call(null, seq__21102_21187__$1);
                var G__21223 = null;
                var G__21224 = 0;
                var G__21225 = 0;
                seq__21102_21149 = G__21222;
                chunk__21103_21150 = G__21223;
                count__21104_21151 = G__21224;
                i__21105_21152 = G__21225;
                continue;
              }
            } else {
            }
          }
          break;
        }
      }
      om.core._set_property_BANG_.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "skip-render-root", "skip-render-root", -5219643), true);
      return cljs.core.deref.call(null, ret);
    };
  }(watch_key, state, state__$1, adapt__$1, m, ret, map__21058, map__21058__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__21058, map__21058__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target) {
    return function(_, ___$1, o, n) {
      if (cljs.core.not.call(null, om.core._get_property.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "ignore", "ignore", -1631542033))) && !(o === n)) {
        om.core._set_property_BANG_.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "skip-render-root", "skip-render-root", -5219643), false);
      } else {
      }
      om.core._set_property_BANG_.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "ignore", "ignore", -1631542033), false);
      if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
      } else {
        cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
      }
      if (cljs.core.truth_(om.core.refresh_queued)) {
        return null;
      } else {
        om.core.refresh_queued = true;
        if (raf === false || !(typeof requestAnimationFrame !== "undefined")) {
          return setTimeout(function(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__21058, map__21058__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target) {
            return function() {
              return om.core.render_all.call(null, state__$1);
            };
          }(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__21058, map__21058__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target), 16);
        } else {
          if (cljs.core.fn_QMARK_.call(null, raf)) {
            return raf.call(null);
          } else {
            return requestAnimationFrame(function(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__21058, map__21058__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target) {
              return function() {
                return om.core.render_all.call(null, state__$1);
              };
            }(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__21058, map__21058__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target));
          }
        }
      }
    };
  }(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__21058, map__21058__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target));
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__21058, map__21058__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target) {
    return function() {
      om.core._remove_properties_BANG_.call(null, state__$1, watch_key);
      cljs.core.remove_watch.call(null, state__$1, watch_key);
      om.core.tear_down.call(null, state__$1, watch_key);
      cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
      return React.unmountComponentAtNode(target);
    };
  }(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__21058, map__21058__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target));
  return rootf.call(null);
};
om.core.detach_root = function detach_root(target) {
  if (cljs.core.truth_(goog.dom.isElement(target))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("gdom", "isElement", "gdom/isElement", 465934354, null), new cljs.core.Symbol(null, "target", "target", 1893533248, null))))].join(""));
  }
  var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, om.core.roots), target);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    return f.call(null);
  } else {
    return null;
  }
};
om.core.transactable_QMARK_ = function transactable_QMARK_(x) {
  var G__21227 = x;
  if (G__21227) {
    var bit__4449__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3768__auto__ = bit__4449__auto__;
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        return G__21227.om$core$ITransact$;
      }
    }())) {
      return true;
    } else {
      if (!G__21227.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ITransact, G__21227);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ITransact, G__21227);
  }
};
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return transact_BANG_.call(null, cursor, korks, f, null);
  };
  var transact_BANG___4 = function(cursor, korks, f, tag) {
    if (om.core.transactable_QMARK_.call(null, cursor)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "transactable?", "transactable?", 780536292, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
    }
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._transact_BANG_.call(null, cursor, korks__$1, f, tag);
  };
  transact_BANG_ = function(cursor, korks, f, tag) {
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, v) {
    if (om.core.cursor_QMARK_.call(null, cursor)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
    }
    return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
      return v;
    }, null);
  };
  var update_BANG___3 = function(cursor, korks, v) {
    if (om.core.cursor_QMARK_.call(null, cursor)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
    }
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, null);
  };
  var update_BANG___4 = function(cursor, korks, v, tag) {
    if (om.core.cursor_QMARK_.call(null, cursor)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
    }
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, tag);
  };
  update_BANG_ = function(cursor, korks, v, tag) {
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, korks);
      case 3:
        return update_BANG___3.call(this, cursor, korks, v);
      case 4:
        return update_BANG___4.call(this, cursor, korks, v, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  return update_BANG_;
}();
om.core.commit_BANG_ = function commit_BANG_(cursor, korks, f) {
  if (om.core.cursor_QMARK_.call(null, cursor)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
  }
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  var key = function() {
    var G__21229 = cursor;
    if (G__21229) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__21229.om$core$IRootKey$;
        }
      }())) {
        return true;
      } else {
        if (!G__21229.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRootKey, G__21229);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRootKey, G__21229);
    }
  }() ? om.core._root_key.call(null, cursor) : null;
  var app_state = om.core.state.call(null, cursor);
  var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
  var cpath = om.core.path.call(null, cursor);
  var rpath = cljs.core.into.call(null, cpath, korks__$1);
  if (cljs.core.truth_(key)) {
    om.core._set_property_BANG_.call(null, app_state, key, new cljs.core.Keyword(null, "ignore", "ignore", -1631542033), true);
  } else {
  }
  if (cljs.core.empty_QMARK_.call(null, rpath)) {
    return cljs.core.swap_BANG_.call(null, app_state, f);
  } else {
    return cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, rpath, f);
  }
};
om.core.get_node = function() {
  var get_node = null;
  var get_node__1 = function(owner) {
    return owner.getDOMNode();
  };
  var get_node__2 = function(owner, name) {
    if (typeof name === "string") {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "string?", "string?", -1129175764, null), new cljs.core.Symbol(null, "name", "name", -810760592, null))))].join(""));
    }
    var temp__4126__auto__ = owner.refs;
    if (cljs.core.truth_(temp__4126__auto__)) {
      var refs = temp__4126__auto__;
      return refs[name].getDOMNode();
    } else {
      return null;
    }
  };
  get_node = function(owner, name) {
    switch(arguments.length) {
      case 1:
        return get_node__1.call(this, owner);
      case 2:
        return get_node__2.call(this, owner, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_node.cljs$core$IFn$_invoke$arity$1 = get_node__1;
  get_node.cljs$core$IFn$_invoke$arity$2 = get_node__2;
  return get_node;
}();
om.core.mounted_QMARK_ = function mounted_QMARK_(owner) {
  return owner.isMounted();
};
om.core.set_state_BANG_ = function() {
  var set_state_BANG_ = null;
  var set_state_BANG___2 = function(owner, v) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    return om.core._set_state_BANG_.call(null, owner, v, true);
  };
  var set_state_BANG___3 = function(owner, korks, v) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, true);
  };
  set_state_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_BANG___2;
  set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_BANG___3;
  return set_state_BANG_;
}();
om.core.set_state_nr_BANG_ = function() {
  var set_state_nr_BANG_ = null;
  var set_state_nr_BANG___2 = function(owner, v) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    return om.core._set_state_BANG_.call(null, owner, v, false);
  };
  var set_state_nr_BANG___3 = function(owner, korks, v) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, false);
  };
  set_state_nr_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_nr_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_nr_BANG___2;
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_nr_BANG___3;
  return set_state_nr_BANG_;
}();
om.core.update_state_BANG_ = function() {
  var update_state_BANG_ = null;
  var update_state_BANG___2 = function(owner, f) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    return om.core.set_state_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_BANG___3 = function(owner, korks, f) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    return om.core.set_state_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_BANG___2;
  update_state_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_BANG___3;
  return update_state_BANG_;
}();
om.core.update_state_nr_BANG_ = function() {
  var update_state_nr_BANG_ = null;
  var update_state_nr_BANG___2 = function(owner, f) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    return om.core.set_state_nr_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_nr_BANG___3 = function(owner, korks, f) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    return om.core.set_state_nr_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_nr_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_nr_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_nr_BANG___2;
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_nr_BANG___3;
  return update_state_nr_BANG_;
}();
om.core.refresh_BANG_ = function refresh_BANG_(owner) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  return om.core.update_state_BANG_.call(null, owner, cljs.core.identity);
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    return om.core._get_render_state.call(null, owner);
  };
  var get_render_state__2 = function(owner, korks) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_render_state.call(null, owner, ks);
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
goog.provide("gridlife.langton");
goog.require("cljs.core");
goog.require("gridlife.gamemodel");
goog.require("gridlife.gridmodel");
gridlife.langton.LangtonAnt = function(location, heading, __meta, __extmap, __hash) {
  this.location = location;
  this.heading = heading;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
gridlife.langton.LangtonAnt.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4371__auto__, k__4372__auto__) {
  var self__ = this;
  var this__4371__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4371__auto____$1, k__4372__auto__, null);
};
gridlife.langton.LangtonAnt.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4373__auto__, k11170, else__4374__auto__) {
  var self__ = this;
  var this__4373__auto____$1 = this;
  var G__11172 = k11170 instanceof cljs.core.Keyword ? k11170.fqn : null;
  switch(G__11172) {
    case "heading":
      return self__.heading;
      break;
    case "location":
      return self__.location;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k11170, else__4374__auto__);
  }
};
gridlife.langton.LangtonAnt.prototype.gridlife$gamemodel$game$ = true;
gridlife.langton.LangtonAnt.prototype.gridlife$gamemodel$game$game_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return "Langton's Ant";
};
gridlife.langton.LangtonAnt.prototype.gridlife$gamemodel$game$to_str$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  [cljs.core.str("Langton's Ant: ")].join("");
  return self__.heading;
};
gridlife.langton.LangtonAnt.prototype.gridlife$gamemodel$game$tick$arity$2 = function(_, gridmodel) {
  var self__ = this;
  var ___$1 = this;
  var model = (new cljs.core.Keyword(null, "model", "model", 331153215)).cljs$core$IFn$_invoke$arity$1(gridmodel);
  var cells_wide = (new cljs.core.Keyword(null, "cells-wide", "cells-wide", -1579921448)).cljs$core$IFn$_invoke$arity$1(gridmodel);
  var cells_high = (new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465)).cljs$core$IFn$_invoke$arity$1(gridmodel);
  var current_cell_contents = cljs.core.get.call(null, model, self__.location);
  var new_cell_contents = gridlife.gridmodel.toggle_color.call(null, current_cell_contents);
  var new_heading_f = gridlife.gridmodel.white_QMARK_.call(null, current_cell_contents) ? gridlife.gridmodel.turn_left : gridlife.gridmodel.turn_right;
  var new_heading = new_heading_f.call(null, self__.heading);
  var new_model = cljs.core.assoc.call(null, model, self__.location, new_cell_contents);
  var new_location = gridlife.gridmodel.new_location.call(null, cells_wide, cells_high, self__.location, new_heading, 1);
  var new_ant = new gridlife.langton.LangtonAnt(new_location, new_heading, null, null, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, gridmodel, new cljs.core.Keyword(null, "model", "model", 331153215), new_model), new_ant, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new_location, "red"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.location, 
  cljs.core.name.call(null, new_cell_contents)], null)], null)], null);
};
gridlife.langton.LangtonAnt.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4385__auto__, writer__4386__auto__, opts__4387__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  var pr_pair__4388__auto__ = function(this__4385__auto____$1) {
    return function(keyval__4389__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4386__auto__, cljs.core.pr_writer, "", " ", "", opts__4387__auto__, keyval__4389__auto__);
    };
  }(this__4385__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4386__auto__, pr_pair__4388__auto__, "#gridlife.langton.LangtonAnt{", ", ", "}", opts__4387__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "location", "location", 1815599388), self__.location], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "heading", "heading", -1312171873), self__.heading], null)], null), self__.__extmap));
};
gridlife.langton.LangtonAnt.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4369__auto__) {
  var self__ = this;
  var this__4369__auto____$1 = this;
  return self__.__meta;
};
gridlife.langton.LangtonAnt.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4365__auto__) {
  var self__ = this;
  var this__4365__auto____$1 = this;
  return new gridlife.langton.LangtonAnt(self__.location, self__.heading, self__.__meta, self__.__extmap, self__.__hash);
};
gridlife.langton.LangtonAnt.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
gridlife.langton.LangtonAnt.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4366__auto__) {
  var self__ = this;
  var this__4366__auto____$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_imap.call(null, this__4366__auto____$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
gridlife.langton.LangtonAnt.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4367__auto__, other__4368__auto__) {
  var self__ = this;
  var this__4367__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3756__auto__ = other__4368__auto__;
    if (cljs.core.truth_(and__3756__auto__)) {
      return this__4367__auto____$1.constructor === other__4368__auto__.constructor && cljs.core.equiv_map.call(null, this__4367__auto____$1, other__4368__auto__);
    } else {
      return and__3756__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
gridlife.langton.LangtonAnt.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "location", "location", 1815599388), null, new cljs.core.Keyword(null, "heading", "heading", -1312171873), null], null), null), k__4381__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4380__auto____$1), self__.__meta), k__4381__auto__);
  } else {
    return new gridlife.langton.LangtonAnt(self__.location, self__.heading, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4381__auto__)), null);
  }
};
gridlife.langton.LangtonAnt.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4378__auto__, k__4379__auto__, G__11169) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  var pred__11173 = cljs.core.keyword_identical_QMARK_;
  var expr__11174 = k__4379__auto__;
  if (cljs.core.truth_(pred__11173.call(null, new cljs.core.Keyword(null, "location", "location", 1815599388), expr__11174))) {
    return new gridlife.langton.LangtonAnt(G__11169, self__.heading, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__11173.call(null, new cljs.core.Keyword(null, "heading", "heading", -1312171873), expr__11174))) {
      return new gridlife.langton.LangtonAnt(self__.location, G__11169, self__.__meta, self__.__extmap, null);
    } else {
      return new gridlife.langton.LangtonAnt(self__.location, self__.heading, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4379__auto__, G__11169), null);
    }
  }
};
gridlife.langton.LangtonAnt.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4383__auto__) {
  var self__ = this;
  var this__4383__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "location", "location", 1815599388), self__.location], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "heading", "heading", -1312171873), self__.heading], null)], null), self__.__extmap));
};
gridlife.langton.LangtonAnt.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4370__auto__, G__11169) {
  var self__ = this;
  var this__4370__auto____$1 = this;
  return new gridlife.langton.LangtonAnt(self__.location, self__.heading, G__11169, self__.__extmap, self__.__hash);
};
gridlife.langton.LangtonAnt.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4376__auto__, entry__4377__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4377__auto__)) {
    return cljs.core._assoc.call(null, this__4376__auto____$1, cljs.core._nth.call(null, entry__4377__auto__, 0), cljs.core._nth.call(null, entry__4377__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4376__auto____$1, entry__4377__auto__);
  }
};
gridlife.langton.LangtonAnt.cljs$lang$type = true;
gridlife.langton.LangtonAnt.cljs$lang$ctorPrSeq = function(this__4405__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "gridlife.langton/LangtonAnt");
};
gridlife.langton.LangtonAnt.cljs$lang$ctorPrWriter = function(this__4405__auto__, writer__4406__auto__) {
  return cljs.core._write.call(null, writer__4406__auto__, "gridlife.langton/LangtonAnt");
};
gridlife.langton.__GT_LangtonAnt = function __GT_LangtonAnt(location, heading) {
  return new gridlife.langton.LangtonAnt(location, heading, null, null, null);
};
gridlife.langton.map__GT_LangtonAnt = function map__GT_LangtonAnt(G__11171) {
  return new gridlife.langton.LangtonAnt((new cljs.core.Keyword(null, "location", "location", 1815599388)).cljs$core$IFn$_invoke$arity$1(G__11171), (new cljs.core.Keyword(null, "heading", "heading", -1312171873)).cljs$core$IFn$_invoke$arity$1(G__11171), null, cljs.core.dissoc.call(null, G__11171, new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Keyword(null, "heading", "heading", -1312171873)), null);
};
gridlife.langton.new_ant = function new_ant(start_location) {
  return new gridlife.langton.LangtonAnt(start_location, new cljs.core.Keyword(null, "north", "north", 651323902), null, null, null);
};
goog.provide("gridlife.gridui");
goog.require("cljs.core");
goog.require("gridlife.gamemodel");
goog.require("gridlife.gridmodel");
goog.require("cljs.core.async");
goog.require("gridlife.langton");
goog.require("sablono.core");
goog.require("gridlife.random");
goog.require("om.core");
cljs.core.enable_console_print_BANG_.call(null);
gridlife.gridui.empty_model = function empty_model(cells_wide, cells_high) {
  var keys = function() {
    var iter__4524__auto__ = function iter__11030(s__11031) {
      return new cljs.core.LazySeq(null, function() {
        var s__11031__$1 = s__11031;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__11031__$1);
          if (temp__4126__auto__) {
            var xs__4624__auto__ = temp__4126__auto__;
            var x = cljs.core.first.call(null, xs__4624__auto__);
            var iterys__4520__auto__ = function(s__11031__$1, x, xs__4624__auto__, temp__4126__auto__) {
              return function iter__11032(s__11033) {
                return new cljs.core.LazySeq(null, function(s__11031__$1, x, xs__4624__auto__, temp__4126__auto__) {
                  return function() {
                    var s__11033__$1 = s__11033;
                    while (true) {
                      var temp__4126__auto____$1 = cljs.core.seq.call(null, s__11033__$1);
                      if (temp__4126__auto____$1) {
                        var s__11033__$2 = temp__4126__auto____$1;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__11033__$2)) {
                          var c__4522__auto__ = cljs.core.chunk_first.call(null, s__11033__$2);
                          var size__4523__auto__ = cljs.core.count.call(null, c__4522__auto__);
                          var b__11035 = cljs.core.chunk_buffer.call(null, size__4523__auto__);
                          if (function() {
                            var i__11034 = 0;
                            while (true) {
                              if (i__11034 < size__4523__auto__) {
                                var y = cljs.core._nth.call(null, c__4522__auto__, i__11034);
                                cljs.core.chunk_append.call(null, b__11035, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), x, new cljs.core.Keyword(null, "y", "y", -1757859776), y], null));
                                var G__11036 = i__11034 + 1;
                                i__11034 = G__11036;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11035), iter__11032.call(null, cljs.core.chunk_rest.call(null, s__11033__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11035), null);
                          }
                        } else {
                          var y = cljs.core.first.call(null, s__11033__$2);
                          return cljs.core.cons.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), x, new cljs.core.Keyword(null, "y", "y", -1757859776), y], null), iter__11032.call(null, cljs.core.rest.call(null, s__11033__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(s__11031__$1, x, xs__4624__auto__, temp__4126__auto__), null, null);
              };
            }(s__11031__$1, x, xs__4624__auto__, temp__4126__auto__);
            var fs__4521__auto__ = cljs.core.seq.call(null, iterys__4520__auto__.call(null, cljs.core.range.call(null, 0, cells_high)));
            if (fs__4521__auto__) {
              return cljs.core.concat.call(null, fs__4521__auto__, iter__11030.call(null, cljs.core.rest.call(null, s__11031__$1)));
            } else {
              var G__11037 = cljs.core.rest.call(null, s__11031__$1);
              s__11031__$1 = G__11037;
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4524__auto__.call(null, cljs.core.range.call(null, 0, cells_wide));
  }();
  return cljs.core.zipmap.call(null, keys, cljs.core.repeat.call(null, new cljs.core.Keyword(null, "white", "white", -483998618)));
};
gridlife.gridui.cells_wide = 50;
gridlife.gridui.cells_high = 50;
gridlife.gridui.cell_size = 12;
gridlife.gridui.default_ant = function default_ant() {
  return gridlife.langton.new_ant.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), Math.floor(gridlife.gridui.cells_wide / 2), new cljs.core.Keyword(null, "y", "y", -1757859776), Math.floor(gridlife.gridui.cells_high / 2)], null));
};
gridlife.gridui.default_games = function default_games() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [gridlife.random.new_random_noise.call(null), gridlife.gridui.default_ant.call(null)], null);
};
gridlife.gridui.empty_gridmodel = function empty_gridmodel() {
  return new gridlife.gridmodel.GridModel(gridlife.gridui.empty_model.call(null, gridlife.gridui.cells_wide, gridlife.gridui.cells_high), gridlife.gridui.cells_wide, gridlife.gridui.cells_high, null, null, null);
};
gridlife.gridui.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "gridmodel", "gridmodel", 2082730461), gridlife.gridui.empty_gridmodel.call(null), new cljs.core.Keyword(null, "games", "games", 1927565374), gridlife.gridui.default_games.call(null), new cljs.core.Keyword(null, "enabled-games", "enabled-games", 18345606), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "run", "run", -1821166653), false], null));
gridlife.gridui.enabled_games_ref = function enabled_games_ref() {
  return om.core.ref_cursor.call(null, (new cljs.core.Keyword(null, "enabled-games", "enabled-games", 18345606)).cljs$core$IFn$_invoke$arity$1(om.core.root_cursor.call(null, gridlife.gridui.app_state)));
};
gridlife.gridui.enabled_QMARK_ = function enabled_QMARK_(game) {
  var enabled_games = gridlife.gridui.enabled_games_ref.call(null);
  return cljs.core.some.call(null, function(enabled_games) {
    return function(p1__11038_SHARP_) {
      return cljs.core._EQ_.call(null, gridlife.gamemodel.game_name.call(null, game), p1__11038_SHARP_);
    };
  }(enabled_games), enabled_games);
};
gridlife.gridui.render_chan = cljs.core.async.chan.call(null);
gridlife.gridui.game_control_chan = cljs.core.async.chan.call(null);
gridlife.gridui.paint_cell = function paint_cell(x, y, color) {
  var x_px_pos = x * gridlife.gridui.cell_size;
  var y_px_pos = y * gridlife.gridui.cell_size;
  var canvas = document.getElementById("canvas");
  var context = canvas.getContext("2d");
  context.fillStyle = color;
  context.fillRect(x_px_pos, y_px_pos, gridlife.gridui.cell_size, gridlife.gridui.cell_size);
  return context.stroke();
};
gridlife.gridui.reset_grid = function reset_grid(app) {
  om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "gridmodel", "gridmodel", 2082730461), gridlife.gridui.empty_gridmodel.call(null));
  om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "games", "games", 1927565374), gridlife.gridui.default_games.call(null));
  var seq__11043 = cljs.core.seq.call(null, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "model", "model", 331153215)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "gridmodel", "gridmodel", 2082730461)).cljs$core$IFn$_invoke$arity$1(app))));
  var chunk__11044 = null;
  var count__11045 = 0;
  var i__11046 = 0;
  while (true) {
    if (i__11046 < count__11045) {
      var location = cljs.core._nth.call(null, chunk__11044, i__11046);
      gridlife.gridui.paint_cell.call(null, (new cljs.core.Keyword(null, "x", "x", 2099068185)).cljs$core$IFn$_invoke$arity$1(location), (new cljs.core.Keyword(null, "y", "y", -1757859776)).cljs$core$IFn$_invoke$arity$1(location), "white");
      var G__11047 = seq__11043;
      var G__11048 = chunk__11044;
      var G__11049 = count__11045;
      var G__11050 = i__11046 + 1;
      seq__11043 = G__11047;
      chunk__11044 = G__11048;
      count__11045 = G__11049;
      i__11046 = G__11050;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11043);
      if (temp__4126__auto__) {
        var seq__11043__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11043__$1)) {
          var c__4555__auto__ = cljs.core.chunk_first.call(null, seq__11043__$1);
          var G__11051 = cljs.core.chunk_rest.call(null, seq__11043__$1);
          var G__11052 = c__4555__auto__;
          var G__11053 = cljs.core.count.call(null, c__4555__auto__);
          var G__11054 = 0;
          seq__11043 = G__11051;
          chunk__11044 = G__11052;
          count__11045 = G__11053;
          i__11046 = G__11054;
          continue;
        } else {
          var location = cljs.core.first.call(null, seq__11043__$1);
          gridlife.gridui.paint_cell.call(null, (new cljs.core.Keyword(null, "x", "x", 2099068185)).cljs$core$IFn$_invoke$arity$1(location), (new cljs.core.Keyword(null, "y", "y", -1757859776)).cljs$core$IFn$_invoke$arity$1(location), "white");
          var G__11055 = cljs.core.next.call(null, seq__11043__$1);
          var G__11056 = null;
          var G__11057 = 0;
          var G__11058 = 0;
          seq__11043 = G__11055;
          chunk__11044 = G__11056;
          count__11045 = G__11057;
          i__11046 = G__11058;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
gridlife.gridui.handle_render_cell = function handle_render_cell() {
  var c__6555__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6555__auto__) {
    return function() {
      var f__6556__auto__ = function() {
        var switch__6499__auto__ = function(c__6555__auto__) {
          return function(state_11097) {
            var state_val_11098 = state_11097[1];
            if (state_val_11098 === 4) {
              var inst_11087 = state_11097[2];
              var inst_11088 = cljs.core.nth.call(null, inst_11087, 0, null);
              var inst_11089 = cljs.core.nth.call(null, inst_11087, 1, null);
              var inst_11090 = (new cljs.core.Keyword(null, "x", "x", 2099068185)).cljs$core$IFn$_invoke$arity$1(inst_11088);
              var inst_11091 = (new cljs.core.Keyword(null, "y", "y", -1757859776)).cljs$core$IFn$_invoke$arity$1(inst_11088);
              var inst_11092 = gridlife.gridui.paint_cell.call(null, inst_11090, inst_11091, inst_11089);
              var state_11097__$1 = function() {
                var statearr_11099 = state_11097;
                statearr_11099[7] = inst_11092;
                return statearr_11099;
              }();
              var statearr_11100_11109 = state_11097__$1;
              statearr_11100_11109[2] = null;
              statearr_11100_11109[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_11098 === 3) {
                var inst_11095 = state_11097[2];
                var state_11097__$1 = state_11097;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11097__$1, inst_11095);
              } else {
                if (state_val_11098 === 2) {
                  var state_11097__$1 = state_11097;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11097__$1, 4, gridlife.gridui.render_chan);
                } else {
                  if (state_val_11098 === 1) {
                    var state_11097__$1 = state_11097;
                    var statearr_11101_11110 = state_11097__$1;
                    statearr_11101_11110[2] = null;
                    statearr_11101_11110[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    return null;
                  }
                }
              }
            }
          };
        }(c__6555__auto__);
        return function(switch__6499__auto__, c__6555__auto__) {
          return function() {
            var state_machine__6500__auto__ = null;
            var state_machine__6500__auto____0 = function() {
              var statearr_11105 = [null, null, null, null, null, null, null, null];
              statearr_11105[0] = state_machine__6500__auto__;
              statearr_11105[1] = 1;
              return statearr_11105;
            };
            var state_machine__6500__auto____1 = function(state_11097) {
              while (true) {
                var ret_value__6501__auto__ = function() {
                  try {
                    while (true) {
                      var result__6502__auto__ = switch__6499__auto__.call(null, state_11097);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6502__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6502__auto__;
                      }
                      break;
                    }
                  } catch (e11106) {
                    if (e11106 instanceof Object) {
                      var ex__6503__auto__ = e11106;
                      var statearr_11107_11111 = state_11097;
                      statearr_11107_11111[5] = ex__6503__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11097);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e11106;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6501__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__11112 = state_11097;
                  state_11097 = G__11112;
                  continue;
                } else {
                  return ret_value__6501__auto__;
                }
                break;
              }
            };
            state_machine__6500__auto__ = function(state_11097) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6500__auto____0.call(this);
                case 1:
                  return state_machine__6500__auto____1.call(this, state_11097);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6500__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6500__auto____0;
            state_machine__6500__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6500__auto____1;
            return state_machine__6500__auto__;
          }();
        }(switch__6499__auto__, c__6555__auto__);
      }();
      var state__6557__auto__ = function() {
        var statearr_11108 = f__6556__auto__.call(null);
        statearr_11108[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6555__auto__;
        return statearr_11108;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6557__auto__);
    };
  }(c__6555__auto__));
  return c__6555__auto__;
};
gridlife.gridui.handle_game_control = function handle_game_control() {
  var c__6555__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6555__auto__) {
    return function() {
      var f__6556__auto__ = function() {
        var switch__6499__auto__ = function(c__6555__auto__) {
          return function(state_11200) {
            var state_val_11201 = state_11200[1];
            if (state_val_11201 === 7) {
              var inst_11196 = state_11200[2];
              var state_11200__$1 = state_11200;
              var statearr_11202_11224 = state_11200__$1;
              statearr_11202_11224[2] = inst_11196;
              statearr_11202_11224[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_11201 === 1) {
                var state_11200__$1 = state_11200;
                var statearr_11203_11225 = state_11200__$1;
                statearr_11203_11225[2] = null;
                statearr_11203_11225[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_11201 === 4) {
                  var inst_11173 = state_11200[7];
                  var inst_11172 = state_11200[8];
                  var inst_11174 = state_11200[9];
                  var inst_11172__$1 = state_11200[2];
                  var inst_11173__$1 = cljs.core.nth.call(null, inst_11172__$1, 0, null);
                  var inst_11174__$1 = cljs.core.nth.call(null, inst_11172__$1, 1, null);
                  var inst_11175 = [cljs.core.str("Handling: "), cljs.core.str(inst_11173__$1), cljs.core.str(" \x3e "), cljs.core.str(inst_11174__$1)].join("");
                  var inst_11176 = cljs.core.println.call(null, inst_11175);
                  var inst_11177 = gridlife.gridui.enabled_games_ref.call(null);
                  var state_11200__$1 = function() {
                    var statearr_11204 = state_11200;
                    statearr_11204[10] = inst_11176;
                    statearr_11204[7] = inst_11173__$1;
                    statearr_11204[11] = inst_11177;
                    statearr_11204[8] = inst_11172__$1;
                    statearr_11204[9] = inst_11174__$1;
                    return statearr_11204;
                  }();
                  if (cljs.core.truth_(inst_11174__$1)) {
                    var statearr_11205_11226 = state_11200__$1;
                    statearr_11205_11226[1] = 5;
                  } else {
                    var statearr_11206_11227 = state_11200__$1;
                    statearr_11206_11227[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_11201 === 13) {
                    var inst_11194 = state_11200[2];
                    var state_11200__$1 = state_11200;
                    var statearr_11207_11228 = state_11200__$1;
                    statearr_11207_11228[2] = inst_11194;
                    statearr_11207_11228[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_11201 === 6) {
                      var inst_11173 = state_11200[7];
                      var inst_11177 = state_11200[11];
                      var inst_11187 = cljs.core.contains_QMARK_.call(null, inst_11177, inst_11173);
                      var state_11200__$1 = state_11200;
                      if (inst_11187) {
                        var statearr_11208_11229 = state_11200__$1;
                        statearr_11208_11229[1] = 11;
                      } else {
                        var statearr_11209_11230 = state_11200__$1;
                        statearr_11209_11230[1] = 12;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_11201 === 3) {
                        var inst_11198 = state_11200[2];
                        var state_11200__$1 = state_11200;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11200__$1, inst_11198);
                      } else {
                        if (state_val_11201 === 12) {
                          var state_11200__$1 = state_11200;
                          var statearr_11210_11231 = state_11200__$1;
                          statearr_11210_11231[2] = null;
                          statearr_11210_11231[1] = 13;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_11201 === 2) {
                            var state_11200__$1 = state_11200;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11200__$1, 4, gridlife.gridui.render_chan);
                          } else {
                            if (state_val_11201 === 11) {
                              var inst_11173 = state_11200[7];
                              var inst_11177 = state_11200[11];
                              var inst_11172 = state_11200[8];
                              var inst_11174 = state_11200[9];
                              var inst_11189 = function() {
                                var enabled_games = inst_11177;
                                var enable = inst_11174;
                                var name = inst_11173;
                                var vec__11170 = inst_11172;
                                return function(enabled_games, enable, name, vec__11170, inst_11173, inst_11177, inst_11172, inst_11174, state_val_11201, c__6555__auto__) {
                                  return function(p1__11113_SHARP_) {
                                    return cljs.core._EQ_.call(null, name, p1__11113_SHARP_);
                                  };
                                }(enabled_games, enable, name, vec__11170, inst_11173, inst_11177, inst_11172, inst_11174, state_val_11201, c__6555__auto__);
                              }();
                              var inst_11190 = cljs.core.remove.call(null, inst_11189, inst_11177);
                              var inst_11191 = om.core.update_BANG_.call(null, inst_11177, inst_11190);
                              var state_11200__$1 = state_11200;
                              var statearr_11211_11232 = state_11200__$1;
                              statearr_11211_11232[2] = inst_11191;
                              statearr_11211_11232[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_11201 === 9) {
                                var inst_11173 = state_11200[7];
                                var inst_11177 = state_11200[11];
                                var inst_11182 = cljs.core.cons.call(null, inst_11173, inst_11177);
                                var inst_11183 = om.core.update_BANG_.call(null, inst_11177, inst_11182);
                                var state_11200__$1 = state_11200;
                                var statearr_11212_11233 = state_11200__$1;
                                statearr_11212_11233[2] = inst_11183;
                                statearr_11212_11233[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_11201 === 5) {
                                  var inst_11173 = state_11200[7];
                                  var inst_11177 = state_11200[11];
                                  var inst_11179 = cljs.core.contains_QMARK_.call(null, inst_11177, inst_11173);
                                  var state_11200__$1 = state_11200;
                                  if (inst_11179) {
                                    var statearr_11213_11234 = state_11200__$1;
                                    statearr_11213_11234[1] = 8;
                                  } else {
                                    var statearr_11214_11235 = state_11200__$1;
                                    statearr_11214_11235[1] = 9;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_11201 === 10) {
                                    var inst_11185 = state_11200[2];
                                    var state_11200__$1 = state_11200;
                                    var statearr_11215_11236 = state_11200__$1;
                                    statearr_11215_11236[2] = inst_11185;
                                    statearr_11215_11236[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_11201 === 8) {
                                      var state_11200__$1 = state_11200;
                                      var statearr_11216_11237 = state_11200__$1;
                                      statearr_11216_11237[2] = null;
                                      statearr_11216_11237[1] = 10;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6555__auto__);
        return function(switch__6499__auto__, c__6555__auto__) {
          return function() {
            var state_machine__6500__auto__ = null;
            var state_machine__6500__auto____0 = function() {
              var statearr_11220 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_11220[0] = state_machine__6500__auto__;
              statearr_11220[1] = 1;
              return statearr_11220;
            };
            var state_machine__6500__auto____1 = function(state_11200) {
              while (true) {
                var ret_value__6501__auto__ = function() {
                  try {
                    while (true) {
                      var result__6502__auto__ = switch__6499__auto__.call(null, state_11200);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6502__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6502__auto__;
                      }
                      break;
                    }
                  } catch (e11221) {
                    if (e11221 instanceof Object) {
                      var ex__6503__auto__ = e11221;
                      var statearr_11222_11238 = state_11200;
                      statearr_11222_11238[5] = ex__6503__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11200);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e11221;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6501__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__11239 = state_11200;
                  state_11200 = G__11239;
                  continue;
                } else {
                  return ret_value__6501__auto__;
                }
                break;
              }
            };
            state_machine__6500__auto__ = function(state_11200) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6500__auto____0.call(this);
                case 1:
                  return state_machine__6500__auto____1.call(this, state_11200);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6500__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6500__auto____0;
            state_machine__6500__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6500__auto____1;
            return state_machine__6500__auto__;
          }();
        }(switch__6499__auto__, c__6555__auto__);
      }();
      var state__6557__auto__ = function() {
        var statearr_11223 = f__6556__auto__.call(null);
        statearr_11223[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6555__auto__;
        return statearr_11223;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6557__auto__);
    };
  }(c__6555__auto__));
  return c__6555__auto__;
};
gridlife.gridui.set_request_anim_frame_function = function set_request_anim_frame_function() {
  var std_function = window.requestAnimationFrame;
  var webkit_function = window.webkitRequestAnimationFrame;
  var moz_function = window.mozRequestAnimationFrame;
  var fallback_function = function(std_function, webkit_function, moz_function) {
    return function(callback) {
      return window.setTimeout(callback, 1E3 / 30);
    };
  }(std_function, webkit_function, moz_function);
  var use = function() {
    var or__3768__auto__ = std_function;
    if (cljs.core.truth_(or__3768__auto__)) {
      return or__3768__auto__;
    } else {
      var or__3768__auto____$1 = webkit_function;
      if (cljs.core.truth_(or__3768__auto____$1)) {
        return or__3768__auto____$1;
      } else {
        var or__3768__auto____$2 = moz_function;
        if (cljs.core.truth_(or__3768__auto____$2)) {
          return or__3768__auto____$2;
        } else {
          return fallback_function;
        }
      }
    }
  }();
  return window.requestAnimFrame = use;
};
gridlife.gridui.reduce_games = function reduce_games(result, game) {
  var vec__11242 = result;
  var gridmodel = cljs.core.nth.call(null, vec__11242, 0, null);
  var games = cljs.core.nth.call(null, vec__11242, 1, null);
  var repaint_instructions = cljs.core.nth.call(null, vec__11242, 2, null);
  var vec__11243 = cljs.core.truth_(gridlife.gridui.enabled_QMARK_.call(null, game)) ? gridlife.gamemodel.tick.call(null, game, gridmodel) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [gridmodel, game, repaint_instructions], null);
  var next_gridmodel = cljs.core.nth.call(null, vec__11243, 0, null);
  var new_game = cljs.core.nth.call(null, vec__11243, 1, null);
  var new_repaint_instructions = cljs.core.nth.call(null, vec__11243, 2, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [next_gridmodel, cljs.core.cons.call(null, new_game, games), cljs.core.into.call(null, repaint_instructions, new_repaint_instructions)], null);
};
gridlife.gridui.repaint = function repaint(repaint_instructions) {
  var seq__11248 = cljs.core.seq.call(null, repaint_instructions);
  var chunk__11249 = null;
  var count__11250 = 0;
  var i__11251 = 0;
  while (true) {
    if (i__11251 < count__11250) {
      var location_color = cljs.core._nth.call(null, chunk__11249, i__11251);
      cljs.core.async.put_BANG_.call(null, gridlife.gridui.render_chan, location_color);
      var G__11252 = seq__11248;
      var G__11253 = chunk__11249;
      var G__11254 = count__11250;
      var G__11255 = i__11251 + 1;
      seq__11248 = G__11252;
      chunk__11249 = G__11253;
      count__11250 = G__11254;
      i__11251 = G__11255;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11248);
      if (temp__4126__auto__) {
        var seq__11248__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11248__$1)) {
          var c__4555__auto__ = cljs.core.chunk_first.call(null, seq__11248__$1);
          var G__11256 = cljs.core.chunk_rest.call(null, seq__11248__$1);
          var G__11257 = c__4555__auto__;
          var G__11258 = cljs.core.count.call(null, c__4555__auto__);
          var G__11259 = 0;
          seq__11248 = G__11256;
          chunk__11249 = G__11257;
          count__11250 = G__11258;
          i__11251 = G__11259;
          continue;
        } else {
          var location_color = cljs.core.first.call(null, seq__11248__$1);
          cljs.core.async.put_BANG_.call(null, gridlife.gridui.render_chan, location_color);
          var G__11260 = cljs.core.next.call(null, seq__11248__$1);
          var G__11261 = null;
          var G__11262 = 0;
          var G__11263 = 0;
          seq__11248 = G__11260;
          chunk__11249 = G__11261;
          count__11250 = G__11262;
          i__11251 = G__11263;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
gridlife.gridui.run_frame = function run_frame(app, last_time) {
  var current_time = (new Date).getTime();
  var difference = current_time - last_time;
  var max_moves_per_second = 15;
  var frame_rate_millis = 1E3 / max_moves_per_second;
  var gridmodel = (new cljs.core.Keyword(null, "gridmodel", "gridmodel", 2082730461)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app));
  if (cljs.core.truth_(function() {
    var and__3756__auto__ = difference > frame_rate_millis;
    if (and__3756__auto__) {
      return(new cljs.core.Keyword(null, "run", "run", -1821166653)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app));
    } else {
      return and__3756__auto__;
    }
  }())) {
    var vec__11265 = cljs.core.reduce.call(null, gridlife.gridui.reduce_games, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [gridmodel, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY], null), (new cljs.core.Keyword(null, "games", "games", 1927565374)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app)));
    var new_gridmodel = cljs.core.nth.call(null, vec__11265, 0, null);
    var new_games = cljs.core.nth.call(null, vec__11265, 1, null);
    var repaint_instructions = cljs.core.nth.call(null, vec__11265, 2, null);
    om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "gridmodel", "gridmodel", 2082730461), new_gridmodel);
    om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "games", "games", 1927565374), new_games);
    gridlife.gridui.repaint.call(null, repaint_instructions);
    return window.requestAnimFrame(function(vec__11265, new_gridmodel, new_games, repaint_instructions, current_time, difference, max_moves_per_second, frame_rate_millis, gridmodel) {
      return function() {
        return run_frame.call(null, app, current_time);
      };
    }(vec__11265, new_gridmodel, new_games, repaint_instructions, current_time, difference, max_moves_per_second, frame_rate_millis, gridmodel));
  } else {
    return window.requestAnimFrame(function(current_time, difference, max_moves_per_second, frame_rate_millis, gridmodel) {
      return function() {
        return run_frame.call(null, app, last_time);
      };
    }(current_time, difference, max_moves_per_second, frame_rate_millis, gridmodel));
  }
};
gridlife.gridui.init_grid_rendering = function init_grid_rendering(app) {
  gridlife.gridui.set_request_anim_frame_function.call(null);
  return window.requestAnimFrame(function() {
    return gridlife.gridui.run_frame.call(null, app, (new Date).getTime());
  });
};
gridlife.gridui.game_checkbox = function game_checkbox(game, owner) {
  cljs.core.println.call(null, "game \x3d ", game);
  cljs.core.println.call(null, "owner \x3d ", owner);
  if (typeof gridlife.gridui.t11270 !== "undefined") {
  } else {
    gridlife.gridui.t11270 = function(owner, game, game_checkbox, meta11271) {
      this.owner = owner;
      this.game = game;
      this.game_checkbox = game_checkbox;
      this.meta11271 = meta11271;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    gridlife.gridui.t11270.prototype.om$core$IRender$ = true;
    gridlife.gridui.t11270.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var name = gridlife.gamemodel.game_name.call(null, self__.game);
      return React.DOM.div(null, sablono.interpreter.input.call(null, {"type":"checkbox", "checked":gridlife.gridui.enabled_QMARK_.call(null, self__.game), "onClick":function(name, ___$1) {
        return function() {
          return cljs.core.async.put_BANG_.call(null, gridlife.gridui.game_control_chan, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, cljs.core.not.call(null, gridlife.gridui.enabled_QMARK_.call(null, self__.game))], null));
        };
      }(name, ___$1)}), function() {
        var attrs11273 = name;
        return cljs.core.apply.call(null, React.DOM.label, cljs.core.map_QMARK_.call(null, attrs11273) ? sablono.interpreter.attributes.call(null, attrs11273) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs11273) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs11273)], null)));
      }());
    };
    gridlife.gridui.t11270.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11272) {
      var self__ = this;
      var _11272__$1 = this;
      return self__.meta11271;
    };
    gridlife.gridui.t11270.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11272, meta11271__$1) {
      var self__ = this;
      var _11272__$1 = this;
      return new gridlife.gridui.t11270(self__.owner, self__.game, self__.game_checkbox, meta11271__$1);
    };
    gridlife.gridui.t11270.cljs$lang$type = true;
    gridlife.gridui.t11270.cljs$lang$ctorStr = "gridlife.gridui/t11270";
    gridlife.gridui.t11270.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
      return cljs.core._write.call(null, writer__4356__auto__, "gridlife.gridui/t11270");
    };
    gridlife.gridui.__GT_t11270 = function __GT_t11270(owner__$1, game__$1, game_checkbox__$1, meta11271) {
      return new gridlife.gridui.t11270(owner__$1, game__$1, game_checkbox__$1, meta11271);
    };
  }
  return new gridlife.gridui.t11270(owner, game, game_checkbox, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 15, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 202, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 191, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\src\\gridlife\\gridui.cljs"], 
  null));
};
gridlife.gridui.controls_component = function controls_component(app, _) {
  if (typeof gridlife.gridui.t11278 !== "undefined") {
  } else {
    gridlife.gridui.t11278 = function(_, app, controls_component, meta11279) {
      this._ = _;
      this.app = app;
      this.controls_component = controls_component;
      this.meta11279 = meta11279;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    gridlife.gridui.t11278.prototype.om$core$IRender$ = true;
    gridlife.gridui.t11278.prototype.om$core$IRender$render$arity$1 = function(___$1) {
      var self__ = this;
      var ___$2 = this;
      return React.DOM.div(null, React.DOM.div({"className":"btn-group btn-group-sm", "id":"buttons", "role":"group"}, React.DOM.button({"className":"btn btn-default", "type":"button", "onClick":function(___$2) {
        return function() {
          return om.core.transact_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "run", "run", -1821166653), cljs.core.not);
        };
      }(___$2)}, cljs.core.truth_((new cljs.core.Keyword(null, "run", "run", -1821166653)).cljs$core$IFn$_invoke$arity$1(self__.app)) ? "Stop" : "Start"), React.DOM.button({"className":"btn btn-default", "type":"button", "onClick":function(___$2) {
        return function() {
          return gridlife.gridui.reset_grid.call(null, self__.app);
        };
      }(___$2)}, "Reset")), function() {
        var attrs11281 = om.core.build_all.call(null, gridlife.gridui.game_checkbox, (new cljs.core.Keyword(null, "games", "games", 1927565374)).cljs$core$IFn$_invoke$arity$1(self__.app));
        return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs11281) ? sablono.interpreter.attributes.call(null, attrs11281) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs11281) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs11281)], null)));
      }());
    };
    gridlife.gridui.t11278.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11280) {
      var self__ = this;
      var _11280__$1 = this;
      return self__.meta11279;
    };
    gridlife.gridui.t11278.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11280, meta11279__$1) {
      var self__ = this;
      var _11280__$1 = this;
      return new gridlife.gridui.t11278(self__._, self__.app, self__.controls_component, meta11279__$1);
    };
    gridlife.gridui.t11278.cljs$lang$type = true;
    gridlife.gridui.t11278.cljs$lang$ctorStr = "gridlife.gridui/t11278";
    gridlife.gridui.t11278.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
      return cljs.core._write.call(null, writer__4356__auto__, "gridlife.gridui/t11278");
    };
    gridlife.gridui.__GT_t11278 = function __GT_t11278(___$1, app__$1, controls_component__$1, meta11279) {
      return new gridlife.gridui.t11278(___$1, app__$1, controls_component__$1, meta11279);
    };
  }
  return new gridlife.gridui.t11278(_, app, controls_component, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 14, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 219, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 208, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\src\\gridlife\\gridui.cljs"], 
  null));
};
gridlife.gridui.grid_component = function grid_component(app, _) {
  if (typeof gridlife.gridui.t11285 !== "undefined") {
  } else {
    gridlife.gridui.t11285 = function(_, app, grid_component, meta11286) {
      this._ = _;
      this.app = app;
      this.grid_component = grid_component;
      this.meta11286 = meta11286;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    gridlife.gridui.t11285.prototype.om$core$IRender$ = true;
    gridlife.gridui.t11285.prototype.om$core$IRender$render$arity$1 = function(___$1) {
      var self__ = this;
      var ___$2 = this;
      var cells_wide = (new cljs.core.Keyword(null, "cells-wide", "cells-wide", -1579921448)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "gridmodel", "gridmodel", 2082730461)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.app)));
      var cells_high = (new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "gridmodel", "gridmodel", 2082730461)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.app)));
      var pxwidth = gridlife.gridui.cell_size * cells_wide;
      var pxheight = gridlife.gridui.cell_size * cells_high;
      return React.DOM.div(null, React.DOM.canvas({"className":"canvas", "id":"canvas", "width":pxwidth, "height":pxheight}));
    };
    gridlife.gridui.t11285.prototype.om$core$IDidMount$ = true;
    gridlife.gridui.t11285.prototype.om$core$IDidMount$did_mount$arity$1 = function(___$1) {
      var self__ = this;
      var ___$2 = this;
      gridlife.gridui.reset_grid.call(null, self__.app);
      gridlife.gridui.handle_render_cell.call(null);
      gridlife.gridui.handle_game_control.call(null);
      return gridlife.gridui.init_grid_rendering.call(null, self__.app);
    };
    gridlife.gridui.t11285.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11287) {
      var self__ = this;
      var _11287__$1 = this;
      return self__.meta11286;
    };
    gridlife.gridui.t11285.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11287, meta11286__$1) {
      var self__ = this;
      var _11287__$1 = this;
      return new gridlife.gridui.t11285(self__._, self__.app, self__.grid_component, meta11286__$1);
    };
    gridlife.gridui.t11285.cljs$lang$type = true;
    gridlife.gridui.t11285.cljs$lang$ctorStr = "gridlife.gridui/t11285";
    gridlife.gridui.t11285.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
      return cljs.core._write.call(null, writer__4356__auto__, "gridlife.gridui/t11285");
    };
    gridlife.gridui.__GT_t11285 = function __GT_t11285(___$1, app__$1, grid_component__$1, meta11286) {
      return new gridlife.gridui.t11285(___$1, app__$1, grid_component__$1, meta11286);
    };
  }
  return new gridlife.gridui.t11285(_, app, grid_component, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 15, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 239, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 223, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\src\\gridlife\\gridui.cljs"], 
  null));
};
om.core.root.call(null, gridlife.gridui.controls_component, gridlife.gridui.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById("controls")], null));
om.core.root.call(null, gridlife.gridui.grid_component, gridlife.gridui.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById("content")], null));

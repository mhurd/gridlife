if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2760";
cljs.core._STAR_unchecked_if_STAR_ = false;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__11317__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__11316 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__11316) : cljs.core.into_array.call(null, G__11316);
      }());
    };
    var G__11317 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__11318__i = 0, G__11318__a = new Array(arguments.length - 0);
        while (G__11318__i < G__11318__a.length) {
          G__11318__a[G__11318__i] = arguments[G__11318__i + 0];
          ++G__11318__i;
        }
        args = new cljs.core.IndexedSeq(G__11318__a, 0);
      }
      return G__11317__delegate.call(this, args);
    };
    G__11317.cljs$lang$maxFixedArity = 0;
    G__11317.cljs$lang$applyTo = function(arglist__11319) {
      var args = cljs.core.seq(arglist__11319);
      return G__11317__delegate(args);
    };
    G__11317.cljs$core$IFn$_invoke$arity$variadic = G__11317__delegate;
    return G__11317;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var G__11321 = x;
  return goog.isString(G__11321);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__11323 = x__$1;
    return goog.typeOf(G__11323);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3756__auto__ = ty;
    if (cljs.core.truth_(and__3756__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3756__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__11325 = obj;
    return goog.typeOf(G__11325);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.importScript_(file);
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__11327 = Symbol;
  return goog.typeOf(G__11327);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.cljs$core$IFn$_invoke$arity$1(size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4655__auto___11329 = len;
  var i_11330 = 0;
  while (true) {
    if (i_11330 < n__4655__auto___11329) {
      new_arr[i_11330] = arr[i_11330];
      var G__11331 = i_11330 + 1;
      i_11330 = G__11331;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__11332 = i + 1;
      i = G__11332;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__11341__delegate = function(array, i, idxs) {
      var G__11338 = aget;
      var G__11339 = aget.cljs$core$IFn$_invoke$arity$2(array, i);
      var G__11340 = idxs;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__11338, G__11339, G__11340) : cljs.core.apply.call(null, G__11338, G__11339, G__11340);
    };
    var G__11341 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        var G__11342__i = 0, G__11342__a = new Array(arguments.length - 2);
        while (G__11342__i < G__11342__a.length) {
          G__11342__a[G__11342__i] = arguments[G__11342__i + 2];
          ++G__11342__i;
        }
        idxs = new cljs.core.IndexedSeq(G__11342__a, 0);
      }
      return G__11341__delegate.call(this, array, i, idxs);
    };
    G__11341.cljs$lang$maxFixedArity = 2;
    G__11341.cljs$lang$applyTo = function(arglist__11343) {
      var array = cljs.core.first(arglist__11343);
      arglist__11343 = cljs.core.next(arglist__11343);
      var i = cljs.core.first(arglist__11343);
      var idxs = cljs.core.rest(arglist__11343);
      return G__11341__delegate(array, i, idxs);
    };
    G__11341.cljs$core$IFn$_invoke$arity$variadic = G__11341__delegate;
    return G__11341;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        var G__11344 = null;
        if (arguments.length > 2) {
          var G__11345__i = 0, G__11345__a = new Array(arguments.length - 2);
          while (G__11345__i < G__11345__a.length) {
            G__11345__a[G__11345__i] = arguments[G__11345__i + 2];
            ++G__11345__i;
          }
          G__11344 = new cljs.core.IndexedSeq(G__11345__a, 0);
        }
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, G__11344);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__11354__delegate = function(array, idx, idx2, idxv) {
      var G__11350 = aset;
      var G__11351 = array[idx];
      var G__11352 = idx2;
      var G__11353 = idxv;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__11350, G__11351, G__11352, G__11353) : cljs.core.apply.call(null, G__11350, G__11351, G__11352, G__11353);
    };
    var G__11354 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        var G__11355__i = 0, G__11355__a = new Array(arguments.length - 3);
        while (G__11355__i < G__11355__a.length) {
          G__11355__a[G__11355__i] = arguments[G__11355__i + 3];
          ++G__11355__i;
        }
        idxv = new cljs.core.IndexedSeq(G__11355__a, 0);
      }
      return G__11354__delegate.call(this, array, idx, idx2, idxv);
    };
    G__11354.cljs$lang$maxFixedArity = 3;
    G__11354.cljs$lang$applyTo = function(arglist__11356) {
      var array = cljs.core.first(arglist__11356);
      arglist__11356 = cljs.core.next(arglist__11356);
      var idx = cljs.core.first(arglist__11356);
      arglist__11356 = cljs.core.next(arglist__11356);
      var idx2 = cljs.core.first(arglist__11356);
      var idxv = cljs.core.rest(arglist__11356);
      return G__11354__delegate(array, idx, idx2, idxv);
    };
    G__11354.cljs$core$IFn$_invoke$arity$variadic = G__11354__delegate;
    return G__11354;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        var G__11357 = null;
        if (arguments.length > 3) {
          var G__11358__i = 0, G__11358__a = new Array(arguments.length - 3);
          while (G__11358__i < G__11358__a.length) {
            G__11358__a[G__11358__i] = arguments[G__11358__i + 3];
            ++G__11358__i;
          }
          G__11357 = new cljs.core.IndexedSeq(G__11358__a, 0);
        }
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, G__11357);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    var G__11364 = function(a, x) {
      a.push(x);
      return a;
    };
    var G__11365 = [];
    var G__11366 = aseq;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__11364, G__11365, G__11366) : cljs.core.reduce.call(null, G__11364, G__11365, G__11366);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.js_invoke = function() {
  var js_invoke__delegate = function(obj, s, args) {
    return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
  };
  var js_invoke = function(obj, s, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__11367__i = 0, G__11367__a = new Array(arguments.length - 2);
      while (G__11367__i < G__11367__a.length) {
        G__11367__a[G__11367__i] = arguments[G__11367__i + 2];
        ++G__11367__i;
      }
      args = new cljs.core.IndexedSeq(G__11367__a, 0);
    }
    return js_invoke__delegate.call(this, obj, s, args);
  };
  js_invoke.cljs$lang$maxFixedArity = 2;
  js_invoke.cljs$lang$applyTo = function(arglist__11368) {
    var obj = cljs.core.first(arglist__11368);
    arglist__11368 = cljs.core.next(arglist__11368);
    var s = cljs.core.first(arglist__11368);
    var args = cljs.core.rest(arglist__11368);
    return js_invoke__delegate(obj, s, args);
  };
  js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
  return js_invoke;
}();
cljs.core.Fn = function() {
  var obj11370 = {};
  return obj11370;
}();
cljs.core.IFn = function() {
  var obj11372 = {};
  return obj11372;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11418 = x__4412__auto__;
          return goog.typeOf(G__11418);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11420 = x__4412__auto__;
          return goog.typeOf(G__11420);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11422 = x__4412__auto__;
          return goog.typeOf(G__11422);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11424 = x__4412__auto__;
          return goog.typeOf(G__11424);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11426 = x__4412__auto__;
          return goog.typeOf(G__11426);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11428 = x__4412__auto__;
          return goog.typeOf(G__11428);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11430 = x__4412__auto__;
          return goog.typeOf(G__11430);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11432 = x__4412__auto__;
          return goog.typeOf(G__11432);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11434 = x__4412__auto__;
          return goog.typeOf(G__11434);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11436 = x__4412__auto__;
          return goog.typeOf(G__11436);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11438 = x__4412__auto__;
          return goog.typeOf(G__11438);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11440 = x__4412__auto__;
          return goog.typeOf(G__11440);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11442 = x__4412__auto__;
          return goog.typeOf(G__11442);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11444 = x__4412__auto__;
          return goog.typeOf(G__11444);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11446 = x__4412__auto__;
          return goog.typeOf(G__11446);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11448 = x__4412__auto__;
          return goog.typeOf(G__11448);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11450 = x__4412__auto__;
          return goog.typeOf(G__11450);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11452 = x__4412__auto__;
          return goog.typeOf(G__11452);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11454 = x__4412__auto__;
          return goog.typeOf(G__11454);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11456 = x__4412__auto__;
          return goog.typeOf(G__11456);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11458 = x__4412__auto__;
          return goog.typeOf(G__11458);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var _invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = cljs.core._invoke[function() {
          var G__11460 = x__4412__auto__;
          return goog.typeOf(G__11460);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._invoke["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return _invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  _invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj11462 = {};
  return obj11462;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3756__auto__ = value;
    if (and__3756__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4412__auto__ = value == null ? null : value;
    return function() {
      var or__3768__auto__ = cljs.core._clone[function() {
        var G__11466 = x__4412__auto__;
        return goog.typeOf(G__11466);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._clone["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj11468 = {};
  return obj11468;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._count[function() {
        var G__11472 = x__4412__auto__;
        return goog.typeOf(G__11472);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._count["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj11474 = {};
  return obj11474;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._empty[function() {
        var G__11478 = x__4412__auto__;
        return goog.typeOf(G__11478);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._empty["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj11480 = {};
  return obj11480;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._conj[function() {
        var G__11484 = x__4412__auto__;
        return goog.typeOf(G__11484);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._conj["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj11486 = {};
  return obj11486;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3756__auto__ = coll;
      if (and__3756__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4412__auto__ = coll == null ? null : coll;
      return function() {
        var or__3768__auto__ = cljs.core._nth[function() {
          var G__11492 = x__4412__auto__;
          return goog.typeOf(G__11492);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._nth["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3756__auto__ = coll;
      if (and__3756__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4412__auto__ = coll == null ? null : coll;
      return function() {
        var or__3768__auto__ = cljs.core._nth[function() {
          var G__11494 = x__4412__auto__;
          return goog.typeOf(G__11494);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._nth["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj11496 = {};
  return obj11496;
}();
cljs.core.ISeq = function() {
  var obj11498 = {};
  return obj11498;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._first[function() {
        var G__11502 = x__4412__auto__;
        return goog.typeOf(G__11502);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._first["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._rest[function() {
        var G__11506 = x__4412__auto__;
        return goog.typeOf(G__11506);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._rest["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj11508 = {};
  return obj11508;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._next[function() {
        var G__11512 = x__4412__auto__;
        return goog.typeOf(G__11512);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._next["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj11514 = {};
  return obj11514;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3756__auto__ = o;
      if (and__3756__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4412__auto__ = o == null ? null : o;
      return function() {
        var or__3768__auto__ = cljs.core._lookup[function() {
          var G__11520 = x__4412__auto__;
          return goog.typeOf(G__11520);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._lookup["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3756__auto__ = o;
      if (and__3756__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4412__auto__ = o == null ? null : o;
      return function() {
        var or__3768__auto__ = cljs.core._lookup[function() {
          var G__11522 = x__4412__auto__;
          return goog.typeOf(G__11522);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._lookup["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj11524 = {};
  return obj11524;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__11528 = x__4412__auto__;
        return goog.typeOf(G__11528);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._assoc[function() {
        var G__11532 = x__4412__auto__;
        return goog.typeOf(G__11532);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._assoc["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj11534 = {};
  return obj11534;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._dissoc[function() {
        var G__11538 = x__4412__auto__;
        return goog.typeOf(G__11538);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._dissoc["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj11540 = {};
  return obj11540;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._key[function() {
        var G__11544 = x__4412__auto__;
        return goog.typeOf(G__11544);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._key["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._val[function() {
        var G__11548 = x__4412__auto__;
        return goog.typeOf(G__11548);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._val["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj11550 = {};
  return obj11550;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._disjoin[function() {
        var G__11554 = x__4412__auto__;
        return goog.typeOf(G__11554);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._disjoin["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj11556 = {};
  return obj11556;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._peek[function() {
        var G__11560 = x__4412__auto__;
        return goog.typeOf(G__11560);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._peek["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._pop[function() {
        var G__11564 = x__4412__auto__;
        return goog.typeOf(G__11564);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._pop["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj11566 = {};
  return obj11566;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._assoc_n[function() {
        var G__11570 = x__4412__auto__;
        return goog.typeOf(G__11570);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj11572 = {};
  return obj11572;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3756__auto__ = o;
    if (and__3756__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4412__auto__ = o == null ? null : o;
    return function() {
      var or__3768__auto__ = cljs.core._deref[function() {
        var G__11576 = x__4412__auto__;
        return goog.typeOf(G__11576);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._deref["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj11578 = {};
  return obj11578;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3756__auto__ = o;
    if (and__3756__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4412__auto__ = o == null ? null : o;
    return function() {
      var or__3768__auto__ = cljs.core._deref_with_timeout[function() {
        var G__11582 = x__4412__auto__;
        return goog.typeOf(G__11582);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj11584 = {};
  return obj11584;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3756__auto__ = o;
    if (and__3756__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4412__auto__ = o == null ? null : o;
    return function() {
      var or__3768__auto__ = cljs.core._meta[function() {
        var G__11588 = x__4412__auto__;
        return goog.typeOf(G__11588);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._meta["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj11590 = {};
  return obj11590;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3756__auto__ = o;
    if (and__3756__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4412__auto__ = o == null ? null : o;
    return function() {
      var or__3768__auto__ = cljs.core._with_meta[function() {
        var G__11594 = x__4412__auto__;
        return goog.typeOf(G__11594);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._with_meta["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj11596 = {};
  return obj11596;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3756__auto__ = coll;
      if (and__3756__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4412__auto__ = coll == null ? null : coll;
      return function() {
        var or__3768__auto__ = cljs.core._reduce[function() {
          var G__11602 = x__4412__auto__;
          return goog.typeOf(G__11602);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._reduce["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3756__auto__ = coll;
      if (and__3756__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4412__auto__ = coll == null ? null : coll;
      return function() {
        var or__3768__auto__ = cljs.core._reduce[function() {
          var G__11604 = x__4412__auto__;
          return goog.typeOf(G__11604);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._reduce["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj11606 = {};
  return obj11606;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._kv_reduce[function() {
        var G__11610 = x__4412__auto__;
        return goog.typeOf(G__11610);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj11612 = {};
  return obj11612;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3756__auto__ = o;
    if (and__3756__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4412__auto__ = o == null ? null : o;
    return function() {
      var or__3768__auto__ = cljs.core._equiv[function() {
        var G__11616 = x__4412__auto__;
        return goog.typeOf(G__11616);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._equiv["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj11618 = {};
  return obj11618;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3756__auto__ = o;
    if (and__3756__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4412__auto__ = o == null ? null : o;
    return function() {
      var or__3768__auto__ = cljs.core._hash[function() {
        var G__11622 = x__4412__auto__;
        return goog.typeOf(G__11622);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._hash["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj11624 = {};
  return obj11624;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3756__auto__ = o;
    if (and__3756__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4412__auto__ = o == null ? null : o;
    return function() {
      var or__3768__auto__ = cljs.core._seq[function() {
        var G__11628 = x__4412__auto__;
        return goog.typeOf(G__11628);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._seq["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj11630 = {};
  return obj11630;
}();
cljs.core.IList = function() {
  var obj11632 = {};
  return obj11632;
}();
cljs.core.IRecord = function() {
  var obj11634 = {};
  return obj11634;
}();
cljs.core.IReversible = function() {
  var obj11636 = {};
  return obj11636;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._rseq[function() {
        var G__11640 = x__4412__auto__;
        return goog.typeOf(G__11640);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._rseq["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj11642 = {};
  return obj11642;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._sorted_seq[function() {
        var G__11646 = x__4412__auto__;
        return goog.typeOf(G__11646);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._sorted_seq_from[function() {
        var G__11650 = x__4412__auto__;
        return goog.typeOf(G__11650);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._entry_key[function() {
        var G__11654 = x__4412__auto__;
        return goog.typeOf(G__11654);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._entry_key["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._comparator[function() {
        var G__11658 = x__4412__auto__;
        return goog.typeOf(G__11658);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._comparator["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj11660 = {};
  return obj11660;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3756__auto__ = writer;
    if (and__3756__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4412__auto__ = writer == null ? null : writer;
    return function() {
      var or__3768__auto__ = cljs.core._write[function() {
        var G__11664 = x__4412__auto__;
        return goog.typeOf(G__11664);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._write["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3756__auto__ = writer;
    if (and__3756__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4412__auto__ = writer == null ? null : writer;
    return function() {
      var or__3768__auto__ = cljs.core._flush[function() {
        var G__11668 = x__4412__auto__;
        return goog.typeOf(G__11668);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._flush["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj11670 = {};
  return obj11670;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3756__auto__ = o;
    if (and__3756__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4412__auto__ = o == null ? null : o;
    return function() {
      var or__3768__auto__ = cljs.core._pr_writer[function() {
        var G__11674 = x__4412__auto__;
        return goog.typeOf(G__11674);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj11676 = {};
  return obj11676;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3756__auto__ = d;
    if (and__3756__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4412__auto__ = d == null ? null : d;
    return function() {
      var or__3768__auto__ = cljs.core._realized_QMARK_[function() {
        var G__11680 = x__4412__auto__;
        return goog.typeOf(G__11680);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj11682 = {};
  return obj11682;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = cljs.core._notify_watches[function() {
        var G__11686 = x__4412__auto__;
        return goog.typeOf(G__11686);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = cljs.core._add_watch[function() {
        var G__11690 = x__4412__auto__;
        return goog.typeOf(G__11690);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._add_watch["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = cljs.core._remove_watch[function() {
        var G__11694 = x__4412__auto__;
        return goog.typeOf(G__11694);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj11696 = {};
  return obj11696;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._as_transient[function() {
        var G__11700 = x__4412__auto__;
        return goog.typeOf(G__11700);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._as_transient["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj11702 = {};
  return obj11702;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3756__auto__ = tcoll;
    if (and__3756__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4412__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3768__auto__ = cljs.core._conj_BANG_[function() {
        var G__11706 = x__4412__auto__;
        return goog.typeOf(G__11706);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3756__auto__ = tcoll;
    if (and__3756__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4412__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3768__auto__ = cljs.core._persistent_BANG_[function() {
        var G__11710 = x__4412__auto__;
        return goog.typeOf(G__11710);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj11712 = {};
  return obj11712;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3756__auto__ = tcoll;
    if (and__3756__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4412__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3768__auto__ = cljs.core._assoc_BANG_[function() {
        var G__11716 = x__4412__auto__;
        return goog.typeOf(G__11716);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj11718 = {};
  return obj11718;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3756__auto__ = tcoll;
    if (and__3756__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4412__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3768__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__11722 = x__4412__auto__;
        return goog.typeOf(G__11722);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj11724 = {};
  return obj11724;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3756__auto__ = tcoll;
    if (and__3756__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4412__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3768__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__11728 = x__4412__auto__;
        return goog.typeOf(G__11728);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3756__auto__ = tcoll;
    if (and__3756__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4412__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3768__auto__ = cljs.core._pop_BANG_[function() {
        var G__11732 = x__4412__auto__;
        return goog.typeOf(G__11732);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj11734 = {};
  return obj11734;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3756__auto__ = tcoll;
    if (and__3756__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4412__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3768__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__11738 = x__4412__auto__;
        return goog.typeOf(G__11738);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj11740 = {};
  return obj11740;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3756__auto__ = x;
    if (and__3756__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4412__auto__ = x == null ? null : x;
    return function() {
      var or__3768__auto__ = cljs.core._compare[function() {
        var G__11744 = x__4412__auto__;
        return goog.typeOf(G__11744);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._compare["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj11746 = {};
  return obj11746;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._drop_first[function() {
        var G__11750 = x__4412__auto__;
        return goog.typeOf(G__11750);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._drop_first["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj11752 = {};
  return obj11752;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._chunked_first[function() {
        var G__11756 = x__4412__auto__;
        return goog.typeOf(G__11756);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._chunked_rest[function() {
        var G__11760 = x__4412__auto__;
        return goog.typeOf(G__11760);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj11762 = {};
  return obj11762;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._chunked_next[function() {
        var G__11766 = x__4412__auto__;
        return goog.typeOf(G__11766);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj11768 = {};
  return obj11768;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3756__auto__ = x;
    if (and__3756__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4412__auto__ = x == null ? null : x;
    return function() {
      var or__3768__auto__ = cljs.core._name[function() {
        var G__11772 = x__4412__auto__;
        return goog.typeOf(G__11772);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._name["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3756__auto__ = x;
    if (and__3756__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4412__auto__ = x == null ? null : x;
    return function() {
      var or__3768__auto__ = cljs.core._namespace[function() {
        var G__11776 = x__4412__auto__;
        return goog.typeOf(G__11776);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._namespace["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj11778 = {};
  return obj11778;
}();
cljs.core.IReset = function() {
  var obj11780 = {};
  return obj11780;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3756__auto__ = o;
    if (and__3756__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4412__auto__ = o == null ? null : o;
    return function() {
      var or__3768__auto__ = cljs.core._reset_BANG_[function() {
        var G__11784 = x__4412__auto__;
        return goog.typeOf(G__11784);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj11786 = {};
  return obj11786;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3756__auto__ = o;
      if (and__3756__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4412__auto__ = o == null ? null : o;
      return function() {
        var or__3768__auto__ = cljs.core._swap_BANG_[function() {
          var G__11796 = x__4412__auto__;
          return goog.typeOf(G__11796);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3756__auto__ = o;
      if (and__3756__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4412__auto__ = o == null ? null : o;
      return function() {
        var or__3768__auto__ = cljs.core._swap_BANG_[function() {
          var G__11798 = x__4412__auto__;
          return goog.typeOf(G__11798);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3756__auto__ = o;
      if (and__3756__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4412__auto__ = o == null ? null : o;
      return function() {
        var or__3768__auto__ = cljs.core._swap_BANG_[function() {
          var G__11800 = x__4412__auto__;
          return goog.typeOf(G__11800);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3756__auto__ = o;
      if (and__3756__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4412__auto__ = o == null ? null : o;
      return function() {
        var or__3768__auto__ = cljs.core._swap_BANG_[function() {
          var G__11802 = x__4412__auto__;
          return goog.typeOf(G__11802);
        }()];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.IVolatile = function() {
  var obj11804 = {};
  return obj11804;
}();
cljs.core._vreset_BANG_ = function _vreset_BANG_(o, new_value) {
  if (function() {
    var and__3756__auto__ = o;
    if (and__3756__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4412__auto__ = o == null ? null : o;
    return function() {
      var or__3768__auto__ = cljs.core._vreset_BANG_[function() {
        var G__11808 = x__4412__auto__;
        return goog.typeOf(G__11808);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj11810 = {};
  return obj11810;
}();
cljs.core._iterator = function _iterator(coll) {
  if (function() {
    var and__3756__auto__ = coll;
    if (and__3756__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4412__auto__ = coll == null ? null : coll;
    return function() {
      var or__3768__auto__ = cljs.core._iterator[function() {
        var G__11814 = x__4412__auto__;
        return goog.typeOf(G__11814);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._iterator["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__11817 = 4294967295;
  var G__11818 = 5;
  return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11817, G__11818) : Math.imul.call(null, G__11817, G__11818);
}() === 0)) {
  cljs.core.imul = function imul(a, b) {
    var G__11821 = a;
    var G__11822 = b;
    return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11821, G__11822) : Math.imul.call(null, G__11821, G__11822);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__11823 = i + 2;
        var G__11824 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__11823;
        h1 = G__11824;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj11826 = {};
  return obj11826;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__11827 = i + 1;
          var G__11828 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__11827;
          hash = G__11828;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj11832 = {};
      return obj11832;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__11835 = o;
    if (G__11835) {
      var bit__4442__auto__ = G__11835.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4442__auto__ || G__11835.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__11836 = o;
        return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11836) : Math.floor.call(null, G__11836);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3756__auto__ = cljs.core.not(a.ns);
      if (and__3756__auto__) {
        return b.ns;
      } else {
        return and__3756__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__11843 = a.ns;
            var G__11844 = b.ns;
            return goog.array.defaultCompare(G__11843, G__11844);
          }();
          if (0 === nsc) {
            var G__11845 = a.name;
            var G__11846 = b.name;
            return goog.array.defaultCompare(G__11845, G__11846);
          } else {
            return nsc;
          }
        }
      } else {
        var G__11847 = a.name;
        var G__11848 = b.name;
        return goog.array.defaultCompare(G__11847, G__11848);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4189__auto__ = self__._hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__11850 = null;
  var G__11850__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__11850__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__11850 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11850__2.call(this, self__, coll);
      case 3:
        return G__11850__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11850.cljs$core$IFn$_invoke$arity$2 = G__11850__2;
  G__11850.cljs$core$IFn$_invoke$arity$3 = G__11850__3;
  return G__11850;
}();
cljs.core.Symbol.prototype.apply = function(self__, args11849) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11849)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 163841;
};
cljs.core.Var.prototype.call = function() {
  var G__11898 = null;
  var G__11898__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null);
  };
  var G__11898__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a);
  };
  var G__11898__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b);
  };
  var G__11898__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c);
  };
  var G__11898__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d);
  };
  var G__11898__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e);
  };
  var G__11898__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f);
  };
  var G__11898__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g);
  };
  var G__11898__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h);
  };
  var G__11898__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__11898__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__11898__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__11898__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__11898__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__11898__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__11898__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__11898__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__11898__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__11898__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__11898__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__11898__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__11898__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11854 = function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }();
    var G__11855 = a;
    var G__11856 = b;
    var G__11857 = c;
    var G__11858 = d;
    var G__11859 = e;
    var G__11860 = f;
    var G__11861 = g;
    var G__11862 = h;
    var G__11863 = i;
    var G__11864 = j;
    var G__11865 = k;
    var G__11866 = l;
    var G__11867 = m;
    var G__11868 = n;
    var G__11869 = o;
    var G__11870 = p;
    var G__11871 = q;
    var G__11872 = r;
    var G__11873 = s;
    var G__11874 = t;
    var G__11875 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11854, G__11855, G__11856, G__11857, G__11858, G__11859, G__11860, G__11861, G__11862, G__11863, G__11864, G__11865, G__11866, G__11867, G__11868, G__11869, G__11870, G__11871, G__11872, G__11873, G__11874, G__11875) : cljs.core.apply.call(null, G__11854, G__11855, G__11856, G__11857, G__11858, G__11859, G__11860, G__11861, G__11862, G__11863, G__11864, G__11865, G__11866, G__11867, G__11868, 
    G__11869, G__11870, G__11871, G__11872, G__11873, G__11874, G__11875);
  };
  G__11898 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__11898__1.call(this, self__);
      case 2:
        return G__11898__2.call(this, self__, a);
      case 3:
        return G__11898__3.call(this, self__, a, b);
      case 4:
        return G__11898__4.call(this, self__, a, b, c);
      case 5:
        return G__11898__5.call(this, self__, a, b, c, d);
      case 6:
        return G__11898__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__11898__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__11898__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__11898__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__11898__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__11898__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__11898__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__11898__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__11898__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__11898__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__11898__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__11898__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__11898__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__11898__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__11898__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__11898__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__11898__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11898.cljs$core$IFn$_invoke$arity$1 = G__11898__1;
  G__11898.cljs$core$IFn$_invoke$arity$2 = G__11898__2;
  G__11898.cljs$core$IFn$_invoke$arity$3 = G__11898__3;
  G__11898.cljs$core$IFn$_invoke$arity$4 = G__11898__4;
  G__11898.cljs$core$IFn$_invoke$arity$5 = G__11898__5;
  G__11898.cljs$core$IFn$_invoke$arity$6 = G__11898__6;
  G__11898.cljs$core$IFn$_invoke$arity$7 = G__11898__7;
  G__11898.cljs$core$IFn$_invoke$arity$8 = G__11898__8;
  G__11898.cljs$core$IFn$_invoke$arity$9 = G__11898__9;
  G__11898.cljs$core$IFn$_invoke$arity$10 = G__11898__10;
  G__11898.cljs$core$IFn$_invoke$arity$11 = G__11898__11;
  G__11898.cljs$core$IFn$_invoke$arity$12 = G__11898__12;
  G__11898.cljs$core$IFn$_invoke$arity$13 = G__11898__13;
  G__11898.cljs$core$IFn$_invoke$arity$14 = G__11898__14;
  G__11898.cljs$core$IFn$_invoke$arity$15 = G__11898__15;
  G__11898.cljs$core$IFn$_invoke$arity$16 = G__11898__16;
  G__11898.cljs$core$IFn$_invoke$arity$17 = G__11898__17;
  G__11898.cljs$core$IFn$_invoke$arity$18 = G__11898__18;
  G__11898.cljs$core$IFn$_invoke$arity$19 = G__11898__19;
  G__11898.cljs$core$IFn$_invoke$arity$20 = G__11898__20;
  G__11898.cljs$core$IFn$_invoke$arity$21 = G__11898__21;
  G__11898.cljs$core$IFn$_invoke$arity$22 = G__11898__22;
  return G__11898;
}();
cljs.core.Var.prototype.apply = function(self__, args11853) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11853)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__11876 = function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }();
  var G__11877 = a;
  var G__11878 = b;
  var G__11879 = c;
  var G__11880 = d;
  var G__11881 = e;
  var G__11882 = f;
  var G__11883 = g;
  var G__11884 = h;
  var G__11885 = i;
  var G__11886 = j;
  var G__11887 = k;
  var G__11888 = l;
  var G__11889 = m;
  var G__11890 = n;
  var G__11891 = o;
  var G__11892 = p;
  var G__11893 = q;
  var G__11894 = r;
  var G__11895 = s;
  var G__11896 = t;
  var G__11897 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11876, G__11877, G__11878, G__11879, G__11880, G__11881, G__11882, G__11883, G__11884, G__11885, G__11886, G__11887, G__11888, G__11889, G__11890, G__11891, G__11892, G__11893, G__11894, G__11895, G__11896, G__11897) : cljs.core.apply.call(null, G__11876, G__11877, G__11878, G__11879, G__11880, G__11881, G__11882, G__11883, G__11884, G__11885, G__11886, G__11887, G__11888, G__11889, G__11890, 
  G__11891, G__11892, G__11893, G__11894, G__11895, G__11896, G__11897);
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function __GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function iterable_QMARK_(x) {
  var G__11900 = x;
  if (G__11900) {
    var bit__4449__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3768__auto__ = bit__4449__auto__;
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        return G__11900.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__11900.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__11900);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__11900);
  }
};
cljs.core.clone = function clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__11902 = value;
  if (G__11902) {
    var bit__4449__auto__ = G__11902.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4449__auto__ || G__11902.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__11902.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__11902);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__11902);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__11904 = coll;
      if (G__11904) {
        var bit__4442__auto__ = G__11904.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4442__auto__ || G__11904.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__11906 = coll;
      if (G__11906) {
        var bit__4442__auto__ = G__11906.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4442__auto__ || G__11906.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__11908 = coll;
      if (G__11908) {
        var bit__4442__auto__ = G__11908.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4442__auto__ || G__11908.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__11910 = coll;
      if (G__11910) {
        var bit__4442__auto__ = G__11910.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4442__auto__ || G__11910.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv(x, y);
    }
  };
  var _EQ___3 = function() {
    var G__11915__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__11916 = y;
            var G__11917 = cljs.core.first(more);
            var G__11918 = cljs.core.next(more);
            x = G__11916;
            y = G__11917;
            more = G__11918;
            continue;
          } else {
            return _EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11915 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11919__i = 0, G__11919__a = new Array(arguments.length - 2);
        while (G__11919__i < G__11919__a.length) {
          G__11919__a[G__11919__i] = arguments[G__11919__i + 2];
          ++G__11919__i;
        }
        more = new cljs.core.IndexedSeq(G__11919__a, 0);
      }
      return G__11915__delegate.call(this, x, y, more);
    };
    G__11915.cljs$lang$maxFixedArity = 2;
    G__11915.cljs$lang$applyTo = function(arglist__11920) {
      var x = cljs.core.first(arglist__11920);
      arglist__11920 = cljs.core.next(arglist__11920);
      var y = cljs.core.first(arglist__11920);
      var more = cljs.core.rest(arglist__11920);
      return G__11915__delegate(x, y, more);
    };
    G__11915.cljs$core$IFn$_invoke$arity$variadic = G__11915__delegate;
    return G__11915;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        var G__11921 = null;
        if (arguments.length > 2) {
          var G__11922__i = 0, G__11922__a = new Array(arguments.length - 2);
          while (G__11922__i < G__11922__a.length) {
            G__11922__a[G__11922__i] = arguments[G__11922__i + 2];
            ++G__11922__i;
          }
          G__11921 = new cljs.core.IndexedSeq(G__11922__a, 0);
        }
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11921);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function __GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__11923 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__11923) : cljs.core.es6_iterator_seq.call(null, G__11923);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function __GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__11924 = n + 1;
      var G__11925 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__11926 = cljs.core.next(coll__$1);
      n = G__11924;
      hash_code = G__11925;
      coll__$1 = G__11926;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__11927 = n + 1;
      var G__11928 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__11929 = cljs.core.next(coll__$1);
      n = G__11927;
      hash_code = G__11928;
      coll__$1 = G__11929;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__11930 = o;
  return goog.getUid(G__11930);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__11932 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11932) : cljs.core.deref.call(null, G__11932);
  } else {
    return x;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count(cicoll);
    if (cnt === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__11939 = val;
            var G__11940 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11939, G__11940) : f.call(null, G__11939, G__11940);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__11945 = nval;
            var G__11946 = n + 1;
            val = G__11945;
            n = G__11946;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__11941 = val__$1;
          var G__11942 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11941, G__11942) : f.call(null, G__11941, G__11942);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11947 = nval;
          var G__11948 = n + 1;
          val__$1 = G__11947;
          n = G__11948;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__11943 = val__$1;
          var G__11944 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11943, G__11944) : f.call(null, G__11943, G__11944);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11949 = nval;
          var G__11950 = n + 1;
          val__$1 = G__11949;
          n = G__11950;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__11957 = val;
            var G__11958 = arr[n];
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11957, G__11958) : f.call(null, G__11957, G__11958);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__11963 = nval;
            var G__11964 = n + 1;
            val = G__11963;
            n = G__11964;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__11959 = val__$1;
          var G__11960 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11959, G__11960) : f.call(null, G__11959, G__11960);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11965 = nval;
          var G__11966 = n + 1;
          val__$1 = G__11965;
          n = G__11966;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__11961 = val__$1;
          var G__11962 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11961, G__11962) : f.call(null, G__11961, G__11962);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11967 = nval;
          var G__11968 = n + 1;
          val__$1 = G__11967;
          n = G__11968;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__11970 = x;
  if (G__11970) {
    var bit__4449__auto__ = G__11970.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4449__auto__ || G__11970.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__11970.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__11970);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__11970);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__11972 = x;
  if (G__11972) {
    var bit__4449__auto__ = G__11972.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4449__auto__ || G__11972.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__11972.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__11972);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__11972);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function __GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__11973 = coll__$1;
  var G__11974 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__11973, G__11974) : cljs.core.equiv_sequential.call(null, G__11973, G__11974);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__11975 = o;
  var G__11976 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__11975, G__11976) : cljs.core.cons.call(null, G__11975, G__11976);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__11979 = coll__$1;
  var G__11980 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__11979, G__11980) : cljs.core.equiv_sequential.call(null, G__11979, G__11980);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__11981 = cljs.core.List.EMPTY;
  var G__11982 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__11981, G__11982) : cljs.core.with_meta.call(null, G__11981, G__11982);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__11983 = f;
  var G__11984 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__11983, G__11984) : cljs.core.seq_reduce.call(null, G__11983, G__11984);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__11985 = f;
  var G__11986 = start;
  var G__11987 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__11985, G__11986, G__11987) : cljs.core.seq_reduce.call(null, G__11985, G__11986, G__11987);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__11988 = o;
  var G__11989 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__11988, G__11989) : cljs.core.cons.call(null, G__11988, G__11989);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.second = function second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__11990 = sn;
      s = G__11990;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj(coll, x);
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__11995__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__11996 = conj.cljs$core$IFn$_invoke$arity$2(coll, x);
          var G__11997 = cljs.core.first(xs);
          var G__11998 = cljs.core.next(xs);
          coll = G__11996;
          x = G__11997;
          xs = G__11998;
          continue;
        } else {
          return conj.cljs$core$IFn$_invoke$arity$2(coll, x);
        }
        break;
      }
    };
    var G__11995 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        var G__11999__i = 0, G__11999__a = new Array(arguments.length - 2);
        while (G__11999__i < G__11999__a.length) {
          G__11999__a[G__11999__i] = arguments[G__11999__i + 2];
          ++G__11999__i;
        }
        xs = new cljs.core.IndexedSeq(G__11999__a, 0);
      }
      return G__11995__delegate.call(this, coll, x, xs);
    };
    G__11995.cljs$lang$maxFixedArity = 2;
    G__11995.cljs$lang$applyTo = function(arglist__12000) {
      var coll = cljs.core.first(arglist__12000);
      arglist__12000 = cljs.core.next(arglist__12000);
      var x = cljs.core.first(arglist__12000);
      var xs = cljs.core.rest(arglist__12000);
      return G__11995__delegate(coll, x, xs);
    };
    G__11995.cljs$core$IFn$_invoke$arity$variadic = G__11995__delegate;
    return G__11995;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        var G__12001 = null;
        if (arguments.length > 2) {
          var G__12002__i = 0, G__12002__a = new Array(arguments.length - 2);
          while (G__12002__i < G__12002__a.length) {
            G__12002__a[G__12002__i] = arguments[G__12002__i + 2];
            ++G__12002__i;
          }
          G__12001 = new cljs.core.IndexedSeq(G__12002__a, 0);
        }
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, G__12001);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__12003 = cljs.core.next(s);
      var G__12004 = acc + 1;
      s = G__12003;
      acc = G__12004;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__12006 = coll;
      if (G__12006) {
        var bit__4442__auto__ = G__12006.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4442__auto__ || G__12006.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
          } else {
            if (cljs.core.seq(coll)) {
              var G__12007 = cljs.core.next(coll);
              var G__12008 = n - 1;
              coll = G__12007;
              n = G__12008;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
          } else {
            if (cljs.core.seq(coll)) {
              var G__12009 = cljs.core.next(coll);
              var G__12010 = n - 1;
              var G__12011 = not_found;
              coll = G__12009;
              n = G__12010;
              not_found = G__12011;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__12016 = coll;
          if (G__12016) {
            var bit__4442__auto__ = G__12016.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4442__auto__ || G__12016.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__12017 = coll;
                  if (G__12017) {
                    var bit__4449__auto__ = G__12017.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4449__auto__ || G__12017.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__12017.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__12017);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__12017);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__12018 = coll;
          if (G__12018) {
            var bit__4442__auto__ = G__12018.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4442__auto__ || G__12018.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__12019 = coll;
                  if (G__12019) {
                    var bit__4449__auto__ = G__12019.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4449__auto__ || G__12019.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__12019.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__12019);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__12019);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.nthrest = function nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__12020 = n__$1 - 1;
      var G__12021 = cljs.core.rest(xs);
      n__$1 = G__12020;
      xs = G__12021;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__12024 = o;
        if (G__12024) {
          var bit__4442__auto__ = G__12024.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4442__auto__ || G__12024.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$2(null, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__12025 = o;
        if (G__12025) {
          var bit__4442__auto__ = G__12025.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4442__auto__ || G__12025.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__12029__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__12030 = ret;
          var G__12031 = cljs.core.first(kvs);
          var G__12032 = cljs.core.second(kvs);
          var G__12033 = cljs.core.nnext(kvs);
          coll = G__12030;
          k = G__12031;
          v = G__12032;
          kvs = G__12033;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__12029 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__12034__i = 0, G__12034__a = new Array(arguments.length - 3);
        while (G__12034__i < G__12034__a.length) {
          G__12034__a[G__12034__i] = arguments[G__12034__i + 3];
          ++G__12034__i;
        }
        kvs = new cljs.core.IndexedSeq(G__12034__a, 0);
      }
      return G__12029__delegate.call(this, coll, k, v, kvs);
    };
    G__12029.cljs$lang$maxFixedArity = 3;
    G__12029.cljs$lang$applyTo = function(arglist__12035) {
      var coll = cljs.core.first(arglist__12035);
      arglist__12035 = cljs.core.next(arglist__12035);
      var k = cljs.core.first(arglist__12035);
      arglist__12035 = cljs.core.next(arglist__12035);
      var v = cljs.core.first(arglist__12035);
      var kvs = cljs.core.rest(arglist__12035);
      return G__12029__delegate(coll, k, v, kvs);
    };
    G__12029.cljs$core$IFn$_invoke$arity$variadic = G__12029__delegate;
    return G__12029;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        var G__12036 = null;
        if (arguments.length > 3) {
          var G__12037__i = 0, G__12037__a = new Array(arguments.length - 3);
          while (G__12037__i < G__12037__a.length) {
            G__12037__a[G__12037__i] = arguments[G__12037__i + 3];
            ++G__12037__i;
          }
          G__12036 = new cljs.core.IndexedSeq(G__12037__a, 0);
        }
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, G__12036);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc(coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__12040__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__12041 = ret;
            var G__12042 = cljs.core.first(ks);
            var G__12043 = cljs.core.next(ks);
            coll = G__12041;
            k = G__12042;
            ks = G__12043;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__12040 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__12044__i = 0, G__12044__a = new Array(arguments.length - 2);
        while (G__12044__i < G__12044__a.length) {
          G__12044__a[G__12044__i] = arguments[G__12044__i + 2];
          ++G__12044__i;
        }
        ks = new cljs.core.IndexedSeq(G__12044__a, 0);
      }
      return G__12040__delegate.call(this, coll, k, ks);
    };
    G__12040.cljs$lang$maxFixedArity = 2;
    G__12040.cljs$lang$applyTo = function(arglist__12045) {
      var coll = cljs.core.first(arglist__12045);
      arglist__12045 = cljs.core.next(arglist__12045);
      var k = cljs.core.first(arglist__12045);
      var ks = cljs.core.rest(arglist__12045);
      return G__12040__delegate(coll, k, ks);
    };
    G__12040.cljs$core$IFn$_invoke$arity$variadic = G__12040__delegate;
    return G__12040;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        var G__12046 = null;
        if (arguments.length > 2) {
          var G__12047__i = 0, G__12047__a = new Array(arguments.length - 2);
          while (G__12047__i < G__12047__a.length) {
            G__12047__a[G__12047__i] = arguments[G__12047__i + 2];
            ++G__12047__i;
          }
          G__12046 = new cljs.core.IndexedSeq(G__12047__a, 0);
        }
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__12046);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3768__auto__ = function() {
    var G__12052 = f;
    return goog.isFunction(G__12052);
  }();
  if (cljs.core.truth_(or__3768__auto__)) {
    return or__3768__auto__;
  } else {
    var G__12053 = f;
    if (G__12053) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto____$1 = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto____$1)) {
          return or__3768__auto____$1;
        } else {
          return G__12053.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__12053.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__12053);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__12053);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__12519 = null;
  var G__12519__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__12519__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12055 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__12055) : self__.afn.call(null, G__12055);
  };
  var G__12519__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12056 = a;
    var G__12057 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__12056, G__12057) : self__.afn.call(null, G__12056, G__12057);
  };
  var G__12519__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12058 = a;
    var G__12059 = b;
    var G__12060 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__12058, G__12059, G__12060) : self__.afn.call(null, G__12058, G__12059, G__12060);
  };
  var G__12519__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12061 = a;
    var G__12062 = b;
    var G__12063 = c;
    var G__12064 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__12061, G__12062, G__12063, G__12064) : self__.afn.call(null, G__12061, G__12062, G__12063, G__12064);
  };
  var G__12519__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12065 = a;
    var G__12066 = b;
    var G__12067 = c;
    var G__12068 = d;
    var G__12069 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__12065, G__12066, G__12067, G__12068, G__12069) : self__.afn.call(null, G__12065, G__12066, G__12067, G__12068, G__12069);
  };
  var G__12519__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12070 = a;
    var G__12071 = b;
    var G__12072 = c;
    var G__12073 = d;
    var G__12074 = e;
    var G__12075 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__12070, G__12071, G__12072, G__12073, G__12074, G__12075) : self__.afn.call(null, G__12070, G__12071, G__12072, G__12073, G__12074, G__12075);
  };
  var G__12519__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12076 = a;
    var G__12077 = b;
    var G__12078 = c;
    var G__12079 = d;
    var G__12080 = e;
    var G__12081 = f;
    var G__12082 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__12076, G__12077, G__12078, G__12079, G__12080, G__12081, G__12082) : self__.afn.call(null, G__12076, G__12077, G__12078, G__12079, G__12080, G__12081, G__12082);
  };
  var G__12519__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12083 = a;
    var G__12084 = b;
    var G__12085 = c;
    var G__12086 = d;
    var G__12087 = e;
    var G__12088 = f;
    var G__12089 = g;
    var G__12090 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__12083, G__12084, G__12085, G__12086, G__12087, G__12088, G__12089, G__12090) : self__.afn.call(null, G__12083, G__12084, G__12085, G__12086, G__12087, G__12088, G__12089, G__12090);
  };
  var G__12519__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12091 = a;
    var G__12092 = b;
    var G__12093 = c;
    var G__12094 = d;
    var G__12095 = e;
    var G__12096 = f;
    var G__12097 = g;
    var G__12098 = h;
    var G__12099 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__12091, G__12092, G__12093, G__12094, G__12095, G__12096, G__12097, G__12098, G__12099) : self__.afn.call(null, G__12091, G__12092, G__12093, G__12094, G__12095, G__12096, G__12097, G__12098, G__12099);
  };
  var G__12519__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12100 = a;
    var G__12101 = b;
    var G__12102 = c;
    var G__12103 = d;
    var G__12104 = e;
    var G__12105 = f;
    var G__12106 = g;
    var G__12107 = h;
    var G__12108 = i;
    var G__12109 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__12100, G__12101, G__12102, G__12103, G__12104, G__12105, G__12106, G__12107, G__12108, G__12109) : self__.afn.call(null, G__12100, G__12101, G__12102, G__12103, G__12104, G__12105, G__12106, G__12107, G__12108, G__12109);
  };
  var G__12519__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12110 = a;
    var G__12111 = b;
    var G__12112 = c;
    var G__12113 = d;
    var G__12114 = e;
    var G__12115 = f;
    var G__12116 = g;
    var G__12117 = h;
    var G__12118 = i;
    var G__12119 = j;
    var G__12120 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__12110, G__12111, G__12112, G__12113, G__12114, G__12115, G__12116, G__12117, G__12118, G__12119, G__12120) : self__.afn.call(null, G__12110, G__12111, G__12112, G__12113, G__12114, G__12115, G__12116, G__12117, G__12118, G__12119, G__12120);
  };
  var G__12519__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12121 = a;
    var G__12122 = b;
    var G__12123 = c;
    var G__12124 = d;
    var G__12125 = e;
    var G__12126 = f;
    var G__12127 = g;
    var G__12128 = h;
    var G__12129 = i;
    var G__12130 = j;
    var G__12131 = k;
    var G__12132 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__12121, G__12122, G__12123, G__12124, G__12125, G__12126, G__12127, G__12128, G__12129, G__12130, G__12131, G__12132) : self__.afn.call(null, G__12121, G__12122, G__12123, G__12124, G__12125, G__12126, G__12127, G__12128, G__12129, G__12130, G__12131, G__12132);
  };
  var G__12519__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12133 = a;
    var G__12134 = b;
    var G__12135 = c;
    var G__12136 = d;
    var G__12137 = e;
    var G__12138 = f;
    var G__12139 = g;
    var G__12140 = h;
    var G__12141 = i;
    var G__12142 = j;
    var G__12143 = k;
    var G__12144 = l;
    var G__12145 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__12133, G__12134, G__12135, G__12136, G__12137, G__12138, G__12139, G__12140, G__12141, G__12142, G__12143, G__12144, G__12145) : self__.afn.call(null, G__12133, G__12134, G__12135, G__12136, G__12137, G__12138, G__12139, G__12140, G__12141, G__12142, G__12143, G__12144, G__12145);
  };
  var G__12519__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12146 = a;
    var G__12147 = b;
    var G__12148 = c;
    var G__12149 = d;
    var G__12150 = e;
    var G__12151 = f;
    var G__12152 = g;
    var G__12153 = h;
    var G__12154 = i;
    var G__12155 = j;
    var G__12156 = k;
    var G__12157 = l;
    var G__12158 = m;
    var G__12159 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__12146, G__12147, G__12148, G__12149, G__12150, G__12151, G__12152, G__12153, G__12154, G__12155, G__12156, G__12157, G__12158, G__12159) : self__.afn.call(null, G__12146, G__12147, G__12148, G__12149, G__12150, G__12151, G__12152, G__12153, G__12154, G__12155, G__12156, G__12157, G__12158, G__12159);
  };
  var G__12519__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12160 = a;
    var G__12161 = b;
    var G__12162 = c;
    var G__12163 = d;
    var G__12164 = e;
    var G__12165 = f;
    var G__12166 = g;
    var G__12167 = h;
    var G__12168 = i;
    var G__12169 = j;
    var G__12170 = k;
    var G__12171 = l;
    var G__12172 = m;
    var G__12173 = n;
    var G__12174 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__12160, G__12161, G__12162, G__12163, G__12164, G__12165, G__12166, G__12167, G__12168, G__12169, G__12170, G__12171, G__12172, G__12173, G__12174) : self__.afn.call(null, G__12160, G__12161, G__12162, G__12163, G__12164, G__12165, G__12166, G__12167, G__12168, G__12169, G__12170, G__12171, G__12172, G__12173, G__12174);
  };
  var G__12519__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12175 = a;
    var G__12176 = b;
    var G__12177 = c;
    var G__12178 = d;
    var G__12179 = e;
    var G__12180 = f;
    var G__12181 = g;
    var G__12182 = h;
    var G__12183 = i;
    var G__12184 = j;
    var G__12185 = k;
    var G__12186 = l;
    var G__12187 = m;
    var G__12188 = n;
    var G__12189 = o;
    var G__12190 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__12175, G__12176, G__12177, G__12178, G__12179, G__12180, G__12181, G__12182, G__12183, G__12184, G__12185, G__12186, G__12187, G__12188, G__12189, G__12190) : self__.afn.call(null, G__12175, G__12176, G__12177, G__12178, G__12179, G__12180, G__12181, G__12182, G__12183, G__12184, G__12185, G__12186, G__12187, G__12188, G__12189, G__12190);
  };
  var G__12519__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12191 = a;
    var G__12192 = b;
    var G__12193 = c;
    var G__12194 = d;
    var G__12195 = e;
    var G__12196 = f;
    var G__12197 = g;
    var G__12198 = h;
    var G__12199 = i;
    var G__12200 = j;
    var G__12201 = k;
    var G__12202 = l;
    var G__12203 = m;
    var G__12204 = n;
    var G__12205 = o;
    var G__12206 = p;
    var G__12207 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__12191, G__12192, G__12193, G__12194, G__12195, G__12196, G__12197, G__12198, G__12199, G__12200, G__12201, G__12202, G__12203, G__12204, G__12205, G__12206, G__12207) : self__.afn.call(null, G__12191, G__12192, G__12193, G__12194, G__12195, G__12196, G__12197, G__12198, G__12199, G__12200, G__12201, G__12202, G__12203, G__12204, G__12205, G__12206, G__12207);
  };
  var G__12519__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12208 = a;
    var G__12209 = b;
    var G__12210 = c;
    var G__12211 = d;
    var G__12212 = e;
    var G__12213 = f;
    var G__12214 = g;
    var G__12215 = h;
    var G__12216 = i;
    var G__12217 = j;
    var G__12218 = k;
    var G__12219 = l;
    var G__12220 = m;
    var G__12221 = n;
    var G__12222 = o;
    var G__12223 = p;
    var G__12224 = q;
    var G__12225 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__12208, G__12209, G__12210, G__12211, G__12212, G__12213, G__12214, G__12215, G__12216, G__12217, G__12218, G__12219, G__12220, G__12221, G__12222, G__12223, G__12224, G__12225) : self__.afn.call(null, G__12208, G__12209, G__12210, G__12211, G__12212, G__12213, G__12214, G__12215, G__12216, G__12217, G__12218, G__12219, G__12220, G__12221, G__12222, G__12223, G__12224, G__12225);
  };
  var G__12519__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12226 = a;
    var G__12227 = b;
    var G__12228 = c;
    var G__12229 = d;
    var G__12230 = e;
    var G__12231 = f;
    var G__12232 = g;
    var G__12233 = h;
    var G__12234 = i;
    var G__12235 = j;
    var G__12236 = k;
    var G__12237 = l;
    var G__12238 = m;
    var G__12239 = n;
    var G__12240 = o;
    var G__12241 = p;
    var G__12242 = q;
    var G__12243 = r;
    var G__12244 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__12226, G__12227, G__12228, G__12229, G__12230, G__12231, G__12232, G__12233, G__12234, G__12235, G__12236, G__12237, G__12238, G__12239, G__12240, G__12241, G__12242, G__12243, G__12244) : self__.afn.call(null, G__12226, G__12227, G__12228, G__12229, G__12230, G__12231, G__12232, G__12233, G__12234, G__12235, G__12236, G__12237, G__12238, G__12239, G__12240, G__12241, G__12242, G__12243, G__12244);
  };
  var G__12519__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12245 = a;
    var G__12246 = b;
    var G__12247 = c;
    var G__12248 = d;
    var G__12249 = e;
    var G__12250 = f;
    var G__12251 = g;
    var G__12252 = h;
    var G__12253 = i;
    var G__12254 = j;
    var G__12255 = k;
    var G__12256 = l;
    var G__12257 = m;
    var G__12258 = n;
    var G__12259 = o;
    var G__12260 = p;
    var G__12261 = q;
    var G__12262 = r;
    var G__12263 = s;
    var G__12264 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__12245, G__12246, G__12247, G__12248, G__12249, G__12250, G__12251, G__12252, G__12253, G__12254, G__12255, G__12256, G__12257, G__12258, G__12259, G__12260, G__12261, G__12262, G__12263, G__12264) : self__.afn.call(null, G__12245, G__12246, G__12247, G__12248, G__12249, G__12250, G__12251, G__12252, G__12253, G__12254, G__12255, G__12256, G__12257, G__12258, G__12259, G__12260, G__12261, G__12262, 
    G__12263, G__12264);
  };
  var G__12519__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12265 = self__.afn;
    var G__12266 = a;
    var G__12267 = b;
    var G__12268 = c;
    var G__12269 = d;
    var G__12270 = e;
    var G__12271 = f;
    var G__12272 = g;
    var G__12273 = h;
    var G__12274 = i;
    var G__12275 = j;
    var G__12276 = k;
    var G__12277 = l;
    var G__12278 = m;
    var G__12279 = n;
    var G__12280 = o;
    var G__12281 = p;
    var G__12282 = q;
    var G__12283 = r;
    var G__12284 = s;
    var G__12285 = t;
    var G__12286 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12265, G__12266, G__12267, G__12268, G__12269, G__12270, G__12271, G__12272, G__12273, G__12274, G__12275, G__12276, G__12277, G__12278, G__12279, G__12280, G__12281, G__12282, G__12283, G__12284, G__12285, G__12286) : cljs.core.apply.call(null, G__12265, G__12266, G__12267, G__12268, G__12269, G__12270, G__12271, G__12272, G__12273, G__12274, G__12275, G__12276, G__12277, G__12278, G__12279, 
    G__12280, G__12281, G__12282, G__12283, G__12284, G__12285, G__12286);
  };
  G__12519 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__12519__1.call(this, self__);
      case 2:
        return G__12519__2.call(this, self__, a);
      case 3:
        return G__12519__3.call(this, self__, a, b);
      case 4:
        return G__12519__4.call(this, self__, a, b, c);
      case 5:
        return G__12519__5.call(this, self__, a, b, c, d);
      case 6:
        return G__12519__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__12519__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__12519__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__12519__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__12519__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__12519__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__12519__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__12519__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__12519__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__12519__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__12519__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__12519__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__12519__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__12519__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__12519__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__12519__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__12519__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12519.cljs$core$IFn$_invoke$arity$1 = G__12519__1;
  G__12519.cljs$core$IFn$_invoke$arity$2 = G__12519__2;
  G__12519.cljs$core$IFn$_invoke$arity$3 = G__12519__3;
  G__12519.cljs$core$IFn$_invoke$arity$4 = G__12519__4;
  G__12519.cljs$core$IFn$_invoke$arity$5 = G__12519__5;
  G__12519.cljs$core$IFn$_invoke$arity$6 = G__12519__6;
  G__12519.cljs$core$IFn$_invoke$arity$7 = G__12519__7;
  G__12519.cljs$core$IFn$_invoke$arity$8 = G__12519__8;
  G__12519.cljs$core$IFn$_invoke$arity$9 = G__12519__9;
  G__12519.cljs$core$IFn$_invoke$arity$10 = G__12519__10;
  G__12519.cljs$core$IFn$_invoke$arity$11 = G__12519__11;
  G__12519.cljs$core$IFn$_invoke$arity$12 = G__12519__12;
  G__12519.cljs$core$IFn$_invoke$arity$13 = G__12519__13;
  G__12519.cljs$core$IFn$_invoke$arity$14 = G__12519__14;
  G__12519.cljs$core$IFn$_invoke$arity$15 = G__12519__15;
  G__12519.cljs$core$IFn$_invoke$arity$16 = G__12519__16;
  G__12519.cljs$core$IFn$_invoke$arity$17 = G__12519__17;
  G__12519.cljs$core$IFn$_invoke$arity$18 = G__12519__18;
  G__12519.cljs$core$IFn$_invoke$arity$19 = G__12519__19;
  G__12519.cljs$core$IFn$_invoke$arity$20 = G__12519__20;
  G__12519.cljs$core$IFn$_invoke$arity$21 = G__12519__21;
  G__12519.cljs$core$IFn$_invoke$arity$22 = G__12519__22;
  return G__12519;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args12054) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12054)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__12287 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__12287) : self__.afn.call(null, G__12287);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__12288 = a;
  var G__12289 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__12288, G__12289) : self__.afn.call(null, G__12288, G__12289);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__12290 = a;
  var G__12291 = b;
  var G__12292 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__12290, G__12291, G__12292) : self__.afn.call(null, G__12290, G__12291, G__12292);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__12293 = a;
  var G__12294 = b;
  var G__12295 = c;
  var G__12296 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__12293, G__12294, G__12295, G__12296) : self__.afn.call(null, G__12293, G__12294, G__12295, G__12296);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__12297 = a;
  var G__12298 = b;
  var G__12299 = c;
  var G__12300 = d;
  var G__12301 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__12297, G__12298, G__12299, G__12300, G__12301) : self__.afn.call(null, G__12297, G__12298, G__12299, G__12300, G__12301);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__12302 = a;
  var G__12303 = b;
  var G__12304 = c;
  var G__12305 = d;
  var G__12306 = e;
  var G__12307 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__12302, G__12303, G__12304, G__12305, G__12306, G__12307) : self__.afn.call(null, G__12302, G__12303, G__12304, G__12305, G__12306, G__12307);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__12308 = a;
  var G__12309 = b;
  var G__12310 = c;
  var G__12311 = d;
  var G__12312 = e;
  var G__12313 = f;
  var G__12314 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__12308, G__12309, G__12310, G__12311, G__12312, G__12313, G__12314) : self__.afn.call(null, G__12308, G__12309, G__12310, G__12311, G__12312, G__12313, G__12314);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__12315 = a;
  var G__12316 = b;
  var G__12317 = c;
  var G__12318 = d;
  var G__12319 = e;
  var G__12320 = f;
  var G__12321 = g;
  var G__12322 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__12315, G__12316, G__12317, G__12318, G__12319, G__12320, G__12321, G__12322) : self__.afn.call(null, G__12315, G__12316, G__12317, G__12318, G__12319, G__12320, G__12321, G__12322);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__12323 = a;
  var G__12324 = b;
  var G__12325 = c;
  var G__12326 = d;
  var G__12327 = e;
  var G__12328 = f;
  var G__12329 = g;
  var G__12330 = h;
  var G__12331 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__12323, G__12324, G__12325, G__12326, G__12327, G__12328, G__12329, G__12330, G__12331) : self__.afn.call(null, G__12323, G__12324, G__12325, G__12326, G__12327, G__12328, G__12329, G__12330, G__12331);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__12332 = a;
  var G__12333 = b;
  var G__12334 = c;
  var G__12335 = d;
  var G__12336 = e;
  var G__12337 = f;
  var G__12338 = g;
  var G__12339 = h;
  var G__12340 = i;
  var G__12341 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__12332, G__12333, G__12334, G__12335, G__12336, G__12337, G__12338, G__12339, G__12340, G__12341) : self__.afn.call(null, G__12332, G__12333, G__12334, G__12335, G__12336, G__12337, G__12338, G__12339, G__12340, G__12341);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__12342 = a;
  var G__12343 = b;
  var G__12344 = c;
  var G__12345 = d;
  var G__12346 = e;
  var G__12347 = f;
  var G__12348 = g;
  var G__12349 = h;
  var G__12350 = i;
  var G__12351 = j;
  var G__12352 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__12342, G__12343, G__12344, G__12345, G__12346, G__12347, G__12348, G__12349, G__12350, G__12351, G__12352) : self__.afn.call(null, G__12342, G__12343, G__12344, G__12345, G__12346, G__12347, G__12348, G__12349, G__12350, G__12351, G__12352);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__12353 = a;
  var G__12354 = b;
  var G__12355 = c;
  var G__12356 = d;
  var G__12357 = e;
  var G__12358 = f;
  var G__12359 = g;
  var G__12360 = h;
  var G__12361 = i;
  var G__12362 = j;
  var G__12363 = k;
  var G__12364 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__12353, G__12354, G__12355, G__12356, G__12357, G__12358, G__12359, G__12360, G__12361, G__12362, G__12363, G__12364) : self__.afn.call(null, G__12353, G__12354, G__12355, G__12356, G__12357, G__12358, G__12359, G__12360, G__12361, G__12362, G__12363, G__12364);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__12365 = a;
  var G__12366 = b;
  var G__12367 = c;
  var G__12368 = d;
  var G__12369 = e;
  var G__12370 = f;
  var G__12371 = g;
  var G__12372 = h;
  var G__12373 = i;
  var G__12374 = j;
  var G__12375 = k;
  var G__12376 = l;
  var G__12377 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__12365, G__12366, G__12367, G__12368, G__12369, G__12370, G__12371, G__12372, G__12373, G__12374, G__12375, G__12376, G__12377) : self__.afn.call(null, G__12365, G__12366, G__12367, G__12368, G__12369, G__12370, G__12371, G__12372, G__12373, G__12374, G__12375, G__12376, G__12377);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__12378 = a;
  var G__12379 = b;
  var G__12380 = c;
  var G__12381 = d;
  var G__12382 = e;
  var G__12383 = f;
  var G__12384 = g;
  var G__12385 = h;
  var G__12386 = i;
  var G__12387 = j;
  var G__12388 = k;
  var G__12389 = l;
  var G__12390 = m;
  var G__12391 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__12378, G__12379, G__12380, G__12381, G__12382, G__12383, G__12384, G__12385, G__12386, G__12387, G__12388, G__12389, G__12390, G__12391) : self__.afn.call(null, G__12378, G__12379, G__12380, G__12381, G__12382, G__12383, G__12384, G__12385, G__12386, G__12387, G__12388, G__12389, G__12390, G__12391);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__12392 = a;
  var G__12393 = b;
  var G__12394 = c;
  var G__12395 = d;
  var G__12396 = e;
  var G__12397 = f;
  var G__12398 = g;
  var G__12399 = h;
  var G__12400 = i;
  var G__12401 = j;
  var G__12402 = k;
  var G__12403 = l;
  var G__12404 = m;
  var G__12405 = n;
  var G__12406 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__12392, G__12393, G__12394, G__12395, G__12396, G__12397, G__12398, G__12399, G__12400, G__12401, G__12402, G__12403, G__12404, G__12405, G__12406) : self__.afn.call(null, G__12392, G__12393, G__12394, G__12395, G__12396, G__12397, G__12398, G__12399, G__12400, G__12401, G__12402, G__12403, G__12404, G__12405, G__12406);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__12407 = a;
  var G__12408 = b;
  var G__12409 = c;
  var G__12410 = d;
  var G__12411 = e;
  var G__12412 = f;
  var G__12413 = g;
  var G__12414 = h;
  var G__12415 = i;
  var G__12416 = j;
  var G__12417 = k;
  var G__12418 = l;
  var G__12419 = m;
  var G__12420 = n;
  var G__12421 = o;
  var G__12422 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__12407, G__12408, G__12409, G__12410, G__12411, G__12412, G__12413, G__12414, G__12415, G__12416, G__12417, G__12418, G__12419, G__12420, G__12421, G__12422) : self__.afn.call(null, G__12407, G__12408, G__12409, G__12410, G__12411, G__12412, G__12413, G__12414, G__12415, G__12416, G__12417, G__12418, G__12419, G__12420, G__12421, G__12422);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__12423 = a;
  var G__12424 = b;
  var G__12425 = c;
  var G__12426 = d;
  var G__12427 = e;
  var G__12428 = f;
  var G__12429 = g;
  var G__12430 = h;
  var G__12431 = i;
  var G__12432 = j;
  var G__12433 = k;
  var G__12434 = l;
  var G__12435 = m;
  var G__12436 = n;
  var G__12437 = o;
  var G__12438 = p;
  var G__12439 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__12423, G__12424, G__12425, G__12426, G__12427, G__12428, G__12429, G__12430, G__12431, G__12432, G__12433, G__12434, G__12435, G__12436, G__12437, G__12438, G__12439) : self__.afn.call(null, G__12423, G__12424, G__12425, G__12426, G__12427, G__12428, G__12429, G__12430, G__12431, G__12432, G__12433, G__12434, G__12435, G__12436, G__12437, G__12438, G__12439);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__12440 = a;
  var G__12441 = b;
  var G__12442 = c;
  var G__12443 = d;
  var G__12444 = e;
  var G__12445 = f;
  var G__12446 = g;
  var G__12447 = h;
  var G__12448 = i;
  var G__12449 = j;
  var G__12450 = k;
  var G__12451 = l;
  var G__12452 = m;
  var G__12453 = n;
  var G__12454 = o;
  var G__12455 = p;
  var G__12456 = q;
  var G__12457 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__12440, G__12441, G__12442, G__12443, G__12444, G__12445, G__12446, G__12447, G__12448, G__12449, G__12450, G__12451, G__12452, G__12453, G__12454, G__12455, G__12456, G__12457) : self__.afn.call(null, G__12440, G__12441, G__12442, G__12443, G__12444, G__12445, G__12446, G__12447, G__12448, G__12449, G__12450, G__12451, G__12452, G__12453, G__12454, G__12455, G__12456, G__12457);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__12458 = a;
  var G__12459 = b;
  var G__12460 = c;
  var G__12461 = d;
  var G__12462 = e;
  var G__12463 = f;
  var G__12464 = g;
  var G__12465 = h;
  var G__12466 = i;
  var G__12467 = j;
  var G__12468 = k;
  var G__12469 = l;
  var G__12470 = m;
  var G__12471 = n;
  var G__12472 = o;
  var G__12473 = p;
  var G__12474 = q;
  var G__12475 = r;
  var G__12476 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__12458, G__12459, G__12460, G__12461, G__12462, G__12463, G__12464, G__12465, G__12466, G__12467, G__12468, G__12469, G__12470, G__12471, G__12472, G__12473, G__12474, G__12475, G__12476) : self__.afn.call(null, G__12458, G__12459, G__12460, G__12461, G__12462, G__12463, G__12464, G__12465, G__12466, G__12467, G__12468, G__12469, G__12470, G__12471, G__12472, G__12473, G__12474, G__12475, G__12476);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__12477 = a;
  var G__12478 = b;
  var G__12479 = c;
  var G__12480 = d;
  var G__12481 = e;
  var G__12482 = f;
  var G__12483 = g;
  var G__12484 = h;
  var G__12485 = i;
  var G__12486 = j;
  var G__12487 = k;
  var G__12488 = l;
  var G__12489 = m;
  var G__12490 = n;
  var G__12491 = o;
  var G__12492 = p;
  var G__12493 = q;
  var G__12494 = r;
  var G__12495 = s;
  var G__12496 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__12477, G__12478, G__12479, G__12480, G__12481, G__12482, G__12483, G__12484, G__12485, G__12486, G__12487, G__12488, G__12489, G__12490, G__12491, G__12492, G__12493, G__12494, G__12495, G__12496) : self__.afn.call(null, G__12477, G__12478, G__12479, G__12480, G__12481, G__12482, G__12483, G__12484, G__12485, G__12486, G__12487, G__12488, G__12489, G__12490, G__12491, G__12492, G__12493, G__12494, G__12495, 
  G__12496);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__12497 = self__.afn;
  var G__12498 = a;
  var G__12499 = b;
  var G__12500 = c;
  var G__12501 = d;
  var G__12502 = e;
  var G__12503 = f;
  var G__12504 = g;
  var G__12505 = h;
  var G__12506 = i;
  var G__12507 = j;
  var G__12508 = k;
  var G__12509 = l;
  var G__12510 = m;
  var G__12511 = n;
  var G__12512 = o;
  var G__12513 = p;
  var G__12514 = q;
  var G__12515 = r;
  var G__12516 = s;
  var G__12517 = t;
  var G__12518 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12497, G__12498, G__12499, G__12500, G__12501, G__12502, G__12503, G__12504, G__12505, G__12506, G__12507, G__12508, G__12509, G__12510, G__12511, G__12512, G__12513, G__12514, G__12515, G__12516, G__12517, G__12518) : cljs.core.apply.call(null, G__12497, G__12498, G__12499, G__12500, G__12501, G__12502, G__12503, G__12504, G__12505, G__12506, G__12507, G__12508, G__12509, G__12510, G__12511, 
  G__12512, G__12513, G__12514, G__12515, G__12516, G__12517, G__12518);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__12523 = o;
    if (G__12523) {
      var bit__4449__auto__ = G__12523.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4449__auto__ || G__12523.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__12523.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__12523);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__12523);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3756__auto__ = !(o == null);
    if (and__3756__auto__) {
      var G__12527 = o;
      if (G__12527) {
        var bit__4449__auto__ = G__12527.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4449__auto__ || G__12527.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__12527.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__12527);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__12527);
      }
    } else {
      return and__3756__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin(coll, k);
    }
  };
  var disj__3 = function() {
    var G__12530__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__12531 = ret;
            var G__12532 = cljs.core.first(ks);
            var G__12533 = cljs.core.next(ks);
            coll = G__12531;
            k = G__12532;
            ks = G__12533;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__12530 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__12534__i = 0, G__12534__a = new Array(arguments.length - 2);
        while (G__12534__i < G__12534__a.length) {
          G__12534__a[G__12534__i] = arguments[G__12534__i + 2];
          ++G__12534__i;
        }
        ks = new cljs.core.IndexedSeq(G__12534__a, 0);
      }
      return G__12530__delegate.call(this, coll, k, ks);
    };
    G__12530.cljs$lang$maxFixedArity = 2;
    G__12530.cljs$lang$applyTo = function(arglist__12535) {
      var coll = cljs.core.first(arglist__12535);
      arglist__12535 = cljs.core.next(arglist__12535);
      var k = cljs.core.first(arglist__12535);
      var ks = cljs.core.rest(arglist__12535);
      return G__12530__delegate(coll, k, ks);
    };
    G__12530.cljs$core$IFn$_invoke$arity$variadic = G__12530__delegate;
    return G__12530;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        var G__12536 = null;
        if (arguments.length > 2) {
          var G__12537__i = 0, G__12537__a = new Array(arguments.length - 2);
          while (G__12537__i < G__12537__a.length) {
            G__12537__a[G__12537__i] = arguments[G__12537__i + 2];
            ++G__12537__i;
          }
          G__12536 = new cljs.core.IndexedSeq(G__12537__a, 0);
        }
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__12536);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__12539 = x;
    if (G__12539) {
      var bit__4449__auto__ = G__12539.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4449__auto__ || G__12539.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__12539.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__12539);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__12539);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__12541 = x;
    if (G__12541) {
      var bit__4449__auto__ = G__12541.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4449__auto__ || G__12541.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__12541.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__12541);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__12541);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__12543 = x;
  if (G__12543) {
    var bit__4449__auto__ = G__12543.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4449__auto__ || G__12543.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__12543.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__12543);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__12543);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__12545 = x;
  if (G__12545) {
    var bit__4449__auto__ = G__12545.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4449__auto__ || G__12545.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__12545.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__12545);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__12545);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__12547 = x;
  if (G__12547) {
    var bit__4449__auto__ = G__12547.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4449__auto__ || G__12547.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__12547.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__12547);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__12547);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__12549 = x;
  if (G__12549) {
    var bit__4449__auto__ = G__12549.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4449__auto__ || G__12549.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__12549.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__12549);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__12549);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__12551 = x;
    if (G__12551) {
      var bit__4449__auto__ = G__12551.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4449__auto__ || G__12551.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__12551.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__12551);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__12551);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__12553 = x;
  if (G__12553) {
    var bit__4449__auto__ = G__12553.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4449__auto__ || G__12553.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__12553.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__12553);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__12553);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__12555 = x;
  if (G__12555) {
    var bit__4442__auto__ = G__12555.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4442__auto__ || G__12555.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj12561 = {};
    return obj12561;
  };
  var js_obj__1 = function() {
    var G__12564__delegate = function(keyvals) {
      var G__12562 = goog.object.create;
      var G__12563 = keyvals;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__12562, G__12563) : cljs.core.apply.call(null, G__12562, G__12563);
    };
    var G__12564 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        var G__12565__i = 0, G__12565__a = new Array(arguments.length - 0);
        while (G__12565__i < G__12565__a.length) {
          G__12565__a[G__12565__i] = arguments[G__12565__i + 0];
          ++G__12565__i;
        }
        keyvals = new cljs.core.IndexedSeq(G__12565__a, 0);
      }
      return G__12564__delegate.call(this, keyvals);
    };
    G__12564.cljs$lang$maxFixedArity = 0;
    G__12564.cljs$lang$applyTo = function(arglist__12566) {
      var keyvals = cljs.core.seq(arglist__12566);
      return G__12564__delegate(keyvals);
    };
    G__12564.cljs$core$IFn$_invoke$arity$variadic = G__12564__delegate;
    return G__12564;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        var G__12567 = null;
        if (arguments.length > 0) {
          var G__12568__i = 0, G__12568__a = new Array(arguments.length - 0);
          while (G__12568__i < G__12568__a.length) {
            G__12568__a[G__12568__i] = arguments[G__12568__i + 0];
            ++G__12568__i;
          }
          G__12567 = new cljs.core.IndexedSeq(G__12568__a, 0);
        }
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__12567);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  var G__12571_12573 = obj;
  var G__12572_12574 = function(G__12571_12573, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__12571_12573, keys);
  goog.object.forEach(G__12571_12573, G__12572_12574);
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__12575 = i__$1 + 1;
      var G__12576 = j__$1 + 1;
      var G__12577 = len__$1 - 1;
      i__$1 = G__12575;
      j__$1 = G__12576;
      len__$1 = G__12577;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__12578 = i__$1 - 1;
      var G__12579 = j__$1 - 1;
      var G__12580 = len__$1 - 1;
      i__$1 = G__12578;
      j__$1 = G__12579;
      len__$1 = G__12580;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj12582 = {};
  return obj12582;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__12584 = s;
    if (G__12584) {
      var bit__4449__auto__ = G__12584.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4449__auto__ || G__12584.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__12584.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__12584);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__12584);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__12586 = s;
  if (G__12586) {
    var bit__4449__auto__ = G__12586.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4449__auto__ || G__12586.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__12586.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__12586);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__12586);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3768__auto__ = cljs.core.fn_QMARK_(f);
  if (or__3768__auto__) {
    return or__3768__auto__;
  } else {
    var G__12590 = f;
    if (G__12590) {
      var bit__4449__auto__ = G__12590.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4449__auto__ || G__12590.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__12590.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__12590);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__12590);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__12603 = n;
    return isNaN(G__12603);
  }()) && !(n === Infinity) && function() {
    var G__12604 = n;
    return parseFloat(G__12604);
  }() === function() {
    var G__12605 = n;
    var G__12606 = 10;
    return parseInt(G__12605, G__12606);
  }();
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__12607__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first(xs);
          var etc = cljs.core.next(xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_(s, x__$1)) {
              return false;
            } else {
              var G__12608 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
              var G__12609 = etc;
              s = G__12608;
              xs = G__12609;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__12607 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12610__i = 0, G__12610__a = new Array(arguments.length - 2);
        while (G__12610__i < G__12610__a.length) {
          G__12610__a[G__12610__i] = arguments[G__12610__i + 2];
          ++G__12610__i;
        }
        more = new cljs.core.IndexedSeq(G__12610__a, 0);
      }
      return G__12607__delegate.call(this, x, y, more);
    };
    G__12607.cljs$lang$maxFixedArity = 2;
    G__12607.cljs$lang$applyTo = function(arglist__12611) {
      var x = cljs.core.first(arglist__12611);
      arglist__12611 = cljs.core.next(arglist__12611);
      var y = cljs.core.first(arglist__12611);
      var more = cljs.core.rest(arglist__12611);
      return G__12607__delegate(x, y, more);
    };
    G__12607.cljs$core$IFn$_invoke$arity$variadic = G__12607__delegate;
    return G__12607;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        var G__12612 = null;
        if (arguments.length > 2) {
          var G__12613__i = 0, G__12613__a = new Array(arguments.length - 2);
          while (G__12613__i < G__12613__a.length) {
            G__12613__a[G__12613__i] = arguments[G__12613__i + 2];
            ++G__12613__i;
          }
          G__12612 = new cljs.core.IndexedSeq(G__12613__a, 0);
        }
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12612);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type(x) === cljs.core.type(y)) {
          if (function() {
            var G__12617 = x;
            if (G__12617) {
              var bit__4442__auto__ = G__12617.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4442__auto__ || G__12617.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return x.cljs$core$IComparable$_compare$arity$2(null, y);
          } else {
            var G__12618 = x;
            var G__12619 = y;
            return goog.array.defaultCompare(G__12618, G__12619);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count(xs);
    var yl = cljs.core.count(ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
      if (d === 0 && n + 1 < len) {
        var G__12624 = xs;
        var G__12625 = ys;
        var G__12626 = len;
        var G__12627 = n + 1;
        xs = G__12624;
        ys = G__12625;
        len = G__12626;
        n = G__12627;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__12632 = x;
        var G__12633 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12632, G__12633) : f.call(null, G__12632, G__12633);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(function() {
            var G__12634 = y;
            var G__12635 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12634, G__12635) : f.call(null, G__12634, G__12635);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq(coll)) {
      var a = function() {
        var G__12641 = coll;
        return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__12641) : cljs.core.to_array.call(null, G__12641);
      }();
      var G__12642_12644 = a;
      var G__12643_12645 = cljs.core.fn__GT_comparator(comp);
      goog.array.stableSort(G__12642_12644, G__12643_12645);
      return cljs.core.seq(a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
      return cljs.core.fn__GT_comparator(comp).call(null, function() {
        var G__12651 = x;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12651) : keyfn.call(null, G__12651);
      }(), function() {
        var G__12652 = y;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12652) : keyfn.call(null, G__12652);
      }());
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq(coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      var G__12658 = f;
      var G__12659 = cljs.core.first(s);
      var G__12660 = cljs.core.next(s);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__12658, G__12659, G__12660) : cljs.core.reduce.call(null, G__12658, G__12659, G__12660);
    } else {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq(coll);
    while (true) {
      if (coll__$1) {
        var nval = function() {
          var G__12661 = val__$1;
          var G__12662 = cljs.core.first(coll__$1);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12661, G__12662) : f.call(null, G__12661, G__12662);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__12663 = nval;
          var G__12664 = cljs.core.next(coll__$1);
          val__$1 = G__12663;
          coll__$1 = G__12664;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = function() {
    var G__12668 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__12668) : cljs.core.to_array.call(null, G__12668);
  }();
  var G__12669_12671 = a;
  goog.array.shuffle(G__12669_12671);
  var G__12670 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__12670) : cljs.core.vec.call(null, G__12670);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__12674 = coll;
      if (G__12674) {
        var bit__4442__auto__ = G__12674.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4442__auto__ || G__12674.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__12675 = coll;
      if (G__12675) {
        var bit__4442__auto__ = G__12675.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4442__auto__ || G__12675.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.completing = function() {
  var completing = null;
  var completing__1 = function(f) {
    return completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
  };
  var completing__2 = function(f, cf) {
    return function() {
      var G__12684 = null;
      var G__12684__0 = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      };
      var G__12684__1 = function(x) {
        var G__12681 = x;
        return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__12681) : cf.call(null, G__12681);
      };
      var G__12684__2 = function(x, y) {
        var G__12682 = x;
        var G__12683 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12682, G__12683) : f.call(null, G__12682, G__12683);
      };
      G__12684 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__12684__0.call(this);
          case 1:
            return G__12684__1.call(this, x);
          case 2:
            return G__12684__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12684.cljs$core$IFn$_invoke$arity$0 = G__12684__0;
      G__12684.cljs$core$IFn$_invoke$arity$1 = G__12684__1;
      G__12684.cljs$core$IFn$_invoke$arity$2 = G__12684__2;
      return G__12684;
    }();
  };
  completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return completing__1.call(this, f);
      case 2:
        return completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
  completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
  return completing;
}();
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = function() {
      var G__12691 = f;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__12691) : xform.call(null, G__12691);
    }();
    var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
    var G__12692 = ret;
    return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__12692) : f__$1.call(null, G__12692);
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__12693__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_, x + y, more);
    };
    var G__12693 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12694__i = 0, G__12694__a = new Array(arguments.length - 2);
        while (G__12694__i < G__12694__a.length) {
          G__12694__a[G__12694__i] = arguments[G__12694__i + 2];
          ++G__12694__i;
        }
        more = new cljs.core.IndexedSeq(G__12694__a, 0);
      }
      return G__12693__delegate.call(this, x, y, more);
    };
    G__12693.cljs$lang$maxFixedArity = 2;
    G__12693.cljs$lang$applyTo = function(arglist__12695) {
      var x = cljs.core.first(arglist__12695);
      arglist__12695 = cljs.core.next(arglist__12695);
      var y = cljs.core.first(arglist__12695);
      var more = cljs.core.rest(arglist__12695);
      return G__12693__delegate(x, y, more);
    };
    G__12693.cljs$core$IFn$_invoke$arity$variadic = G__12693__delegate;
    return G__12693;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        var G__12696 = null;
        if (arguments.length > 2) {
          var G__12697__i = 0, G__12697__a = new Array(arguments.length - 2);
          while (G__12697__i < G__12697__a.length) {
            G__12697__a[G__12697__i] = arguments[G__12697__i + 2];
            ++G__12697__i;
          }
          G__12696 = new cljs.core.IndexedSeq(G__12697__a, 0);
        }
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12696);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__12698__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_, x - y, more);
    };
    var G__12698 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12699__i = 0, G__12699__a = new Array(arguments.length - 2);
        while (G__12699__i < G__12699__a.length) {
          G__12699__a[G__12699__i] = arguments[G__12699__i + 2];
          ++G__12699__i;
        }
        more = new cljs.core.IndexedSeq(G__12699__a, 0);
      }
      return G__12698__delegate.call(this, x, y, more);
    };
    G__12698.cljs$lang$maxFixedArity = 2;
    G__12698.cljs$lang$applyTo = function(arglist__12700) {
      var x = cljs.core.first(arglist__12700);
      arglist__12700 = cljs.core.next(arglist__12700);
      var y = cljs.core.first(arglist__12700);
      var more = cljs.core.rest(arglist__12700);
      return G__12698__delegate(x, y, more);
    };
    G__12698.cljs$core$IFn$_invoke$arity$variadic = G__12698__delegate;
    return G__12698;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        var G__12701 = null;
        if (arguments.length > 2) {
          var G__12702__i = 0, G__12702__a = new Array(arguments.length - 2);
          while (G__12702__i < G__12702__a.length) {
            G__12702__a[G__12702__i] = arguments[G__12702__i + 2];
            ++G__12702__i;
          }
          G__12701 = new cljs.core.IndexedSeq(G__12702__a, 0);
        }
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12701);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__12703__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_, x * y, more);
    };
    var G__12703 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12704__i = 0, G__12704__a = new Array(arguments.length - 2);
        while (G__12704__i < G__12704__a.length) {
          G__12704__a[G__12704__i] = arguments[G__12704__i + 2];
          ++G__12704__i;
        }
        more = new cljs.core.IndexedSeq(G__12704__a, 0);
      }
      return G__12703__delegate.call(this, x, y, more);
    };
    G__12703.cljs$lang$maxFixedArity = 2;
    G__12703.cljs$lang$applyTo = function(arglist__12705) {
      var x = cljs.core.first(arglist__12705);
      arglist__12705 = cljs.core.next(arglist__12705);
      var y = cljs.core.first(arglist__12705);
      var more = cljs.core.rest(arglist__12705);
      return G__12703__delegate(x, y, more);
    };
    G__12703.cljs$core$IFn$_invoke$arity$variadic = G__12703__delegate;
    return G__12703;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        var G__12706 = null;
        if (arguments.length > 2) {
          var G__12707__i = 0, G__12707__a = new Array(arguments.length - 2);
          while (G__12707__i < G__12707__a.length) {
            G__12707__a[G__12707__i] = arguments[G__12707__i + 2];
            ++G__12707__i;
          }
          G__12706 = new cljs.core.IndexedSeq(G__12707__a, 0);
        }
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12706);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__12712__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_, _SLASH_.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__12712 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12713__i = 0, G__12713__a = new Array(arguments.length - 2);
        while (G__12713__i < G__12713__a.length) {
          G__12713__a[G__12713__i] = arguments[G__12713__i + 2];
          ++G__12713__i;
        }
        more = new cljs.core.IndexedSeq(G__12713__a, 0);
      }
      return G__12712__delegate.call(this, x, y, more);
    };
    G__12712.cljs$lang$maxFixedArity = 2;
    G__12712.cljs$lang$applyTo = function(arglist__12714) {
      var x = cljs.core.first(arglist__12714);
      arglist__12714 = cljs.core.next(arglist__12714);
      var y = cljs.core.first(arglist__12714);
      var more = cljs.core.rest(arglist__12714);
      return G__12712__delegate(x, y, more);
    };
    G__12712.cljs$core$IFn$_invoke$arity$variadic = G__12712__delegate;
    return G__12712;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        var G__12715 = null;
        if (arguments.length > 2) {
          var G__12716__i = 0, G__12716__a = new Array(arguments.length - 2);
          while (G__12716__i < G__12716__a.length) {
            G__12716__a[G__12716__i] = arguments[G__12716__i + 2];
            ++G__12716__i;
          }
          G__12715 = new cljs.core.IndexedSeq(G__12716__a, 0);
        }
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12715);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__12717__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next(more)) {
            var G__12718 = y;
            var G__12719 = cljs.core.first(more);
            var G__12720 = cljs.core.next(more);
            x = G__12718;
            y = G__12719;
            more = G__12720;
            continue;
          } else {
            return y < cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12717 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12721__i = 0, G__12721__a = new Array(arguments.length - 2);
        while (G__12721__i < G__12721__a.length) {
          G__12721__a[G__12721__i] = arguments[G__12721__i + 2];
          ++G__12721__i;
        }
        more = new cljs.core.IndexedSeq(G__12721__a, 0);
      }
      return G__12717__delegate.call(this, x, y, more);
    };
    G__12717.cljs$lang$maxFixedArity = 2;
    G__12717.cljs$lang$applyTo = function(arglist__12722) {
      var x = cljs.core.first(arglist__12722);
      arglist__12722 = cljs.core.next(arglist__12722);
      var y = cljs.core.first(arglist__12722);
      var more = cljs.core.rest(arglist__12722);
      return G__12717__delegate(x, y, more);
    };
    G__12717.cljs$core$IFn$_invoke$arity$variadic = G__12717__delegate;
    return G__12717;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        var G__12723 = null;
        if (arguments.length > 2) {
          var G__12724__i = 0, G__12724__a = new Array(arguments.length - 2);
          while (G__12724__i < G__12724__a.length) {
            G__12724__a[G__12724__i] = arguments[G__12724__i + 2];
            ++G__12724__i;
          }
          G__12723 = new cljs.core.IndexedSeq(G__12724__a, 0);
        }
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12723);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__12725__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next(more)) {
            var G__12726 = y;
            var G__12727 = cljs.core.first(more);
            var G__12728 = cljs.core.next(more);
            x = G__12726;
            y = G__12727;
            more = G__12728;
            continue;
          } else {
            return y <= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12725 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12729__i = 0, G__12729__a = new Array(arguments.length - 2);
        while (G__12729__i < G__12729__a.length) {
          G__12729__a[G__12729__i] = arguments[G__12729__i + 2];
          ++G__12729__i;
        }
        more = new cljs.core.IndexedSeq(G__12729__a, 0);
      }
      return G__12725__delegate.call(this, x, y, more);
    };
    G__12725.cljs$lang$maxFixedArity = 2;
    G__12725.cljs$lang$applyTo = function(arglist__12730) {
      var x = cljs.core.first(arglist__12730);
      arglist__12730 = cljs.core.next(arglist__12730);
      var y = cljs.core.first(arglist__12730);
      var more = cljs.core.rest(arglist__12730);
      return G__12725__delegate(x, y, more);
    };
    G__12725.cljs$core$IFn$_invoke$arity$variadic = G__12725__delegate;
    return G__12725;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        var G__12731 = null;
        if (arguments.length > 2) {
          var G__12732__i = 0, G__12732__a = new Array(arguments.length - 2);
          while (G__12732__i < G__12732__a.length) {
            G__12732__a[G__12732__i] = arguments[G__12732__i + 2];
            ++G__12732__i;
          }
          G__12731 = new cljs.core.IndexedSeq(G__12732__a, 0);
        }
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12731);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__12733__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next(more)) {
            var G__12734 = y;
            var G__12735 = cljs.core.first(more);
            var G__12736 = cljs.core.next(more);
            x = G__12734;
            y = G__12735;
            more = G__12736;
            continue;
          } else {
            return y > cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12733 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12737__i = 0, G__12737__a = new Array(arguments.length - 2);
        while (G__12737__i < G__12737__a.length) {
          G__12737__a[G__12737__i] = arguments[G__12737__i + 2];
          ++G__12737__i;
        }
        more = new cljs.core.IndexedSeq(G__12737__a, 0);
      }
      return G__12733__delegate.call(this, x, y, more);
    };
    G__12733.cljs$lang$maxFixedArity = 2;
    G__12733.cljs$lang$applyTo = function(arglist__12738) {
      var x = cljs.core.first(arglist__12738);
      arglist__12738 = cljs.core.next(arglist__12738);
      var y = cljs.core.first(arglist__12738);
      var more = cljs.core.rest(arglist__12738);
      return G__12733__delegate(x, y, more);
    };
    G__12733.cljs$core$IFn$_invoke$arity$variadic = G__12733__delegate;
    return G__12733;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        var G__12739 = null;
        if (arguments.length > 2) {
          var G__12740__i = 0, G__12740__a = new Array(arguments.length - 2);
          while (G__12740__i < G__12740__a.length) {
            G__12740__a[G__12740__i] = arguments[G__12740__i + 2];
            ++G__12740__i;
          }
          G__12739 = new cljs.core.IndexedSeq(G__12740__a, 0);
        }
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12739);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__12741__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next(more)) {
            var G__12742 = y;
            var G__12743 = cljs.core.first(more);
            var G__12744 = cljs.core.next(more);
            x = G__12742;
            y = G__12743;
            more = G__12744;
            continue;
          } else {
            return y >= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12741 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12745__i = 0, G__12745__a = new Array(arguments.length - 2);
        while (G__12745__i < G__12745__a.length) {
          G__12745__a[G__12745__i] = arguments[G__12745__i + 2];
          ++G__12745__i;
        }
        more = new cljs.core.IndexedSeq(G__12745__a, 0);
      }
      return G__12741__delegate.call(this, x, y, more);
    };
    G__12741.cljs$lang$maxFixedArity = 2;
    G__12741.cljs$lang$applyTo = function(arglist__12746) {
      var x = cljs.core.first(arglist__12746);
      arglist__12746 = cljs.core.next(arglist__12746);
      var y = cljs.core.first(arglist__12746);
      var more = cljs.core.rest(arglist__12746);
      return G__12741__delegate(x, y, more);
    };
    G__12741.cljs$core$IFn$_invoke$arity$variadic = G__12741__delegate;
    return G__12741;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        var G__12747 = null;
        if (arguments.length > 2) {
          var G__12748__i = 0, G__12748__a = new Array(arguments.length - 2);
          while (G__12748__i < G__12748__a.length) {
            G__12748__a[G__12748__i] = arguments[G__12748__i + 2];
            ++G__12748__i;
          }
          G__12747 = new cljs.core.IndexedSeq(G__12748__a, 0);
        }
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12747);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__4085__auto__ = x;
    var y__4086__auto__ = y;
    return x__4085__auto__ > y__4086__auto__ ? x__4085__auto__ : y__4086__auto__;
  };
  var max__3 = function() {
    var G__12749__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max, function() {
        var x__4085__auto__ = x;
        var y__4086__auto__ = y;
        return x__4085__auto__ > y__4086__auto__ ? x__4085__auto__ : y__4086__auto__;
      }(), more);
    };
    var G__12749 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12750__i = 0, G__12750__a = new Array(arguments.length - 2);
        while (G__12750__i < G__12750__a.length) {
          G__12750__a[G__12750__i] = arguments[G__12750__i + 2];
          ++G__12750__i;
        }
        more = new cljs.core.IndexedSeq(G__12750__a, 0);
      }
      return G__12749__delegate.call(this, x, y, more);
    };
    G__12749.cljs$lang$maxFixedArity = 2;
    G__12749.cljs$lang$applyTo = function(arglist__12751) {
      var x = cljs.core.first(arglist__12751);
      arglist__12751 = cljs.core.next(arglist__12751);
      var y = cljs.core.first(arglist__12751);
      var more = cljs.core.rest(arglist__12751);
      return G__12749__delegate(x, y, more);
    };
    G__12749.cljs$core$IFn$_invoke$arity$variadic = G__12749__delegate;
    return G__12749;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        var G__12752 = null;
        if (arguments.length > 2) {
          var G__12753__i = 0, G__12753__a = new Array(arguments.length - 2);
          while (G__12753__i < G__12753__a.length) {
            G__12753__a[G__12753__i] = arguments[G__12753__i + 2];
            ++G__12753__i;
          }
          G__12752 = new cljs.core.IndexedSeq(G__12753__a, 0);
        }
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12752);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__4092__auto__ = x;
    var y__4093__auto__ = y;
    return x__4092__auto__ < y__4093__auto__ ? x__4092__auto__ : y__4093__auto__;
  };
  var min__3 = function() {
    var G__12754__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min, function() {
        var x__4092__auto__ = x;
        var y__4093__auto__ = y;
        return x__4092__auto__ < y__4093__auto__ ? x__4092__auto__ : y__4093__auto__;
      }(), more);
    };
    var G__12754 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12755__i = 0, G__12755__a = new Array(arguments.length - 2);
        while (G__12755__i < G__12755__a.length) {
          G__12755__a[G__12755__i] = arguments[G__12755__i + 2];
          ++G__12755__i;
        }
        more = new cljs.core.IndexedSeq(G__12755__a, 0);
      }
      return G__12754__delegate.call(this, x, y, more);
    };
    G__12754.cljs$lang$maxFixedArity = 2;
    G__12754.cljs$lang$applyTo = function(arglist__12756) {
      var x = cljs.core.first(arglist__12756);
      arglist__12756 = cljs.core.next(arglist__12756);
      var y = cljs.core.first(arglist__12756);
      var more = cljs.core.rest(arglist__12756);
      return G__12754__delegate(x, y, more);
    };
    G__12754.cljs$core$IFn$_invoke$arity$variadic = G__12754__delegate;
    return G__12754;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        var G__12757 = null;
        if (arguments.length > 2) {
          var G__12758__i = 0, G__12758__a = new Array(arguments.length - 2);
          while (G__12758__i < G__12758__a.length) {
            G__12758__a[G__12758__i] = arguments[G__12758__i + 2];
            ++G__12758__i;
          }
          G__12757 = new cljs.core.IndexedSeq(G__12758__a, 0);
        }
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12757);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__12759__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add, x + y, more);
    };
    var G__12759 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12760__i = 0, G__12760__a = new Array(arguments.length - 2);
        while (G__12760__i < G__12760__a.length) {
          G__12760__a[G__12760__i] = arguments[G__12760__i + 2];
          ++G__12760__i;
        }
        more = new cljs.core.IndexedSeq(G__12760__a, 0);
      }
      return G__12759__delegate.call(this, x, y, more);
    };
    G__12759.cljs$lang$maxFixedArity = 2;
    G__12759.cljs$lang$applyTo = function(arglist__12761) {
      var x = cljs.core.first(arglist__12761);
      arglist__12761 = cljs.core.next(arglist__12761);
      var y = cljs.core.first(arglist__12761);
      var more = cljs.core.rest(arglist__12761);
      return G__12759__delegate(x, y, more);
    };
    G__12759.cljs$core$IFn$_invoke$arity$variadic = G__12759__delegate;
    return G__12759;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        var G__12762 = null;
        if (arguments.length > 2) {
          var G__12763__i = 0, G__12763__a = new Array(arguments.length - 2);
          while (G__12763__i < G__12763__a.length) {
            G__12763__a[G__12763__i] = arguments[G__12763__i + 2];
            ++G__12763__i;
          }
          G__12762 = new cljs.core.IndexedSeq(G__12763__a, 0);
        }
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12762);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__12764__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int, x + y, more);
    };
    var G__12764 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12765__i = 0, G__12765__a = new Array(arguments.length - 2);
        while (G__12765__i < G__12765__a.length) {
          G__12765__a[G__12765__i] = arguments[G__12765__i + 2];
          ++G__12765__i;
        }
        more = new cljs.core.IndexedSeq(G__12765__a, 0);
      }
      return G__12764__delegate.call(this, x, y, more);
    };
    G__12764.cljs$lang$maxFixedArity = 2;
    G__12764.cljs$lang$applyTo = function(arglist__12766) {
      var x = cljs.core.first(arglist__12766);
      arglist__12766 = cljs.core.next(arglist__12766);
      var y = cljs.core.first(arglist__12766);
      var more = cljs.core.rest(arglist__12766);
      return G__12764__delegate(x, y, more);
    };
    G__12764.cljs$core$IFn$_invoke$arity$variadic = G__12764__delegate;
    return G__12764;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        var G__12767 = null;
        if (arguments.length > 2) {
          var G__12768__i = 0, G__12768__a = new Array(arguments.length - 2);
          while (G__12768__i < G__12768__a.length) {
            G__12768__a[G__12768__i] = arguments[G__12768__i + 2];
            ++G__12768__i;
          }
          G__12767 = new cljs.core.IndexedSeq(G__12768__a, 0);
        }
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12767);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__12773__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int, unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__12773 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12774__i = 0, G__12774__a = new Array(arguments.length - 2);
        while (G__12774__i < G__12774__a.length) {
          G__12774__a[G__12774__i] = arguments[G__12774__i + 2];
          ++G__12774__i;
        }
        more = new cljs.core.IndexedSeq(G__12774__a, 0);
      }
      return G__12773__delegate.call(this, x, y, more);
    };
    G__12773.cljs$lang$maxFixedArity = 2;
    G__12773.cljs$lang$applyTo = function(arglist__12775) {
      var x = cljs.core.first(arglist__12775);
      arglist__12775 = cljs.core.next(arglist__12775);
      var y = cljs.core.first(arglist__12775);
      var more = cljs.core.rest(arglist__12775);
      return G__12773__delegate(x, y, more);
    };
    G__12773.cljs$core$IFn$_invoke$arity$variadic = G__12773__delegate;
    return G__12773;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        var G__12776 = null;
        if (arguments.length > 2) {
          var G__12777__i = 0, G__12777__a = new Array(arguments.length - 2);
          while (G__12777__i < G__12777__a.length) {
            G__12777__a[G__12777__i] = arguments[G__12777__i + 2];
            ++G__12777__i;
          }
          G__12776 = new cljs.core.IndexedSeq(G__12777__a, 0);
        }
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12776);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__12778__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply, x * y, more);
    };
    var G__12778 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12779__i = 0, G__12779__a = new Array(arguments.length - 2);
        while (G__12779__i < G__12779__a.length) {
          G__12779__a[G__12779__i] = arguments[G__12779__i + 2];
          ++G__12779__i;
        }
        more = new cljs.core.IndexedSeq(G__12779__a, 0);
      }
      return G__12778__delegate.call(this, x, y, more);
    };
    G__12778.cljs$lang$maxFixedArity = 2;
    G__12778.cljs$lang$applyTo = function(arglist__12780) {
      var x = cljs.core.first(arglist__12780);
      arglist__12780 = cljs.core.next(arglist__12780);
      var y = cljs.core.first(arglist__12780);
      var more = cljs.core.rest(arglist__12780);
      return G__12778__delegate(x, y, more);
    };
    G__12778.cljs$core$IFn$_invoke$arity$variadic = G__12778__delegate;
    return G__12778;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        var G__12781 = null;
        if (arguments.length > 2) {
          var G__12782__i = 0, G__12782__a = new Array(arguments.length - 2);
          while (G__12782__i < G__12782__a.length) {
            G__12782__a[G__12782__i] = arguments[G__12782__i + 2];
            ++G__12782__i;
          }
          G__12781 = new cljs.core.IndexedSeq(G__12782__a, 0);
        }
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12781);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__12783__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int, x * y, more);
    };
    var G__12783 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12784__i = 0, G__12784__a = new Array(arguments.length - 2);
        while (G__12784__i < G__12784__a.length) {
          G__12784__a[G__12784__i] = arguments[G__12784__i + 2];
          ++G__12784__i;
        }
        more = new cljs.core.IndexedSeq(G__12784__a, 0);
      }
      return G__12783__delegate.call(this, x, y, more);
    };
    G__12783.cljs$lang$maxFixedArity = 2;
    G__12783.cljs$lang$applyTo = function(arglist__12785) {
      var x = cljs.core.first(arglist__12785);
      arglist__12785 = cljs.core.next(arglist__12785);
      var y = cljs.core.first(arglist__12785);
      var more = cljs.core.rest(arglist__12785);
      return G__12783__delegate(x, y, more);
    };
    G__12783.cljs$core$IFn$_invoke$arity$variadic = G__12783__delegate;
    return G__12783;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        var G__12786 = null;
        if (arguments.length > 2) {
          var G__12787__i = 0, G__12787__a = new Array(arguments.length - 2);
          while (G__12787__i < G__12787__a.length) {
            G__12787__a[G__12787__i] = arguments[G__12787__i + 2];
            ++G__12787__i;
          }
          G__12786 = new cljs.core.IndexedSeq(G__12787__a, 0);
        }
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12786);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  var G__12790 = x;
  var G__12791 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__12790, G__12791) : cljs.core.mod.call(null, G__12790, G__12791);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__12792__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract, x - y, more);
    };
    var G__12792 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12793__i = 0, G__12793__a = new Array(arguments.length - 2);
        while (G__12793__i < G__12793__a.length) {
          G__12793__a[G__12793__i] = arguments[G__12793__i + 2];
          ++G__12793__i;
        }
        more = new cljs.core.IndexedSeq(G__12793__a, 0);
      }
      return G__12792__delegate.call(this, x, y, more);
    };
    G__12792.cljs$lang$maxFixedArity = 2;
    G__12792.cljs$lang$applyTo = function(arglist__12794) {
      var x = cljs.core.first(arglist__12794);
      arglist__12794 = cljs.core.next(arglist__12794);
      var y = cljs.core.first(arglist__12794);
      var more = cljs.core.rest(arglist__12794);
      return G__12792__delegate(x, y, more);
    };
    G__12792.cljs$core$IFn$_invoke$arity$variadic = G__12792__delegate;
    return G__12792;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        var G__12795 = null;
        if (arguments.length > 2) {
          var G__12796__i = 0, G__12796__a = new Array(arguments.length - 2);
          while (G__12796__i < G__12796__a.length) {
            G__12796__a[G__12796__i] = arguments[G__12796__i + 2];
            ++G__12796__i;
          }
          G__12795 = new cljs.core.IndexedSeq(G__12796__a, 0);
        }
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12795);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__12797__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int, x - y, more);
    };
    var G__12797 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12798__i = 0, G__12798__a = new Array(arguments.length - 2);
        while (G__12798__i < G__12798__a.length) {
          G__12798__a[G__12798__i] = arguments[G__12798__i + 2];
          ++G__12798__i;
        }
        more = new cljs.core.IndexedSeq(G__12798__a, 0);
      }
      return G__12797__delegate.call(this, x, y, more);
    };
    G__12797.cljs$lang$maxFixedArity = 2;
    G__12797.cljs$lang$applyTo = function(arglist__12799) {
      var x = cljs.core.first(arglist__12799);
      arglist__12799 = cljs.core.next(arglist__12799);
      var y = cljs.core.first(arglist__12799);
      var more = cljs.core.rest(arglist__12799);
      return G__12797__delegate(x, y, more);
    };
    G__12797.cljs$core$IFn$_invoke$arity$variadic = G__12797__delegate;
    return G__12797;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        var G__12800 = null;
        if (arguments.length > 2) {
          var G__12801__i = 0, G__12801__a = new Array(arguments.length - 2);
          while (G__12801__i < G__12801__a.length) {
            G__12801__a[G__12801__i] = arguments[G__12801__i + 2];
            ++G__12801__i;
          }
          G__12800 = new cljs.core.IndexedSeq(G__12801__a, 0);
        }
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12800);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    var G__12804 = q;
    return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__12804) : Math.floor.call(null, G__12804);
  } else {
    var G__12805 = q;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__12805) : Math.ceil.call(null, G__12805);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function() {
  var bit_xor = null;
  var bit_xor__2 = function(x, y) {
    return x ^ y;
  };
  var bit_xor__3 = function() {
    var G__12806__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor, x ^ y, more);
    };
    var G__12806 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12807__i = 0, G__12807__a = new Array(arguments.length - 2);
        while (G__12807__i < G__12807__a.length) {
          G__12807__a[G__12807__i] = arguments[G__12807__i + 2];
          ++G__12807__i;
        }
        more = new cljs.core.IndexedSeq(G__12807__a, 0);
      }
      return G__12806__delegate.call(this, x, y, more);
    };
    G__12806.cljs$lang$maxFixedArity = 2;
    G__12806.cljs$lang$applyTo = function(arglist__12808) {
      var x = cljs.core.first(arglist__12808);
      arglist__12808 = cljs.core.next(arglist__12808);
      var y = cljs.core.first(arglist__12808);
      var more = cljs.core.rest(arglist__12808);
      return G__12806__delegate(x, y, more);
    };
    G__12806.cljs$core$IFn$_invoke$arity$variadic = G__12806__delegate;
    return G__12806;
  }();
  bit_xor = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_xor__2.call(this, x, y);
      default:
        var G__12809 = null;
        if (arguments.length > 2) {
          var G__12810__i = 0, G__12810__a = new Array(arguments.length - 2);
          while (G__12810__i < G__12810__a.length) {
            G__12810__a[G__12810__i] = arguments[G__12810__i + 2];
            ++G__12810__i;
          }
          G__12809 = new cljs.core.IndexedSeq(G__12810__a, 0);
        }
        return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12809);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_xor.cljs$lang$maxFixedArity = 2;
  bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
  bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
  bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_xor;
}();
cljs.core.bit_and = function() {
  var bit_and = null;
  var bit_and__2 = function(x, y) {
    return x & y;
  };
  var bit_and__3 = function() {
    var G__12811__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and, x & y, more);
    };
    var G__12811 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12812__i = 0, G__12812__a = new Array(arguments.length - 2);
        while (G__12812__i < G__12812__a.length) {
          G__12812__a[G__12812__i] = arguments[G__12812__i + 2];
          ++G__12812__i;
        }
        more = new cljs.core.IndexedSeq(G__12812__a, 0);
      }
      return G__12811__delegate.call(this, x, y, more);
    };
    G__12811.cljs$lang$maxFixedArity = 2;
    G__12811.cljs$lang$applyTo = function(arglist__12813) {
      var x = cljs.core.first(arglist__12813);
      arglist__12813 = cljs.core.next(arglist__12813);
      var y = cljs.core.first(arglist__12813);
      var more = cljs.core.rest(arglist__12813);
      return G__12811__delegate(x, y, more);
    };
    G__12811.cljs$core$IFn$_invoke$arity$variadic = G__12811__delegate;
    return G__12811;
  }();
  bit_and = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and__2.call(this, x, y);
      default:
        var G__12814 = null;
        if (arguments.length > 2) {
          var G__12815__i = 0, G__12815__a = new Array(arguments.length - 2);
          while (G__12815__i < G__12815__a.length) {
            G__12815__a[G__12815__i] = arguments[G__12815__i + 2];
            ++G__12815__i;
          }
          G__12814 = new cljs.core.IndexedSeq(G__12815__a, 0);
        }
        return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12814);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and.cljs$lang$maxFixedArity = 2;
  bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
  bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
  bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and;
}();
cljs.core.bit_or = function() {
  var bit_or = null;
  var bit_or__2 = function(x, y) {
    return x | y;
  };
  var bit_or__3 = function() {
    var G__12816__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or, x | y, more);
    };
    var G__12816 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12817__i = 0, G__12817__a = new Array(arguments.length - 2);
        while (G__12817__i < G__12817__a.length) {
          G__12817__a[G__12817__i] = arguments[G__12817__i + 2];
          ++G__12817__i;
        }
        more = new cljs.core.IndexedSeq(G__12817__a, 0);
      }
      return G__12816__delegate.call(this, x, y, more);
    };
    G__12816.cljs$lang$maxFixedArity = 2;
    G__12816.cljs$lang$applyTo = function(arglist__12818) {
      var x = cljs.core.first(arglist__12818);
      arglist__12818 = cljs.core.next(arglist__12818);
      var y = cljs.core.first(arglist__12818);
      var more = cljs.core.rest(arglist__12818);
      return G__12816__delegate(x, y, more);
    };
    G__12816.cljs$core$IFn$_invoke$arity$variadic = G__12816__delegate;
    return G__12816;
  }();
  bit_or = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_or__2.call(this, x, y);
      default:
        var G__12819 = null;
        if (arguments.length > 2) {
          var G__12820__i = 0, G__12820__a = new Array(arguments.length - 2);
          while (G__12820__i < G__12820__a.length) {
            G__12820__a[G__12820__i] = arguments[G__12820__i + 2];
            ++G__12820__i;
          }
          G__12819 = new cljs.core.IndexedSeq(G__12820__a, 0);
        }
        return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12819);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_or.cljs$lang$maxFixedArity = 2;
  bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
  bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
  bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_or;
}();
cljs.core.bit_and_not = function() {
  var bit_and_not = null;
  var bit_and_not__2 = function(x, y) {
    return x & ~y;
  };
  var bit_and_not__3 = function() {
    var G__12821__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not, x & ~y, more);
    };
    var G__12821 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12822__i = 0, G__12822__a = new Array(arguments.length - 2);
        while (G__12822__i < G__12822__a.length) {
          G__12822__a[G__12822__i] = arguments[G__12822__i + 2];
          ++G__12822__i;
        }
        more = new cljs.core.IndexedSeq(G__12822__a, 0);
      }
      return G__12821__delegate.call(this, x, y, more);
    };
    G__12821.cljs$lang$maxFixedArity = 2;
    G__12821.cljs$lang$applyTo = function(arglist__12823) {
      var x = cljs.core.first(arglist__12823);
      arglist__12823 = cljs.core.next(arglist__12823);
      var y = cljs.core.first(arglist__12823);
      var more = cljs.core.rest(arglist__12823);
      return G__12821__delegate(x, y, more);
    };
    G__12821.cljs$core$IFn$_invoke$arity$variadic = G__12821__delegate;
    return G__12821;
  }();
  bit_and_not = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and_not__2.call(this, x, y);
      default:
        var G__12824 = null;
        if (arguments.length > 2) {
          var G__12825__i = 0, G__12825__a = new Array(arguments.length - 2);
          while (G__12825__i < G__12825__a.length) {
            G__12825__a[G__12825__i] = arguments[G__12825__i + 2];
            ++G__12825__i;
          }
          G__12824 = new cljs.core.IndexedSeq(G__12825__a, 0);
        }
        return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12824);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and_not.cljs$lang$maxFixedArity = 2;
  bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
  bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
  bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and_not;
}();
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv(x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__12830__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__12831 = y;
            var G__12832 = cljs.core.first(more);
            var G__12833 = cljs.core.next(more);
            x = G__12831;
            y = G__12832;
            more = G__12833;
            continue;
          } else {
            return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12830 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12834__i = 0, G__12834__a = new Array(arguments.length - 2);
        while (G__12834__i < G__12834__a.length) {
          G__12834__a[G__12834__i] = arguments[G__12834__i + 2];
          ++G__12834__i;
        }
        more = new cljs.core.IndexedSeq(G__12834__a, 0);
      }
      return G__12830__delegate.call(this, x, y, more);
    };
    G__12830.cljs$lang$maxFixedArity = 2;
    G__12830.cljs$lang$applyTo = function(arglist__12835) {
      var x = cljs.core.first(arglist__12835);
      arglist__12835 = cljs.core.next(arglist__12835);
      var y = cljs.core.first(arglist__12835);
      var more = cljs.core.rest(arglist__12835);
      return G__12830__delegate(x, y, more);
    };
    G__12830.cljs$core$IFn$_invoke$arity$variadic = G__12830__delegate;
    return G__12830;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        var G__12836 = null;
        if (arguments.length > 2) {
          var G__12837__i = 0, G__12837__a = new Array(arguments.length - 2);
          while (G__12837__i < G__12837__a.length) {
            G__12837__a[G__12837__i] = arguments[G__12837__i + 2];
            ++G__12837__i;
          }
          G__12836 = new cljs.core.IndexedSeq(G__12837__a, 0);
        }
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12836);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__12838 = n__$1 - 1;
      var G__12839 = cljs.core.next(xs);
      n__$1 = G__12838;
      xs = G__12839;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      var G__12843 = x;
      return goog.string.buildString(G__12843);
    }
  };
  var str__2 = function() {
    var G__12844__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__12845 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
          var G__12846 = cljs.core.next(more);
          sb = G__12845;
          more = G__12846;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__12844 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        var G__12847__i = 0, G__12847__a = new Array(arguments.length - 1);
        while (G__12847__i < G__12847__a.length) {
          G__12847__a[G__12847__i] = arguments[G__12847__i + 1];
          ++G__12847__i;
        }
        ys = new cljs.core.IndexedSeq(G__12847__a, 0);
      }
      return G__12844__delegate.call(this, x, ys);
    };
    G__12844.cljs$lang$maxFixedArity = 1;
    G__12844.cljs$lang$applyTo = function(arglist__12848) {
      var x = cljs.core.first(arglist__12848);
      var ys = cljs.core.rest(arglist__12848);
      return G__12844__delegate(x, ys);
    };
    G__12844.cljs$core$IFn$_invoke$arity$variadic = G__12844__delegate;
    return G__12844;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        var G__12849 = null;
        if (arguments.length > 1) {
          var G__12850__i = 0, G__12850__a = new Array(arguments.length - 1);
          while (G__12850__i < G__12850__a.length) {
            G__12850__a[G__12850__i] = arguments[G__12850__i + 1];
            ++G__12850__i;
          }
          G__12849 = new cljs.core.IndexedSeq(G__12850__a, 0);
        }
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12849);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__12851 = cljs.core.next(xs);
            var G__12852 = cljs.core.next(ys);
            xs = G__12851;
            ys = G__12852;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__12853 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__12854 = cljs.core.next(s);
        res = G__12853;
        s = G__12854;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__12859 = (h + (cljs.core.hash(function() {
        var G__12857 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__12857) : cljs.core.key.call(null, G__12857);
      }()) ^ cljs.core.hash(function() {
        var G__12858 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__12858) : cljs.core.val.call(null, G__12858);
      }()))) % 4503599627370496;
      var G__12860 = cljs.core.next(s);
      h = G__12859;
      s = G__12860;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__12861 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__12862 = cljs.core.next(s__$1);
      h = G__12861;
      s__$1 = G__12862;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__12873_12883 = cljs.core.seq(fn_map);
  var chunk__12874_12884 = null;
  var count__12875_12885 = 0;
  var i__12876_12886 = 0;
  while (true) {
    if (i__12876_12886 < count__12875_12885) {
      var vec__12877_12887 = chunk__12874_12884.cljs$core$IIndexed$_nth$arity$2(null, i__12876_12886);
      var key_name_12888 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12877_12887, 0, null);
      var f_12889 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12877_12887, 1, null);
      var str_name_12890 = function() {
        var G__12878 = key_name_12888;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12878) : cljs.core.name.call(null, G__12878);
      }();
      obj[str_name_12890] = f_12889;
      var G__12891 = seq__12873_12883;
      var G__12892 = chunk__12874_12884;
      var G__12893 = count__12875_12885;
      var G__12894 = i__12876_12886 + 1;
      seq__12873_12883 = G__12891;
      chunk__12874_12884 = G__12892;
      count__12875_12885 = G__12893;
      i__12876_12886 = G__12894;
      continue;
    } else {
      var temp__4126__auto___12895 = cljs.core.seq(seq__12873_12883);
      if (temp__4126__auto___12895) {
        var seq__12873_12896__$1 = temp__4126__auto___12895;
        if (cljs.core.chunked_seq_QMARK_(seq__12873_12896__$1)) {
          var c__4555__auto___12897 = function() {
            var G__12879 = seq__12873_12896__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__12879) : cljs.core.chunk_first.call(null, G__12879);
          }();
          var G__12898 = function() {
            var G__12880 = seq__12873_12896__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__12880) : cljs.core.chunk_rest.call(null, G__12880);
          }();
          var G__12899 = c__4555__auto___12897;
          var G__12900 = cljs.core.count(c__4555__auto___12897);
          var G__12901 = 0;
          seq__12873_12883 = G__12898;
          chunk__12874_12884 = G__12899;
          count__12875_12885 = G__12900;
          i__12876_12886 = G__12901;
          continue;
        } else {
          var vec__12881_12902 = cljs.core.first(seq__12873_12896__$1);
          var key_name_12903 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12881_12902, 0, null);
          var f_12904 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12881_12902, 1, null);
          var str_name_12905 = function() {
            var G__12882 = key_name_12903;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12882) : cljs.core.name.call(null, G__12882);
          }();
          obj[str_name_12905] = f_12904;
          var G__12906 = cljs.core.next(seq__12873_12896__$1);
          var G__12907 = null;
          var G__12908 = 0;
          var G__12909 = 0;
          seq__12873_12883 = G__12906;
          chunk__12874_12884 = G__12907;
          count__12875_12885 = G__12908;
          i__12876_12886 = G__12909;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__12911 = coll;
  if (G__12911) {
    var bit__4449__auto__ = G__12911.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4449__auto__ || G__12911.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__12911.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__12911);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__12911);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
          var G__12912 = xs__$1.cljs$core$INext$_next$arity$1(null);
          xs__$1 = G__12912;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__12913 = i - 1;
        var G__12914 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
        i = G__12913;
        r = G__12914;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__12915__i = 0, G__12915__a = new Array(arguments.length - 0);
      while (G__12915__i < G__12915__a.length) {
        G__12915__a[G__12915__i] = arguments[G__12915__i + 0];
        ++G__12915__i;
      }
      xs = new cljs.core.IndexedSeq(G__12915__a, 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__12916) {
    var xs = cljs.core.seq(arglist__12916);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3768__auto__ = coll == null;
    if (or__3768__auto__) {
      return or__3768__auto__;
    } else {
      var G__12920 = coll;
      if (G__12920) {
        var bit__4442__auto__ = G__12920.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4442__auto__ || G__12920.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__12922 = x;
  if (G__12922) {
    var bit__4449__auto__ = G__12922.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4449__auto__ || G__12922.cljs$core$IList$) {
      return true;
    } else {
      if (!G__12922.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__12922);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__12922);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3756__auto__ = cljs.core.not(a.ns);
      if (and__3756__auto__) {
        return b.ns;
      } else {
        return and__3756__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__12929 = a.ns;
            var G__12930 = b.ns;
            return goog.array.defaultCompare(G__12929, G__12930);
          }();
          if (0 === nsc) {
            var G__12931 = a.name;
            var G__12932 = b.name;
            return goog.array.defaultCompare(G__12931, G__12932);
          } else {
            return nsc;
          }
        }
      } else {
        var G__12933 = a.name;
        var G__12934 = b.name;
        return goog.array.defaultCompare(G__12933, G__12934);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4189__auto__ = self__._hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__12936 = null;
  var G__12936__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__12936__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__12936 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12936__2.call(this, self__, coll);
      case 3:
        return G__12936__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12936.cljs$core$IFn$_invoke$arity$2 = G__12936__2;
  G__12936.cljs$core$IFn$_invoke$arity$3 = G__12936__3;
  return G__12936;
}();
cljs.core.Keyword.prototype.apply = function(self__, args12935) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12935)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__12938 = x;
    if (G__12938) {
      var bit__4442__auto__ = G__12938.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4442__auto__ || G__12938.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace(name), function() {
          var G__12940 = name;
          return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12940) : cljs.core.name.call(null, G__12940);
        }(), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__12941 = ls.sval();
        ls = G__12941;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__12943 = s;
    if (G__12943) {
      var bit__4442__auto__ = G__12943.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4442__auto__ || G__12943.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__12944 = cljs.core.next(s__$1);
      s__$1 = G__12944;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_12945 = 0;
  var xs_12946 = cljs.core.seq(coll);
  while (true) {
    if (xs_12946) {
      ret[i_12945] = cljs.core.to_array(cljs.core.first(xs_12946));
      var G__12947 = i_12945 + 1;
      var G__12948 = cljs.core.next(xs_12946);
      i_12945 = G__12947;
      xs_12946 = G__12948;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__12951 = i + 1;
          var G__12952 = cljs.core.next(s__$1);
          i = G__12951;
          s__$1 = G__12952;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4655__auto___12953 = size;
      var i_12954 = 0;
      while (true) {
        if (i_12954 < n__4655__auto___12953) {
          a[i_12954] = init_val_or_seq;
          var G__12955 = i_12954 + 1;
          i_12954 = G__12955;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__12958 = i + 1;
          var G__12959 = cljs.core.next(s__$1);
          i = G__12958;
          s__$1 = G__12959;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4655__auto___12960 = size;
      var i_12961 = 0;
      while (true) {
        if (i_12961 < n__4655__auto___12960) {
          a[i_12961] = init_val_or_seq;
          var G__12962 = i_12961 + 1;
          i_12961 = G__12962;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__12965 = i + 1;
          var G__12966 = cljs.core.next(s__$1);
          i = G__12965;
          s__$1 = G__12966;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4655__auto___12967 = size;
      var i_12968 = 0;
      while (true) {
        if (i_12968 < n__4655__auto___12967) {
          a[i_12968] = init_val_or_seq;
          var G__12969 = i_12968 + 1;
          i_12968 = G__12969;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__12972 = i + 1;
          var G__12973 = cljs.core.next(s__$1);
          i = G__12972;
          s__$1 = G__12973;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4655__auto___12974 = size;
      var i_12975 = 0;
      while (true) {
        if (i_12975 < n__4655__auto___12974) {
          a[i_12975] = init_val_or_seq;
          var G__12976 = i_12975 + 1;
          i_12975 = G__12976;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__12977 = cljs.core.next(s__$1);
        var G__12978 = i - 1;
        var G__12979 = sum + 1;
        s__$1 = G__12977;
        i = G__12978;
        sum = G__12979;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq(x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_(s)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
        } else {
          return cljs.core.cons(cljs.core.first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__12999__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq(xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
              return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cat(cljs.core.chunk_rest(xys__$1), zs__$1));
            } else {
              return cljs.core.cons(cljs.core.first(xys__$1), cat(cljs.core.rest(xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat(concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
    };
    var G__12999 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        var G__13000__i = 0, G__13000__a = new Array(arguments.length - 2);
        while (G__13000__i < G__13000__a.length) {
          G__13000__a[G__13000__i] = arguments[G__13000__i + 2];
          ++G__13000__i;
        }
        zs = new cljs.core.IndexedSeq(G__13000__a, 0);
      }
      return G__12999__delegate.call(this, x, y, zs);
    };
    G__12999.cljs$lang$maxFixedArity = 2;
    G__12999.cljs$lang$applyTo = function(arglist__13001) {
      var x = cljs.core.first(arglist__13001);
      arglist__13001 = cljs.core.next(arglist__13001);
      var y = cljs.core.first(arglist__13001);
      var zs = cljs.core.rest(arglist__13001);
      return G__12999__delegate(x, y, zs);
    };
    G__12999.cljs$core$IFn$_invoke$arity$variadic = G__12999__delegate;
    return G__12999;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        var G__13002 = null;
        if (arguments.length > 2) {
          var G__13003__i = 0, G__13003__a = new Array(arguments.length - 2);
          while (G__13003__i < G__13003__a.length) {
            G__13003__a[G__13003__i] = arguments[G__13003__i + 2];
            ++G__13003__i;
          }
          G__13002 = new cljs.core.IndexedSeq(G__13003__a, 0);
        }
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13002);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq(args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons(a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons(a, cljs.core.cons(b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
  };
  var list_STAR___5 = function() {
    var G__13004__delegate = function(a, b, c, d, more) {
      return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
    };
    var G__13004 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__13005__i = 0, G__13005__a = new Array(arguments.length - 4);
        while (G__13005__i < G__13005__a.length) {
          G__13005__a[G__13005__i] = arguments[G__13005__i + 4];
          ++G__13005__i;
        }
        more = new cljs.core.IndexedSeq(G__13005__a, 0);
      }
      return G__13004__delegate.call(this, a, b, c, d, more);
    };
    G__13004.cljs$lang$maxFixedArity = 4;
    G__13004.cljs$lang$applyTo = function(arglist__13006) {
      var a = cljs.core.first(arglist__13006);
      arglist__13006 = cljs.core.next(arglist__13006);
      var b = cljs.core.first(arglist__13006);
      arglist__13006 = cljs.core.next(arglist__13006);
      var c = cljs.core.first(arglist__13006);
      arglist__13006 = cljs.core.next(arglist__13006);
      var d = cljs.core.first(arglist__13006);
      var more = cljs.core.rest(arglist__13006);
      return G__13004__delegate(a, b, c, d, more);
    };
    G__13004.cljs$core$IFn$_invoke$arity$variadic = G__13004__delegate;
    return G__13004;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        var G__13007 = null;
        if (arguments.length > 4) {
          var G__13008__i = 0, G__13008__a = new Array(arguments.length - 4);
          while (G__13008__i < G__13008__a.length) {
            G__13008__a[G__13008__i] = arguments[G__13008__i + 4];
            ++G__13008__i;
          }
          G__13007 = new cljs.core.IndexedSeq(G__13008__a, 0);
        }
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, G__13007);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_(tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__13009__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__13010 = ntcoll;
          var G__13011 = cljs.core.first(vals);
          var G__13012 = cljs.core.next(vals);
          tcoll = G__13010;
          val = G__13011;
          vals = G__13012;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__13009 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__13013__i = 0, G__13013__a = new Array(arguments.length - 2);
        while (G__13013__i < G__13013__a.length) {
          G__13013__a[G__13013__i] = arguments[G__13013__i + 2];
          ++G__13013__i;
        }
        vals = new cljs.core.IndexedSeq(G__13013__a, 0);
      }
      return G__13009__delegate.call(this, tcoll, val, vals);
    };
    G__13009.cljs$lang$maxFixedArity = 2;
    G__13009.cljs$lang$applyTo = function(arglist__13014) {
      var tcoll = cljs.core.first(arglist__13014);
      arglist__13014 = cljs.core.next(arglist__13014);
      var val = cljs.core.first(arglist__13014);
      var vals = cljs.core.rest(arglist__13014);
      return G__13009__delegate(tcoll, val, vals);
    };
    G__13009.cljs$core$IFn$_invoke$arity$variadic = G__13009__delegate;
    return G__13009;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        var G__13015 = null;
        if (arguments.length > 2) {
          var G__13016__i = 0, G__13016__a = new Array(arguments.length - 2);
          while (G__13016__i < G__13016__a.length) {
            G__13016__a[G__13016__i] = arguments[G__13016__i + 2];
            ++G__13016__i;
          }
          G__13015 = new cljs.core.IndexedSeq(G__13016__a, 0);
        }
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__13015);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_(tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__13017__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__13018 = ntcoll;
          var G__13019 = cljs.core.first(kvs);
          var G__13020 = cljs.core.second(kvs);
          var G__13021 = cljs.core.nnext(kvs);
          tcoll = G__13018;
          key = G__13019;
          val = G__13020;
          kvs = G__13021;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__13017 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__13022__i = 0, G__13022__a = new Array(arguments.length - 3);
        while (G__13022__i < G__13022__a.length) {
          G__13022__a[G__13022__i] = arguments[G__13022__i + 3];
          ++G__13022__i;
        }
        kvs = new cljs.core.IndexedSeq(G__13022__a, 0);
      }
      return G__13017__delegate.call(this, tcoll, key, val, kvs);
    };
    G__13017.cljs$lang$maxFixedArity = 3;
    G__13017.cljs$lang$applyTo = function(arglist__13023) {
      var tcoll = cljs.core.first(arglist__13023);
      arglist__13023 = cljs.core.next(arglist__13023);
      var key = cljs.core.first(arglist__13023);
      arglist__13023 = cljs.core.next(arglist__13023);
      var val = cljs.core.first(arglist__13023);
      var kvs = cljs.core.rest(arglist__13023);
      return G__13017__delegate(tcoll, key, val, kvs);
    };
    G__13017.cljs$core$IFn$_invoke$arity$variadic = G__13017__delegate;
    return G__13017;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        var G__13024 = null;
        if (arguments.length > 3) {
          var G__13025__i = 0, G__13025__a = new Array(arguments.length - 3);
          while (G__13025__i < G__13025__a.length) {
            G__13025__a[G__13025__i] = arguments[G__13025__i + 3];
            ++G__13025__i;
          }
          G__13024 = new cljs.core.IndexedSeq(G__13025__a, 0);
        }
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, G__13024);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_(tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__13026__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__13027 = ntcoll;
          var G__13028 = cljs.core.first(ks);
          var G__13029 = cljs.core.next(ks);
          tcoll = G__13027;
          key = G__13028;
          ks = G__13029;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__13026 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__13030__i = 0, G__13030__a = new Array(arguments.length - 2);
        while (G__13030__i < G__13030__a.length) {
          G__13030__a[G__13030__i] = arguments[G__13030__i + 2];
          ++G__13030__i;
        }
        ks = new cljs.core.IndexedSeq(G__13030__a, 0);
      }
      return G__13026__delegate.call(this, tcoll, key, ks);
    };
    G__13026.cljs$lang$maxFixedArity = 2;
    G__13026.cljs$lang$applyTo = function(arglist__13031) {
      var tcoll = cljs.core.first(arglist__13031);
      arglist__13031 = cljs.core.next(arglist__13031);
      var key = cljs.core.first(arglist__13031);
      var ks = cljs.core.rest(arglist__13031);
      return G__13026__delegate(tcoll, key, ks);
    };
    G__13026.cljs$core$IFn$_invoke$arity$variadic = G__13026__delegate;
    return G__13026;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        var G__13032 = null;
        if (arguments.length > 2) {
          var G__13033__i = 0, G__13033__a = new Array(arguments.length - 2);
          while (G__13033__i < G__13033__a.length) {
            G__13033__a[G__13033__i] = arguments[G__13033__i + 2];
            ++G__13033__i;
          }
          G__13032 = new cljs.core.IndexedSeq(G__13033__a, 0);
        }
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, G__13032);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_(tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__13034__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__13035 = ntcoll;
          var G__13036 = cljs.core.first(vals);
          var G__13037 = cljs.core.next(vals);
          tcoll = G__13035;
          val = G__13036;
          vals = G__13037;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__13034 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__13038__i = 0, G__13038__a = new Array(arguments.length - 2);
        while (G__13038__i < G__13038__a.length) {
          G__13038__a[G__13038__i] = arguments[G__13038__i + 2];
          ++G__13038__i;
        }
        vals = new cljs.core.IndexedSeq(G__13038__a, 0);
      }
      return G__13034__delegate.call(this, tcoll, val, vals);
    };
    G__13034.cljs$lang$maxFixedArity = 2;
    G__13034.cljs$lang$applyTo = function(arglist__13039) {
      var tcoll = cljs.core.first(arglist__13039);
      arglist__13039 = cljs.core.next(arglist__13039);
      var val = cljs.core.first(arglist__13039);
      var vals = cljs.core.rest(arglist__13039);
      return G__13034__delegate(tcoll, val, vals);
    };
    G__13034.cljs$core$IFn$_invoke$arity$variadic = G__13034__delegate;
    return G__13034;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        var G__13040 = null;
        if (arguments.length > 2) {
          var G__13041__i = 0, G__13041__a = new Array(arguments.length - 2);
          while (G__13041__i < G__13041__a.length) {
            G__13041__a[G__13041__i] = arguments[G__13041__i + 2];
            ++G__13041__i;
          }
          G__13040 = new cljs.core.IndexedSeq(G__13041__a, 0);
        }
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__13040);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a4699 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4699);
      } else {
        var G__13252 = a4699;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13252) : f.call(null, G__13252);
      }
    } else {
      var b4700 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4699, b4700);
        } else {
          var G__13253 = a4699;
          var G__13254 = b4700;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13253, G__13254) : f.call(null, G__13253, G__13254);
        }
      } else {
        var c4701 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4699, b4700, c4701);
          } else {
            var G__13255 = a4699;
            var G__13256 = b4700;
            var G__13257 = c4701;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13255, G__13256, G__13257) : f.call(null, G__13255, G__13256, G__13257);
          }
        } else {
          var d4702 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4699, b4700, c4701, d4702);
            } else {
              var G__13258 = a4699;
              var G__13259 = b4700;
              var G__13260 = c4701;
              var G__13261 = d4702;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13258, G__13259, G__13260, G__13261) : f.call(null, G__13258, G__13259, G__13260, G__13261);
            }
          } else {
            var e4703 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4699, b4700, c4701, d4702, e4703);
              } else {
                var G__13262 = a4699;
                var G__13263 = b4700;
                var G__13264 = c4701;
                var G__13265 = d4702;
                var G__13266 = e4703;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13262, G__13263, G__13264, G__13265, G__13266) : f.call(null, G__13262, G__13263, G__13264, G__13265, G__13266);
              }
            } else {
              var f4704 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4699, b4700, c4701, d4702, e4703, f4704);
                } else {
                  var G__13267 = a4699;
                  var G__13268 = b4700;
                  var G__13269 = c4701;
                  var G__13270 = d4702;
                  var G__13271 = e4703;
                  var G__13272 = f4704;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__13267, G__13268, G__13269, G__13270, G__13271, G__13272) : f.call(null, G__13267, G__13268, G__13269, G__13270, G__13271, G__13272);
                }
              } else {
                var g4705 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4699, b4700, c4701, d4702, e4703, f4704, g4705);
                  } else {
                    var G__13273 = a4699;
                    var G__13274 = b4700;
                    var G__13275 = c4701;
                    var G__13276 = d4702;
                    var G__13277 = e4703;
                    var G__13278 = f4704;
                    var G__13279 = g4705;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__13273, G__13274, G__13275, G__13276, G__13277, G__13278, G__13279) : f.call(null, G__13273, G__13274, G__13275, G__13276, G__13277, G__13278, G__13279);
                  }
                } else {
                  var h4706 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706);
                    } else {
                      var G__13280 = a4699;
                      var G__13281 = b4700;
                      var G__13282 = c4701;
                      var G__13283 = d4702;
                      var G__13284 = e4703;
                      var G__13285 = f4704;
                      var G__13286 = g4705;
                      var G__13287 = h4706;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__13280, G__13281, G__13282, G__13283, G__13284, G__13285, G__13286, G__13287) : f.call(null, G__13280, G__13281, G__13282, G__13283, G__13284, G__13285, G__13286, G__13287);
                    }
                  } else {
                    var i4707 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706, i4707);
                      } else {
                        var G__13288 = a4699;
                        var G__13289 = b4700;
                        var G__13290 = c4701;
                        var G__13291 = d4702;
                        var G__13292 = e4703;
                        var G__13293 = f4704;
                        var G__13294 = g4705;
                        var G__13295 = h4706;
                        var G__13296 = i4707;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__13288, G__13289, G__13290, G__13291, G__13292, G__13293, G__13294, G__13295, G__13296) : f.call(null, G__13288, G__13289, G__13290, G__13291, G__13292, G__13293, G__13294, G__13295, G__13296);
                      }
                    } else {
                      var j4708 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706, i4707, j4708);
                        } else {
                          var G__13297 = a4699;
                          var G__13298 = b4700;
                          var G__13299 = c4701;
                          var G__13300 = d4702;
                          var G__13301 = e4703;
                          var G__13302 = f4704;
                          var G__13303 = g4705;
                          var G__13304 = h4706;
                          var G__13305 = i4707;
                          var G__13306 = j4708;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__13297, G__13298, G__13299, G__13300, G__13301, G__13302, G__13303, G__13304, G__13305, G__13306) : f.call(null, G__13297, G__13298, G__13299, G__13300, G__13301, G__13302, G__13303, G__13304, G__13305, G__13306);
                        }
                      } else {
                        var k4709 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706, i4707, j4708, k4709);
                          } else {
                            var G__13307 = a4699;
                            var G__13308 = b4700;
                            var G__13309 = c4701;
                            var G__13310 = d4702;
                            var G__13311 = e4703;
                            var G__13312 = f4704;
                            var G__13313 = g4705;
                            var G__13314 = h4706;
                            var G__13315 = i4707;
                            var G__13316 = j4708;
                            var G__13317 = k4709;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__13307, G__13308, G__13309, G__13310, G__13311, G__13312, G__13313, G__13314, G__13315, G__13316, G__13317) : f.call(null, G__13307, G__13308, G__13309, G__13310, G__13311, G__13312, G__13313, G__13314, G__13315, G__13316, G__13317);
                          }
                        } else {
                          var l4710 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706, i4707, j4708, k4709, l4710);
                            } else {
                              var G__13318 = a4699;
                              var G__13319 = b4700;
                              var G__13320 = c4701;
                              var G__13321 = d4702;
                              var G__13322 = e4703;
                              var G__13323 = f4704;
                              var G__13324 = g4705;
                              var G__13325 = h4706;
                              var G__13326 = i4707;
                              var G__13327 = j4708;
                              var G__13328 = k4709;
                              var G__13329 = l4710;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__13318, G__13319, G__13320, G__13321, G__13322, G__13323, G__13324, G__13325, G__13326, G__13327, G__13328, G__13329) : f.call(null, G__13318, G__13319, G__13320, G__13321, G__13322, G__13323, G__13324, G__13325, G__13326, G__13327, G__13328, G__13329);
                            }
                          } else {
                            var m4711 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706, i4707, j4708, k4709, l4710, m4711);
                              } else {
                                var G__13330 = a4699;
                                var G__13331 = b4700;
                                var G__13332 = c4701;
                                var G__13333 = d4702;
                                var G__13334 = e4703;
                                var G__13335 = f4704;
                                var G__13336 = g4705;
                                var G__13337 = h4706;
                                var G__13338 = i4707;
                                var G__13339 = j4708;
                                var G__13340 = k4709;
                                var G__13341 = l4710;
                                var G__13342 = m4711;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__13330, G__13331, G__13332, G__13333, G__13334, G__13335, G__13336, G__13337, G__13338, G__13339, G__13340, G__13341, G__13342) : f.call(null, G__13330, G__13331, G__13332, G__13333, G__13334, G__13335, G__13336, G__13337, G__13338, G__13339, G__13340, G__13341, G__13342);
                              }
                            } else {
                              var n4712 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706, i4707, j4708, k4709, l4710, m4711, n4712);
                                } else {
                                  var G__13343 = a4699;
                                  var G__13344 = b4700;
                                  var G__13345 = c4701;
                                  var G__13346 = d4702;
                                  var G__13347 = e4703;
                                  var G__13348 = f4704;
                                  var G__13349 = g4705;
                                  var G__13350 = h4706;
                                  var G__13351 = i4707;
                                  var G__13352 = j4708;
                                  var G__13353 = k4709;
                                  var G__13354 = l4710;
                                  var G__13355 = m4711;
                                  var G__13356 = n4712;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__13343, G__13344, G__13345, G__13346, G__13347, G__13348, G__13349, G__13350, G__13351, G__13352, G__13353, G__13354, G__13355, G__13356) : f.call(null, G__13343, G__13344, G__13345, G__13346, G__13347, G__13348, G__13349, G__13350, G__13351, G__13352, G__13353, G__13354, G__13355, G__13356);
                                }
                              } else {
                                var o4713 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706, i4707, j4708, k4709, l4710, m4711, n4712, o4713);
                                  } else {
                                    var G__13357 = a4699;
                                    var G__13358 = b4700;
                                    var G__13359 = c4701;
                                    var G__13360 = d4702;
                                    var G__13361 = e4703;
                                    var G__13362 = f4704;
                                    var G__13363 = g4705;
                                    var G__13364 = h4706;
                                    var G__13365 = i4707;
                                    var G__13366 = j4708;
                                    var G__13367 = k4709;
                                    var G__13368 = l4710;
                                    var G__13369 = m4711;
                                    var G__13370 = n4712;
                                    var G__13371 = o4713;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__13357, G__13358, G__13359, G__13360, G__13361, G__13362, G__13363, G__13364, G__13365, G__13366, G__13367, G__13368, G__13369, G__13370, G__13371) : f.call(null, G__13357, G__13358, G__13359, G__13360, G__13361, G__13362, G__13363, G__13364, G__13365, G__13366, G__13367, G__13368, G__13369, G__13370, G__13371);
                                  }
                                } else {
                                  var p4714 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706, i4707, j4708, k4709, l4710, m4711, n4712, o4713, p4714);
                                    } else {
                                      var G__13372 = a4699;
                                      var G__13373 = b4700;
                                      var G__13374 = c4701;
                                      var G__13375 = d4702;
                                      var G__13376 = e4703;
                                      var G__13377 = f4704;
                                      var G__13378 = g4705;
                                      var G__13379 = h4706;
                                      var G__13380 = i4707;
                                      var G__13381 = j4708;
                                      var G__13382 = k4709;
                                      var G__13383 = l4710;
                                      var G__13384 = m4711;
                                      var G__13385 = n4712;
                                      var G__13386 = o4713;
                                      var G__13387 = p4714;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__13372, G__13373, G__13374, G__13375, G__13376, G__13377, G__13378, G__13379, G__13380, G__13381, G__13382, G__13383, G__13384, G__13385, G__13386, G__13387) : f.call(null, G__13372, G__13373, G__13374, G__13375, G__13376, G__13377, G__13378, G__13379, G__13380, G__13381, G__13382, G__13383, G__13384, G__13385, G__13386, G__13387);
                                    }
                                  } else {
                                    var q4715 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706, i4707, j4708, k4709, l4710, m4711, n4712, o4713, p4714, q4715);
                                      } else {
                                        var G__13388 = a4699;
                                        var G__13389 = b4700;
                                        var G__13390 = c4701;
                                        var G__13391 = d4702;
                                        var G__13392 = e4703;
                                        var G__13393 = f4704;
                                        var G__13394 = g4705;
                                        var G__13395 = h4706;
                                        var G__13396 = i4707;
                                        var G__13397 = j4708;
                                        var G__13398 = k4709;
                                        var G__13399 = l4710;
                                        var G__13400 = m4711;
                                        var G__13401 = n4712;
                                        var G__13402 = o4713;
                                        var G__13403 = p4714;
                                        var G__13404 = q4715;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__13388, G__13389, G__13390, G__13391, G__13392, G__13393, G__13394, G__13395, G__13396, G__13397, G__13398, G__13399, G__13400, G__13401, G__13402, G__13403, G__13404) : f.call(null, G__13388, G__13389, G__13390, G__13391, G__13392, G__13393, G__13394, G__13395, G__13396, G__13397, G__13398, G__13399, G__13400, G__13401, G__13402, G__13403, G__13404);
                                      }
                                    } else {
                                      var r4716 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706, i4707, j4708, k4709, l4710, m4711, n4712, o4713, p4714, q4715, r4716);
                                        } else {
                                          var G__13405 = a4699;
                                          var G__13406 = b4700;
                                          var G__13407 = c4701;
                                          var G__13408 = d4702;
                                          var G__13409 = e4703;
                                          var G__13410 = f4704;
                                          var G__13411 = g4705;
                                          var G__13412 = h4706;
                                          var G__13413 = i4707;
                                          var G__13414 = j4708;
                                          var G__13415 = k4709;
                                          var G__13416 = l4710;
                                          var G__13417 = m4711;
                                          var G__13418 = n4712;
                                          var G__13419 = o4713;
                                          var G__13420 = p4714;
                                          var G__13421 = q4715;
                                          var G__13422 = r4716;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__13405, G__13406, G__13407, G__13408, G__13409, G__13410, G__13411, G__13412, G__13413, G__13414, G__13415, G__13416, G__13417, G__13418, G__13419, G__13420, G__13421, G__13422) : f.call(null, G__13405, G__13406, G__13407, G__13408, G__13409, G__13410, G__13411, G__13412, G__13413, G__13414, G__13415, G__13416, G__13417, G__13418, G__13419, G__13420, G__13421, G__13422);
                                        }
                                      } else {
                                        var s4717 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706, i4707, j4708, k4709, l4710, m4711, n4712, o4713, p4714, q4715, r4716, s4717);
                                          } else {
                                            var G__13423 = a4699;
                                            var G__13424 = b4700;
                                            var G__13425 = c4701;
                                            var G__13426 = d4702;
                                            var G__13427 = e4703;
                                            var G__13428 = f4704;
                                            var G__13429 = g4705;
                                            var G__13430 = h4706;
                                            var G__13431 = i4707;
                                            var G__13432 = j4708;
                                            var G__13433 = k4709;
                                            var G__13434 = l4710;
                                            var G__13435 = m4711;
                                            var G__13436 = n4712;
                                            var G__13437 = o4713;
                                            var G__13438 = p4714;
                                            var G__13439 = q4715;
                                            var G__13440 = r4716;
                                            var G__13441 = s4717;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__13423, G__13424, G__13425, G__13426, G__13427, G__13428, G__13429, G__13430, G__13431, G__13432, G__13433, G__13434, G__13435, G__13436, G__13437, G__13438, G__13439, G__13440, G__13441) : f.call(null, G__13423, G__13424, G__13425, G__13426, G__13427, G__13428, G__13429, G__13430, G__13431, G__13432, G__13433, G__13434, G__13435, G__13436, G__13437, G__13438, G__13439, G__13440, 
                                            G__13441);
                                          }
                                        } else {
                                          var t4718 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4699, b4700, c4701, d4702, e4703, f4704, g4705, h4706, i4707, j4708, k4709, l4710, m4711, n4712, o4713, p4714, q4715, r4716, s4717, t4718);
                                            } else {
                                              var G__13442 = a4699;
                                              var G__13443 = b4700;
                                              var G__13444 = c4701;
                                              var G__13445 = d4702;
                                              var G__13446 = e4703;
                                              var G__13447 = f4704;
                                              var G__13448 = g4705;
                                              var G__13449 = h4706;
                                              var G__13450 = i4707;
                                              var G__13451 = j4708;
                                              var G__13452 = k4709;
                                              var G__13453 = l4710;
                                              var G__13454 = m4711;
                                              var G__13455 = n4712;
                                              var G__13456 = o4713;
                                              var G__13457 = p4714;
                                              var G__13458 = q4715;
                                              var G__13459 = r4716;
                                              var G__13460 = s4717;
                                              var G__13461 = t4718;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__13442, G__13443, G__13444, G__13445, G__13446, G__13447, G__13448, G__13449, G__13450, G__13451, G__13452, G__13453, G__13454, G__13455, G__13456, G__13457, G__13458, G__13459, G__13460, G__13461) : f.call(null, G__13442, G__13443, G__13444, G__13445, G__13446, G__13447, G__13448, G__13449, G__13450, G__13451, G__13452, G__13453, G__13454, G__13455, G__13456, G__13457, G__13458, 
                                              G__13459, G__13460, G__13461);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array(args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__6 = function() {
    var G__13462__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to(f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array(arglist));
      }
    };
    var G__13462 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        var G__13463__i = 0, G__13463__a = new Array(arguments.length - 5);
        while (G__13463__i < G__13463__a.length) {
          G__13463__a[G__13463__i] = arguments[G__13463__i + 5];
          ++G__13463__i;
        }
        args = new cljs.core.IndexedSeq(G__13463__a, 0);
      }
      return G__13462__delegate.call(this, f, a, b, c, d, args);
    };
    G__13462.cljs$lang$maxFixedArity = 5;
    G__13462.cljs$lang$applyTo = function(arglist__13464) {
      var f = cljs.core.first(arglist__13464);
      arglist__13464 = cljs.core.next(arglist__13464);
      var a = cljs.core.first(arglist__13464);
      arglist__13464 = cljs.core.next(arglist__13464);
      var b = cljs.core.first(arglist__13464);
      arglist__13464 = cljs.core.next(arglist__13464);
      var c = cljs.core.first(arglist__13464);
      arglist__13464 = cljs.core.next(arglist__13464);
      var d = cljs.core.first(arglist__13464);
      var args = cljs.core.rest(arglist__13464);
      return G__13462__delegate(f, a, b, c, d, args);
    };
    G__13462.cljs$core$IFn$_invoke$arity$variadic = G__13462__delegate;
    return G__13462;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        var G__13465 = null;
        if (arguments.length > 5) {
          var G__13466__i = 0, G__13466__a = new Array(arguments.length - 5);
          while (G__13466__i < G__13466__a.length) {
            G__13466__a[G__13466__i] = arguments[G__13466__i + 5];
            ++G__13466__i;
          }
          G__13465 = new cljs.core.IndexedSeq(G__13466__a, 0);
        }
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, G__13465);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta(obj, function() {
      var G__13482 = cljs.core.meta(obj);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13482) : f.call(null, G__13482);
    }());
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta(obj, function() {
      var G__13483 = cljs.core.meta(obj);
      var G__13484 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13483, G__13484) : f.call(null, G__13483, G__13484);
    }());
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta(obj, function() {
      var G__13485 = cljs.core.meta(obj);
      var G__13486 = a;
      var G__13487 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13485, G__13486, G__13487) : f.call(null, G__13485, G__13486, G__13487);
    }());
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta(obj, function() {
      var G__13488 = cljs.core.meta(obj);
      var G__13489 = a;
      var G__13490 = b;
      var G__13491 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13488, G__13489, G__13490, G__13491) : f.call(null, G__13488, G__13489, G__13490, G__13491);
    }());
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta(obj, function() {
      var G__13492 = cljs.core.meta(obj);
      var G__13493 = a;
      var G__13494 = b;
      var G__13495 = c;
      var G__13496 = d;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13492, G__13493, G__13494, G__13495, G__13496) : f.call(null, G__13492, G__13493, G__13494, G__13495, G__13496);
    }());
  };
  var vary_meta__7 = function() {
    var G__13497__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
    };
    var G__13497 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__13498__i = 0, G__13498__a = new Array(arguments.length - 6);
        while (G__13498__i < G__13498__a.length) {
          G__13498__a[G__13498__i] = arguments[G__13498__i + 6];
          ++G__13498__i;
        }
        args = new cljs.core.IndexedSeq(G__13498__a, 0);
      }
      return G__13497__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__13497.cljs$lang$maxFixedArity = 6;
    G__13497.cljs$lang$applyTo = function(arglist__13499) {
      var obj = cljs.core.first(arglist__13499);
      arglist__13499 = cljs.core.next(arglist__13499);
      var f = cljs.core.first(arglist__13499);
      arglist__13499 = cljs.core.next(arglist__13499);
      var a = cljs.core.first(arglist__13499);
      arglist__13499 = cljs.core.next(arglist__13499);
      var b = cljs.core.first(arglist__13499);
      arglist__13499 = cljs.core.next(arglist__13499);
      var c = cljs.core.first(arglist__13499);
      arglist__13499 = cljs.core.next(arglist__13499);
      var d = cljs.core.first(arglist__13499);
      var args = cljs.core.rest(arglist__13499);
      return G__13497__delegate(obj, f, a, b, c, d, args);
    };
    G__13497.cljs$core$IFn$_invoke$arity$variadic = G__13497__delegate;
    return G__13497;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        var G__13500 = null;
        if (arguments.length > 6) {
          var G__13501__i = 0, G__13501__a = new Array(arguments.length - 6);
          while (G__13501__i < G__13501__a.length) {
            G__13501__a[G__13501__i] = arguments[G__13501__i + 6];
            ++G__13501__i;
          }
          G__13500 = new cljs.core.IndexedSeq(G__13501__a, 0);
        }
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, G__13500);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var not_EQ___3 = function() {
    var G__13502__delegate = function(x, y, more) {
      return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
    };
    var G__13502 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13503__i = 0, G__13503__a = new Array(arguments.length - 2);
        while (G__13503__i < G__13503__a.length) {
          G__13503__a[G__13503__i] = arguments[G__13503__i + 2];
          ++G__13503__i;
        }
        more = new cljs.core.IndexedSeq(G__13503__a, 0);
      }
      return G__13502__delegate.call(this, x, y, more);
    };
    G__13502.cljs$lang$maxFixedArity = 2;
    G__13502.cljs$lang$applyTo = function(arglist__13504) {
      var x = cljs.core.first(arglist__13504);
      arglist__13504 = cljs.core.next(arglist__13504);
      var y = cljs.core.first(arglist__13504);
      var more = cljs.core.rest(arglist__13504);
      return G__13502__delegate(x, y, more);
    };
    G__13502.cljs$core$IFn$_invoke$arity$variadic = G__13502__delegate;
    return G__13502;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        var G__13505 = null;
        if (arguments.length > 2) {
          var G__13506__i = 0, G__13506__a = new Array(arguments.length - 2);
          while (G__13506__i < G__13506__a.length) {
            G__13506__a[G__13506__i] = arguments[G__13506__i + 2];
            ++G__13506__i;
          }
          G__13505 = new cljs.core.IndexedSeq(G__13506__a, 0);
        }
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13505);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t13510 !== "undefined") {
  } else {
    cljs.core.t13510 = function(nil_iter, meta13511) {
      this.nil_iter = nil_iter;
      this.meta13511 = meta13511;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t13510.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t13510.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t13510.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t13510.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13512) {
      var self__ = this;
      var _13512__$1 = this;
      return self__.meta13511;
    };
    cljs.core.t13510.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13512, meta13511__$1) {
      var self__ = this;
      var _13512__$1 = this;
      return new cljs.core.t13510(self__.nil_iter, meta13511__$1);
    };
    cljs.core.t13510.cljs$lang$type = true;
    cljs.core.t13510.cljs$lang$ctorStr = "cljs.core/t13510";
    cljs.core.t13510.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
      return cljs.core._write(writer__4356__auto__, "cljs.core/t13510");
    };
    cljs.core.__GT_t13510 = function __GT_t13510(nil_iter__$1, meta13511) {
      return new cljs.core.t13510(nil_iter__$1, meta13511);
    };
  }
  return new cljs.core.t13510(nil_iter, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 54, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 3063, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 3059, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/mhurd/development/workspace/gridlife/target/cljsbuild-compiler-0/cljs/core.cljs"], 
  null));
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3756__auto__ = !(lt.stepper == null);
      if (and__3756__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3756__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__13513 = lt;
        var G__13514 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__13513, G__13514) : self__.xform.call(null, G__13513, G__13514);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__13515 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__13515) : self__.xform.call(null, G__13515);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__13517 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13517) : xform.call(null, G__13517);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__13519 = cljs.core.next(iters__$1);
        iters__$1 = G__13519;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4655__auto___13520 = self__.iters.length;
  var i_13521 = 0;
  while (true) {
    if (i_13521 < n__4655__auto___13520) {
      self__.nexts[i_13521] = self__.iters[i_13521].next();
      var G__13522 = i_13521 + 1;
      i_13521 = G__13522;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3756__auto__ = !(lt.stepper == null);
      if (and__3756__auto__) {
        return this$.hasNext();
      } else {
        return and__3756__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__13518 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__13518) : self__.xform.call(null, G__13518);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer(lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(function() {
      var G__13527 = stepfn;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13527) : xform.call(null, G__13527);
    }(), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__13528_13532 = cljs.core.seq(colls);
  var chunk__13529_13533 = null;
  var count__13530_13534 = 0;
  var i__13531_13535 = 0;
  while (true) {
    if (i__13531_13535 < count__13530_13534) {
      var coll_13536 = chunk__13529_13533.cljs$core$IIndexed$_nth$arity$2(null, i__13531_13535);
      iters.push(cljs.core.iter(coll_13536));
      var G__13537 = seq__13528_13532;
      var G__13538 = chunk__13529_13533;
      var G__13539 = count__13530_13534;
      var G__13540 = i__13531_13535 + 1;
      seq__13528_13532 = G__13537;
      chunk__13529_13533 = G__13538;
      count__13530_13534 = G__13539;
      i__13531_13535 = G__13540;
      continue;
    } else {
      var temp__4126__auto___13541 = cljs.core.seq(seq__13528_13532);
      if (temp__4126__auto___13541) {
        var seq__13528_13542__$1 = temp__4126__auto___13541;
        if (cljs.core.chunked_seq_QMARK_(seq__13528_13542__$1)) {
          var c__4555__auto___13543 = cljs.core.chunk_first(seq__13528_13542__$1);
          var G__13544 = cljs.core.chunk_rest(seq__13528_13542__$1);
          var G__13545 = c__4555__auto___13543;
          var G__13546 = cljs.core.count(c__4555__auto___13543);
          var G__13547 = 0;
          seq__13528_13532 = G__13544;
          chunk__13529_13533 = G__13545;
          count__13530_13534 = G__13546;
          i__13531_13535 = G__13547;
          continue;
        } else {
          var coll_13548 = cljs.core.first(seq__13528_13542__$1);
          iters.push(cljs.core.iter(coll_13548));
          var G__13549 = cljs.core.next(seq__13528_13542__$1);
          var G__13550 = null;
          var G__13551 = 0;
          var G__13552 = 0;
          seq__13528_13532 = G__13549;
          chunk__13529_13533 = G__13550;
          count__13530_13534 = G__13551;
          i__13531_13535 = G__13552;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_(coll)) {
      return coll;
    } else {
      var or__3768__auto__ = cljs.core.seq(coll);
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__13553__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
    };
    var G__13553 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__13554__i = 0, G__13554__a = new Array(arguments.length - 2);
        while (G__13554__i < G__13554__a.length) {
          G__13554__a[G__13554__i] = arguments[G__13554__i + 2];
          ++G__13554__i;
        }
        colls = new cljs.core.IndexedSeq(G__13554__a, 0);
      }
      return G__13553__delegate.call(this, xform, coll, colls);
    };
    G__13553.cljs$lang$maxFixedArity = 2;
    G__13553.cljs$lang$applyTo = function(arglist__13555) {
      var xform = cljs.core.first(arglist__13555);
      arglist__13555 = cljs.core.next(arglist__13555);
      var coll = cljs.core.first(arglist__13555);
      var colls = cljs.core.rest(arglist__13555);
      return G__13553__delegate(xform, coll, colls);
    };
    G__13553.cljs$core$IFn$_invoke$arity$variadic = G__13553__delegate;
    return G__13553;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        var G__13556 = null;
        if (arguments.length > 2) {
          var G__13557__i = 0, G__13557__a = new Array(arguments.length - 2);
          while (G__13557__i < G__13557__a.length) {
            G__13557__a[G__13557__i] = arguments[G__13557__i + 2];
            ++G__13557__i;
          }
          G__13556 = new cljs.core.IndexedSeq(G__13557__a, 0);
        }
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, G__13556);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__13559 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13559) : pred.call(null, G__13559);
      }())) {
        var G__13560 = pred;
        var G__13561 = cljs.core.next(coll);
        pred = G__13560;
        coll = G__13561;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__3768__auto__ = function() {
        var G__13565 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13565) : pred.call(null, G__13565);
      }();
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        var G__13566 = pred;
        var G__13567 = cljs.core.next(coll);
        pred = G__13566;
        coll = G__13567;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_(n);
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__13574 = null;
    var G__13574__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__13574__1 = function(x) {
      return cljs.core.not(function() {
        var G__13571 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13571) : f.call(null, G__13571);
      }());
    };
    var G__13574__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__13572 = x;
        var G__13573 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13572, G__13573) : f.call(null, G__13572, G__13573);
      }());
    };
    var G__13574__3 = function() {
      var G__13575__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__13575 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__13576__i = 0, G__13576__a = new Array(arguments.length - 2);
          while (G__13576__i < G__13576__a.length) {
            G__13576__a[G__13576__i] = arguments[G__13576__i + 2];
            ++G__13576__i;
          }
          zs = new cljs.core.IndexedSeq(G__13576__a, 0);
        }
        return G__13575__delegate.call(this, x, y, zs);
      };
      G__13575.cljs$lang$maxFixedArity = 2;
      G__13575.cljs$lang$applyTo = function(arglist__13577) {
        var x = cljs.core.first(arglist__13577);
        arglist__13577 = cljs.core.next(arglist__13577);
        var y = cljs.core.first(arglist__13577);
        var zs = cljs.core.rest(arglist__13577);
        return G__13575__delegate(x, y, zs);
      };
      G__13575.cljs$core$IFn$_invoke$arity$variadic = G__13575__delegate;
      return G__13575;
    }();
    G__13574 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__13574__0.call(this);
        case 1:
          return G__13574__1.call(this, x);
        case 2:
          return G__13574__2.call(this, x, y);
        default:
          var G__13578 = null;
          if (arguments.length > 2) {
            var G__13579__i = 0, G__13579__a = new Array(arguments.length - 2);
            while (G__13579__i < G__13579__a.length) {
              G__13579__a[G__13579__i] = arguments[G__13579__i + 2];
              ++G__13579__i;
            }
            G__13578 = new cljs.core.IndexedSeq(G__13579__a, 0);
          }
          return G__13574__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13578);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__13574.cljs$lang$maxFixedArity = 2;
    G__13574.cljs$lang$applyTo = G__13574__3.cljs$lang$applyTo;
    G__13574.cljs$core$IFn$_invoke$arity$0 = G__13574__0;
    G__13574.cljs$core$IFn$_invoke$arity$1 = G__13574__1;
    G__13574.cljs$core$IFn$_invoke$arity$2 = G__13574__2;
    G__13574.cljs$core$IFn$_invoke$arity$variadic = G__13574__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__13574;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__13580__delegate = function(args) {
      return x;
    };
    var G__13580 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__13581__i = 0, G__13581__a = new Array(arguments.length - 0);
        while (G__13581__i < G__13581__a.length) {
          G__13581__a[G__13581__i] = arguments[G__13581__i + 0];
          ++G__13581__i;
        }
        args = new cljs.core.IndexedSeq(G__13581__a, 0);
      }
      return G__13580__delegate.call(this, args);
    };
    G__13580.cljs$lang$maxFixedArity = 0;
    G__13580.cljs$lang$applyTo = function(arglist__13582) {
      var args = cljs.core.seq(arglist__13582);
      return G__13580__delegate(args);
    };
    G__13580.cljs$core$IFn$_invoke$arity$variadic = G__13580__delegate;
    return G__13580;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__13637 = null;
      var G__13637__0 = function() {
        var G__13610 = function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13610) : f.call(null, G__13610);
      };
      var G__13637__1 = function(x) {
        var G__13611 = function() {
          var G__13612 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13612) : g.call(null, G__13612);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13611) : f.call(null, G__13611);
      };
      var G__13637__2 = function(x, y) {
        var G__13613 = function() {
          var G__13614 = x;
          var G__13615 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__13614, G__13615) : g.call(null, G__13614, G__13615);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13613) : f.call(null, G__13613);
      };
      var G__13637__3 = function(x, y, z) {
        var G__13616 = function() {
          var G__13617 = x;
          var G__13618 = y;
          var G__13619 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__13617, G__13618, G__13619) : g.call(null, G__13617, G__13618, G__13619);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13616) : f.call(null, G__13616);
      };
      var G__13637__4 = function() {
        var G__13638__delegate = function(x, y, z, args) {
          var G__13620 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13620) : f.call(null, G__13620);
        };
        var G__13638 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13639__i = 0, G__13639__a = new Array(arguments.length - 3);
            while (G__13639__i < G__13639__a.length) {
              G__13639__a[G__13639__i] = arguments[G__13639__i + 3];
              ++G__13639__i;
            }
            args = new cljs.core.IndexedSeq(G__13639__a, 0);
          }
          return G__13638__delegate.call(this, x, y, z, args);
        };
        G__13638.cljs$lang$maxFixedArity = 3;
        G__13638.cljs$lang$applyTo = function(arglist__13640) {
          var x = cljs.core.first(arglist__13640);
          arglist__13640 = cljs.core.next(arglist__13640);
          var y = cljs.core.first(arglist__13640);
          arglist__13640 = cljs.core.next(arglist__13640);
          var z = cljs.core.first(arglist__13640);
          var args = cljs.core.rest(arglist__13640);
          return G__13638__delegate(x, y, z, args);
        };
        G__13638.cljs$core$IFn$_invoke$arity$variadic = G__13638__delegate;
        return G__13638;
      }();
      G__13637 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13637__0.call(this);
          case 1:
            return G__13637__1.call(this, x);
          case 2:
            return G__13637__2.call(this, x, y);
          case 3:
            return G__13637__3.call(this, x, y, z);
          default:
            var G__13641 = null;
            if (arguments.length > 3) {
              var G__13642__i = 0, G__13642__a = new Array(arguments.length - 3);
              while (G__13642__i < G__13642__a.length) {
                G__13642__a[G__13642__i] = arguments[G__13642__i + 3];
                ++G__13642__i;
              }
              G__13641 = new cljs.core.IndexedSeq(G__13642__a, 0);
            }
            return G__13637__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13641);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13637.cljs$lang$maxFixedArity = 3;
      G__13637.cljs$lang$applyTo = G__13637__4.cljs$lang$applyTo;
      G__13637.cljs$core$IFn$_invoke$arity$0 = G__13637__0;
      G__13637.cljs$core$IFn$_invoke$arity$1 = G__13637__1;
      G__13637.cljs$core$IFn$_invoke$arity$2 = G__13637__2;
      G__13637.cljs$core$IFn$_invoke$arity$3 = G__13637__3;
      G__13637.cljs$core$IFn$_invoke$arity$variadic = G__13637__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13637;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__13643 = null;
      var G__13643__0 = function() {
        var G__13621 = function() {
          var G__13622 = function() {
            return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13622) : g.call(null, G__13622);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13621) : f.call(null, G__13621);
      };
      var G__13643__1 = function(x) {
        var G__13623 = function() {
          var G__13624 = function() {
            var G__13625 = x;
            return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__13625) : h.call(null, G__13625);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13624) : g.call(null, G__13624);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13623) : f.call(null, G__13623);
      };
      var G__13643__2 = function(x, y) {
        var G__13626 = function() {
          var G__13627 = function() {
            var G__13628 = x;
            var G__13629 = y;
            return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__13628, G__13629) : h.call(null, G__13628, G__13629);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13627) : g.call(null, G__13627);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13626) : f.call(null, G__13626);
      };
      var G__13643__3 = function(x, y, z) {
        var G__13630 = function() {
          var G__13631 = function() {
            var G__13632 = x;
            var G__13633 = y;
            var G__13634 = z;
            return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__13632, G__13633, G__13634) : h.call(null, G__13632, G__13633, G__13634);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13631) : g.call(null, G__13631);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13630) : f.call(null, G__13630);
      };
      var G__13643__4 = function() {
        var G__13644__delegate = function(x, y, z, args) {
          var G__13635 = function() {
            var G__13636 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
            return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13636) : g.call(null, G__13636);
          }();
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13635) : f.call(null, G__13635);
        };
        var G__13644 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13645__i = 0, G__13645__a = new Array(arguments.length - 3);
            while (G__13645__i < G__13645__a.length) {
              G__13645__a[G__13645__i] = arguments[G__13645__i + 3];
              ++G__13645__i;
            }
            args = new cljs.core.IndexedSeq(G__13645__a, 0);
          }
          return G__13644__delegate.call(this, x, y, z, args);
        };
        G__13644.cljs$lang$maxFixedArity = 3;
        G__13644.cljs$lang$applyTo = function(arglist__13646) {
          var x = cljs.core.first(arglist__13646);
          arglist__13646 = cljs.core.next(arglist__13646);
          var y = cljs.core.first(arglist__13646);
          arglist__13646 = cljs.core.next(arglist__13646);
          var z = cljs.core.first(arglist__13646);
          var args = cljs.core.rest(arglist__13646);
          return G__13644__delegate(x, y, z, args);
        };
        G__13644.cljs$core$IFn$_invoke$arity$variadic = G__13644__delegate;
        return G__13644;
      }();
      G__13643 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13643__0.call(this);
          case 1:
            return G__13643__1.call(this, x);
          case 2:
            return G__13643__2.call(this, x, y);
          case 3:
            return G__13643__3.call(this, x, y, z);
          default:
            var G__13647 = null;
            if (arguments.length > 3) {
              var G__13648__i = 0, G__13648__a = new Array(arguments.length - 3);
              while (G__13648__i < G__13648__a.length) {
                G__13648__a[G__13648__i] = arguments[G__13648__i + 3];
                ++G__13648__i;
              }
              G__13647 = new cljs.core.IndexedSeq(G__13648__a, 0);
            }
            return G__13643__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13647);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13643.cljs$lang$maxFixedArity = 3;
      G__13643.cljs$lang$applyTo = G__13643__4.cljs$lang$applyTo;
      G__13643.cljs$core$IFn$_invoke$arity$0 = G__13643__0;
      G__13643.cljs$core$IFn$_invoke$arity$1 = G__13643__1;
      G__13643.cljs$core$IFn$_invoke$arity$2 = G__13643__2;
      G__13643.cljs$core$IFn$_invoke$arity$3 = G__13643__3;
      G__13643.cljs$core$IFn$_invoke$arity$variadic = G__13643__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13643;
    }();
  };
  var comp__4 = function() {
    var G__13649__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__13650__delegate = function(args) {
            var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
            var fs__$2 = cljs.core.next(fs__$1);
            while (true) {
              if (fs__$2) {
                var G__13651 = cljs.core.first(fs__$2).call(null, ret);
                var G__13652 = cljs.core.next(fs__$2);
                ret = G__13651;
                fs__$2 = G__13652;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__13650 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              var G__13653__i = 0, G__13653__a = new Array(arguments.length - 0);
              while (G__13653__i < G__13653__a.length) {
                G__13653__a[G__13653__i] = arguments[G__13653__i + 0];
                ++G__13653__i;
              }
              args = new cljs.core.IndexedSeq(G__13653__a, 0);
            }
            return G__13650__delegate.call(this, args);
          };
          G__13650.cljs$lang$maxFixedArity = 0;
          G__13650.cljs$lang$applyTo = function(arglist__13654) {
            var args = cljs.core.seq(arglist__13654);
            return G__13650__delegate(args);
          };
          G__13650.cljs$core$IFn$_invoke$arity$variadic = G__13650__delegate;
          return G__13650;
        }();
      }(fs__$1);
    };
    var G__13649 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__13655__i = 0, G__13655__a = new Array(arguments.length - 3);
        while (G__13655__i < G__13655__a.length) {
          G__13655__a[G__13655__i] = arguments[G__13655__i + 3];
          ++G__13655__i;
        }
        fs = new cljs.core.IndexedSeq(G__13655__a, 0);
      }
      return G__13649__delegate.call(this, f1, f2, f3, fs);
    };
    G__13649.cljs$lang$maxFixedArity = 3;
    G__13649.cljs$lang$applyTo = function(arglist__13656) {
      var f1 = cljs.core.first(arglist__13656);
      arglist__13656 = cljs.core.next(arglist__13656);
      var f2 = cljs.core.first(arglist__13656);
      arglist__13656 = cljs.core.next(arglist__13656);
      var f3 = cljs.core.first(arglist__13656);
      var fs = cljs.core.rest(arglist__13656);
      return G__13649__delegate(f1, f2, f3, fs);
    };
    G__13649.cljs$core$IFn$_invoke$arity$variadic = G__13649__delegate;
    return G__13649;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        var G__13657 = null;
        if (arguments.length > 3) {
          var G__13658__i = 0, G__13658__a = new Array(arguments.length - 3);
          while (G__13658__i < G__13658__a.length) {
            G__13658__a[G__13658__i] = arguments[G__13658__i + 3];
            ++G__13658__i;
          }
          G__13657 = new cljs.core.IndexedSeq(G__13658__a, 0);
        }
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, G__13657);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__13743 = null;
      var G__13743__0 = function() {
        var G__13701 = arg1;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13701) : f.call(null, G__13701);
      };
      var G__13743__1 = function(x) {
        var G__13702 = arg1;
        var G__13703 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13702, G__13703) : f.call(null, G__13702, G__13703);
      };
      var G__13743__2 = function(x, y) {
        var G__13704 = arg1;
        var G__13705 = x;
        var G__13706 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13704, G__13705, G__13706) : f.call(null, G__13704, G__13705, G__13706);
      };
      var G__13743__3 = function(x, y, z) {
        var G__13707 = arg1;
        var G__13708 = x;
        var G__13709 = y;
        var G__13710 = z;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13707, G__13708, G__13709, G__13710) : f.call(null, G__13707, G__13708, G__13709, G__13710);
      };
      var G__13743__4 = function() {
        var G__13744__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
        };
        var G__13744 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13745__i = 0, G__13745__a = new Array(arguments.length - 3);
            while (G__13745__i < G__13745__a.length) {
              G__13745__a[G__13745__i] = arguments[G__13745__i + 3];
              ++G__13745__i;
            }
            args = new cljs.core.IndexedSeq(G__13745__a, 0);
          }
          return G__13744__delegate.call(this, x, y, z, args);
        };
        G__13744.cljs$lang$maxFixedArity = 3;
        G__13744.cljs$lang$applyTo = function(arglist__13746) {
          var x = cljs.core.first(arglist__13746);
          arglist__13746 = cljs.core.next(arglist__13746);
          var y = cljs.core.first(arglist__13746);
          arglist__13746 = cljs.core.next(arglist__13746);
          var z = cljs.core.first(arglist__13746);
          var args = cljs.core.rest(arglist__13746);
          return G__13744__delegate(x, y, z, args);
        };
        G__13744.cljs$core$IFn$_invoke$arity$variadic = G__13744__delegate;
        return G__13744;
      }();
      G__13743 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13743__0.call(this);
          case 1:
            return G__13743__1.call(this, x);
          case 2:
            return G__13743__2.call(this, x, y);
          case 3:
            return G__13743__3.call(this, x, y, z);
          default:
            var G__13747 = null;
            if (arguments.length > 3) {
              var G__13748__i = 0, G__13748__a = new Array(arguments.length - 3);
              while (G__13748__i < G__13748__a.length) {
                G__13748__a[G__13748__i] = arguments[G__13748__i + 3];
                ++G__13748__i;
              }
              G__13747 = new cljs.core.IndexedSeq(G__13748__a, 0);
            }
            return G__13743__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13747);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13743.cljs$lang$maxFixedArity = 3;
      G__13743.cljs$lang$applyTo = G__13743__4.cljs$lang$applyTo;
      G__13743.cljs$core$IFn$_invoke$arity$0 = G__13743__0;
      G__13743.cljs$core$IFn$_invoke$arity$1 = G__13743__1;
      G__13743.cljs$core$IFn$_invoke$arity$2 = G__13743__2;
      G__13743.cljs$core$IFn$_invoke$arity$3 = G__13743__3;
      G__13743.cljs$core$IFn$_invoke$arity$variadic = G__13743__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13743;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__13749 = null;
      var G__13749__0 = function() {
        var G__13711 = arg1;
        var G__13712 = arg2;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13711, G__13712) : f.call(null, G__13711, G__13712);
      };
      var G__13749__1 = function(x) {
        var G__13713 = arg1;
        var G__13714 = arg2;
        var G__13715 = x;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13713, G__13714, G__13715) : f.call(null, G__13713, G__13714, G__13715);
      };
      var G__13749__2 = function(x, y) {
        var G__13716 = arg1;
        var G__13717 = arg2;
        var G__13718 = x;
        var G__13719 = y;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13716, G__13717, G__13718, G__13719) : f.call(null, G__13716, G__13717, G__13718, G__13719);
      };
      var G__13749__3 = function(x, y, z) {
        var G__13720 = arg1;
        var G__13721 = arg2;
        var G__13722 = x;
        var G__13723 = y;
        var G__13724 = z;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13720, G__13721, G__13722, G__13723, G__13724) : f.call(null, G__13720, G__13721, G__13722, G__13723, G__13724);
      };
      var G__13749__4 = function() {
        var G__13750__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
        };
        var G__13750 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13751__i = 0, G__13751__a = new Array(arguments.length - 3);
            while (G__13751__i < G__13751__a.length) {
              G__13751__a[G__13751__i] = arguments[G__13751__i + 3];
              ++G__13751__i;
            }
            args = new cljs.core.IndexedSeq(G__13751__a, 0);
          }
          return G__13750__delegate.call(this, x, y, z, args);
        };
        G__13750.cljs$lang$maxFixedArity = 3;
        G__13750.cljs$lang$applyTo = function(arglist__13752) {
          var x = cljs.core.first(arglist__13752);
          arglist__13752 = cljs.core.next(arglist__13752);
          var y = cljs.core.first(arglist__13752);
          arglist__13752 = cljs.core.next(arglist__13752);
          var z = cljs.core.first(arglist__13752);
          var args = cljs.core.rest(arglist__13752);
          return G__13750__delegate(x, y, z, args);
        };
        G__13750.cljs$core$IFn$_invoke$arity$variadic = G__13750__delegate;
        return G__13750;
      }();
      G__13749 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13749__0.call(this);
          case 1:
            return G__13749__1.call(this, x);
          case 2:
            return G__13749__2.call(this, x, y);
          case 3:
            return G__13749__3.call(this, x, y, z);
          default:
            var G__13753 = null;
            if (arguments.length > 3) {
              var G__13754__i = 0, G__13754__a = new Array(arguments.length - 3);
              while (G__13754__i < G__13754__a.length) {
                G__13754__a[G__13754__i] = arguments[G__13754__i + 3];
                ++G__13754__i;
              }
              G__13753 = new cljs.core.IndexedSeq(G__13754__a, 0);
            }
            return G__13749__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13753);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13749.cljs$lang$maxFixedArity = 3;
      G__13749.cljs$lang$applyTo = G__13749__4.cljs$lang$applyTo;
      G__13749.cljs$core$IFn$_invoke$arity$0 = G__13749__0;
      G__13749.cljs$core$IFn$_invoke$arity$1 = G__13749__1;
      G__13749.cljs$core$IFn$_invoke$arity$2 = G__13749__2;
      G__13749.cljs$core$IFn$_invoke$arity$3 = G__13749__3;
      G__13749.cljs$core$IFn$_invoke$arity$variadic = G__13749__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13749;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__13755 = null;
      var G__13755__0 = function() {
        var G__13725 = arg1;
        var G__13726 = arg2;
        var G__13727 = arg3;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13725, G__13726, G__13727) : f.call(null, G__13725, G__13726, G__13727);
      };
      var G__13755__1 = function(x) {
        var G__13728 = arg1;
        var G__13729 = arg2;
        var G__13730 = arg3;
        var G__13731 = x;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13728, G__13729, G__13730, G__13731) : f.call(null, G__13728, G__13729, G__13730, G__13731);
      };
      var G__13755__2 = function(x, y) {
        var G__13732 = arg1;
        var G__13733 = arg2;
        var G__13734 = arg3;
        var G__13735 = x;
        var G__13736 = y;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13732, G__13733, G__13734, G__13735, G__13736) : f.call(null, G__13732, G__13733, G__13734, G__13735, G__13736);
      };
      var G__13755__3 = function(x, y, z) {
        var G__13737 = arg1;
        var G__13738 = arg2;
        var G__13739 = arg3;
        var G__13740 = x;
        var G__13741 = y;
        var G__13742 = z;
        return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__13737, G__13738, G__13739, G__13740, G__13741, G__13742) : f.call(null, G__13737, G__13738, G__13739, G__13740, G__13741, G__13742);
      };
      var G__13755__4 = function() {
        var G__13756__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
        };
        var G__13756 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13757__i = 0, G__13757__a = new Array(arguments.length - 3);
            while (G__13757__i < G__13757__a.length) {
              G__13757__a[G__13757__i] = arguments[G__13757__i + 3];
              ++G__13757__i;
            }
            args = new cljs.core.IndexedSeq(G__13757__a, 0);
          }
          return G__13756__delegate.call(this, x, y, z, args);
        };
        G__13756.cljs$lang$maxFixedArity = 3;
        G__13756.cljs$lang$applyTo = function(arglist__13758) {
          var x = cljs.core.first(arglist__13758);
          arglist__13758 = cljs.core.next(arglist__13758);
          var y = cljs.core.first(arglist__13758);
          arglist__13758 = cljs.core.next(arglist__13758);
          var z = cljs.core.first(arglist__13758);
          var args = cljs.core.rest(arglist__13758);
          return G__13756__delegate(x, y, z, args);
        };
        G__13756.cljs$core$IFn$_invoke$arity$variadic = G__13756__delegate;
        return G__13756;
      }();
      G__13755 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13755__0.call(this);
          case 1:
            return G__13755__1.call(this, x);
          case 2:
            return G__13755__2.call(this, x, y);
          case 3:
            return G__13755__3.call(this, x, y, z);
          default:
            var G__13759 = null;
            if (arguments.length > 3) {
              var G__13760__i = 0, G__13760__a = new Array(arguments.length - 3);
              while (G__13760__i < G__13760__a.length) {
                G__13760__a[G__13760__i] = arguments[G__13760__i + 3];
                ++G__13760__i;
              }
              G__13759 = new cljs.core.IndexedSeq(G__13760__a, 0);
            }
            return G__13755__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13759);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13755.cljs$lang$maxFixedArity = 3;
      G__13755.cljs$lang$applyTo = G__13755__4.cljs$lang$applyTo;
      G__13755.cljs$core$IFn$_invoke$arity$0 = G__13755__0;
      G__13755.cljs$core$IFn$_invoke$arity$1 = G__13755__1;
      G__13755.cljs$core$IFn$_invoke$arity$2 = G__13755__2;
      G__13755.cljs$core$IFn$_invoke$arity$3 = G__13755__3;
      G__13755.cljs$core$IFn$_invoke$arity$variadic = G__13755__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13755;
    }();
  };
  var partial__5 = function() {
    var G__13761__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__13762__delegate = function(args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
        };
        var G__13762 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            var G__13763__i = 0, G__13763__a = new Array(arguments.length - 0);
            while (G__13763__i < G__13763__a.length) {
              G__13763__a[G__13763__i] = arguments[G__13763__i + 0];
              ++G__13763__i;
            }
            args = new cljs.core.IndexedSeq(G__13763__a, 0);
          }
          return G__13762__delegate.call(this, args);
        };
        G__13762.cljs$lang$maxFixedArity = 0;
        G__13762.cljs$lang$applyTo = function(arglist__13764) {
          var args = cljs.core.seq(arglist__13764);
          return G__13762__delegate(args);
        };
        G__13762.cljs$core$IFn$_invoke$arity$variadic = G__13762__delegate;
        return G__13762;
      }();
    };
    var G__13761 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__13765__i = 0, G__13765__a = new Array(arguments.length - 4);
        while (G__13765__i < G__13765__a.length) {
          G__13765__a[G__13765__i] = arguments[G__13765__i + 4];
          ++G__13765__i;
        }
        more = new cljs.core.IndexedSeq(G__13765__a, 0);
      }
      return G__13761__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__13761.cljs$lang$maxFixedArity = 4;
    G__13761.cljs$lang$applyTo = function(arglist__13766) {
      var f = cljs.core.first(arglist__13766);
      arglist__13766 = cljs.core.next(arglist__13766);
      var arg1 = cljs.core.first(arglist__13766);
      arglist__13766 = cljs.core.next(arglist__13766);
      var arg2 = cljs.core.first(arglist__13766);
      arglist__13766 = cljs.core.next(arglist__13766);
      var arg3 = cljs.core.first(arglist__13766);
      var more = cljs.core.rest(arglist__13766);
      return G__13761__delegate(f, arg1, arg2, arg3, more);
    };
    G__13761.cljs$core$IFn$_invoke$arity$variadic = G__13761__delegate;
    return G__13761;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        var G__13767 = null;
        if (arguments.length > 4) {
          var G__13768__i = 0, G__13768__a = new Array(arguments.length - 4);
          while (G__13768__i < G__13768__a.length) {
            G__13768__a[G__13768__i] = arguments[G__13768__i + 4];
            ++G__13768__i;
          }
          G__13767 = new cljs.core.IndexedSeq(G__13768__a, 0);
        }
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, G__13767);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__13801 = null;
      var G__13801__1 = function(a) {
        var G__13785 = a == null ? x : a;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13785) : f.call(null, G__13785);
      };
      var G__13801__2 = function(a, b) {
        var G__13786 = a == null ? x : a;
        var G__13787 = b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13786, G__13787) : f.call(null, G__13786, G__13787);
      };
      var G__13801__3 = function(a, b, c) {
        var G__13788 = a == null ? x : a;
        var G__13789 = b;
        var G__13790 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13788, G__13789, G__13790) : f.call(null, G__13788, G__13789, G__13790);
      };
      var G__13801__4 = function() {
        var G__13802__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
        };
        var G__13802 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__13803__i = 0, G__13803__a = new Array(arguments.length - 3);
            while (G__13803__i < G__13803__a.length) {
              G__13803__a[G__13803__i] = arguments[G__13803__i + 3];
              ++G__13803__i;
            }
            ds = new cljs.core.IndexedSeq(G__13803__a, 0);
          }
          return G__13802__delegate.call(this, a, b, c, ds);
        };
        G__13802.cljs$lang$maxFixedArity = 3;
        G__13802.cljs$lang$applyTo = function(arglist__13804) {
          var a = cljs.core.first(arglist__13804);
          arglist__13804 = cljs.core.next(arglist__13804);
          var b = cljs.core.first(arglist__13804);
          arglist__13804 = cljs.core.next(arglist__13804);
          var c = cljs.core.first(arglist__13804);
          var ds = cljs.core.rest(arglist__13804);
          return G__13802__delegate(a, b, c, ds);
        };
        G__13802.cljs$core$IFn$_invoke$arity$variadic = G__13802__delegate;
        return G__13802;
      }();
      G__13801 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__13801__1.call(this, a);
          case 2:
            return G__13801__2.call(this, a, b);
          case 3:
            return G__13801__3.call(this, a, b, c);
          default:
            var G__13805 = null;
            if (arguments.length > 3) {
              var G__13806__i = 0, G__13806__a = new Array(arguments.length - 3);
              while (G__13806__i < G__13806__a.length) {
                G__13806__a[G__13806__i] = arguments[G__13806__i + 3];
                ++G__13806__i;
              }
              G__13805 = new cljs.core.IndexedSeq(G__13806__a, 0);
            }
            return G__13801__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__13805);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13801.cljs$lang$maxFixedArity = 3;
      G__13801.cljs$lang$applyTo = G__13801__4.cljs$lang$applyTo;
      G__13801.cljs$core$IFn$_invoke$arity$1 = G__13801__1;
      G__13801.cljs$core$IFn$_invoke$arity$2 = G__13801__2;
      G__13801.cljs$core$IFn$_invoke$arity$3 = G__13801__3;
      G__13801.cljs$core$IFn$_invoke$arity$variadic = G__13801__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13801;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__13807 = null;
      var G__13807__2 = function(a, b) {
        var G__13791 = a == null ? x : a;
        var G__13792 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13791, G__13792) : f.call(null, G__13791, G__13792);
      };
      var G__13807__3 = function(a, b, c) {
        var G__13793 = a == null ? x : a;
        var G__13794 = b == null ? y : b;
        var G__13795 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13793, G__13794, G__13795) : f.call(null, G__13793, G__13794, G__13795);
      };
      var G__13807__4 = function() {
        var G__13808__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__13808 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__13809__i = 0, G__13809__a = new Array(arguments.length - 3);
            while (G__13809__i < G__13809__a.length) {
              G__13809__a[G__13809__i] = arguments[G__13809__i + 3];
              ++G__13809__i;
            }
            ds = new cljs.core.IndexedSeq(G__13809__a, 0);
          }
          return G__13808__delegate.call(this, a, b, c, ds);
        };
        G__13808.cljs$lang$maxFixedArity = 3;
        G__13808.cljs$lang$applyTo = function(arglist__13810) {
          var a = cljs.core.first(arglist__13810);
          arglist__13810 = cljs.core.next(arglist__13810);
          var b = cljs.core.first(arglist__13810);
          arglist__13810 = cljs.core.next(arglist__13810);
          var c = cljs.core.first(arglist__13810);
          var ds = cljs.core.rest(arglist__13810);
          return G__13808__delegate(a, b, c, ds);
        };
        G__13808.cljs$core$IFn$_invoke$arity$variadic = G__13808__delegate;
        return G__13808;
      }();
      G__13807 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__13807__2.call(this, a, b);
          case 3:
            return G__13807__3.call(this, a, b, c);
          default:
            var G__13811 = null;
            if (arguments.length > 3) {
              var G__13812__i = 0, G__13812__a = new Array(arguments.length - 3);
              while (G__13812__i < G__13812__a.length) {
                G__13812__a[G__13812__i] = arguments[G__13812__i + 3];
                ++G__13812__i;
              }
              G__13811 = new cljs.core.IndexedSeq(G__13812__a, 0);
            }
            return G__13807__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__13811);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13807.cljs$lang$maxFixedArity = 3;
      G__13807.cljs$lang$applyTo = G__13807__4.cljs$lang$applyTo;
      G__13807.cljs$core$IFn$_invoke$arity$2 = G__13807__2;
      G__13807.cljs$core$IFn$_invoke$arity$3 = G__13807__3;
      G__13807.cljs$core$IFn$_invoke$arity$variadic = G__13807__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13807;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__13813 = null;
      var G__13813__2 = function(a, b) {
        var G__13796 = a == null ? x : a;
        var G__13797 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13796, G__13797) : f.call(null, G__13796, G__13797);
      };
      var G__13813__3 = function(a, b, c) {
        var G__13798 = a == null ? x : a;
        var G__13799 = b == null ? y : b;
        var G__13800 = c == null ? z : c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13798, G__13799, G__13800) : f.call(null, G__13798, G__13799, G__13800);
      };
      var G__13813__4 = function() {
        var G__13814__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__13814 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__13815__i = 0, G__13815__a = new Array(arguments.length - 3);
            while (G__13815__i < G__13815__a.length) {
              G__13815__a[G__13815__i] = arguments[G__13815__i + 3];
              ++G__13815__i;
            }
            ds = new cljs.core.IndexedSeq(G__13815__a, 0);
          }
          return G__13814__delegate.call(this, a, b, c, ds);
        };
        G__13814.cljs$lang$maxFixedArity = 3;
        G__13814.cljs$lang$applyTo = function(arglist__13816) {
          var a = cljs.core.first(arglist__13816);
          arglist__13816 = cljs.core.next(arglist__13816);
          var b = cljs.core.first(arglist__13816);
          arglist__13816 = cljs.core.next(arglist__13816);
          var c = cljs.core.first(arglist__13816);
          var ds = cljs.core.rest(arglist__13816);
          return G__13814__delegate(a, b, c, ds);
        };
        G__13814.cljs$core$IFn$_invoke$arity$variadic = G__13814__delegate;
        return G__13814;
      }();
      G__13813 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__13813__2.call(this, a, b);
          case 3:
            return G__13813__3.call(this, a, b, c);
          default:
            var G__13817 = null;
            if (arguments.length > 3) {
              var G__13818__i = 0, G__13818__a = new Array(arguments.length - 3);
              while (G__13818__i < G__13818__a.length) {
                G__13818__a[G__13818__i] = arguments[G__13818__i + 3];
                ++G__13818__i;
              }
              G__13817 = new cljs.core.IndexedSeq(G__13818__a, 0);
            }
            return G__13813__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__13817);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13813.cljs$lang$maxFixedArity = 3;
      G__13813.cljs$lang$applyTo = G__13813__4.cljs$lang$applyTo;
      G__13813.cljs$core$IFn$_invoke$arity$2 = G__13813__2;
      G__13813.cljs$core$IFn$_invoke$arity$3 = G__13813__3;
      G__13813.cljs$core$IFn$_invoke$arity$variadic = G__13813__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13813;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function() {
  var map_indexed = null;
  var map_indexed__1 = function(f) {
    return function(rf) {
      var i = function() {
        var G__13849 = -1;
        return cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__13849) : cljs.core.volatile_BANG_.call(null, G__13849);
      }();
      return function(i) {
        return function() {
          var G__13879 = null;
          var G__13879__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__13879__1 = function(result) {
            var G__13850 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13850) : rf.call(null, G__13850);
          };
          var G__13879__2 = function(result, input) {
            var G__13851 = result;
            var G__13852 = function() {
              var G__13853 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
              var G__13854 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13853, G__13854) : f.call(null, G__13853, G__13854);
            }();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13851, G__13852) : rf.call(null, G__13851, G__13852);
          };
          G__13879 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__13879__0.call(this);
              case 1:
                return G__13879__1.call(this, result);
              case 2:
                return G__13879__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__13879.cljs$core$IFn$_invoke$arity$0 = G__13879__0;
          G__13879.cljs$core$IFn$_invoke$arity$1 = G__13879__1;
          G__13879.cljs$core$IFn$_invoke$arity$2 = G__13879__2;
          return G__13879;
        }();
      }(i);
    };
  };
  var map_indexed__2 = function(f, coll) {
    var mapi = function mapi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4655__auto___13880 = size;
            var i_13881 = 0;
            while (true) {
              if (i_13881 < n__4655__auto___13880) {
                cljs.core.chunk_append(b, function() {
                  var G__13875 = idx + i_13881;
                  var G__13876 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13881);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13875, G__13876) : f.call(null, G__13875, G__13876);
                }());
                var G__13882 = i_13881 + 1;
                i_13881 = G__13882;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), mapi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            return cljs.core.cons(function() {
              var G__13877 = idx;
              var G__13878 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13877, G__13878) : f.call(null, G__13877, G__13878);
            }(), mapi(idx + 1, cljs.core.rest(s)));
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return mapi(0, coll);
  };
  map_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return map_indexed__1.call(this, f);
      case 2:
        return map_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
  map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
  return map_indexed;
}();
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(rf) {
      return function() {
        var G__13901 = null;
        var G__13901__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__13901__1 = function(result) {
          var G__13895 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13895) : rf.call(null, G__13895);
        };
        var G__13901__2 = function(result, input) {
          var v = function() {
            var G__13896 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13896) : f.call(null, G__13896);
          }();
          if (v == null) {
            return result;
          } else {
            var G__13897 = result;
            var G__13898 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13897, G__13898) : rf.call(null, G__13897, G__13898);
          }
        };
        G__13901 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__13901__0.call(this);
            case 1:
              return G__13901__1.call(this, result);
            case 2:
              return G__13901__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__13901.cljs$core$IFn$_invoke$arity$0 = G__13901__0;
        G__13901.cljs$core$IFn$_invoke$arity$1 = G__13901__1;
        G__13901.cljs$core$IFn$_invoke$arity$2 = G__13901__2;
        return G__13901;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4655__auto___13902 = size;
          var i_13903 = 0;
          while (true) {
            if (i_13903 < n__4655__auto___13902) {
              var x_13904 = function() {
                var G__13899 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13903);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13899) : f.call(null, G__13899);
              }();
              if (x_13904 == null) {
              } else {
                cljs.core.chunk_append(b, x_13904);
              }
              var G__13905 = i_13903 + 1;
              i_13903 = G__13905;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__13900 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13900) : f.call(null, G__13900);
          }();
          if (x == null) {
            return keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__13906 = this$__$1;
  return goog.getUid(G__13906);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__13907 = cljs.core.seq(self__.watches);
  var chunk__13908 = null;
  var count__13909 = 0;
  var i__13910 = 0;
  while (true) {
    if (i__13910 < count__13909) {
      var vec__13911 = chunk__13908.cljs$core$IIndexed$_nth$arity$2(null, i__13910);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13911, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13911, 1, null);
      var G__13912_13921 = key;
      var G__13913_13922 = this$__$1;
      var G__13914_13923 = oldval;
      var G__13915_13924 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13912_13921, G__13913_13922, G__13914_13923, G__13915_13924) : f.call(null, G__13912_13921, G__13913_13922, G__13914_13923, G__13915_13924);
      var G__13925 = seq__13907;
      var G__13926 = chunk__13908;
      var G__13927 = count__13909;
      var G__13928 = i__13910 + 1;
      seq__13907 = G__13925;
      chunk__13908 = G__13926;
      count__13909 = G__13927;
      i__13910 = G__13928;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__13907);
      if (temp__4126__auto__) {
        var seq__13907__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__13907__$1)) {
          var c__4555__auto__ = cljs.core.chunk_first(seq__13907__$1);
          var G__13929 = cljs.core.chunk_rest(seq__13907__$1);
          var G__13930 = c__4555__auto__;
          var G__13931 = cljs.core.count(c__4555__auto__);
          var G__13932 = 0;
          seq__13907 = G__13929;
          chunk__13908 = G__13930;
          count__13909 = G__13931;
          i__13910 = G__13932;
          continue;
        } else {
          var vec__13916 = cljs.core.first(seq__13907__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13916, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13916, 1, null);
          var G__13917_13933 = key;
          var G__13918_13934 = this$__$1;
          var G__13919_13935 = oldval;
          var G__13920_13936 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13917_13933, G__13918_13934, G__13919_13935, G__13920_13936) : f.call(null, G__13917_13933, G__13918_13934, G__13919_13935, G__13920_13936);
          var G__13937 = cljs.core.next(seq__13907__$1);
          var G__13938 = null;
          var G__13939 = 0;
          var G__13940 = 0;
          seq__13907 = G__13937;
          chunk__13908 = G__13938;
          count__13909 = G__13939;
          i__13910 = G__13940;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__13944__delegate = function(x, p__13941) {
      var map__13943 = p__13941;
      var map__13943__$1 = cljs.core.seq_QMARK_(map__13943) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__13943) : map__13943;
      var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13943__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13943__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__13944 = function(x, var_args) {
      var p__13941 = null;
      if (arguments.length > 1) {
        var G__13945__i = 0, G__13945__a = new Array(arguments.length - 1);
        while (G__13945__i < G__13945__a.length) {
          G__13945__a[G__13945__i] = arguments[G__13945__i + 1];
          ++G__13945__i;
        }
        p__13941 = new cljs.core.IndexedSeq(G__13945__a, 0);
      }
      return G__13944__delegate.call(this, x, p__13941);
    };
    G__13944.cljs$lang$maxFixedArity = 1;
    G__13944.cljs$lang$applyTo = function(arglist__13946) {
      var x = cljs.core.first(arglist__13946);
      var p__13941 = cljs.core.rest(arglist__13946);
      return G__13944__delegate(x, p__13941);
    };
    G__13944.cljs$core$IFn$_invoke$arity$variadic = G__13944__delegate;
    return G__13944;
  }();
  atom = function(x, var_args) {
    var p__13941 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__13947 = null;
        if (arguments.length > 1) {
          var G__13948__i = 0, G__13948__a = new Array(arguments.length - 1);
          while (G__13948__i < G__13948__a.length) {
            G__13948__a[G__13948__i] = arguments[G__13948__i + 1];
            ++G__13948__i;
          }
          G__13947 = new cljs.core.IndexedSeq(G__13948__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__13947);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__13951 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__13951) : validate.call(null, G__13951);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__13952 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__13952) : cljs.core.pr_str.call(null, G__13952);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__13959 = a.state;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13959) : f.call(null, G__13959);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__13960 = a.state;
        var G__13961 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13960, G__13961) : f.call(null, G__13960, G__13961);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__13962 = a.state;
        var G__13963 = x;
        var G__13964 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13962, G__13963, G__13964) : f.call(null, G__13962, G__13963, G__13964);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__13965__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
      }
    };
    var G__13965 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__13966__i = 0, G__13966__a = new Array(arguments.length - 4);
        while (G__13966__i < G__13966__a.length) {
          G__13966__a[G__13966__i] = arguments[G__13966__i + 4];
          ++G__13966__i;
        }
        more = new cljs.core.IndexedSeq(G__13966__a, 0);
      }
      return G__13965__delegate.call(this, a, f, x, y, more);
    };
    G__13965.cljs$lang$maxFixedArity = 4;
    G__13965.cljs$lang$applyTo = function(arglist__13967) {
      var a = cljs.core.first(arglist__13967);
      arglist__13967 = cljs.core.next(arglist__13967);
      var f = cljs.core.first(arglist__13967);
      arglist__13967 = cljs.core.next(arglist__13967);
      var x = cljs.core.first(arglist__13967);
      arglist__13967 = cljs.core.next(arglist__13967);
      var y = cljs.core.first(arglist__13967);
      var more = cljs.core.rest(arglist__13967);
      return G__13965__delegate(a, f, x, y, more);
    };
    G__13965.cljs$core$IFn$_invoke$arity$variadic = G__13965__delegate;
    return G__13965;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        var G__13968 = null;
        if (arguments.length > 4) {
          var G__13969__i = 0, G__13969__a = new Array(arguments.length - 4);
          while (G__13969__i < G__13969__a.length) {
            G__13969__a[G__13969__i] = arguments[G__13969__i + 4];
            ++G__13969__i;
          }
          G__13968 = new cljs.core.IndexedSeq(G__13969__a, 0);
        }
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, G__13968);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function __GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__14036 = null;
          var G__14036__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14036__1 = function(result) {
            var G__14003 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14003) : rf.call(null, G__14003);
          };
          var G__14036__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            var v = function() {
              var G__14004 = i;
              var G__14005 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14004, G__14005) : f.call(null, G__14004, G__14005);
            }();
            if (v == null) {
              return result;
            } else {
              var G__14006 = result;
              var G__14007 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14006, G__14007) : rf.call(null, G__14006, G__14007);
            }
          };
          G__14036 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14036__0.call(this);
              case 1:
                return G__14036__1.call(this, result);
              case 2:
                return G__14036__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14036.cljs$core$IFn$_invoke$arity$0 = G__14036__0;
          G__14036.cljs$core$IFn$_invoke$arity$1 = G__14036__1;
          G__14036.cljs$core$IFn$_invoke$arity$2 = G__14036__2;
          return G__14036;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4655__auto___14037 = size;
            var i_14038 = 0;
            while (true) {
              if (i_14038 < n__4655__auto___14037) {
                var x_14039 = function() {
                  var G__14032 = idx + i_14038;
                  var G__14033 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14038);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14032, G__14033) : f.call(null, G__14032, G__14033);
                }();
                if (x_14039 == null) {
                } else {
                  cljs.core.chunk_append(b, x_14039);
                }
                var G__14040 = i_14038 + 1;
                i_14038 = G__14040;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), keepi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            var x = function() {
              var G__14034 = idx;
              var G__14035 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14034, G__14035) : f.call(null, G__14034, G__14035);
            }();
            if (x == null) {
              return keepi(idx + 1, cljs.core.rest(s));
            } else {
              return cljs.core.cons(x, keepi(idx + 1, cljs.core.rest(s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi(0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$(function() {
          var G__14254 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14254) : p.call(null, G__14254);
        }());
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3756__auto__ = function() {
            var G__14256 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14256) : p.call(null, G__14256);
          }();
          if (cljs.core.truth_(and__3756__auto__)) {
            var G__14257 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14257) : p.call(null, G__14257);
          } else {
            return and__3756__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3756__auto__ = function() {
            var G__14259 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14259) : p.call(null, G__14259);
          }();
          if (cljs.core.truth_(and__3756__auto__)) {
            var and__3756__auto____$1 = function() {
              var G__14261 = y;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14261) : p.call(null, G__14261);
            }();
            if (cljs.core.truth_(and__3756__auto____$1)) {
              var G__14262 = z;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14262) : p.call(null, G__14262);
            } else {
              return and__3756__auto____$1;
            }
          } else {
            return and__3756__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__14431__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep1.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(p, args));
        };
        var G__14431 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14432__i = 0, G__14432__a = new Array(arguments.length - 3);
            while (G__14432__i < G__14432__a.length) {
              G__14432__a[G__14432__i] = arguments[G__14432__i + 3];
              ++G__14432__i;
            }
            args = new cljs.core.IndexedSeq(G__14432__a, 0);
          }
          return G__14431__delegate.call(this, x, y, z, args);
        };
        G__14431.cljs$lang$maxFixedArity = 3;
        G__14431.cljs$lang$applyTo = function(arglist__14433) {
          var x = cljs.core.first(arglist__14433);
          arglist__14433 = cljs.core.next(arglist__14433);
          var y = cljs.core.first(arglist__14433);
          arglist__14433 = cljs.core.next(arglist__14433);
          var z = cljs.core.first(arglist__14433);
          var args = cljs.core.rest(arglist__14433);
          return G__14431__delegate(x, y, z, args);
        };
        G__14431.cljs$core$IFn$_invoke$arity$variadic = G__14431__delegate;
        return G__14431;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            var G__14434 = null;
            if (arguments.length > 3) {
              var G__14435__i = 0, G__14435__a = new Array(arguments.length - 3);
              while (G__14435__i < G__14435__a.length) {
                G__14435__a[G__14435__i] = arguments[G__14435__i + 3];
                ++G__14435__i;
              }
              G__14434 = new cljs.core.IndexedSeq(G__14435__a, 0);
            }
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14434);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3756__auto__ = function() {
            var G__14294 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14294) : p1.call(null, G__14294);
          }();
          if (cljs.core.truth_(and__3756__auto__)) {
            var G__14295 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14295) : p2.call(null, G__14295);
          } else {
            return and__3756__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3756__auto__ = function() {
            var G__14297 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14297) : p1.call(null, G__14297);
          }();
          if (cljs.core.truth_(and__3756__auto__)) {
            var and__3756__auto____$1 = function() {
              var G__14299 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14299) : p1.call(null, G__14299);
            }();
            if (cljs.core.truth_(and__3756__auto____$1)) {
              var and__3756__auto____$2 = function() {
                var G__14301 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14301) : p2.call(null, G__14301);
              }();
              if (cljs.core.truth_(and__3756__auto____$2)) {
                var G__14302 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14302) : p2.call(null, G__14302);
              } else {
                return and__3756__auto____$2;
              }
            } else {
              return and__3756__auto____$1;
            }
          } else {
            return and__3756__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3756__auto__ = function() {
            var G__14304 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14304) : p1.call(null, G__14304);
          }();
          if (cljs.core.truth_(and__3756__auto__)) {
            var and__3756__auto____$1 = function() {
              var G__14306 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14306) : p1.call(null, G__14306);
            }();
            if (cljs.core.truth_(and__3756__auto____$1)) {
              var and__3756__auto____$2 = function() {
                var G__14308 = z;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14308) : p1.call(null, G__14308);
              }();
              if (cljs.core.truth_(and__3756__auto____$2)) {
                var and__3756__auto____$3 = function() {
                  var G__14310 = x;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14310) : p2.call(null, G__14310);
                }();
                if (cljs.core.truth_(and__3756__auto____$3)) {
                  var and__3756__auto____$4 = function() {
                    var G__14312 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14312) : p2.call(null, G__14312);
                  }();
                  if (cljs.core.truth_(and__3756__auto____$4)) {
                    var G__14313 = z;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14313) : p2.call(null, G__14313);
                  } else {
                    return and__3756__auto____$4;
                  }
                } else {
                  return and__3756__auto____$3;
                }
              } else {
                return and__3756__auto____$2;
              }
            } else {
              return and__3756__auto____$1;
            }
          } else {
            return and__3756__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__14436__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep2.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__14041_SHARP_) {
            var and__3756__auto__ = function() {
              var G__14318 = p1__14041_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14318) : p1.call(null, G__14318);
            }();
            if (cljs.core.truth_(and__3756__auto__)) {
              var G__14319 = p1__14041_SHARP_;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14319) : p2.call(null, G__14319);
            } else {
              return and__3756__auto__;
            }
          }, args));
        };
        var G__14436 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14437__i = 0, G__14437__a = new Array(arguments.length - 3);
            while (G__14437__i < G__14437__a.length) {
              G__14437__a[G__14437__i] = arguments[G__14437__i + 3];
              ++G__14437__i;
            }
            args = new cljs.core.IndexedSeq(G__14437__a, 0);
          }
          return G__14436__delegate.call(this, x, y, z, args);
        };
        G__14436.cljs$lang$maxFixedArity = 3;
        G__14436.cljs$lang$applyTo = function(arglist__14438) {
          var x = cljs.core.first(arglist__14438);
          arglist__14438 = cljs.core.next(arglist__14438);
          var y = cljs.core.first(arglist__14438);
          arglist__14438 = cljs.core.next(arglist__14438);
          var z = cljs.core.first(arglist__14438);
          var args = cljs.core.rest(arglist__14438);
          return G__14436__delegate(x, y, z, args);
        };
        G__14436.cljs$core$IFn$_invoke$arity$variadic = G__14436__delegate;
        return G__14436;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            var G__14439 = null;
            if (arguments.length > 3) {
              var G__14440__i = 0, G__14440__a = new Array(arguments.length - 3);
              while (G__14440__i < G__14440__a.length) {
                G__14440__a[G__14440__i] = arguments[G__14440__i + 3];
                ++G__14440__i;
              }
              G__14439 = new cljs.core.IndexedSeq(G__14440__a, 0);
            }
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14439);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3756__auto__ = function() {
            var G__14365 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14365) : p1.call(null, G__14365);
          }();
          if (cljs.core.truth_(and__3756__auto__)) {
            var and__3756__auto____$1 = function() {
              var G__14367 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14367) : p2.call(null, G__14367);
            }();
            if (cljs.core.truth_(and__3756__auto____$1)) {
              var G__14368 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14368) : p3.call(null, G__14368);
            } else {
              return and__3756__auto____$1;
            }
          } else {
            return and__3756__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3756__auto__ = function() {
            var G__14370 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14370) : p1.call(null, G__14370);
          }();
          if (cljs.core.truth_(and__3756__auto__)) {
            var and__3756__auto____$1 = function() {
              var G__14372 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14372) : p2.call(null, G__14372);
            }();
            if (cljs.core.truth_(and__3756__auto____$1)) {
              var and__3756__auto____$2 = function() {
                var G__14374 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14374) : p3.call(null, G__14374);
              }();
              if (cljs.core.truth_(and__3756__auto____$2)) {
                var and__3756__auto____$3 = function() {
                  var G__14376 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14376) : p1.call(null, G__14376);
                }();
                if (cljs.core.truth_(and__3756__auto____$3)) {
                  var and__3756__auto____$4 = function() {
                    var G__14378 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14378) : p2.call(null, G__14378);
                  }();
                  if (cljs.core.truth_(and__3756__auto____$4)) {
                    var G__14379 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14379) : p3.call(null, G__14379);
                  } else {
                    return and__3756__auto____$4;
                  }
                } else {
                  return and__3756__auto____$3;
                }
              } else {
                return and__3756__auto____$2;
              }
            } else {
              return and__3756__auto____$1;
            }
          } else {
            return and__3756__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3756__auto__ = function() {
            var G__14381 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14381) : p1.call(null, G__14381);
          }();
          if (cljs.core.truth_(and__3756__auto__)) {
            var and__3756__auto____$1 = function() {
              var G__14383 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14383) : p2.call(null, G__14383);
            }();
            if (cljs.core.truth_(and__3756__auto____$1)) {
              var and__3756__auto____$2 = function() {
                var G__14385 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14385) : p3.call(null, G__14385);
              }();
              if (cljs.core.truth_(and__3756__auto____$2)) {
                var and__3756__auto____$3 = function() {
                  var G__14387 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14387) : p1.call(null, G__14387);
                }();
                if (cljs.core.truth_(and__3756__auto____$3)) {
                  var and__3756__auto____$4 = function() {
                    var G__14389 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14389) : p2.call(null, G__14389);
                  }();
                  if (cljs.core.truth_(and__3756__auto____$4)) {
                    var and__3756__auto____$5 = function() {
                      var G__14391 = y;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14391) : p3.call(null, G__14391);
                    }();
                    if (cljs.core.truth_(and__3756__auto____$5)) {
                      var and__3756__auto____$6 = function() {
                        var G__14393 = z;
                        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14393) : p1.call(null, G__14393);
                      }();
                      if (cljs.core.truth_(and__3756__auto____$6)) {
                        var and__3756__auto____$7 = function() {
                          var G__14395 = z;
                          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14395) : p2.call(null, G__14395);
                        }();
                        if (cljs.core.truth_(and__3756__auto____$7)) {
                          var G__14396 = z;
                          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14396) : p3.call(null, G__14396);
                        } else {
                          return and__3756__auto____$7;
                        }
                      } else {
                        return and__3756__auto____$6;
                      }
                    } else {
                      return and__3756__auto____$5;
                    }
                  } else {
                    return and__3756__auto____$4;
                  }
                } else {
                  return and__3756__auto____$3;
                }
              } else {
                return and__3756__auto____$2;
              }
            } else {
              return and__3756__auto____$1;
            }
          } else {
            return and__3756__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__14441__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep3.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__14042_SHARP_) {
            var and__3756__auto__ = function() {
              var G__14403 = p1__14042_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14403) : p1.call(null, G__14403);
            }();
            if (cljs.core.truth_(and__3756__auto__)) {
              var and__3756__auto____$1 = function() {
                var G__14405 = p1__14042_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14405) : p2.call(null, G__14405);
              }();
              if (cljs.core.truth_(and__3756__auto____$1)) {
                var G__14406 = p1__14042_SHARP_;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14406) : p3.call(null, G__14406);
              } else {
                return and__3756__auto____$1;
              }
            } else {
              return and__3756__auto__;
            }
          }, args));
        };
        var G__14441 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14442__i = 0, G__14442__a = new Array(arguments.length - 3);
            while (G__14442__i < G__14442__a.length) {
              G__14442__a[G__14442__i] = arguments[G__14442__i + 3];
              ++G__14442__i;
            }
            args = new cljs.core.IndexedSeq(G__14442__a, 0);
          }
          return G__14441__delegate.call(this, x, y, z, args);
        };
        G__14441.cljs$lang$maxFixedArity = 3;
        G__14441.cljs$lang$applyTo = function(arglist__14443) {
          var x = cljs.core.first(arglist__14443);
          arglist__14443 = cljs.core.next(arglist__14443);
          var y = cljs.core.first(arglist__14443);
          arglist__14443 = cljs.core.next(arglist__14443);
          var z = cljs.core.first(arglist__14443);
          var args = cljs.core.rest(arglist__14443);
          return G__14441__delegate(x, y, z, args);
        };
        G__14441.cljs$core$IFn$_invoke$arity$variadic = G__14441__delegate;
        return G__14441;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            var G__14444 = null;
            if (arguments.length > 3) {
              var G__14445__i = 0, G__14445__a = new Array(arguments.length - 3);
              while (G__14445__i < G__14445__a.length) {
                G__14445__a[G__14445__i] = arguments[G__14445__i + 3];
                ++G__14445__i;
              }
              G__14444 = new cljs.core.IndexedSeq(G__14445__a, 0);
            }
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14444);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__14446__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__14043_SHARP_) {
                var G__14422 = x;
                return p1__14043_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14043_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14422) : p1__14043_SHARP_.call(null, G__14422);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__14044_SHARP_) {
                var and__3756__auto__ = function() {
                  var G__14424 = x;
                  return p1__14044_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14044_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14424) : p1__14044_SHARP_.call(null, G__14424);
                }();
                if (cljs.core.truth_(and__3756__auto__)) {
                  var G__14425 = y;
                  return p1__14044_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14044_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14425) : p1__14044_SHARP_.call(null, G__14425);
                } else {
                  return and__3756__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__14045_SHARP_) {
                var and__3756__auto__ = function() {
                  var G__14427 = x;
                  return p1__14045_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14045_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14427) : p1__14045_SHARP_.call(null, G__14427);
                }();
                if (cljs.core.truth_(and__3756__auto__)) {
                  var and__3756__auto____$1 = function() {
                    var G__14429 = y;
                    return p1__14045_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14045_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14429) : p1__14045_SHARP_.call(null, G__14429);
                  }();
                  if (cljs.core.truth_(and__3756__auto____$1)) {
                    var G__14430 = z;
                    return p1__14045_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14045_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14430) : p1__14045_SHARP_.call(null, G__14430);
                  } else {
                    return and__3756__auto____$1;
                  }
                } else {
                  return and__3756__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__14447__delegate = function(x, y, z, args) {
              return cljs.core.boolean$(epn.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(ps__$1) {
                return function(p1__14046_SHARP_) {
                  return cljs.core.every_QMARK_(p1__14046_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__14447 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__14448__i = 0, G__14448__a = new Array(arguments.length - 3);
                while (G__14448__i < G__14448__a.length) {
                  G__14448__a[G__14448__i] = arguments[G__14448__i + 3];
                  ++G__14448__i;
                }
                args = new cljs.core.IndexedSeq(G__14448__a, 0);
              }
              return G__14447__delegate.call(this, x, y, z, args);
            };
            G__14447.cljs$lang$maxFixedArity = 3;
            G__14447.cljs$lang$applyTo = function(arglist__14449) {
              var x = cljs.core.first(arglist__14449);
              arglist__14449 = cljs.core.next(arglist__14449);
              var y = cljs.core.first(arglist__14449);
              arglist__14449 = cljs.core.next(arglist__14449);
              var z = cljs.core.first(arglist__14449);
              var args = cljs.core.rest(arglist__14449);
              return G__14447__delegate(x, y, z, args);
            };
            G__14447.cljs$core$IFn$_invoke$arity$variadic = G__14447__delegate;
            return G__14447;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                var G__14450 = null;
                if (arguments.length > 3) {
                  var G__14451__i = 0, G__14451__a = new Array(arguments.length - 3);
                  while (G__14451__i < G__14451__a.length) {
                    G__14451__a[G__14451__i] = arguments[G__14451__i + 3];
                    ++G__14451__i;
                  }
                  G__14450 = new cljs.core.IndexedSeq(G__14451__a, 0);
                }
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14450);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__14446 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__14452__i = 0, G__14452__a = new Array(arguments.length - 3);
        while (G__14452__i < G__14452__a.length) {
          G__14452__a[G__14452__i] = arguments[G__14452__i + 3];
          ++G__14452__i;
        }
        ps = new cljs.core.IndexedSeq(G__14452__a, 0);
      }
      return G__14446__delegate.call(this, p1, p2, p3, ps);
    };
    G__14446.cljs$lang$maxFixedArity = 3;
    G__14446.cljs$lang$applyTo = function(arglist__14453) {
      var p1 = cljs.core.first(arglist__14453);
      arglist__14453 = cljs.core.next(arglist__14453);
      var p2 = cljs.core.first(arglist__14453);
      arglist__14453 = cljs.core.next(arglist__14453);
      var p3 = cljs.core.first(arglist__14453);
      var ps = cljs.core.rest(arglist__14453);
      return G__14446__delegate(p1, p2, p3, ps);
    };
    G__14446.cljs$core$IFn$_invoke$arity$variadic = G__14446__delegate;
    return G__14446;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        var G__14454 = null;
        if (arguments.length > 3) {
          var G__14455__i = 0, G__14455__a = new Array(arguments.length - 3);
          while (G__14455__i < G__14455__a.length) {
            G__14455__a[G__14455__i] = arguments[G__14455__i + 3];
            ++G__14455__i;
          }
          G__14454 = new cljs.core.IndexedSeq(G__14455__a, 0);
        }
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__14454);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        var G__14661 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14661) : p.call(null, G__14661);
      };
      var sp1__2 = function(x, y) {
        var or__3768__auto__ = function() {
          var G__14663 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14663) : p.call(null, G__14663);
        }();
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          var G__14664 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14664) : p.call(null, G__14664);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3768__auto__ = function() {
          var G__14666 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14666) : p.call(null, G__14666);
        }();
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = function() {
            var G__14668 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14668) : p.call(null, G__14668);
          }();
          if (cljs.core.truth_(or__3768__auto____$1)) {
            return or__3768__auto____$1;
          } else {
            var G__14669 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14669) : p.call(null, G__14669);
          }
        }
      };
      var sp1__4 = function() {
        var G__14830__delegate = function(x, y, z, args) {
          var or__3768__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3768__auto__)) {
            return or__3768__auto__;
          } else {
            return cljs.core.some(p, args);
          }
        };
        var G__14830 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14831__i = 0, G__14831__a = new Array(arguments.length - 3);
            while (G__14831__i < G__14831__a.length) {
              G__14831__a[G__14831__i] = arguments[G__14831__i + 3];
              ++G__14831__i;
            }
            args = new cljs.core.IndexedSeq(G__14831__a, 0);
          }
          return G__14830__delegate.call(this, x, y, z, args);
        };
        G__14830.cljs$lang$maxFixedArity = 3;
        G__14830.cljs$lang$applyTo = function(arglist__14832) {
          var x = cljs.core.first(arglist__14832);
          arglist__14832 = cljs.core.next(arglist__14832);
          var y = cljs.core.first(arglist__14832);
          arglist__14832 = cljs.core.next(arglist__14832);
          var z = cljs.core.first(arglist__14832);
          var args = cljs.core.rest(arglist__14832);
          return G__14830__delegate(x, y, z, args);
        };
        G__14830.cljs$core$IFn$_invoke$arity$variadic = G__14830__delegate;
        return G__14830;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            var G__14833 = null;
            if (arguments.length > 3) {
              var G__14834__i = 0, G__14834__a = new Array(arguments.length - 3);
              while (G__14834__i < G__14834__a.length) {
                G__14834__a[G__14834__i] = arguments[G__14834__i + 3];
                ++G__14834__i;
              }
              G__14833 = new cljs.core.IndexedSeq(G__14834__a, 0);
            }
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14833);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3768__auto__ = function() {
          var G__14701 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14701) : p1.call(null, G__14701);
        }();
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          var G__14702 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14702) : p2.call(null, G__14702);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3768__auto__ = function() {
          var G__14704 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14704) : p1.call(null, G__14704);
        }();
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = function() {
            var G__14706 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14706) : p1.call(null, G__14706);
          }();
          if (cljs.core.truth_(or__3768__auto____$1)) {
            return or__3768__auto____$1;
          } else {
            var or__3768__auto____$2 = function() {
              var G__14708 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14708) : p2.call(null, G__14708);
            }();
            if (cljs.core.truth_(or__3768__auto____$2)) {
              return or__3768__auto____$2;
            } else {
              var G__14709 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14709) : p2.call(null, G__14709);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3768__auto__ = function() {
          var G__14711 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14711) : p1.call(null, G__14711);
        }();
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = function() {
            var G__14713 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14713) : p1.call(null, G__14713);
          }();
          if (cljs.core.truth_(or__3768__auto____$1)) {
            return or__3768__auto____$1;
          } else {
            var or__3768__auto____$2 = function() {
              var G__14715 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14715) : p1.call(null, G__14715);
            }();
            if (cljs.core.truth_(or__3768__auto____$2)) {
              return or__3768__auto____$2;
            } else {
              var or__3768__auto____$3 = function() {
                var G__14717 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14717) : p2.call(null, G__14717);
              }();
              if (cljs.core.truth_(or__3768__auto____$3)) {
                return or__3768__auto____$3;
              } else {
                var or__3768__auto____$4 = function() {
                  var G__14719 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14719) : p2.call(null, G__14719);
                }();
                if (cljs.core.truth_(or__3768__auto____$4)) {
                  return or__3768__auto____$4;
                } else {
                  var G__14720 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14720) : p2.call(null, G__14720);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__14835__delegate = function(x, y, z, args) {
          var or__3768__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3768__auto__)) {
            return or__3768__auto__;
          } else {
            return cljs.core.some(function(or__3768__auto__) {
              return function(p1__14456_SHARP_) {
                var or__3768__auto____$1 = function() {
                  var G__14722 = p1__14456_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14722) : p1.call(null, G__14722);
                }();
                if (cljs.core.truth_(or__3768__auto____$1)) {
                  return or__3768__auto____$1;
                } else {
                  var G__14723 = p1__14456_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14723) : p2.call(null, G__14723);
                }
              };
            }(or__3768__auto__), args);
          }
        };
        var G__14835 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14836__i = 0, G__14836__a = new Array(arguments.length - 3);
            while (G__14836__i < G__14836__a.length) {
              G__14836__a[G__14836__i] = arguments[G__14836__i + 3];
              ++G__14836__i;
            }
            args = new cljs.core.IndexedSeq(G__14836__a, 0);
          }
          return G__14835__delegate.call(this, x, y, z, args);
        };
        G__14835.cljs$lang$maxFixedArity = 3;
        G__14835.cljs$lang$applyTo = function(arglist__14837) {
          var x = cljs.core.first(arglist__14837);
          arglist__14837 = cljs.core.next(arglist__14837);
          var y = cljs.core.first(arglist__14837);
          arglist__14837 = cljs.core.next(arglist__14837);
          var z = cljs.core.first(arglist__14837);
          var args = cljs.core.rest(arglist__14837);
          return G__14835__delegate(x, y, z, args);
        };
        G__14835.cljs$core$IFn$_invoke$arity$variadic = G__14835__delegate;
        return G__14835;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            var G__14838 = null;
            if (arguments.length > 3) {
              var G__14839__i = 0, G__14839__a = new Array(arguments.length - 3);
              while (G__14839__i < G__14839__a.length) {
                G__14839__a[G__14839__i] = arguments[G__14839__i + 3];
                ++G__14839__i;
              }
              G__14838 = new cljs.core.IndexedSeq(G__14839__a, 0);
            }
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14838);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3768__auto__ = function() {
          var G__14769 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14769) : p1.call(null, G__14769);
        }();
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = function() {
            var G__14771 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14771) : p2.call(null, G__14771);
          }();
          if (cljs.core.truth_(or__3768__auto____$1)) {
            return or__3768__auto____$1;
          } else {
            var G__14772 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14772) : p3.call(null, G__14772);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3768__auto__ = function() {
          var G__14774 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14774) : p1.call(null, G__14774);
        }();
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = function() {
            var G__14776 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14776) : p2.call(null, G__14776);
          }();
          if (cljs.core.truth_(or__3768__auto____$1)) {
            return or__3768__auto____$1;
          } else {
            var or__3768__auto____$2 = function() {
              var G__14778 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14778) : p3.call(null, G__14778);
            }();
            if (cljs.core.truth_(or__3768__auto____$2)) {
              return or__3768__auto____$2;
            } else {
              var or__3768__auto____$3 = function() {
                var G__14780 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14780) : p1.call(null, G__14780);
              }();
              if (cljs.core.truth_(or__3768__auto____$3)) {
                return or__3768__auto____$3;
              } else {
                var or__3768__auto____$4 = function() {
                  var G__14782 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14782) : p2.call(null, G__14782);
                }();
                if (cljs.core.truth_(or__3768__auto____$4)) {
                  return or__3768__auto____$4;
                } else {
                  var G__14783 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14783) : p3.call(null, G__14783);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3768__auto__ = function() {
          var G__14785 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14785) : p1.call(null, G__14785);
        }();
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = function() {
            var G__14787 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14787) : p2.call(null, G__14787);
          }();
          if (cljs.core.truth_(or__3768__auto____$1)) {
            return or__3768__auto____$1;
          } else {
            var or__3768__auto____$2 = function() {
              var G__14789 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14789) : p3.call(null, G__14789);
            }();
            if (cljs.core.truth_(or__3768__auto____$2)) {
              return or__3768__auto____$2;
            } else {
              var or__3768__auto____$3 = function() {
                var G__14791 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14791) : p1.call(null, G__14791);
              }();
              if (cljs.core.truth_(or__3768__auto____$3)) {
                return or__3768__auto____$3;
              } else {
                var or__3768__auto____$4 = function() {
                  var G__14793 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14793) : p2.call(null, G__14793);
                }();
                if (cljs.core.truth_(or__3768__auto____$4)) {
                  return or__3768__auto____$4;
                } else {
                  var or__3768__auto____$5 = function() {
                    var G__14795 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14795) : p3.call(null, G__14795);
                  }();
                  if (cljs.core.truth_(or__3768__auto____$5)) {
                    return or__3768__auto____$5;
                  } else {
                    var or__3768__auto____$6 = function() {
                      var G__14797 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14797) : p1.call(null, G__14797);
                    }();
                    if (cljs.core.truth_(or__3768__auto____$6)) {
                      return or__3768__auto____$6;
                    } else {
                      var or__3768__auto____$7 = function() {
                        var G__14799 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14799) : p2.call(null, G__14799);
                      }();
                      if (cljs.core.truth_(or__3768__auto____$7)) {
                        return or__3768__auto____$7;
                      } else {
                        var G__14800 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14800) : p3.call(null, G__14800);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__14840__delegate = function(x, y, z, args) {
          var or__3768__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3768__auto__)) {
            return or__3768__auto__;
          } else {
            return cljs.core.some(function(or__3768__auto__) {
              return function(p1__14457_SHARP_) {
                var or__3768__auto____$1 = function() {
                  var G__14802 = p1__14457_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14802) : p1.call(null, G__14802);
                }();
                if (cljs.core.truth_(or__3768__auto____$1)) {
                  return or__3768__auto____$1;
                } else {
                  var or__3768__auto____$2 = function() {
                    var G__14804 = p1__14457_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14804) : p2.call(null, G__14804);
                  }();
                  if (cljs.core.truth_(or__3768__auto____$2)) {
                    return or__3768__auto____$2;
                  } else {
                    var G__14805 = p1__14457_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14805) : p3.call(null, G__14805);
                  }
                }
              };
            }(or__3768__auto__), args);
          }
        };
        var G__14840 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14841__i = 0, G__14841__a = new Array(arguments.length - 3);
            while (G__14841__i < G__14841__a.length) {
              G__14841__a[G__14841__i] = arguments[G__14841__i + 3];
              ++G__14841__i;
            }
            args = new cljs.core.IndexedSeq(G__14841__a, 0);
          }
          return G__14840__delegate.call(this, x, y, z, args);
        };
        G__14840.cljs$lang$maxFixedArity = 3;
        G__14840.cljs$lang$applyTo = function(arglist__14842) {
          var x = cljs.core.first(arglist__14842);
          arglist__14842 = cljs.core.next(arglist__14842);
          var y = cljs.core.first(arglist__14842);
          arglist__14842 = cljs.core.next(arglist__14842);
          var z = cljs.core.first(arglist__14842);
          var args = cljs.core.rest(arglist__14842);
          return G__14840__delegate(x, y, z, args);
        };
        G__14840.cljs$core$IFn$_invoke$arity$variadic = G__14840__delegate;
        return G__14840;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            var G__14843 = null;
            if (arguments.length > 3) {
              var G__14844__i = 0, G__14844__a = new Array(arguments.length - 3);
              while (G__14844__i < G__14844__a.length) {
                G__14844__a[G__14844__i] = arguments[G__14844__i + 3];
                ++G__14844__i;
              }
              G__14843 = new cljs.core.IndexedSeq(G__14844__a, 0);
            }
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14843);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__14845__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__14458_SHARP_) {
                var G__14821 = x;
                return p1__14458_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14458_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14821) : p1__14458_SHARP_.call(null, G__14821);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__14459_SHARP_) {
                var or__3768__auto__ = function() {
                  var G__14823 = x;
                  return p1__14459_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14459_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14823) : p1__14459_SHARP_.call(null, G__14823);
                }();
                if (cljs.core.truth_(or__3768__auto__)) {
                  return or__3768__auto__;
                } else {
                  var G__14824 = y;
                  return p1__14459_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14459_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14824) : p1__14459_SHARP_.call(null, G__14824);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__14460_SHARP_) {
                var or__3768__auto__ = function() {
                  var G__14826 = x;
                  return p1__14460_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14460_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14826) : p1__14460_SHARP_.call(null, G__14826);
                }();
                if (cljs.core.truth_(or__3768__auto__)) {
                  return or__3768__auto__;
                } else {
                  var or__3768__auto____$1 = function() {
                    var G__14828 = y;
                    return p1__14460_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14460_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14828) : p1__14460_SHARP_.call(null, G__14828);
                  }();
                  if (cljs.core.truth_(or__3768__auto____$1)) {
                    return or__3768__auto____$1;
                  } else {
                    var G__14829 = z;
                    return p1__14460_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14460_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14829) : p1__14460_SHARP_.call(null, G__14829);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__14846__delegate = function(x, y, z, args) {
              var or__3768__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
              if (cljs.core.truth_(or__3768__auto__)) {
                return or__3768__auto__;
              } else {
                return cljs.core.some(function(or__3768__auto__, ps__$1) {
                  return function(p1__14461_SHARP_) {
                    return cljs.core.some(p1__14461_SHARP_, args);
                  };
                }(or__3768__auto__, ps__$1), ps__$1);
              }
            };
            var G__14846 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__14847__i = 0, G__14847__a = new Array(arguments.length - 3);
                while (G__14847__i < G__14847__a.length) {
                  G__14847__a[G__14847__i] = arguments[G__14847__i + 3];
                  ++G__14847__i;
                }
                args = new cljs.core.IndexedSeq(G__14847__a, 0);
              }
              return G__14846__delegate.call(this, x, y, z, args);
            };
            G__14846.cljs$lang$maxFixedArity = 3;
            G__14846.cljs$lang$applyTo = function(arglist__14848) {
              var x = cljs.core.first(arglist__14848);
              arglist__14848 = cljs.core.next(arglist__14848);
              var y = cljs.core.first(arglist__14848);
              arglist__14848 = cljs.core.next(arglist__14848);
              var z = cljs.core.first(arglist__14848);
              var args = cljs.core.rest(arglist__14848);
              return G__14846__delegate(x, y, z, args);
            };
            G__14846.cljs$core$IFn$_invoke$arity$variadic = G__14846__delegate;
            return G__14846;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                var G__14849 = null;
                if (arguments.length > 3) {
                  var G__14850__i = 0, G__14850__a = new Array(arguments.length - 3);
                  while (G__14850__i < G__14850__a.length) {
                    G__14850__a[G__14850__i] = arguments[G__14850__i + 3];
                    ++G__14850__i;
                  }
                  G__14849 = new cljs.core.IndexedSeq(G__14850__a, 0);
                }
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14849);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__14845 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__14851__i = 0, G__14851__a = new Array(arguments.length - 3);
        while (G__14851__i < G__14851__a.length) {
          G__14851__a[G__14851__i] = arguments[G__14851__i + 3];
          ++G__14851__i;
        }
        ps = new cljs.core.IndexedSeq(G__14851__a, 0);
      }
      return G__14845__delegate.call(this, p1, p2, p3, ps);
    };
    G__14845.cljs$lang$maxFixedArity = 3;
    G__14845.cljs$lang$applyTo = function(arglist__14852) {
      var p1 = cljs.core.first(arglist__14852);
      arglist__14852 = cljs.core.next(arglist__14852);
      var p2 = cljs.core.first(arglist__14852);
      arglist__14852 = cljs.core.next(arglist__14852);
      var p3 = cljs.core.first(arglist__14852);
      var ps = cljs.core.rest(arglist__14852);
      return G__14845__delegate(p1, p2, p3, ps);
    };
    G__14845.cljs$core$IFn$_invoke$arity$variadic = G__14845__delegate;
    return G__14845;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        var G__14853 = null;
        if (arguments.length > 3) {
          var G__14854__i = 0, G__14854__a = new Array(arguments.length - 3);
          while (G__14854__i < G__14854__a.length) {
            G__14854__a[G__14854__i] = arguments[G__14854__i + 3];
            ++G__14854__i;
          }
          G__14853 = new cljs.core.IndexedSeq(G__14854__a, 0);
        }
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__14853);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(rf) {
      return function() {
        var G__14909 = null;
        var G__14909__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__14909__1 = function(result) {
          var G__14895 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14895) : rf.call(null, G__14895);
        };
        var G__14909__2 = function(result, input) {
          var G__14896 = result;
          var G__14897 = function() {
            var G__14898 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14898) : f.call(null, G__14898);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14896, G__14897) : rf.call(null, G__14896, G__14897);
        };
        var G__14909__3 = function() {
          var G__14910__delegate = function(result, input, inputs) {
            var G__14899 = result;
            var G__14900 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14899, G__14900) : rf.call(null, G__14899, G__14900);
          };
          var G__14910 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              var G__14911__i = 0, G__14911__a = new Array(arguments.length - 2);
              while (G__14911__i < G__14911__a.length) {
                G__14911__a[G__14911__i] = arguments[G__14911__i + 2];
                ++G__14911__i;
              }
              inputs = new cljs.core.IndexedSeq(G__14911__a, 0);
            }
            return G__14910__delegate.call(this, result, input, inputs);
          };
          G__14910.cljs$lang$maxFixedArity = 2;
          G__14910.cljs$lang$applyTo = function(arglist__14912) {
            var result = cljs.core.first(arglist__14912);
            arglist__14912 = cljs.core.next(arglist__14912);
            var input = cljs.core.first(arglist__14912);
            var inputs = cljs.core.rest(arglist__14912);
            return G__14910__delegate(result, input, inputs);
          };
          G__14910.cljs$core$IFn$_invoke$arity$variadic = G__14910__delegate;
          return G__14910;
        }();
        G__14909 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__14909__0.call(this);
            case 1:
              return G__14909__1.call(this, result);
            case 2:
              return G__14909__2.call(this, result, input);
            default:
              var G__14913 = null;
              if (arguments.length > 2) {
                var G__14914__i = 0, G__14914__a = new Array(arguments.length - 2);
                while (G__14914__i < G__14914__a.length) {
                  G__14914__a[G__14914__i] = arguments[G__14914__i + 2];
                  ++G__14914__i;
                }
                G__14913 = new cljs.core.IndexedSeq(G__14914__a, 0);
              }
              return G__14909__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__14913);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__14909.cljs$lang$maxFixedArity = 2;
        G__14909.cljs$lang$applyTo = G__14909__3.cljs$lang$applyTo;
        G__14909.cljs$core$IFn$_invoke$arity$0 = G__14909__0;
        G__14909.cljs$core$IFn$_invoke$arity$1 = G__14909__1;
        G__14909.cljs$core$IFn$_invoke$arity$2 = G__14909__2;
        G__14909.cljs$core$IFn$_invoke$arity$variadic = G__14909__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__14909;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4655__auto___14915 = size;
          var i_14916 = 0;
          while (true) {
            if (i_14916 < n__4655__auto___14915) {
              cljs.core.chunk_append(b, function() {
                var G__14901 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14916);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14901) : f.call(null, G__14901);
              }());
              var G__14917 = i_14916 + 1;
              i_14916 = G__14917;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__14902 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14902) : f.call(null, G__14902);
          }(), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(function() {
          var G__14903 = cljs.core.first(s1);
          var G__14904 = cljs.core.first(s2);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14903, G__14904) : f.call(null, G__14903, G__14904);
        }(), map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      var s3 = cljs.core.seq(c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons(function() {
          var G__14905 = cljs.core.first(s1);
          var G__14906 = cljs.core.first(s2);
          var G__14907 = cljs.core.first(s3);
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14905, G__14906, G__14907) : f.call(null, G__14905, G__14906, G__14907);
        }(), map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__14918__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
          if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
            return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.cljs$core$IFn$_invoke$arity$2(function(step) {
        return function(p1__14855_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__14855_SHARP_);
        };
      }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
    };
    var G__14918 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__14919__i = 0, G__14919__a = new Array(arguments.length - 4);
        while (G__14919__i < G__14919__a.length) {
          G__14919__a[G__14919__i] = arguments[G__14919__i + 4];
          ++G__14919__i;
        }
        colls = new cljs.core.IndexedSeq(G__14919__a, 0);
      }
      return G__14918__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__14918.cljs$lang$maxFixedArity = 4;
    G__14918.cljs$lang$applyTo = function(arglist__14920) {
      var f = cljs.core.first(arglist__14920);
      arglist__14920 = cljs.core.next(arglist__14920);
      var c1 = cljs.core.first(arglist__14920);
      arglist__14920 = cljs.core.next(arglist__14920);
      var c2 = cljs.core.first(arglist__14920);
      arglist__14920 = cljs.core.next(arglist__14920);
      var c3 = cljs.core.first(arglist__14920);
      var colls = cljs.core.rest(arglist__14920);
      return G__14918__delegate(f, c1, c2, c3, colls);
    };
    G__14918.cljs$core$IFn$_invoke$arity$variadic = G__14918__delegate;
    return G__14918;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        var G__14921 = null;
        if (arguments.length > 4) {
          var G__14922__i = 0, G__14922__a = new Array(arguments.length - 4);
          while (G__14922__i < G__14922__a.length) {
            G__14922__a[G__14922__i] = arguments[G__14922__i + 4];
            ++G__14922__i;
          }
          G__14921 = new cljs.core.IndexedSeq(G__14922__a, 0);
        }
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__14921);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__14931 = null;
          var G__14931__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14931__1 = function(result) {
            var G__14928 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14928) : rf.call(null, G__14928);
          };
          var G__14931__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            var result__$1 = n__$1 > 0 ? function() {
              var G__14929 = result;
              var G__14930 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14929, G__14930) : rf.call(null, G__14929, G__14930);
            }() : result;
            if (!(nn > 0)) {
              return cljs.core.ensure_reduced(result__$1);
            } else {
              return result__$1;
            }
          };
          G__14931 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14931__0.call(this);
              case 1:
                return G__14931__1.call(this, result);
              case 2:
                return G__14931__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14931.cljs$core$IFn$_invoke$arity$0 = G__14931__0;
          G__14931.cljs$core$IFn$_invoke$arity$1 = G__14931__1;
          G__14931.cljs$core$IFn$_invoke$arity$2 = G__14931__2;
          return G__14931;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq(coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons(cljs.core.first(s), take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__14938 = null;
          var G__14938__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14938__1 = function(result) {
            var G__14935 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14935) : rf.call(null, G__14935);
          };
          var G__14938__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            if (n__$1 > 0) {
              return result;
            } else {
              var G__14936 = result;
              var G__14937 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14936, G__14937) : rf.call(null, G__14936, G__14937);
            }
          };
          G__14938 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14938__0.call(this);
              case 1:
                return G__14938__1.call(this, result);
              case 2:
                return G__14938__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14938.cljs$core$IFn$_invoke$arity$0 = G__14938__0;
          G__14938.cljs$core$IFn$_invoke$arity$1 = G__14938__1;
          G__14938.cljs$core$IFn$_invoke$arity$2 = G__14938__2;
          return G__14938;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (n__$1 > 0 && s) {
          var G__14939 = n__$1 - 1;
          var G__14940 = cljs.core.rest(s);
          n__$1 = G__14939;
          coll__$1 = G__14940;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
      return x;
    }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__14943 = cljs.core.next(s);
      var G__14944 = cljs.core.next(lead);
      s = G__14943;
      lead = G__14944;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(rf) {
      var da = cljs.core.volatile_BANG_(true);
      return function(da) {
        return function() {
          var G__14957 = null;
          var G__14957__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14957__1 = function(result) {
            var G__14951 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14951) : rf.call(null, G__14951);
          };
          var G__14957__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref(da);
            if (cljs.core.truth_(function() {
              var and__3756__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3756__auto__)) {
                var G__14952 = input;
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14952) : pred.call(null, G__14952);
              } else {
                return and__3756__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.vreset_BANG_(da, null);
              var G__14953 = result;
              var G__14954 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14953, G__14954) : rf.call(null, G__14953, G__14954);
            }
          };
          G__14957 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14957__0.call(this);
              case 1:
                return G__14957__1.call(this, result);
              case 2:
                return G__14957__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14957.cljs$core$IFn$_invoke$arity$0 = G__14957__0;
          G__14957.cljs$core$IFn$_invoke$arity$1 = G__14957__1;
          G__14957.cljs$core$IFn$_invoke$arity$2 = G__14957__2;
          return G__14957;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (cljs.core.truth_(function() {
          var and__3756__auto__ = s;
          if (and__3756__auto__) {
            var G__14956 = cljs.core.first(s);
            return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__14956) : pred__$1.call(null, G__14956);
          } else {
            return and__3756__auto__;
          }
        }())) {
          var G__14958 = pred__$1;
          var G__14959 = cljs.core.rest(s);
          pred__$1 = G__14958;
          coll__$1 = G__14959;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(x, repeat.cljs$core$IFn$_invoke$arity$1(x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeat.cljs$core$IFn$_invoke$arity$1(x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), repeatedly.cljs$core$IFn$_invoke$arity$1(f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return iterate(f, function() {
      var G__14968 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14968) : f.call(null, G__14968);
    }());
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__14971__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
        if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
          return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__14971 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__14972__i = 0, G__14972__a = new Array(arguments.length - 2);
        while (G__14972__i < G__14972__a.length) {
          G__14972__a[G__14972__i] = arguments[G__14972__i + 2];
          ++G__14972__i;
        }
        colls = new cljs.core.IndexedSeq(G__14972__a, 0);
      }
      return G__14971__delegate.call(this, c1, c2, colls);
    };
    G__14971.cljs$lang$maxFixedArity = 2;
    G__14971.cljs$lang$applyTo = function(arglist__14973) {
      var c1 = cljs.core.first(arglist__14973);
      arglist__14973 = cljs.core.next(arglist__14973);
      var c2 = cljs.core.first(arglist__14973);
      var colls = cljs.core.rest(arglist__14973);
      return G__14971__delegate(c1, c2, colls);
    };
    G__14971.cljs$core$IFn$_invoke$arity$variadic = G__14971__delegate;
    return G__14971;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        var G__14974 = null;
        if (arguments.length > 2) {
          var G__14975__i = 0, G__14975__a = new Array(arguments.length - 2);
          while (G__14975__i < G__14975__a.length) {
            G__14975__a[G__14975__i] = arguments[G__14975__i + 2];
            ++G__14975__i;
          }
          G__14974 = new cljs.core.IndexedSeq(G__14975__a, 0);
        }
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, G__14974);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function() {
  var interpose = null;
  var interpose__1 = function(sep) {
    return function(rf) {
      var started = cljs.core.volatile_BANG_(false);
      return function(started) {
        return function() {
          var G__14990 = null;
          var G__14990__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14990__1 = function(result) {
            var G__14983 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14983) : rf.call(null, G__14983);
          };
          var G__14990__2 = function(result, input) {
            if (cljs.core.truth_(cljs.core.deref(started))) {
              var sepr = function() {
                var G__14984 = result;
                var G__14985 = sep;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14984, G__14985) : rf.call(null, G__14984, G__14985);
              }();
              if (cljs.core.reduced_QMARK_(sepr)) {
                return sepr;
              } else {
                var G__14986 = sepr;
                var G__14987 = input;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14986, G__14987) : rf.call(null, G__14986, G__14987);
              }
            } else {
              cljs.core.vreset_BANG_(started, true);
              var G__14988 = result;
              var G__14989 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14988, G__14989) : rf.call(null, G__14988, G__14989);
            }
          };
          G__14990 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14990__0.call(this);
              case 1:
                return G__14990__1.call(this, result);
              case 2:
                return G__14990__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14990.cljs$core$IFn$_invoke$arity$0 = G__14990__0;
          G__14990.cljs$core$IFn$_invoke$arity$1 = G__14990__1;
          G__14990.cljs$core$IFn$_invoke$arity$2 = G__14990__2;
          return G__14990;
        }();
      }(started);
    };
  };
  var interpose__2 = function(sep, coll) {
    return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
  };
  interpose = function(sep, coll) {
    switch(arguments.length) {
      case 1:
        return interpose__1.call(this, sep);
      case 2:
        return interpose__2.call(this, sep, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
  interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
  return interpose;
}();
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
  };
  var mapcat__2 = function() {
    var G__14999__delegate = function(f, colls) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
    };
    var G__14999 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        var G__15000__i = 0, G__15000__a = new Array(arguments.length - 1);
        while (G__15000__i < G__15000__a.length) {
          G__15000__a[G__15000__i] = arguments[G__15000__i + 1];
          ++G__15000__i;
        }
        colls = new cljs.core.IndexedSeq(G__15000__a, 0);
      }
      return G__14999__delegate.call(this, f, colls);
    };
    G__14999.cljs$lang$maxFixedArity = 1;
    G__14999.cljs$lang$applyTo = function(arglist__15001) {
      var f = cljs.core.first(arglist__15001);
      var colls = cljs.core.rest(arglist__15001);
      return G__14999__delegate(f, colls);
    };
    G__14999.cljs$core$IFn$_invoke$arity$variadic = G__14999__delegate;
    return G__14999;
  }();
  mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      default:
        var G__15002 = null;
        if (arguments.length > 1) {
          var G__15003__i = 0, G__15003__a = new Array(arguments.length - 1);
          while (G__15003__i < G__15003__a.length) {
            G__15003__a[G__15003__i] = arguments[G__15003__i + 1];
            ++G__15003__i;
          }
          G__15002 = new cljs.core.IndexedSeq(G__15003__a, 0);
        }
        return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__15002);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 1;
  mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__15022 = null;
        var G__15022__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__15022__1 = function(result) {
          var G__15016 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15016) : rf.call(null, G__15016);
        };
        var G__15022__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__15017 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15017) : pred.call(null, G__15017);
          }())) {
            var G__15018 = result;
            var G__15019 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15018, G__15019) : rf.call(null, G__15018, G__15019);
          } else {
            return result;
          }
        };
        G__15022 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15022__0.call(this);
            case 1:
              return G__15022__1.call(this, result);
            case 2:
              return G__15022__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15022.cljs$core$IFn$_invoke$arity$0 = G__15022__0;
        G__15022.cljs$core$IFn$_invoke$arity$1 = G__15022__1;
        G__15022.cljs$core$IFn$_invoke$arity$2 = G__15022__2;
        return G__15022;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4655__auto___15023 = size;
          var i_15024 = 0;
          while (true) {
            if (i_15024 < n__4655__auto___15023) {
              if (cljs.core.truth_(function() {
                var G__15020 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_15024);
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15020) : pred.call(null, G__15020);
              }())) {
                cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_15024));
              } else {
              }
              var G__15025 = i_15024 + 1;
              i_15024 = G__15025;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
        } else {
          var f = cljs.core.first(s);
          var r = cljs.core.rest(s);
          if (cljs.core.truth_(function() {
            var G__15021 = f;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15021) : pred.call(null, G__15021);
          }())) {
            return cljs.core.cons(f, filter.cljs$core$IFn$_invoke$arity$2(pred, r));
          } else {
            return filter.cljs$core$IFn$_invoke$arity$2(pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__15032 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__15032) : branch_QMARK_.call(null, G__15032);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk, cljs.core.array_seq([function() {
        var G__15033 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__15033) : children.call(null, G__15033);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__15034_SHARP_) {
    return!cljs.core.sequential_QMARK_(p1__15034_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__15037 = to;
        if (G__15037) {
          var bit__4442__auto__ = G__15037.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4442__auto__ || G__15037.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
      } else {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__15038 = to;
      if (G__15038) {
        var bit__4442__auto__ = G__15038.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4442__auto__ || G__15038.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
        var G__15040 = o;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15040) : f.call(null, G__15040);
      }());
    }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__15041__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
    };
    var G__15041 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__15042__i = 0, G__15042__a = new Array(arguments.length - 4);
        while (G__15042__i < G__15042__a.length) {
          G__15042__a[G__15042__i] = arguments[G__15042__i + 4];
          ++G__15042__i;
        }
        colls = new cljs.core.IndexedSeq(G__15042__a, 0);
      }
      return G__15041__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__15041.cljs$lang$maxFixedArity = 4;
    G__15041.cljs$lang$applyTo = function(arglist__15043) {
      var f = cljs.core.first(arglist__15043);
      arglist__15043 = cljs.core.next(arglist__15043);
      var c1 = cljs.core.first(arglist__15043);
      arglist__15043 = cljs.core.next(arglist__15043);
      var c2 = cljs.core.first(arglist__15043);
      arglist__15043 = cljs.core.next(arglist__15043);
      var c3 = cljs.core.first(arglist__15043);
      var colls = cljs.core.rest(arglist__15043);
      return G__15041__delegate(f, c1, c2, c3, colls);
    };
    G__15041.cljs$core$IFn$_invoke$arity$variadic = G__15041__delegate;
    return G__15041;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        var G__15044 = null;
        if (arguments.length > 4) {
          var G__15045__i = 0, G__15045__a = new Array(arguments.length - 4);
          while (G__15045__i < G__15045__a.length) {
            G__15045__a[G__15045__i] = arguments[G__15045__i + 4];
            ++G__15045__i;
          }
          G__15044 = new cljs.core.IndexedSeq(G__15045__a, 0);
        }
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__15044);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__15047 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15047) : pred.call(null, G__15047);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq(ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__15062 = m__$1;
          if (G__15062) {
            var bit__4449__auto__ = G__15062.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4449__auto__ || G__15062.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__15062.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__15062);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__15062);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__15063 = sentinel;
            var G__15064 = m__$2;
            var G__15065 = cljs.core.next(ks__$1);
            sentinel = G__15063;
            m__$1 = G__15064;
            ks__$1 = G__15065;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__15066, v) {
  var vec__15071 = p__15066;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15071, 0, null);
  var ks = cljs.core.nthnext(vec__15071, 1);
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__15072, f) {
    var vec__15110 = p__15072;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15110, 0, null);
    var ks = cljs.core.nthnext(vec__15110, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__15111 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15111) : f.call(null, G__15111);
      }());
    }
  };
  var update_in__4 = function(m, p__15073, f, a) {
    var vec__15112 = p__15073;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15112, 0, null);
    var ks = cljs.core.nthnext(vec__15112, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__15113 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__15114 = a;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15113, G__15114) : f.call(null, G__15113, G__15114);
      }());
    }
  };
  var update_in__5 = function(m, p__15074, f, a, b) {
    var vec__15115 = p__15074;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15115, 0, null);
    var ks = cljs.core.nthnext(vec__15115, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__15116 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__15117 = a;
        var G__15118 = b;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15116, G__15117, G__15118) : f.call(null, G__15116, G__15117, G__15118);
      }());
    }
  };
  var update_in__6 = function(m, p__15075, f, a, b, c) {
    var vec__15119 = p__15075;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15119, 0, null);
    var ks = cljs.core.nthnext(vec__15119, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__15120 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__15121 = a;
        var G__15122 = b;
        var G__15123 = c;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15120, G__15121, G__15122, G__15123) : f.call(null, G__15120, G__15121, G__15122, G__15123);
      }());
    }
  };
  var update_in__7 = function() {
    var G__15125__delegate = function(m, p__15076, f, a, b, c, args) {
      var vec__15124 = p__15076;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15124, 0, null);
      var ks = cljs.core.nthnext(vec__15124, 1);
      if (ks) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
      }
    };
    var G__15125 = function(m, p__15076, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__15126__i = 0, G__15126__a = new Array(arguments.length - 6);
        while (G__15126__i < G__15126__a.length) {
          G__15126__a[G__15126__i] = arguments[G__15126__i + 6];
          ++G__15126__i;
        }
        args = new cljs.core.IndexedSeq(G__15126__a, 0);
      }
      return G__15125__delegate.call(this, m, p__15076, f, a, b, c, args);
    };
    G__15125.cljs$lang$maxFixedArity = 6;
    G__15125.cljs$lang$applyTo = function(arglist__15127) {
      var m = cljs.core.first(arglist__15127);
      arglist__15127 = cljs.core.next(arglist__15127);
      var p__15076 = cljs.core.first(arglist__15127);
      arglist__15127 = cljs.core.next(arglist__15127);
      var f = cljs.core.first(arglist__15127);
      arglist__15127 = cljs.core.next(arglist__15127);
      var a = cljs.core.first(arglist__15127);
      arglist__15127 = cljs.core.next(arglist__15127);
      var b = cljs.core.first(arglist__15127);
      arglist__15127 = cljs.core.next(arglist__15127);
      var c = cljs.core.first(arglist__15127);
      var args = cljs.core.rest(arglist__15127);
      return G__15125__delegate(m, p__15076, f, a, b, c, args);
    };
    G__15125.cljs$core$IFn$_invoke$arity$variadic = G__15125__delegate;
    return G__15125;
  }();
  update_in = function(m, p__15076, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__15076, f);
      case 4:
        return update_in__4.call(this, m, p__15076, f, a);
      case 5:
        return update_in__5.call(this, m, p__15076, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__15076, f, a, b, c);
      default:
        var G__15128 = null;
        if (arguments.length > 6) {
          var G__15129__i = 0, G__15129__a = new Array(arguments.length - 6);
          while (G__15129__i < G__15129__a.length) {
            G__15129__a[G__15129__i] = arguments[G__15129__i + 6];
            ++G__15129__i;
          }
          G__15128 = new cljs.core.IndexedSeq(G__15129__a, 0);
        }
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__15076, f, a, b, c, G__15128);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__15140 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15140) : f.call(null, G__15140);
    }());
  };
  var update__4 = function(m, k, f, x) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__15141 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__15142 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15141, G__15142) : f.call(null, G__15141, G__15142);
    }());
  };
  var update__5 = function(m, k, f, x, y) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__15143 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__15144 = x;
      var G__15145 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15143, G__15144, G__15145) : f.call(null, G__15143, G__15144, G__15145);
    }());
  };
  var update__6 = function(m, k, f, x, y, z) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__15146 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__15147 = x;
      var G__15148 = y;
      var G__15149 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15146, G__15147, G__15148, G__15149) : f.call(null, G__15146, G__15147, G__15148, G__15149);
    }());
  };
  var update__7 = function() {
    var G__15150__delegate = function(m, k, f, x, y, z, more) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
    };
    var G__15150 = function(m, k, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 6) {
        var G__15151__i = 0, G__15151__a = new Array(arguments.length - 6);
        while (G__15151__i < G__15151__a.length) {
          G__15151__a[G__15151__i] = arguments[G__15151__i + 6];
          ++G__15151__i;
        }
        more = new cljs.core.IndexedSeq(G__15151__a, 0);
      }
      return G__15150__delegate.call(this, m, k, f, x, y, z, more);
    };
    G__15150.cljs$lang$maxFixedArity = 6;
    G__15150.cljs$lang$applyTo = function(arglist__15152) {
      var m = cljs.core.first(arglist__15152);
      arglist__15152 = cljs.core.next(arglist__15152);
      var k = cljs.core.first(arglist__15152);
      arglist__15152 = cljs.core.next(arglist__15152);
      var f = cljs.core.first(arglist__15152);
      arglist__15152 = cljs.core.next(arglist__15152);
      var x = cljs.core.first(arglist__15152);
      arglist__15152 = cljs.core.next(arglist__15152);
      var y = cljs.core.first(arglist__15152);
      arglist__15152 = cljs.core.next(arglist__15152);
      var z = cljs.core.first(arglist__15152);
      var more = cljs.core.rest(arglist__15152);
      return G__15150__delegate(m, k, f, x, y, z, more);
    };
    G__15150.cljs$core$IFn$_invoke$arity$variadic = G__15150__delegate;
    return G__15150;
  }();
  update = function(m, k, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x);
      case 5:
        return update__5.call(this, m, k, f, x, y);
      case 6:
        return update__6.call(this, m, k, f, x, y, z);
      default:
        var G__15153 = null;
        if (arguments.length > 6) {
          var G__15154__i = 0, G__15154__a = new Array(arguments.length - 6);
          while (G__15154__i < G__15154__a.length) {
            G__15154__a[G__15154__i] = arguments[G__15154__i + 6];
            ++G__15154__i;
          }
          G__15153 = new cljs.core.IndexedSeq(G__15154__a, 0);
        }
        return update__7.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x, y, z, G__15153);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 6;
  update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$6 = update__6;
  update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__15155 = ll - 5;
      var G__15156 = r;
      ll = G__15155;
      ret = G__15156;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__15161 = cljs.core.pv_aget(node, 0);
      var G__15162 = level - 5;
      node = G__15161;
      level = G__15162;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__15163 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__15164 = level - 5;
        node = G__15163;
        level = G__15164;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function __GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__15174 = init__$2;
              var G__15175 = j + i;
              var G__15176 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15174, G__15175, G__15176) : f.call(null, G__15174, G__15175, G__15176);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__15187 = j + 1;
              var G__15188 = init__$3;
              j = G__15187;
              init__$2 = G__15188;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__15177 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15177) : cljs.core.deref.call(null, G__15177);
      } else {
        var G__15189 = i + len;
        var G__15190 = init__$2;
        i = G__15189;
        init__$1 = G__15190;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__15178 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__15178) : cljs.core.tv_editable_root.call(null, G__15178);
  }(), function() {
    var G__15179 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__15179) : cljs.core.tv_editable_tail.call(null, G__15179);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__15180 = init__$2;
              var G__15181 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15180, G__15181) : f.call(null, G__15180, G__15181);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__15191 = j + 1;
              var G__15192 = init__$3;
              j = G__15191;
              init__$2 = G__15192;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__15182 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15182) : cljs.core.deref.call(null, G__15182);
      } else {
        var G__15193 = i + len;
        var G__15194 = init__$2;
        i = G__15193;
        init__$1 = G__15194;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__15183 = coll__$1;
      var G__15184 = cljs.core.first_array_for_longvec(coll__$1);
      var G__15185 = 0;
      var G__15186 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15183, G__15184, G__15185, G__15186) : cljs.core.chunked_seq.call(null, G__15183, G__15184, G__15185, G__15186);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4655__auto___15195 = len;
    var i_15196 = 0;
    while (true) {
      if (i_15196 < n__4655__auto___15195) {
        new_tail[i_15196] = self__.tail[i_15196];
        var G__15197 = i_15196 + 1;
        i_15196 = G__15197;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__15198 = null;
  var G__15198__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__15198__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__15198 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15198__2.call(this, self__, k);
      case 3:
        return G__15198__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15198.cljs$core$IFn$_invoke$arity$2 = G__15198__2;
  G__15198.cljs$core$IFn$_invoke$arity$3 = G__15198__3;
  return G__15198;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args15173) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15173)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__15199 = i + 1;
        var G__15200 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__15199;
        out = G__15200;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.vec = function vec(coll) {
  if (coll instanceof Array) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec(args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      var G__15201__i = 0, G__15201__a = new Array(arguments.length - 0);
      while (G__15201__i < G__15201__a.length) {
        G__15201__a[G__15201__i] = arguments[G__15201__i + 0];
        ++G__15201__i;
      }
      args = new cljs.core.IndexedSeq(G__15201__a, 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__15202) {
    var args = cljs.core.seq(arglist__15202);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__15203 = self__.vec;
      var G__15204 = self__.node;
      var G__15205 = self__.i;
      var G__15206 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15203, G__15204, G__15205, G__15206) : cljs.core.chunked_seq.call(null, G__15203, G__15204, G__15205, G__15206);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__15207 = self__.vec;
    var G__15208 = self__.i + self__.off;
    var G__15209 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__15207, G__15208, G__15209) : cljs.core.subvec.call(null, G__15207, G__15208, G__15209);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__15210 = self__.vec;
    var G__15211 = self__.i + self__.off;
    var G__15212 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__15210, G__15211, G__15212) : cljs.core.subvec.call(null, G__15210, G__15211, G__15212);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__15213 = self__.vec;
      var G__15214 = self__.node;
      var G__15215 = self__.i;
      var G__15216 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15213, G__15214, G__15215, G__15216) : cljs.core.chunked_seq.call(null, G__15213, G__15214, G__15215, G__15216);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__15217 = self__.vec;
    var G__15218 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__15219 = end;
    var G__15220 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15217, G__15218, G__15219, G__15220) : cljs.core.chunked_seq.call(null, G__15217, G__15218, G__15219, G__15220);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__15221 = self__.vec;
  var G__15222 = self__.node;
  var G__15223 = self__.i;
  var G__15224 = self__.off;
  var G__15225 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__15221, G__15222, G__15223, G__15224, G__15225) : cljs.core.chunked_seq.call(null, G__15221, G__15222, G__15223, G__15224, G__15225);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__15226 = self__.vec;
    var G__15227 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__15228 = end;
    var G__15229 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15226, G__15227, G__15228, G__15229) : cljs.core.chunked_seq.call(null, G__15226, G__15227, G__15228, G__15229);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__15231 = self__.meta;
  var G__15232 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__15233 = self__.start;
  var G__15234 = function() {
    var x__4085__auto__ = self__.end;
    var y__4086__auto__ = v_pos + 1;
    return x__4085__auto__ > y__4086__auto__ ? x__4085__auto__ : y__4086__auto__;
  }();
  var G__15235 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15231, G__15232, G__15233, G__15234, G__15235) : cljs.core.build_subvec.call(null, G__15231, G__15232, G__15233, G__15234, G__15235);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__15236 = self__.meta;
    var G__15237 = self__.v;
    var G__15238 = self__.start;
    var G__15239 = self__.end - 1;
    var G__15240 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15236, G__15237, G__15238, G__15239, G__15240) : cljs.core.build_subvec.call(null, G__15236, G__15237, G__15238, G__15239, G__15240);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__15242 = meta__$1;
  var G__15243 = self__.v;
  var G__15244 = self__.start;
  var G__15245 = self__.end;
  var G__15246 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15242, G__15243, G__15244, G__15245, G__15246) : cljs.core.build_subvec.call(null, G__15242, G__15243, G__15244, G__15245, G__15246);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__15247 = self__.meta;
  var G__15248 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__15249 = self__.start;
  var G__15250 = self__.end + 1;
  var G__15251 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15247, G__15248, G__15249, G__15250, G__15251) : cljs.core.build_subvec.call(null, G__15247, G__15248, G__15249, G__15250, G__15251);
};
cljs.core.Subvec.prototype.call = function() {
  var G__15252 = null;
  var G__15252__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__15252__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__15252 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15252__2.call(this, self__, k);
      case 3:
        return G__15252__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15252.cljs$core$IFn$_invoke$arity$2 = G__15252__2;
  G__15252.cljs$core$IFn$_invoke$arity$3 = G__15252__3;
  return G__15252;
}();
cljs.core.Subvec.prototype.apply = function(self__, args15230) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15230)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__15253 = meta;
      var G__15254 = v.v;
      var G__15255 = v.start + start;
      var G__15256 = v.start + end;
      var G__15257 = __hash;
      meta = G__15253;
      v = G__15254;
      start = G__15255;
      end = G__15256;
      __hash = G__15257;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec(null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj15264 = {};
    return obj15264;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__15272 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__15273 = level - 5;
        node = G__15272;
        level = G__15273;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__15277 = null;
  var G__15277__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15277__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15277 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15277__2.call(this, self__, k);
      case 3:
        return G__15277__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15277.cljs$core$IFn$_invoke$arity$2 = G__15277__2;
  G__15277.cljs$core$IFn$_invoke$arity$3 = G__15277__3;
  return G__15277;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args15274) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15274)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next(self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next(self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__3768__auto__ = self__.front;
    if (cljs.core.truth_(or__3768__auto__)) {
      return or__3768__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__3768__auto__ = self__.rear;
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__15278 = i + incr;
        i = G__15278;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__15279 = i + 1;
      var G__15280 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__15279;
      out = G__15280;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj15284 = {};
    return obj15284;
  }();
  var l = ks.length;
  var i_15285 = 0;
  while (true) {
    if (i_15285 < l) {
      var k_15286 = ks[i_15285];
      new_obj[k_15286] = obj[k_15286];
      var G__15287 = i_15285 + 1;
      i_15285 = G__15287;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3756__auto__ = function() {
      var G__15291 = k;
      return goog.isString(G__15291);
    }();
    if (cljs.core.truth_(and__3756__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3756__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__15292 = init__$1;
        var G__15293 = k;
        var G__15294 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15292, G__15293, G__15294) : f.call(null, G__15292, G__15293, G__15294);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__15295 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15295) : cljs.core.deref.call(null, G__15295);
      } else {
        var G__15301 = cljs.core.rest(keys__$1);
        var G__15302 = init__$2;
        keys__$1 = G__15301;
        init__$1 = G__15302;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3756__auto__ = function() {
      var G__15297 = k;
      return goog.isString(G__15297);
    }();
    if (cljs.core.truth_(and__3756__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3756__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__15298 = k;
    return goog.isString(G__15298);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3756__auto__ = function() {
      var G__15300 = k;
      return goog.isString(G__15300);
    }();
    if (cljs.core.truth_(and__3756__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3756__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__15288_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__15288_SHARP_, self__.strobj[p1__15288_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__15303 = null;
  var G__15303__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15303__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15303 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15303__2.call(this, self__, k);
      case 3:
        return G__15303__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15303.cljs$core$IFn$_invoke$arity$2 = G__15303__2;
  G__15303.cljs$core$IFn$_invoke$arity$3 = G__15303__3;
  return G__15303;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args15289) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15289)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj15305 = {};
  return obj15305;
}(), 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__15306 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15306, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15306, 1, null);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function __GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function __GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__15307 = i + 2;
        i = G__15307;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__15308 = i + 2;
        i = G__15308;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__15309 = i + 2;
        i = G__15309;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__15310 = i + 2;
        i = G__15310;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__15311 = i + 2;
        i = G__15311;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_(arr, m, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__3768__auto__ = function() {
        var G__15315 = k;
        return goog.isString(G__15315);
      }();
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_map_index_of_identical_QMARK_(arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_(arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_(arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_(arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_15316 = 0;
  while (true) {
    if (i_15316 < l) {
      narr[i_15316] = arr[i_15316];
      var G__15317 = i_15316 + 1;
      i_15316 = G__15317;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function __GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15319 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15319) : cljs.core.keys.call(null, G__15319);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15320 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15320) : cljs.core.vals.call(null, G__15320);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15321 = cljs.core.seq(coll);
  var chunk__15322 = null;
  var count__15323 = 0;
  var i__15324 = 0;
  while (true) {
    if (i__15324 < count__15323) {
      var vec__15325 = chunk__15322.cljs$core$IIndexed$_nth$arity$2(null, i__15324);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15325, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15325, 1, null);
      var G__15326_15339 = v;
      var G__15327_15340 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15326_15339, G__15327_15340) : f.call(null, G__15326_15339, G__15327_15340);
      var G__15341 = seq__15321;
      var G__15342 = chunk__15322;
      var G__15343 = count__15323;
      var G__15344 = i__15324 + 1;
      seq__15321 = G__15341;
      chunk__15322 = G__15342;
      count__15323 = G__15343;
      i__15324 = G__15344;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15321);
      if (temp__4126__auto__) {
        var seq__15321__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15321__$1)) {
          var c__4555__auto__ = cljs.core.chunk_first(seq__15321__$1);
          var G__15345 = cljs.core.chunk_rest(seq__15321__$1);
          var G__15346 = c__4555__auto__;
          var G__15347 = cljs.core.count(c__4555__auto__);
          var G__15348 = 0;
          seq__15321 = G__15345;
          chunk__15322 = G__15346;
          count__15323 = G__15347;
          i__15324 = G__15348;
          continue;
        } else {
          var vec__15328 = cljs.core.first(seq__15321__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15328, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15328, 1, null);
          var G__15329_15349 = v;
          var G__15330_15350 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15329_15349, G__15330_15350) : f.call(null, G__15329_15349, G__15330_15350);
          var G__15351 = cljs.core.next(seq__15321__$1);
          var G__15352 = null;
          var G__15353 = 0;
          var G__15354 = 0;
          seq__15321 = G__15351;
          chunk__15322 = G__15352;
          count__15323 = G__15353;
          i__15324 = G__15354;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__15331 = init__$1;
        var G__15332 = self__.arr[i];
        var G__15333 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15331, G__15332, G__15333) : f.call(null, G__15331, G__15332, G__15333);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__15334 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15334) : cljs.core.deref.call(null, G__15334);
      } else {
        var G__15355 = i + 2;
        var G__15356 = init__$2;
        i = G__15355;
        init__$1 = G__15356;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__15335 = other;
    if (G__15335) {
      var bit__4442__auto__ = G__15335.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4442__auto__ || G__15335.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__15357 = i + 2;
              i = G__15357;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj15337 = {};
    return obj15337;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__15358 = s + 2;
            var G__15359 = d;
            s = G__15358;
            d = G__15359;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__15360 = s + 2;
            var G__15361 = d + 2;
            s = G__15360;
            d = G__15361;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__15338 = cljs.core.aclone(self__.arr);
        G__15338[idx + 1] = v;
        return G__15338;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__15362 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__15363 = cljs.core.next(es);
          ret = G__15362;
          es = G__15363;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__15364 = null;
  var G__15364__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15364__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15364 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15364__2.call(this, self__, k);
      case 3:
        return G__15364__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15364.cljs$core$IFn$_invoke$arity$2 = G__15364__2;
  G__15364.cljs$core$IFn$_invoke$arity$3 = G__15364__3;
  return G__15364;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args15318) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15318)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__15365 = i + 2;
        var G__15366 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
        i = G__15365;
        ret = G__15366;
        continue;
      } else {
        return cljs.core._persistent_BANG_(ret);
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__15367_15375 = self__.arr;
      G__15367_15375.pop();
      G__15367_15375.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__15368 = self__.len;
          var G__15369 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__15368, G__15369) : cljs.core.array__GT_transient_hash_map.call(null, G__15368, G__15369);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__15370 = o;
      if (G__15370) {
        var bit__4449__auto__ = G__15370.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4449__auto__ || G__15370.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__15370.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__15370);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__15370);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__15371 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15371) : cljs.core.key.call(null, G__15371);
      }(), function() {
        var G__15372 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15372) : cljs.core.val.call(null, G__15372);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__15376 = cljs.core.next(es);
          var G__15377 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__15373 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15373) : cljs.core.key.call(null, G__15373);
          }(), function() {
            var G__15374 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15374) : cljs.core.val.call(null, G__15374);
          }());
          es = G__15376;
          tcoll__$2 = G__15377;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__15378 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__15379 = i + 2;
      out = G__15378;
      i = G__15379;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__15382 = cljs.core.aclone(arr);
    G__15382[i] = a;
    return G__15382;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__15383 = cljs.core.aclone(arr);
    G__15383[i] = a;
    G__15383[j] = b;
    return G__15383;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__15388 = init__$1;
          var G__15389 = k;
          var G__15390 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15388, G__15389, G__15390) : f.call(null, G__15388, G__15389, G__15390);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__15391 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15391) : cljs.core.deref.call(null, G__15391);
      } else {
        var G__15392 = i + 2;
        var G__15393 = init__$2;
        i = G__15392;
        init__$1 = G__15393;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__15394 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__15394) : cljs.core.create_inode_seq.call(null, G__15394);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_15408 = 0;
        var j_15409 = 0;
        while (true) {
          if (i_15408 < 32) {
            if ((self__.bitmap >>> i_15408 & 1) === 0) {
              var G__15410 = i_15408 + 1;
              var G__15411 = j_15409;
              i_15408 = G__15410;
              j_15409 = G__15411;
              continue;
            } else {
              nodes[i_15408] = !(self__.arr[j_15409] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_15409]), self__.arr[j_15409], self__.arr[j_15409 + 1], added_leaf_QMARK_) : self__.arr[j_15409 + 1];
              var G__15412 = i_15408 + 1;
              var G__15413 = j_15409 + 2;
              i_15408 = G__15412;
              j_15409 = G__15413;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__15395 = edit__$1;
          var G__15396 = shift + 5;
          var G__15397 = key_or_nil;
          var G__15398 = val_or_node;
          var G__15399 = hash;
          var G__15400 = key;
          var G__15401 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__15395, G__15396, G__15397, G__15398, G__15399, G__15400, G__15401) : cljs.core.create_node.call(null, G__15395, G__15396, G__15397, G__15398, G__15399, G__15400, G__15401);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_15414 = 0;
      var j_15415 = 0;
      while (true) {
        if (i_15414 < 32) {
          if ((self__.bitmap >>> i_15414 & 1) === 0) {
            var G__15416 = i_15414 + 1;
            var G__15417 = j_15415;
            i_15414 = G__15416;
            j_15415 = G__15417;
            continue;
          } else {
            nodes[i_15414] = !(self__.arr[j_15415] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_15415]), self__.arr[j_15415], self__.arr[j_15415 + 1], added_leaf_QMARK_) : self__.arr[j_15415 + 1];
            var G__15418 = i_15414 + 1;
            var G__15419 = j_15415 + 2;
            i_15414 = G__15418;
            j_15415 = G__15419;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__15402 = shift + 5;
          var G__15403 = key_or_nil;
          var G__15404 = val_or_node;
          var G__15405 = hash;
          var G__15406 = key;
          var G__15407 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__15402, G__15403, G__15404, G__15405, G__15406, G__15407) : cljs.core.create_node.call(null, G__15402, G__15403, G__15404, G__15405, G__15406, G__15407);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__15420 = i + 1;
        var G__15421 = j + 2;
        var G__15422 = bitmap | 1 << i;
        i = G__15420;
        j = G__15421;
        bitmap = G__15422;
        continue;
      } else {
        var G__15423 = i + 1;
        var G__15424 = j;
        var G__15425 = bitmap;
        i = G__15423;
        j = G__15424;
        bitmap = G__15425;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__15426 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__15426) : cljs.core.create_array_node_seq.call(null, G__15426);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__15427 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15427) : cljs.core.deref.call(null, G__15427);
        } else {
          var G__15428 = i + 1;
          var G__15429 = init__$2;
          i = G__15428;
          init__$1 = G__15429;
          continue;
        }
      } else {
        var G__15430 = i + 1;
        var G__15431 = init__$1;
        i = G__15430;
        init__$1 = G__15431;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__15432 = i + 2;
        i = G__15432;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__15433 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__15433) : cljs.core.create_inode_seq.call(null, G__15433);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__15434 = self__.nodes;
    var G__15435 = self__.i + 2;
    var G__15436 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15434, G__15435, G__15436) : cljs.core.create_inode_seq.call(null, G__15434, G__15435, G__15436);
  } else {
    var G__15437 = self__.nodes;
    var G__15438 = self__.i;
    var G__15439 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15437, G__15438, G__15439) : cljs.core.create_inode_seq.call(null, G__15437, G__15438, G__15439);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__15443 = j + 2;
                j = G__15443;
                continue;
              }
            } else {
              var G__15444 = j + 2;
              j = G__15444;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__15445 = null;
  var G__15446 = self__.nodes;
  var G__15447 = self__.i;
  var G__15448 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__15445, G__15446, G__15447, G__15448) : cljs.core.create_array_node_seq.call(null, G__15445, G__15446, G__15447, G__15448);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__15453 = j + 1;
              j = G__15453;
              continue;
            }
          } else {
            var G__15454 = j + 1;
            j = G__15454;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15456 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15456) : cljs.core.keys.call(null, G__15456);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15457 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15457) : cljs.core.vals.call(null, G__15457);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15458 = cljs.core.seq(coll);
  var chunk__15459 = null;
  var count__15460 = 0;
  var i__15461 = 0;
  while (true) {
    if (i__15461 < count__15460) {
      var vec__15462 = chunk__15459.cljs$core$IIndexed$_nth$arity$2(null, i__15461);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15462, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15462, 1, null);
      var G__15463_15474 = v;
      var G__15464_15475 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15463_15474, G__15464_15475) : f.call(null, G__15463_15474, G__15464_15475);
      var G__15476 = seq__15458;
      var G__15477 = chunk__15459;
      var G__15478 = count__15460;
      var G__15479 = i__15461 + 1;
      seq__15458 = G__15476;
      chunk__15459 = G__15477;
      count__15460 = G__15478;
      i__15461 = G__15479;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15458);
      if (temp__4126__auto__) {
        var seq__15458__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15458__$1)) {
          var c__4555__auto__ = cljs.core.chunk_first(seq__15458__$1);
          var G__15480 = cljs.core.chunk_rest(seq__15458__$1);
          var G__15481 = c__4555__auto__;
          var G__15482 = cljs.core.count(c__4555__auto__);
          var G__15483 = 0;
          seq__15458 = G__15480;
          chunk__15459 = G__15481;
          count__15460 = G__15482;
          i__15461 = G__15483;
          continue;
        } else {
          var vec__15465 = cljs.core.first(seq__15458__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15465, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15465, 1, null);
          var G__15466_15484 = v;
          var G__15467_15485 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15466_15484, G__15467_15485) : f.call(null, G__15466_15484, G__15467_15485);
          var G__15486 = cljs.core.next(seq__15458__$1);
          var G__15487 = null;
          var G__15488 = 0;
          var G__15489 = 0;
          seq__15458 = G__15486;
          chunk__15459 = G__15487;
          count__15460 = G__15488;
          i__15461 = G__15489;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__15468 = init;
    var G__15469 = null;
    var G__15470 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15468, G__15469, G__15470) : f.call(null, G__15468, G__15469, G__15470);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__15471 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15471) : cljs.core.deref.call(null, G__15471);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj15473 = {};
    return obj15473;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__15490 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__15491 = cljs.core.next(es);
          ret = G__15490;
          es = G__15491;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__15492 = null;
  var G__15492__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15492__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15492 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15492__2.call(this, self__, k);
      case 3:
        return G__15492__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15492.cljs$core$IFn$_invoke$arity$2 = G__15492__2;
  G__15492.cljs$core$IFn$_invoke$arity$3 = G__15492__3;
  return G__15492;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args15455) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15455)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__15493 = i + 2;
      var G__15494 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__15493;
      ret = G__15494;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__15495 = i + 1;
      var G__15496 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__15495;
      out = G__15496;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__15497 = o;
      if (G__15497) {
        var bit__4449__auto__ = G__15497.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4449__auto__ || G__15497.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__15497.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__15497);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__15497);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__15498 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15498) : cljs.core.key.call(null, G__15498);
      }(), function() {
        var G__15499 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15499) : cljs.core.val.call(null, G__15499);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__15502 = cljs.core.next(es);
          var G__15503 = tcoll__$1.assoc_BANG_(function() {
            var G__15500 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15500) : cljs.core.key.call(null, G__15500);
          }(), function() {
            var G__15501 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15501) : cljs.core.val.call(null, G__15501);
          }());
          es = G__15502;
          tcoll__$1 = G__15503;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__15504 = ascending_QMARK_ ? t.left : t.right;
      var G__15505 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__15504;
      stack__$1 = G__15505;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__15518 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15518) : cljs.core.deref.call(null, G__15518);
  } else {
    var init__$2 = function() {
      var G__15519 = init__$1;
      var G__15520 = node.key;
      var G__15521 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15519, G__15520, G__15521) : f.call(null, G__15519, G__15520, G__15521);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__15522 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15522) : cljs.core.deref.call(null, G__15522);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__15523 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15523) : cljs.core.deref.call(null, G__15523);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__15525 = null;
  var G__15525__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15525__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15525 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15525__2.call(this, self__, k);
      case 3:
        return G__15525__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15525.cljs$core$IFn$_invoke$arity$2 = G__15525__2;
  G__15525.cljs$core$IFn$_invoke$arity$3 = G__15525__3;
  return G__15525;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args15524) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15524)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__15527 = null;
  var G__15527__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15527__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15527 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15527__2.call(this, self__, k);
      case 3:
        return G__15527__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15527.cljs$core$IFn$_invoke$arity$2 = G__15527__2;
  G__15527.cljs$core$IFn$_invoke$arity$3 = G__15527__3;
  return G__15527;
}();
cljs.core.RedNode.prototype.apply = function(self__, args15526) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15526)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__15540 = k;
      var G__15541 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15540, G__15541) : comp.call(null, G__15540, G__15541);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append(left, right.left), right.right, null);
        } else {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__15560 = k;
      var G__15561 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15560, G__15561) : comp.call(null, G__15560, G__15561);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__15572 = k;
    var G__15573 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15572, G__15573) : comp.call(null, G__15572, G__15573);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15575 = cljs.core.seq(coll);
  var chunk__15576 = null;
  var count__15577 = 0;
  var i__15578 = 0;
  while (true) {
    if (i__15578 < count__15577) {
      var vec__15579 = chunk__15576.cljs$core$IIndexed$_nth$arity$2(null, i__15578);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15579, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15579, 1, null);
      var G__15580_15592 = v;
      var G__15581_15593 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15580_15592, G__15581_15593) : f.call(null, G__15580_15592, G__15581_15593);
      var G__15594 = seq__15575;
      var G__15595 = chunk__15576;
      var G__15596 = count__15577;
      var G__15597 = i__15578 + 1;
      seq__15575 = G__15594;
      chunk__15576 = G__15595;
      count__15577 = G__15596;
      i__15578 = G__15597;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15575);
      if (temp__4126__auto__) {
        var seq__15575__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15575__$1)) {
          var c__4555__auto__ = cljs.core.chunk_first(seq__15575__$1);
          var G__15598 = cljs.core.chunk_rest(seq__15575__$1);
          var G__15599 = c__4555__auto__;
          var G__15600 = cljs.core.count(c__4555__auto__);
          var G__15601 = 0;
          seq__15575 = G__15598;
          chunk__15576 = G__15599;
          count__15577 = G__15600;
          i__15578 = G__15601;
          continue;
        } else {
          var vec__15582 = cljs.core.first(seq__15575__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15582, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15582, 1, null);
          var G__15583_15602 = v;
          var G__15584_15603 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15583_15602, G__15584_15603) : f.call(null, G__15583_15602, G__15584_15603);
          var G__15604 = cljs.core.next(seq__15575__$1);
          var G__15605 = null;
          var G__15606 = 0;
          var G__15607 = 0;
          seq__15575 = G__15604;
          chunk__15576 = G__15605;
          count__15577 = G__15606;
          i__15578 = G__15607;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15585 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15585) : cljs.core.keys.call(null, G__15585);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15586 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15586) : cljs.core.vals.call(null, G__15586);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__15587 = k;
        var G__15588 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15587, G__15588) : self__.comp.call(null, G__15587, G__15588);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__15608 = t.left;
          t = G__15608;
          continue;
        } else {
          var G__15609 = t.right;
          t = G__15609;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__15610 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__15611 = cljs.core.next(es);
          ret = G__15610;
          es = G__15611;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__15612 = null;
  var G__15612__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15612__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15612 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15612__2.call(this, self__, k);
      case 3:
        return G__15612__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15612.cljs$core$IFn$_invoke$arity$2 = G__15612__2;
  G__15612.cljs$core$IFn$_invoke$arity$3 = G__15612__3;
  return G__15612;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args15574) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15574)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__15589 = k;
          var G__15590 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15589, G__15590) : self__.comp.call(null, G__15589, G__15590);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__15613 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__15614 = t.left;
              stack = G__15613;
              t = G__15614;
              continue;
            } else {
              var G__15615 = stack;
              var G__15616 = t.right;
              stack = G__15615;
              t = G__15616;
              continue;
            }
          } else {
            if (c > 0) {
              var G__15617 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__15618 = t.right;
              stack = G__15617;
              t = G__15618;
              continue;
            } else {
              var G__15619 = stack;
              var G__15620 = t.left;
              stack = G__15619;
              t = G__15620;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__15591 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15591) : cljs.core.key.call(null, G__15591);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__15621 = cljs.core.nnext(in$);
        var G__15622 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__15621;
        out = G__15622;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__15623__i = 0, G__15623__a = new Array(arguments.length - 0);
      while (G__15623__i < G__15623__a.length) {
        G__15623__a[G__15623__i] = arguments[G__15623__i + 0];
        ++G__15623__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15623__a, 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__15624) {
    var keyvals = cljs.core.seq(arglist__15624);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array, keyvals), true, false);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__15625__i = 0, G__15625__a = new Array(arguments.length - 0);
      while (G__15625__i < G__15625__a.length) {
        G__15625__a[G__15625__i] = arguments[G__15625__i + 0];
        ++G__15625__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15625__a, 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__15626) {
    var keyvals = cljs.core.seq(arglist__15626);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj15630 = {};
      return obj15630;
    }();
    var kvs = cljs.core.seq(keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first(kvs));
        obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
        var G__15631 = cljs.core.nnext(kvs);
        kvs = G__15631;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__15632__i = 0, G__15632__a = new Array(arguments.length - 0);
      while (G__15632__i < G__15632__a.length) {
        G__15632__a[G__15632__i] = arguments[G__15632__i + 0];
        ++G__15632__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15632__a, 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__15633) {
    var keyvals = cljs.core.seq(arglist__15633);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__15634 = cljs.core.nnext(in$);
        var G__15635 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__15634;
        out = G__15635;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__15636__i = 0, G__15636__a = new Array(arguments.length - 0);
      while (G__15636__i < G__15636__a.length) {
        G__15636__a[G__15636__i] = arguments[G__15636__i + 0];
        ++G__15636__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15636__a, 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__15637) {
    var keyvals = cljs.core.seq(arglist__15637);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__15638 = cljs.core.nnext(in$);
        var G__15639 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__15638;
        out = G__15639;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      var G__15640__i = 0, G__15640__a = new Array(arguments.length - 1);
      while (G__15640__i < G__15640__a.length) {
        G__15640__a[G__15640__i] = arguments[G__15640__i + 1];
        ++G__15640__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15640__a, 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__15641) {
    var comparator = cljs.core.first(arglist__15641);
    var keyvals = cljs.core.rest(arglist__15641);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15642 = self__.mseq;
    if (G__15642) {
      var bit__4449__auto__ = G__15642.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4449__auto__ || G__15642.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15642.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15642);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15642);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15643 = self__.mseq;
    if (G__15643) {
      var bit__4449__auto__ = G__15643.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4449__auto__ || G__15643.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15643.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15643);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15643);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15644 = self__.mseq;
    if (G__15644) {
      var bit__4449__auto__ = G__15644.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4449__auto__ || G__15644.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15644.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15644);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15644);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15645 = self__.mseq;
    if (G__15645) {
      var bit__4449__auto__ = G__15645.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4449__auto__ || G__15645.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15645.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15645);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15645);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__15646_SHARP_, p2__15647_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
          var or__3768__auto__ = p1__15646_SHARP_;
          if (cljs.core.truth_(or__3768__auto__)) {
            return or__3768__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__15647_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      var G__15648__i = 0, G__15648__a = new Array(arguments.length - 0);
      while (G__15648__i < G__15648__a.length) {
        G__15648__a[G__15648__i] = arguments[G__15648__i + 0];
        ++G__15648__i;
      }
      maps = new cljs.core.IndexedSeq(G__15648__a, 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__15649) {
    var maps = cljs.core.seq(arglist__15649);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first(e);
        var v = cljs.core.second(e);
        if (cljs.core.contains_QMARK_(m, k)) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
            var G__15652 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
            var G__15653 = v;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15652, G__15653) : f.call(null, G__15652, G__15653);
          }());
        } else {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
            var or__3768__auto__ = m1;
            if (cljs.core.truth_(or__3768__auto__)) {
              return or__3768__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq(m2));
        };
      }(merge_entry);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      var G__15654__i = 0, G__15654__a = new Array(arguments.length - 1);
      while (G__15654__i < G__15654__a.length) {
        G__15654__a[G__15654__i] = arguments[G__15654__i + 1];
        ++G__15654__i;
      }
      maps = new cljs.core.IndexedSeq(G__15654__a, 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__15655) {
    var f = cljs.core.first(arglist__15655);
    var maps = cljs.core.rest(arglist__15655);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__15656 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__15657 = cljs.core.next(keys);
      ret = G__15656;
      keys = G__15657;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15660 = cljs.core.seq(coll);
  var chunk__15661 = null;
  var count__15662 = 0;
  var i__15663 = 0;
  while (true) {
    if (i__15663 < count__15662) {
      var vec__15664 = chunk__15661.cljs$core$IIndexed$_nth$arity$2(null, i__15663);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15664, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15664, 1, null);
      var G__15665_15670 = v;
      var G__15666_15671 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15665_15670, G__15666_15671) : f.call(null, G__15665_15670, G__15666_15671);
      var G__15672 = seq__15660;
      var G__15673 = chunk__15661;
      var G__15674 = count__15662;
      var G__15675 = i__15663 + 1;
      seq__15660 = G__15672;
      chunk__15661 = G__15673;
      count__15662 = G__15674;
      i__15663 = G__15675;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15660);
      if (temp__4126__auto__) {
        var seq__15660__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15660__$1)) {
          var c__4555__auto__ = cljs.core.chunk_first(seq__15660__$1);
          var G__15676 = cljs.core.chunk_rest(seq__15660__$1);
          var G__15677 = c__4555__auto__;
          var G__15678 = cljs.core.count(c__4555__auto__);
          var G__15679 = 0;
          seq__15660 = G__15676;
          chunk__15661 = G__15677;
          count__15662 = G__15678;
          i__15663 = G__15679;
          continue;
        } else {
          var vec__15667 = cljs.core.first(seq__15660__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15667, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15667, 1, null);
          var G__15668_15680 = v;
          var G__15669_15681 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15668_15680, G__15669_15681) : f.call(null, G__15668_15680, G__15669_15681);
          var G__15682 = cljs.core.next(seq__15660__$1);
          var G__15683 = null;
          var G__15684 = 0;
          var G__15685 = 0;
          seq__15660 = G__15682;
          chunk__15661 = G__15683;
          count__15662 = G__15684;
          i__15663 = G__15685;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__15658_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__15658_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__15686 = null;
  var G__15686__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15686__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15686 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15686__2.call(this, self__, k);
      case 3:
        return G__15686__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15686.cljs$core$IFn$_invoke$arity$2 = G__15686__2;
  G__15686.cljs$core$IFn$_invoke$arity$3 = G__15686__3;
  return G__15686;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args15659) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15659)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__15687 = i + 1;
        var G__15688 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__15687;
        out = G__15688;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__15689 = i + 1;
        var G__15690 = cljs.core._conj_BANG_(out, items[i]);
        i = G__15689;
        out = G__15690;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__15692 = null;
  var G__15692__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__15692__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__15692 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15692__2.call(this, self__, k);
      case 3:
        return G__15692__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15692.cljs$core$IFn$_invoke$arity$2 = G__15692__2;
  G__15692.cljs$core$IFn$_invoke$arity$3 = G__15692__3;
  return G__15692;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args15691) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15691)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15695 = cljs.core.seq(coll);
  var chunk__15696 = null;
  var count__15697 = 0;
  var i__15698 = 0;
  while (true) {
    if (i__15698 < count__15697) {
      var vec__15699 = chunk__15696.cljs$core$IIndexed$_nth$arity$2(null, i__15698);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15699, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15699, 1, null);
      var G__15700_15705 = v;
      var G__15701_15706 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15700_15705, G__15701_15706) : f.call(null, G__15700_15705, G__15701_15706);
      var G__15707 = seq__15695;
      var G__15708 = chunk__15696;
      var G__15709 = count__15697;
      var G__15710 = i__15698 + 1;
      seq__15695 = G__15707;
      chunk__15696 = G__15708;
      count__15697 = G__15709;
      i__15698 = G__15710;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15695);
      if (temp__4126__auto__) {
        var seq__15695__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15695__$1)) {
          var c__4555__auto__ = cljs.core.chunk_first(seq__15695__$1);
          var G__15711 = cljs.core.chunk_rest(seq__15695__$1);
          var G__15712 = c__4555__auto__;
          var G__15713 = cljs.core.count(c__4555__auto__);
          var G__15714 = 0;
          seq__15695 = G__15711;
          chunk__15696 = G__15712;
          count__15697 = G__15713;
          i__15698 = G__15714;
          continue;
        } else {
          var vec__15702 = cljs.core.first(seq__15695__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15702, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15702, 1, null);
          var G__15703_15715 = v;
          var G__15704_15716 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15703_15715, G__15704_15716) : f.call(null, G__15703_15715, G__15704_15716);
          var G__15717 = cljs.core.next(seq__15695__$1);
          var G__15718 = null;
          var G__15719 = 0;
          var G__15720 = 0;
          seq__15695 = G__15717;
          chunk__15696 = G__15718;
          count__15697 = G__15719;
          i__15698 = G__15720;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__15693_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__15693_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__15721 = null;
  var G__15721__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15721__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15721 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15721__2.call(this, self__, k);
      case 3:
        return G__15721__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15721.cljs$core$IFn$_invoke$arity$2 = G__15721__2;
  G__15721.cljs$core$IFn$_invoke$arity$3 = G__15721__3;
  return G__15721;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args15694) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15694)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4649__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4649__auto__.length) {
        var G__15722 = i + 1;
        var G__15723 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__15722;
        res = G__15723;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__15724 = in$__$1.cljs$core$INext$_next$arity$1(null);
          var G__15725 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__15724;
          out = G__15725;
          continue;
        } else {
          return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__15726__delegate = function(keys) {
      return cljs.core.set(keys);
    };
    var G__15726 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        var G__15727__i = 0, G__15727__a = new Array(arguments.length - 0);
        while (G__15727__i < G__15727__a.length) {
          G__15727__a[G__15727__i] = arguments[G__15727__i + 0];
          ++G__15727__i;
        }
        keys = new cljs.core.IndexedSeq(G__15727__a, 0);
      }
      return G__15726__delegate.call(this, keys);
    };
    G__15726.cljs$lang$maxFixedArity = 0;
    G__15726.cljs$lang$applyTo = function(arglist__15728) {
      var keys = cljs.core.seq(arglist__15728);
      return G__15726__delegate(keys);
    };
    G__15726.cljs$core$IFn$_invoke$arity$variadic = G__15726__delegate;
    return G__15726;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        var G__15729 = null;
        if (arguments.length > 0) {
          var G__15730__i = 0, G__15730__a = new Array(arguments.length - 0);
          while (G__15730__i < G__15730__a.length) {
            G__15730__a[G__15730__i] = arguments[G__15730__i + 0];
            ++G__15730__i;
          }
          G__15729 = new cljs.core.IndexedSeq(G__15730__a, 0);
        }
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__15729);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      var G__15731__i = 0, G__15731__a = new Array(arguments.length - 0);
      while (G__15731__i < G__15731__a.length) {
        G__15731__a[G__15731__i] = arguments[G__15731__i + 0];
        ++G__15731__i;
      }
      keys = new cljs.core.IndexedSeq(G__15731__a, 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__15732) {
    var keys = cljs.core.seq(arglist__15732);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      var G__15733__i = 0, G__15733__a = new Array(arguments.length - 1);
      while (G__15733__i < G__15733__a.length) {
        G__15733__a[G__15733__i] = arguments[G__15733__i + 1];
        ++G__15733__i;
      }
      keys = new cljs.core.IndexedSeq(G__15733__a, 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__15734) {
    var comparator = cljs.core.first(arglist__15734);
    var keys = cljs.core.rest(arglist__15734);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__15735_SHARP_) {
      var temp__4124__auto__ = cljs.core.find(smap, p1__15735_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val(e);
      } else {
        return p1__15735_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_(coll)) {
      var n = cljs.core.count(coll);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
    } else {
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__15736_SHARP_) {
        var temp__4124__auto__ = cljs.core.find(smap, p1__15736_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second(e);
        } else {
          return p1__15736_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function() {
  var distinct = null;
  var distinct__0 = function() {
    return function(rf) {
      var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
      return function(seen) {
        return function() {
          var G__15757 = null;
          var G__15757__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15757__1 = function(result) {
            var G__15747 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15747) : rf.call(null, G__15747);
          };
          var G__15757__2 = function(result, input) {
            if (cljs.core.contains_QMARK_(function() {
              var G__15748 = seen;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15748) : cljs.core.deref.call(null, G__15748);
            }(), input)) {
              return result;
            } else {
              seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null), input));
              var G__15749 = result;
              var G__15750 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15749, G__15750) : rf.call(null, G__15749, G__15750);
            }
          };
          G__15757 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15757__0.call(this);
              case 1:
                return G__15757__1.call(this, result);
              case 2:
                return G__15757__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15757.cljs$core$IFn$_invoke$arity$0 = G__15757__0;
          G__15757.cljs$core$IFn$_invoke$arity$1 = G__15757__1;
          G__15757.cljs$core$IFn$_invoke$arity$2 = G__15757__2;
          return G__15757;
        }();
      }(seen);
    };
  };
  var distinct__1 = function(coll) {
    var step = function step(xs, seen) {
      return new cljs.core.LazySeq(null, function() {
        return function(p__15755, seen__$1) {
          while (true) {
            var vec__15756 = p__15755;
            var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15756, 0, null);
            var xs__$1 = vec__15756;
            var temp__4126__auto__ = cljs.core.seq(xs__$1);
            if (temp__4126__auto__) {
              var s = temp__4126__auto__;
              if (cljs.core.contains_QMARK_(seen__$1, f)) {
                var G__15758 = cljs.core.rest(s);
                var G__15759 = seen__$1;
                p__15755 = G__15758;
                seen__$1 = G__15759;
                continue;
              } else {
                return cljs.core.cons(f, step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
              }
            } else {
              return null;
            }
            break;
          }
        }.call(null, xs, seen);
      }, null, null);
    };
    return step(coll, cljs.core.PersistentHashSet.EMPTY);
  };
  distinct = function(coll) {
    switch(arguments.length) {
      case 0:
        return distinct__0.call(this);
      case 1:
        return distinct__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
  distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
  return distinct;
}();
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__15760 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__15761 = cljs.core.next(s__$1);
      ret = G__15760;
      s__$1 = G__15761;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__15763 = x;
    if (G__15763) {
      var bit__4442__auto__ = G__15763.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4442__auto__ || G__15763.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__15764 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__15765 = cljs.core.next(ks);
      var G__15766 = cljs.core.next(vs);
      map = G__15764;
      ks = G__15765;
      vs = G__15766;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (function() {
      var G__15777 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15777) : k.call(null, G__15777);
    }() > function() {
      var G__15778 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15778) : k.call(null, G__15778);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__15779__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__15767_SHARP_, p2__15768_SHARP_) {
        return max_key.cljs$core$IFn$_invoke$arity$3(k, p1__15767_SHARP_, p2__15768_SHARP_);
      }, max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__15779 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__15780__i = 0, G__15780__a = new Array(arguments.length - 3);
        while (G__15780__i < G__15780__a.length) {
          G__15780__a[G__15780__i] = arguments[G__15780__i + 3];
          ++G__15780__i;
        }
        more = new cljs.core.IndexedSeq(G__15780__a, 0);
      }
      return G__15779__delegate.call(this, k, x, y, more);
    };
    G__15779.cljs$lang$maxFixedArity = 3;
    G__15779.cljs$lang$applyTo = function(arglist__15781) {
      var k = cljs.core.first(arglist__15781);
      arglist__15781 = cljs.core.next(arglist__15781);
      var x = cljs.core.first(arglist__15781);
      arglist__15781 = cljs.core.next(arglist__15781);
      var y = cljs.core.first(arglist__15781);
      var more = cljs.core.rest(arglist__15781);
      return G__15779__delegate(k, x, y, more);
    };
    G__15779.cljs$core$IFn$_invoke$arity$variadic = G__15779__delegate;
    return G__15779;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        var G__15782 = null;
        if (arguments.length > 3) {
          var G__15783__i = 0, G__15783__a = new Array(arguments.length - 3);
          while (G__15783__i < G__15783__a.length) {
            G__15783__a[G__15783__i] = arguments[G__15783__i + 3];
            ++G__15783__i;
          }
          G__15782 = new cljs.core.IndexedSeq(G__15783__a, 0);
        }
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__15782);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (function() {
      var G__15794 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15794) : k.call(null, G__15794);
    }() < function() {
      var G__15795 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15795) : k.call(null, G__15795);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__15796__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__15784_SHARP_, p2__15785_SHARP_) {
        return min_key.cljs$core$IFn$_invoke$arity$3(k, p1__15784_SHARP_, p2__15785_SHARP_);
      }, min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__15796 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__15797__i = 0, G__15797__a = new Array(arguments.length - 3);
        while (G__15797__i < G__15797__a.length) {
          G__15797__a[G__15797__i] = arguments[G__15797__i + 3];
          ++G__15797__i;
        }
        more = new cljs.core.IndexedSeq(G__15797__a, 0);
      }
      return G__15796__delegate.call(this, k, x, y, more);
    };
    G__15796.cljs$lang$maxFixedArity = 3;
    G__15796.cljs$lang$applyTo = function(arglist__15798) {
      var k = cljs.core.first(arglist__15798);
      arglist__15798 = cljs.core.next(arglist__15798);
      var x = cljs.core.first(arglist__15798);
      arglist__15798 = cljs.core.next(arglist__15798);
      var y = cljs.core.first(arglist__15798);
      var more = cljs.core.rest(arglist__15798);
      return G__15796__delegate(k, x, y, more);
    };
    G__15796.cljs$core$IFn$_invoke$arity$variadic = G__15796__delegate;
    return G__15796;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        var G__15799 = null;
        if (arguments.length > 3) {
          var G__15800__i = 0, G__15800__a = new Array(arguments.length - 3);
          while (G__15800__i < G__15800__a.length) {
            G__15800__a[G__15800__i] = arguments[G__15800__i + 3];
            ++G__15800__i;
          }
          G__15799 = new cljs.core.IndexedSeq(G__15800__a, 0);
        }
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__15799);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(rf) {
      var a = cljs.core.array_list();
      return function(a) {
        return function() {
          var G__15817 = null;
          var G__15817__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15817__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__15812 = result;
                var G__15813 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15812, G__15813) : rf.call(null, G__15812, G__15813);
              }());
            }();
            var G__15814 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15814) : rf.call(null, G__15814);
          };
          var G__15817__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var G__15815 = result;
              var G__15816 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15815, G__15816) : rf.call(null, G__15815, G__15816);
            } else {
              return result;
            }
          };
          G__15817 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15817__0.call(this);
              case 1:
                return G__15817__1.call(this, result);
              case 2:
                return G__15817__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15817.cljs$core$IFn$_invoke$arity$0 = G__15817__0;
          G__15817.cljs$core$IFn$_invoke$arity$1 = G__15817__1;
          G__15817.cljs$core$IFn$_invoke$arity$2 = G__15817__2;
          return G__15817;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__15830 = null;
        var G__15830__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__15830__1 = function(result) {
          var G__15825 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15825) : rf.call(null, G__15825);
        };
        var G__15830__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__15826 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15826) : pred.call(null, G__15826);
          }())) {
            var G__15827 = result;
            var G__15828 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15827, G__15828) : rf.call(null, G__15827, G__15828);
          } else {
            return cljs.core.reduced(result);
          }
        };
        G__15830 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15830__0.call(this);
            case 1:
              return G__15830__1.call(this, result);
            case 2:
              return G__15830__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15830.cljs$core$IFn$_invoke$arity$0 = G__15830__0;
        G__15830.cljs$core$IFn$_invoke$arity$1 = G__15830__1;
        G__15830.cljs$core$IFn$_invoke$arity$2 = G__15830__2;
        return G__15830;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(function() {
          var G__15829 = cljs.core.first(s);
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15829) : pred.call(null, G__15829);
        }())) {
          return cljs.core.cons(cljs.core.first(s), take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__15835 = function() {
      var G__15837 = cljs.core._entry_key(sc, e);
      var G__15838 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15837, G__15838) : comp.call(null, G__15837, G__15838);
    }();
    var G__15836 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__15835, G__15836) : test.call(null, G__15835, G__15836);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__15842 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15842, 0, null);
        var s = vec__15842;
        if (cljs.core.truth_(function() {
          var G__15843 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__15843) : include.call(null, G__15843);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__15844 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15844, 0, null);
      var s = vec__15844;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__15848 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15848, 0, null);
        var s = vec__15848;
        if (cljs.core.truth_(function() {
          var G__15849 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__15849) : include.call(null, G__15849);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__15850 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15850, 0, null);
      var s = vec__15850;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function __GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__15851 = (self__.end - self__.start) / self__.step;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__15851) : Math.ceil.call(null, G__15851);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__15852 = ret;
        var G__15853 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15852, G__15853) : f.call(null, G__15852, G__15853);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__15854 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15854) : cljs.core.deref.call(null, G__15854);
      } else {
        var G__15855 = i + self__.step;
        var G__15856 = ret__$1;
        i = G__15855;
        ret = G__15856;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__15874 = null;
          var G__15874__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15874__1 = function(result) {
            var G__15871 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15871) : rf.call(null, G__15871);
          };
          var G__15874__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            if (cljs.core.rem(i, n) === 0) {
              var G__15872 = result;
              var G__15873 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15872, G__15873) : rf.call(null, G__15872, G__15873);
            } else {
              return result;
            }
          };
          G__15874 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15874__0.call(this);
              case 1:
                return G__15874__1.call(this, result);
              case 2:
                return G__15874__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15874.cljs$core$IFn$_invoke$arity$0 = G__15874__0;
          G__15874.cljs$core$IFn$_invoke$arity$1 = G__15874__1;
          G__15874.cljs$core$IFn$_invoke$arity$2 = G__15874__2;
          return G__15874;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.first(s), take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(rf) {
      var a = cljs.core.array_list();
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__15896 = null;
          var G__15896__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15896__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__15887 = result;
                var G__15888 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15887, G__15888) : rf.call(null, G__15887, G__15888);
              }());
            }();
            var G__15889 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15889) : rf.call(null, G__15889);
          };
          var G__15896__2 = function(result, input) {
            var pval = function() {
              var G__15890 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15890) : cljs.core.deref.call(null, G__15890);
            }();
            var val = function() {
              var G__15891 = input;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15891) : f.call(null, G__15891);
            }();
            cljs.core.vreset_BANG_(pa, val);
            if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var ret = function() {
                var G__15892 = result;
                var G__15893 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15892, G__15893) : rf.call(null, G__15892, G__15893);
              }();
              if (cljs.core.reduced_QMARK_(ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__15896 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15896__0.call(this);
              case 1:
                return G__15896__1.call(this, result);
              case 2:
                return G__15896__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15896.cljs$core$IFn$_invoke$arity$0 = G__15896__0;
          G__15896.cljs$core$IFn$_invoke$arity$1 = G__15896__1;
          G__15896.cljs$core$IFn$_invoke$arity$2 = G__15896__2;
          return G__15896;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first(s);
        var fv = function() {
          var G__15894 = fst;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15894) : f.call(null, G__15894);
        }();
        var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4126__auto__) {
          return function(p1__15875_SHARP_) {
            return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
              var G__15895 = p1__15875_SHARP_;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15895) : f.call(null, G__15895);
            }());
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next(s)));
        return cljs.core.cons(run, partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }());
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__15905 = init;
          var G__15906 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15905, G__15906) : f.call(null, G__15905, G__15906);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__16001 = null;
      var G__16001__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }()], null);
      };
      var G__16001__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15959 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15959) : f.call(null, G__15959);
        }()], null);
      };
      var G__16001__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15960 = x;
          var G__15961 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15960, G__15961) : f.call(null, G__15960, G__15961);
        }()], null);
      };
      var G__16001__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15962 = x;
          var G__15963 = y;
          var G__15964 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15962, G__15963, G__15964) : f.call(null, G__15962, G__15963, G__15964);
        }()], null);
      };
      var G__16001__4 = function() {
        var G__16002__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
        };
        var G__16002 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__16003__i = 0, G__16003__a = new Array(arguments.length - 3);
            while (G__16003__i < G__16003__a.length) {
              G__16003__a[G__16003__i] = arguments[G__16003__i + 3];
              ++G__16003__i;
            }
            args = new cljs.core.IndexedSeq(G__16003__a, 0);
          }
          return G__16002__delegate.call(this, x, y, z, args);
        };
        G__16002.cljs$lang$maxFixedArity = 3;
        G__16002.cljs$lang$applyTo = function(arglist__16004) {
          var x = cljs.core.first(arglist__16004);
          arglist__16004 = cljs.core.next(arglist__16004);
          var y = cljs.core.first(arglist__16004);
          arglist__16004 = cljs.core.next(arglist__16004);
          var z = cljs.core.first(arglist__16004);
          var args = cljs.core.rest(arglist__16004);
          return G__16002__delegate(x, y, z, args);
        };
        G__16002.cljs$core$IFn$_invoke$arity$variadic = G__16002__delegate;
        return G__16002;
      }();
      G__16001 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__16001__0.call(this);
          case 1:
            return G__16001__1.call(this, x);
          case 2:
            return G__16001__2.call(this, x, y);
          case 3:
            return G__16001__3.call(this, x, y, z);
          default:
            var G__16005 = null;
            if (arguments.length > 3) {
              var G__16006__i = 0, G__16006__a = new Array(arguments.length - 3);
              while (G__16006__i < G__16006__a.length) {
                G__16006__a[G__16006__i] = arguments[G__16006__i + 3];
                ++G__16006__i;
              }
              G__16005 = new cljs.core.IndexedSeq(G__16006__a, 0);
            }
            return G__16001__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16005);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16001.cljs$lang$maxFixedArity = 3;
      G__16001.cljs$lang$applyTo = G__16001__4.cljs$lang$applyTo;
      G__16001.cljs$core$IFn$_invoke$arity$0 = G__16001__0;
      G__16001.cljs$core$IFn$_invoke$arity$1 = G__16001__1;
      G__16001.cljs$core$IFn$_invoke$arity$2 = G__16001__2;
      G__16001.cljs$core$IFn$_invoke$arity$3 = G__16001__3;
      G__16001.cljs$core$IFn$_invoke$arity$variadic = G__16001__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__16001;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__16007 = null;
      var G__16007__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }()], null);
      };
      var G__16007__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15965 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15965) : f.call(null, G__15965);
        }(), function() {
          var G__15966 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15966) : g.call(null, G__15966);
        }()], null);
      };
      var G__16007__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15967 = x;
          var G__15968 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15967, G__15968) : f.call(null, G__15967, G__15968);
        }(), function() {
          var G__15969 = x;
          var G__15970 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15969, G__15970) : g.call(null, G__15969, G__15970);
        }()], null);
      };
      var G__16007__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15971 = x;
          var G__15972 = y;
          var G__15973 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15971, G__15972, G__15973) : f.call(null, G__15971, G__15972, G__15973);
        }(), function() {
          var G__15974 = x;
          var G__15975 = y;
          var G__15976 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15974, G__15975, G__15976) : g.call(null, G__15974, G__15975, G__15976);
        }()], null);
      };
      var G__16007__4 = function() {
        var G__16008__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
        };
        var G__16008 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__16009__i = 0, G__16009__a = new Array(arguments.length - 3);
            while (G__16009__i < G__16009__a.length) {
              G__16009__a[G__16009__i] = arguments[G__16009__i + 3];
              ++G__16009__i;
            }
            args = new cljs.core.IndexedSeq(G__16009__a, 0);
          }
          return G__16008__delegate.call(this, x, y, z, args);
        };
        G__16008.cljs$lang$maxFixedArity = 3;
        G__16008.cljs$lang$applyTo = function(arglist__16010) {
          var x = cljs.core.first(arglist__16010);
          arglist__16010 = cljs.core.next(arglist__16010);
          var y = cljs.core.first(arglist__16010);
          arglist__16010 = cljs.core.next(arglist__16010);
          var z = cljs.core.first(arglist__16010);
          var args = cljs.core.rest(arglist__16010);
          return G__16008__delegate(x, y, z, args);
        };
        G__16008.cljs$core$IFn$_invoke$arity$variadic = G__16008__delegate;
        return G__16008;
      }();
      G__16007 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__16007__0.call(this);
          case 1:
            return G__16007__1.call(this, x);
          case 2:
            return G__16007__2.call(this, x, y);
          case 3:
            return G__16007__3.call(this, x, y, z);
          default:
            var G__16011 = null;
            if (arguments.length > 3) {
              var G__16012__i = 0, G__16012__a = new Array(arguments.length - 3);
              while (G__16012__i < G__16012__a.length) {
                G__16012__a[G__16012__i] = arguments[G__16012__i + 3];
                ++G__16012__i;
              }
              G__16011 = new cljs.core.IndexedSeq(G__16012__a, 0);
            }
            return G__16007__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16011);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16007.cljs$lang$maxFixedArity = 3;
      G__16007.cljs$lang$applyTo = G__16007__4.cljs$lang$applyTo;
      G__16007.cljs$core$IFn$_invoke$arity$0 = G__16007__0;
      G__16007.cljs$core$IFn$_invoke$arity$1 = G__16007__1;
      G__16007.cljs$core$IFn$_invoke$arity$2 = G__16007__2;
      G__16007.cljs$core$IFn$_invoke$arity$3 = G__16007__3;
      G__16007.cljs$core$IFn$_invoke$arity$variadic = G__16007__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__16007;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__16013 = null;
      var G__16013__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }(), function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }()], null);
      };
      var G__16013__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15977 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15977) : f.call(null, G__15977);
        }(), function() {
          var G__15978 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15978) : g.call(null, G__15978);
        }(), function() {
          var G__15979 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__15979) : h.call(null, G__15979);
        }()], null);
      };
      var G__16013__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15980 = x;
          var G__15981 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15980, G__15981) : f.call(null, G__15980, G__15981);
        }(), function() {
          var G__15982 = x;
          var G__15983 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15982, G__15983) : g.call(null, G__15982, G__15983);
        }(), function() {
          var G__15984 = x;
          var G__15985 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__15984, G__15985) : h.call(null, G__15984, G__15985);
        }()], null);
      };
      var G__16013__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15986 = x;
          var G__15987 = y;
          var G__15988 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15986, G__15987, G__15988) : f.call(null, G__15986, G__15987, G__15988);
        }(), function() {
          var G__15989 = x;
          var G__15990 = y;
          var G__15991 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15989, G__15990, G__15991) : g.call(null, G__15989, G__15990, G__15991);
        }(), function() {
          var G__15992 = x;
          var G__15993 = y;
          var G__15994 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__15992, G__15993, G__15994) : h.call(null, G__15992, G__15993, G__15994);
        }()], null);
      };
      var G__16013__4 = function() {
        var G__16014__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
        };
        var G__16014 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__16015__i = 0, G__16015__a = new Array(arguments.length - 3);
            while (G__16015__i < G__16015__a.length) {
              G__16015__a[G__16015__i] = arguments[G__16015__i + 3];
              ++G__16015__i;
            }
            args = new cljs.core.IndexedSeq(G__16015__a, 0);
          }
          return G__16014__delegate.call(this, x, y, z, args);
        };
        G__16014.cljs$lang$maxFixedArity = 3;
        G__16014.cljs$lang$applyTo = function(arglist__16016) {
          var x = cljs.core.first(arglist__16016);
          arglist__16016 = cljs.core.next(arglist__16016);
          var y = cljs.core.first(arglist__16016);
          arglist__16016 = cljs.core.next(arglist__16016);
          var z = cljs.core.first(arglist__16016);
          var args = cljs.core.rest(arglist__16016);
          return G__16014__delegate(x, y, z, args);
        };
        G__16014.cljs$core$IFn$_invoke$arity$variadic = G__16014__delegate;
        return G__16014;
      }();
      G__16013 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__16013__0.call(this);
          case 1:
            return G__16013__1.call(this, x);
          case 2:
            return G__16013__2.call(this, x, y);
          case 3:
            return G__16013__3.call(this, x, y, z);
          default:
            var G__16017 = null;
            if (arguments.length > 3) {
              var G__16018__i = 0, G__16018__a = new Array(arguments.length - 3);
              while (G__16018__i < G__16018__a.length) {
                G__16018__a[G__16018__i] = arguments[G__16018__i + 3];
                ++G__16018__i;
              }
              G__16017 = new cljs.core.IndexedSeq(G__16018__a, 0);
            }
            return G__16013__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16017);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16013.cljs$lang$maxFixedArity = 3;
      G__16013.cljs$lang$applyTo = G__16013__4.cljs$lang$applyTo;
      G__16013.cljs$core$IFn$_invoke$arity$0 = G__16013__0;
      G__16013.cljs$core$IFn$_invoke$arity$1 = G__16013__1;
      G__16013.cljs$core$IFn$_invoke$arity$2 = G__16013__2;
      G__16013.cljs$core$IFn$_invoke$arity$3 = G__16013__3;
      G__16013.cljs$core$IFn$_invoke$arity$variadic = G__16013__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__16013;
    }();
  };
  var juxt__4 = function() {
    var G__16019__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__16020 = null;
          var G__16020__0 = function() {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__15907_SHARP_, p2__15908_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15907_SHARP_, function() {
                  return p2__15908_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__15908_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__15908_SHARP_.call(null);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__16020__1 = function(x) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__15909_SHARP_, p2__15910_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15909_SHARP_, function() {
                  var G__15995 = x;
                  return p2__15910_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__15910_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15995) : p2__15910_SHARP_.call(null, G__15995);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__16020__2 = function(x, y) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__15911_SHARP_, p2__15912_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15911_SHARP_, function() {
                  var G__15996 = x;
                  var G__15997 = y;
                  return p2__15912_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__15912_SHARP_.cljs$core$IFn$_invoke$arity$2(G__15996, G__15997) : p2__15912_SHARP_.call(null, G__15996, G__15997);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__16020__3 = function(x, y, z) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__15913_SHARP_, p2__15914_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15913_SHARP_, function() {
                  var G__15998 = x;
                  var G__15999 = y;
                  var G__16000 = z;
                  return p2__15914_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__15914_SHARP_.cljs$core$IFn$_invoke$arity$3(G__15998, G__15999, G__16000) : p2__15914_SHARP_.call(null, G__15998, G__15999, G__16000);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__16020__4 = function() {
            var G__16021__delegate = function(x, y, z, args) {
              return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
                return function(p1__15915_SHARP_, p2__15916_SHARP_) {
                  return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15915_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__15916_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__16021 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__16022__i = 0, G__16022__a = new Array(arguments.length - 3);
                while (G__16022__i < G__16022__a.length) {
                  G__16022__a[G__16022__i] = arguments[G__16022__i + 3];
                  ++G__16022__i;
                }
                args = new cljs.core.IndexedSeq(G__16022__a, 0);
              }
              return G__16021__delegate.call(this, x, y, z, args);
            };
            G__16021.cljs$lang$maxFixedArity = 3;
            G__16021.cljs$lang$applyTo = function(arglist__16023) {
              var x = cljs.core.first(arglist__16023);
              arglist__16023 = cljs.core.next(arglist__16023);
              var y = cljs.core.first(arglist__16023);
              arglist__16023 = cljs.core.next(arglist__16023);
              var z = cljs.core.first(arglist__16023);
              var args = cljs.core.rest(arglist__16023);
              return G__16021__delegate(x, y, z, args);
            };
            G__16021.cljs$core$IFn$_invoke$arity$variadic = G__16021__delegate;
            return G__16021;
          }();
          G__16020 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__16020__0.call(this);
              case 1:
                return G__16020__1.call(this, x);
              case 2:
                return G__16020__2.call(this, x, y);
              case 3:
                return G__16020__3.call(this, x, y, z);
              default:
                var G__16024 = null;
                if (arguments.length > 3) {
                  var G__16025__i = 0, G__16025__a = new Array(arguments.length - 3);
                  while (G__16025__i < G__16025__a.length) {
                    G__16025__a[G__16025__i] = arguments[G__16025__i + 3];
                    ++G__16025__i;
                  }
                  G__16024 = new cljs.core.IndexedSeq(G__16025__a, 0);
                }
                return G__16020__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16024);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__16020.cljs$lang$maxFixedArity = 3;
          G__16020.cljs$lang$applyTo = G__16020__4.cljs$lang$applyTo;
          G__16020.cljs$core$IFn$_invoke$arity$0 = G__16020__0;
          G__16020.cljs$core$IFn$_invoke$arity$1 = G__16020__1;
          G__16020.cljs$core$IFn$_invoke$arity$2 = G__16020__2;
          G__16020.cljs$core$IFn$_invoke$arity$3 = G__16020__3;
          G__16020.cljs$core$IFn$_invoke$arity$variadic = G__16020__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__16020;
        }();
      }(fs__$1);
    };
    var G__16019 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__16026__i = 0, G__16026__a = new Array(arguments.length - 3);
        while (G__16026__i < G__16026__a.length) {
          G__16026__a[G__16026__i] = arguments[G__16026__i + 3];
          ++G__16026__i;
        }
        fs = new cljs.core.IndexedSeq(G__16026__a, 0);
      }
      return G__16019__delegate.call(this, f, g, h, fs);
    };
    G__16019.cljs$lang$maxFixedArity = 3;
    G__16019.cljs$lang$applyTo = function(arglist__16027) {
      var f = cljs.core.first(arglist__16027);
      arglist__16027 = cljs.core.next(arglist__16027);
      var g = cljs.core.first(arglist__16027);
      arglist__16027 = cljs.core.next(arglist__16027);
      var h = cljs.core.first(arglist__16027);
      var fs = cljs.core.rest(arglist__16027);
      return G__16019__delegate(f, g, h, fs);
    };
    G__16019.cljs$core$IFn$_invoke$arity$variadic = G__16019__delegate;
    return G__16019;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        var G__16028 = null;
        if (arguments.length > 3) {
          var G__16029__i = 0, G__16029__a = new Array(arguments.length - 3);
          while (G__16029__i < G__16029__a.length) {
            G__16029__a[G__16029__i] = arguments[G__16029__i + 3];
            ++G__16029__i;
          }
          G__16028 = new cljs.core.IndexedSeq(G__16029__a, 0);
        }
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, G__16028);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq(coll)) {
        var G__16030 = cljs.core.next(coll);
        coll = G__16030;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq(coll) && n > 0) {
        var G__16031 = n - 1;
        var G__16032 = cljs.core.next(coll);
        n = G__16031;
        coll = G__16032;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__16036 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/, s);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16036, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16036, 1, null);
    var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16036, 2, null);
    return new RegExp(pattern, flags);
  }
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_16044 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if (cljs.core.seq(coll)) {
        var G__16045_16051 = cljs.core.first(coll);
        var G__16046_16052 = writer;
        var G__16047_16053 = opts;
        print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16045_16051, G__16046_16052, G__16047_16053) : print_one.call(null, G__16045_16051, G__16046_16052, G__16047_16053);
      } else {
      }
      var coll_16054__$1 = cljs.core.next(coll);
      var n_16055 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_16054__$1 && (n_16055 == null || !(n_16055 === 0))) {
          cljs.core._write(writer, sep);
          var G__16048_16056 = cljs.core.first(coll_16054__$1);
          var G__16049_16057 = writer;
          var G__16050_16058 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16048_16056, G__16049_16057, G__16050_16058) : print_one.call(null, G__16048_16056, G__16049_16057, G__16050_16058);
          var G__16059 = cljs.core.next(coll_16054__$1);
          var G__16060 = n_16055 - 1;
          coll_16054__$1 = G__16059;
          n_16055 = G__16060;
          continue;
        } else {
          if (cljs.core.seq(coll_16054__$1) && n_16055 === 0) {
            cljs.core._write(writer, sep);
            cljs.core._write(writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_16044;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__16065 = cljs.core.seq(ss);
    var chunk__16066 = null;
    var count__16067 = 0;
    var i__16068 = 0;
    while (true) {
      if (i__16068 < count__16067) {
        var s = chunk__16066.cljs$core$IIndexed$_nth$arity$2(null, i__16068);
        cljs.core._write(writer, s);
        var G__16069 = seq__16065;
        var G__16070 = chunk__16066;
        var G__16071 = count__16067;
        var G__16072 = i__16068 + 1;
        seq__16065 = G__16069;
        chunk__16066 = G__16070;
        count__16067 = G__16071;
        i__16068 = G__16072;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq(seq__16065);
        if (temp__4126__auto__) {
          var seq__16065__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__16065__$1)) {
            var c__4555__auto__ = cljs.core.chunk_first(seq__16065__$1);
            var G__16073 = cljs.core.chunk_rest(seq__16065__$1);
            var G__16074 = c__4555__auto__;
            var G__16075 = cljs.core.count(c__4555__auto__);
            var G__16076 = 0;
            seq__16065 = G__16073;
            chunk__16066 = G__16074;
            count__16067 = G__16075;
            i__16068 = G__16076;
            continue;
          } else {
            var s = cljs.core.first(seq__16065__$1);
            cljs.core._write(writer, s);
            var G__16077 = cljs.core.next(seq__16065__$1);
            var G__16078 = null;
            var G__16079 = 0;
            var G__16080 = 0;
            seq__16065 = G__16077;
            chunk__16066 = G__16078;
            count__16067 = G__16079;
            i__16068 = G__16080;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      var G__16081__i = 0, G__16081__a = new Array(arguments.length - 1);
      while (G__16081__i < G__16081__a.length) {
        G__16081__a[G__16081__i] = arguments[G__16081__i + 1];
        ++G__16081__i;
      }
      ss = new cljs.core.IndexedSeq(G__16081__a, 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__16082) {
    var writer = cljs.core.first(arglist__16082);
    var ss = cljs.core.rest(arglist__16082);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj16084 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj16084;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__16087 = '[\\\\"\b\f\n\r\t]';
    var G__16088 = "g";
    return RegExp(G__16087, G__16088);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3756__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3756__auto__)) {
          var and__3756__auto____$1 = function() {
            var G__16102 = obj;
            if (G__16102) {
              var bit__4449__auto__ = G__16102.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4449__auto__ || G__16102.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__16102.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__16102);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__16102);
            }
          }();
          if (and__3756__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__3756__auto____$1;
          }
        } else {
          return and__3756__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        pr_writer(cljs.core.meta(obj), writer, opts);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__16103 = obj;
            if (G__16103) {
              var bit__4442__auto__ = G__16103.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4442__auto__ || G__16103.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__16104 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__16105 = pr_writer;
                var G__16106 = writer;
                var G__16107 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__16104, G__16105, G__16106, G__16107) : cljs.core.print_map.call(null, G__16104, G__16105, G__16106, G__16107);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer(writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__16108 = obj;
                    return goog.isString(G__16108);
                  }())) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__16110 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__16110;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.regexp_QMARK_(obj)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__16109 = obj;
                            if (G__16109) {
                              var bit__4449__auto__ = G__16109.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4449__auto__ || G__16109.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__16109.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__16109);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__16109);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__16115 = cljs.core.seq(cljs.core.next(objs));
  var chunk__16116 = null;
  var count__16117 = 0;
  var i__16118 = 0;
  while (true) {
    if (i__16118 < count__16117) {
      var obj = chunk__16116.cljs$core$IIndexed$_nth$arity$2(null, i__16118);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__16119 = seq__16115;
      var G__16120 = chunk__16116;
      var G__16121 = count__16117;
      var G__16122 = i__16118 + 1;
      seq__16115 = G__16119;
      chunk__16116 = G__16120;
      count__16117 = G__16121;
      i__16118 = G__16122;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__16115);
      if (temp__4126__auto__) {
        var seq__16115__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__16115__$1)) {
          var c__4555__auto__ = cljs.core.chunk_first(seq__16115__$1);
          var G__16123 = cljs.core.chunk_rest(seq__16115__$1);
          var G__16124 = c__4555__auto__;
          var G__16125 = cljs.core.count(c__4555__auto__);
          var G__16126 = 0;
          seq__16115 = G__16123;
          chunk__16116 = G__16124;
          count__16117 = G__16125;
          i__16118 = G__16126;
          continue;
        } else {
          var obj = cljs.core.first(seq__16115__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__16127 = cljs.core.next(seq__16115__$1);
          var G__16128 = null;
          var G__16129 = 0;
          var G__16130 = 0;
          seq__16115 = G__16127;
          chunk__16116 = G__16128;
          count__16117 = G__16129;
          i__16118 = G__16130;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16131__i = 0, G__16131__a = new Array(arguments.length - 0);
      while (G__16131__i < G__16131__a.length) {
        G__16131__a[G__16131__i] = arguments[G__16131__i + 0];
        ++G__16131__i;
      }
      objs = new cljs.core.IndexedSeq(G__16131__a, 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__16132) {
    var objs = cljs.core.seq(arglist__16132);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16133__i = 0, G__16133__a = new Array(arguments.length - 0);
      while (G__16133__i < G__16133__a.length) {
        G__16133__a[G__16133__i] = arguments[G__16133__i + 0];
        ++G__16133__i;
      }
      objs = new cljs.core.IndexedSeq(G__16133__a, 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__16134) {
    var objs = cljs.core.seq(arglist__16134);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16135__i = 0, G__16135__a = new Array(arguments.length - 0);
      while (G__16135__i < G__16135__a.length) {
        G__16135__a[G__16135__i] = arguments[G__16135__i + 0];
        ++G__16135__i;
      }
      objs = new cljs.core.IndexedSeq(G__16135__a, 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__16136) {
    var objs = cljs.core.seq(arglist__16136);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16137__i = 0, G__16137__a = new Array(arguments.length - 0);
      while (G__16137__i < G__16137__a.length) {
        G__16137__a[G__16137__i] = arguments[G__16137__i + 0];
        ++G__16137__i;
      }
      objs = new cljs.core.IndexedSeq(G__16137__a, 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__16138) {
    var objs = cljs.core.seq(arglist__16138);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16139__i = 0, G__16139__a = new Array(arguments.length - 0);
      while (G__16139__i < G__16139__a.length) {
        G__16139__a[G__16139__i] = arguments[G__16139__i + 0];
        ++G__16139__i;
      }
      objs = new cljs.core.IndexedSeq(G__16139__a, 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__16140) {
    var objs = cljs.core.seq(arglist__16140);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16141__i = 0, G__16141__a = new Array(arguments.length - 0);
      while (G__16141__i < G__16141__a.length) {
        G__16141__a[G__16141__i] = arguments[G__16141__i + 0];
        ++G__16141__i;
      }
      objs = new cljs.core.IndexedSeq(G__16141__a, 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__16142) {
    var objs = cljs.core.seq(arglist__16142);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16143__i = 0, G__16143__a = new Array(arguments.length - 0);
      while (G__16143__i < G__16143__a.length) {
        G__16143__a[G__16143__i] = arguments[G__16143__i + 0];
        ++G__16143__i;
      }
      objs = new cljs.core.IndexedSeq(G__16143__a, 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__16144) {
    var objs = cljs.core.seq(arglist__16144);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16145__i = 0, G__16145__a = new Array(arguments.length - 0);
      while (G__16145__i < G__16145__a.length) {
        G__16145__a[G__16145__i] = arguments[G__16145__i + 0];
        ++G__16145__i;
      }
      objs = new cljs.core.IndexedSeq(G__16145__a, 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__16146) {
    var objs = cljs.core.seq(arglist__16146);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__16153_16159 = cljs.core.key(e);
    var G__16154_16160 = w;
    var G__16155_16161 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16153_16159, G__16154_16160, G__16155_16161) : print_one.call(null, G__16153_16159, G__16154_16160, G__16155_16161);
    cljs.core._write(w, " ");
    var G__16156 = cljs.core.val(e);
    var G__16157 = w;
    var G__16158 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16156, G__16157, G__16158) : print_one.call(null, G__16156, G__16157, G__16158);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords(x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__16162__i = 0, G__16162__a = new Array(arguments.length - 2);
      while (G__16162__i < G__16162__a.length) {
        G__16162__a[G__16162__i] = arguments[G__16162__i + 2];
        ++G__16162__i;
      }
      args = new cljs.core.IndexedSeq(G__16162__a, 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__16163) {
    var iref = cljs.core.first(arglist__16163);
    arglist__16163 = cljs.core.next(arglist__16163);
    var f = cljs.core.first(arglist__16163);
    var args = cljs.core.rest(arglist__16163);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.cljs$core$IFn$_invoke$arity$1("G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = function() {
        var G__16166 = 0;
        return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16166) : cljs.core.atom.call(null, G__16166);
      }();
    } else {
    }
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__16168 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16168) : cljs.core.deref.call(null, G__16168);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function preserving_reduced(rf) {
  return function(p1__16169_SHARP_, p2__16170_SHARP_) {
    var ret = function() {
      var G__16173 = p1__16169_SHARP_;
      var G__16174 = p2__16170_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16173, G__16174) : rf.call(null, G__16173, G__16174);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__16177 = null;
      var G__16177__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__16177__1 = function(result) {
        var G__16176 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16176) : rf.call(null, G__16176);
      };
      var G__16177__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__16177 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__16177__0.call(this);
          case 1:
            return G__16177__1.call(this, result);
          case 2:
            return G__16177__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16177.cljs$core$IFn$_invoke$arity$0 = G__16177__0;
      G__16177.cljs$core$IFn$_invoke$arity$1 = G__16177__1;
      G__16177.cljs$core$IFn$_invoke$arity$2 = G__16177__2;
      return G__16177;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(rf) {
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__16186 = null;
          var G__16186__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__16186__1 = function(result) {
            var G__16182 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16182) : rf.call(null, G__16182);
          };
          var G__16186__2 = function(result, input) {
            var prior = function() {
              var G__16183 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16183) : cljs.core.deref.call(null, G__16183);
            }();
            cljs.core.vreset_BANG_(pa, input);
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
              return result;
            } else {
              var G__16184 = result;
              var G__16185 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16184, G__16185) : rf.call(null, G__16184, G__16185);
            }
          };
          G__16186 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__16186__0.call(this);
              case 1:
                return G__16186__1.call(this, result);
              case 2:
                return G__16186__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__16186.cljs$core$IFn$_invoke$arity$0 = G__16186__0;
          G__16186.cljs$core$IFn$_invoke$arity$1 = G__16186__1;
          G__16186.cljs$core$IFn$_invoke$arity$2 = G__16186__2;
          return G__16186;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function __GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4746__auto__ = this;
  return cljs.core.es6_iterator(this__4746__auto__);
};
cljs.core.eduction = function eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__16188_SHARP_, p2__16187_SHARP_) {
    var G__16190 = p2__16187_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__16190) : proc.call(null, G__16190);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj16192 = {};
  return obj16192;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3756__auto__ = x;
    if (and__3756__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4412__auto__ = x == null ? null : x;
    return function() {
      var or__3768__auto__ = cljs.core._clj__GT_js[function() {
        var G__16196 = x__4412__auto__;
        return goog.typeOf(G__16196);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3756__auto__ = x;
    if (and__3756__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4412__auto__ = x == null ? null : x;
    return function() {
      var or__3768__auto__ = cljs.core._key__GT_js[function() {
        var G__16200 = x__4412__auto__;
        return goog.typeOf(G__16200);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__16203 = k;
    if (G__16203) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__16203.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__16203.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__16203);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__16203);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__16204 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__16204) : cljs.core.clj__GT_js.call(null, G__16204);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__16220 = x;
      if (G__16220) {
        var bit__4449__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3768__auto__ = bit__4449__auto__;
          if (cljs.core.truth_(or__3768__auto__)) {
            return or__3768__auto__;
          } else {
            return G__16220.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__16220.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__16220);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__16220);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj16222 = {};
              return obj16222;
            }();
            var seq__16223_16233 = cljs.core.seq(x);
            var chunk__16224_16234 = null;
            var count__16225_16235 = 0;
            var i__16226_16236 = 0;
            while (true) {
              if (i__16226_16236 < count__16225_16235) {
                var vec__16227_16237 = chunk__16224_16234.cljs$core$IIndexed$_nth$arity$2(null, i__16226_16236);
                var k_16238 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16227_16237, 0, null);
                var v_16239 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16227_16237, 1, null);
                m[cljs.core.key__GT_js(k_16238)] = clj__GT_js(v_16239);
                var G__16240 = seq__16223_16233;
                var G__16241 = chunk__16224_16234;
                var G__16242 = count__16225_16235;
                var G__16243 = i__16226_16236 + 1;
                seq__16223_16233 = G__16240;
                chunk__16224_16234 = G__16241;
                count__16225_16235 = G__16242;
                i__16226_16236 = G__16243;
                continue;
              } else {
                var temp__4126__auto___16244 = cljs.core.seq(seq__16223_16233);
                if (temp__4126__auto___16244) {
                  var seq__16223_16245__$1 = temp__4126__auto___16244;
                  if (cljs.core.chunked_seq_QMARK_(seq__16223_16245__$1)) {
                    var c__4555__auto___16246 = cljs.core.chunk_first(seq__16223_16245__$1);
                    var G__16247 = cljs.core.chunk_rest(seq__16223_16245__$1);
                    var G__16248 = c__4555__auto___16246;
                    var G__16249 = cljs.core.count(c__4555__auto___16246);
                    var G__16250 = 0;
                    seq__16223_16233 = G__16247;
                    chunk__16224_16234 = G__16248;
                    count__16225_16235 = G__16249;
                    i__16226_16236 = G__16250;
                    continue;
                  } else {
                    var vec__16228_16251 = cljs.core.first(seq__16223_16245__$1);
                    var k_16252 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16228_16251, 0, null);
                    var v_16253 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16228_16251, 1, null);
                    m[cljs.core.key__GT_js(k_16252)] = clj__GT_js(v_16253);
                    var G__16254 = cljs.core.next(seq__16223_16245__$1);
                    var G__16255 = null;
                    var G__16256 = 0;
                    var G__16257 = 0;
                    seq__16223_16233 = G__16254;
                    chunk__16224_16234 = G__16255;
                    count__16225_16235 = G__16256;
                    i__16226_16236 = G__16257;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__16229_16258 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js, x));
              var chunk__16230_16259 = null;
              var count__16231_16260 = 0;
              var i__16232_16261 = 0;
              while (true) {
                if (i__16232_16261 < count__16231_16260) {
                  var x_16262__$1 = chunk__16230_16259.cljs$core$IIndexed$_nth$arity$2(null, i__16232_16261);
                  arr.push(x_16262__$1);
                  var G__16263 = seq__16229_16258;
                  var G__16264 = chunk__16230_16259;
                  var G__16265 = count__16231_16260;
                  var G__16266 = i__16232_16261 + 1;
                  seq__16229_16258 = G__16263;
                  chunk__16230_16259 = G__16264;
                  count__16231_16260 = G__16265;
                  i__16232_16261 = G__16266;
                  continue;
                } else {
                  var temp__4126__auto___16267 = cljs.core.seq(seq__16229_16258);
                  if (temp__4126__auto___16267) {
                    var seq__16229_16268__$1 = temp__4126__auto___16267;
                    if (cljs.core.chunked_seq_QMARK_(seq__16229_16268__$1)) {
                      var c__4555__auto___16269 = cljs.core.chunk_first(seq__16229_16268__$1);
                      var G__16270 = cljs.core.chunk_rest(seq__16229_16268__$1);
                      var G__16271 = c__4555__auto___16269;
                      var G__16272 = cljs.core.count(c__4555__auto___16269);
                      var G__16273 = 0;
                      seq__16229_16258 = G__16270;
                      chunk__16230_16259 = G__16271;
                      count__16231_16260 = G__16272;
                      i__16232_16261 = G__16273;
                      continue;
                    } else {
                      var x_16274__$1 = cljs.core.first(seq__16229_16268__$1);
                      arr.push(x_16274__$1);
                      var G__16275 = cljs.core.next(seq__16229_16268__$1);
                      var G__16276 = null;
                      var G__16277 = 0;
                      var G__16278 = 0;
                      seq__16229_16258 = G__16275;
                      chunk__16230_16259 = G__16276;
                      count__16231_16260 = G__16277;
                      i__16232_16261 = G__16278;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj16280 = {};
  return obj16280;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3756__auto__ = x;
    if (and__3756__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4412__auto__ = x == null ? null : x;
    return function() {
      var or__3768__auto__ = cljs.core._js__GT_clj[function() {
        var G__16284 = x__4412__auto__;
        return goog.typeOf(G__16284);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
  };
  var js__GT_clj__2 = function() {
    var G__16341__delegate = function(x, opts) {
      var map__16314 = opts;
      var map__16314__$1 = cljs.core.seq_QMARK_(map__16314) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__16314) : map__16314;
      var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__16314__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
      var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
      var f = function(map__16314, map__16314__$1, keywordize_keys, keyfn) {
        return function thisfn(x__$1) {
          if (function() {
            var G__16330 = x__$1;
            if (G__16330) {
              var bit__4449__auto__ = null;
              if (cljs.core.truth_(function() {
                var or__3768__auto__ = bit__4449__auto__;
                if (cljs.core.truth_(or__3768__auto__)) {
                  return or__3768__auto__;
                } else {
                  return G__16330.cljs$core$IEncodeClojure$;
                }
              }())) {
                return true;
              } else {
                if (!G__16330.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__16330);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__16330);
            }
          }()) {
            return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
          } else {
            if (cljs.core.seq_QMARK_(x__$1)) {
              return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
            } else {
              if (cljs.core.coll_QMARK_(x__$1)) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
              } else {
                if (x__$1 instanceof Array) {
                  return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
                } else {
                  if (cljs.core.type(x__$1) === Object) {
                    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                      var iter__4524__auto__ = function(map__16314, map__16314__$1, keywordize_keys, keyfn) {
                        return function iter__16331(s__16332) {
                          return new cljs.core.LazySeq(null, function(map__16314, map__16314__$1, keywordize_keys, keyfn) {
                            return function() {
                              var s__16332__$1 = s__16332;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq(s__16332__$1);
                                if (temp__4126__auto__) {
                                  var s__16332__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_(s__16332__$2)) {
                                    var c__4522__auto__ = cljs.core.chunk_first(s__16332__$2);
                                    var size__4523__auto__ = cljs.core.count(c__4522__auto__);
                                    var b__16334 = cljs.core.chunk_buffer(size__4523__auto__);
                                    if (function() {
                                      var i__16333 = 0;
                                      while (true) {
                                        if (i__16333 < size__4523__auto__) {
                                          var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4522__auto__, i__16333);
                                          cljs.core.chunk_append(b__16334, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                            var G__16339 = k;
                                            return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__16339) : keyfn.call(null, G__16339);
                                          }(), thisfn(x__$1[k])], null));
                                          var G__16342 = i__16333 + 1;
                                          i__16333 = G__16342;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__16334), iter__16331(cljs.core.chunk_rest(s__16332__$2)));
                                    } else {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__16334), null);
                                    }
                                  } else {
                                    var k = cljs.core.first(s__16332__$2);
                                    return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                      var G__16340 = k;
                                      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__16340) : keyfn.call(null, G__16340);
                                    }(), thisfn(x__$1[k])], null), iter__16331(cljs.core.rest(s__16332__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(map__16314, map__16314__$1, keywordize_keys, keyfn), null, null);
                        };
                      }(map__16314, map__16314__$1, keywordize_keys, keyfn);
                      return iter__4524__auto__(cljs.core.js_keys(x__$1));
                    }());
                  } else {
                    return x__$1;
                  }
                }
              }
            }
          }
        };
      }(map__16314, map__16314__$1, keywordize_keys, keyfn);
      return f(x);
    };
    var G__16341 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        var G__16343__i = 0, G__16343__a = new Array(arguments.length - 1);
        while (G__16343__i < G__16343__a.length) {
          G__16343__a[G__16343__i] = arguments[G__16343__i + 1];
          ++G__16343__i;
        }
        opts = new cljs.core.IndexedSeq(G__16343__a, 0);
      }
      return G__16341__delegate.call(this, x, opts);
    };
    G__16341.cljs$lang$maxFixedArity = 1;
    G__16341.cljs$lang$applyTo = function(arglist__16344) {
      var x = cljs.core.first(arglist__16344);
      var opts = cljs.core.rest(arglist__16344);
      return G__16341__delegate(x, opts);
    };
    G__16341.cljs$core$IFn$_invoke$arity$variadic = G__16341__delegate;
    return G__16341;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        var G__16345 = null;
        if (arguments.length > 1) {
          var G__16346__i = 0, G__16346__a = new Array(arguments.length - 1);
          while (G__16346__i < G__16346__a.length) {
            G__16346__a[G__16346__i] = arguments[G__16346__i + 1];
            ++G__16346__i;
          }
          G__16345 = new cljs.core.IndexedSeq(G__16346__a, 0);
        }
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__16345);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = function() {
    var G__16349 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16349) : cljs.core.atom.call(null, G__16349);
  }();
  return function(mem) {
    return function() {
      var G__16351__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__16350 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16350) : cljs.core.deref.call(null, G__16350);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__16351 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__16352__i = 0, G__16352__a = new Array(arguments.length - 0);
          while (G__16352__i < G__16352__a.length) {
            G__16352__a[G__16352__i] = arguments[G__16352__i + 0];
            ++G__16352__i;
          }
          args = new cljs.core.IndexedSeq(G__16352__a, 0);
        }
        return G__16351__delegate.call(this, args);
      };
      G__16351.cljs$lang$maxFixedArity = 0;
      G__16351.cljs$lang$applyTo = function(arglist__16353) {
        var args = cljs.core.seq(arglist__16353);
        return G__16351__delegate(args);
      };
      G__16351.cljs$core$IFn$_invoke$arity$variadic = G__16351__delegate;
      return G__16351;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }();
      if (cljs.core.fn_QMARK_(ret)) {
        var G__16355 = ret;
        f = G__16355;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__16356__delegate = function(f, args) {
      return trampoline.cljs$core$IFn$_invoke$arity$1(function() {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
      });
    };
    var G__16356 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        var G__16357__i = 0, G__16357__a = new Array(arguments.length - 1);
        while (G__16357__i < G__16357__a.length) {
          G__16357__a[G__16357__i] = arguments[G__16357__i + 1];
          ++G__16357__i;
        }
        args = new cljs.core.IndexedSeq(G__16357__a, 0);
      }
      return G__16356__delegate.call(this, f, args);
    };
    G__16356.cljs$lang$maxFixedArity = 1;
    G__16356.cljs$lang$applyTo = function(arglist__16358) {
      var f = cljs.core.first(arglist__16358);
      var args = cljs.core.rest(arglist__16358);
      return G__16356__delegate(f, args);
    };
    G__16356.cljs$core$IFn$_invoke$arity$variadic = G__16356__delegate;
    return G__16356;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        var G__16359 = null;
        if (arguments.length > 1) {
          var G__16360__i = 0, G__16360__a = new Array(arguments.length - 1);
          while (G__16360__i < G__16360__a.length) {
            G__16360__a[G__16360__i] = arguments[G__16360__i + 1];
            ++G__16360__i;
          }
          G__16359 = new cljs.core.IndexedSeq(G__16360__a, 0);
        }
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__16359);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.cljs$core$IFn$_invoke$arity$1(1);
  };
  var rand__1 = function(n) {
    return function() {
      return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
    }() * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  var G__16363 = function() {
    return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
  }() * n;
  return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__16363) : Math.floor.call(null, G__16363);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__16365 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16365) : f.call(null, G__16365);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__16367 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16367) : cljs.core.atom.call(null, G__16367);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__16368__i = 0, G__16368__a = new Array(arguments.length - 1);
      while (G__16368__i < G__16368__a.length) {
        G__16368__a[G__16368__i] = arguments[G__16368__i + 1];
        ++G__16368__i;
      }
      args = new cljs.core.IndexedSeq(G__16368__a, 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__16369) {
    var f = cljs.core.first(arglist__16369);
    var args = cljs.core.rest(arglist__16369);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__16434 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16434) : cljs.core.deref.call(null, G__16434);
    }(), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3768__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
    if (or__3768__auto__) {
      return or__3768__auto__;
    } else {
      var or__3768__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3768__auto____$1) {
        return or__3768__auto____$1;
      } else {
        var and__3756__auto__ = cljs.core.vector_QMARK_(parent);
        if (and__3756__auto__) {
          var and__3756__auto____$1 = cljs.core.vector_QMARK_(child);
          if (and__3756__auto____$1) {
            var and__3756__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
            if (and__3756__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count(parent)) {
                  return ret;
                } else {
                  var G__16459 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                    var G__16457 = i;
                    return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__16457) : child.call(null, G__16457);
                  }(), function() {
                    var G__16458 = i;
                    return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__16458) : parent.call(null, G__16458);
                  }());
                  var G__16460 = i + 1;
                  ret = G__16459;
                  i = G__16460;
                  continue;
                }
                break;
              }
            } else {
              return and__3756__auto____$2;
            }
          } else {
            return and__3756__auto____$1;
          }
        } else {
          return and__3756__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16464 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16464) : cljs.core.deref.call(null, G__16464);
    }(), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16468 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16468) : cljs.core.deref.call(null, G__16468);
    }(), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16472 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16472) : cljs.core.deref.call(null, G__16472);
    }(), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace(parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
              var G__16481 = target;
              return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__16481) : targets.call(null, G__16481);
            }())));
          };
        }(tp, td, ta), m, cljs.core.cons(source, function() {
          var G__16482 = source;
          return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__16482) : sources.call(null, G__16482);
        }()));
      };
    }(tp, td, ta);
    var or__3768__auto__ = cljs.core.contains_QMARK_(function() {
      var G__16486 = tag;
      return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__16486) : tp.call(null, G__16486);
    }(), parent) ? null : function() {
      if (cljs.core.contains_QMARK_(function() {
        var G__16487 = tag;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__16487) : ta.call(null, G__16487);
      }(), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_(function() {
        var G__16488 = parent;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__16488) : ta.call(null, G__16488);
      }(), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
      "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3768__auto__)) {
      return or__3768__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(function() {
      var G__16495 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16495) : parentMap.call(null, G__16495);
    }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16496 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16496) : parentMap.call(null, G__16496);
    }(), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
    var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
      return function(p1__16489_SHARP_) {
        return cljs.core.cons(cljs.core.first(p1__16489_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__16489_SHARP_), cljs.core.second(p1__16489_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
    if (cljs.core.contains_QMARK_(function() {
      var G__16497 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16497) : parentMap.call(null, G__16497);
    }(), parent)) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__16490_SHARP_, p2__16491_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__16490_SHARP_, p2__16491_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__16500 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16500) : cljs.core.deref.call(null, G__16500);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__16501 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16501) : cljs.core.deref.call(null, G__16501);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__16517 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16517) : cljs.core.deref.call(null, G__16517);
  }().call(null, x);
  var or__3768__auto__ = cljs.core.truth_(function() {
    var and__3756__auto__ = xprefs;
    if (cljs.core.truth_(and__3756__auto__)) {
      var G__16519 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__16519) : xprefs.call(null, G__16519);
    } else {
      return and__3756__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3768__auto__)) {
    return or__3768__auto__;
  } else {
    var or__3768__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__16520 = cljs.core.rest(ps);
          ps = G__16520;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3768__auto____$1)) {
      return or__3768__auto____$1;
    } else {
      var or__3768__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__16521 = cljs.core.rest(ps);
            ps = G__16521;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3768__auto____$2)) {
        return or__3768__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3768__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__3768__auto__)) {
    return or__3768__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__16535) {
    var vec__16536 = p__16535;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16536, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16536, 1, null);
    var e = vec__16536;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__16537 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16537) : cljs.core.deref.call(null, G__16537);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3768__auto__ = be == null;
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__16538 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16538) : cljs.core.deref.call(null, G__16538);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16539 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16539) : cljs.core.deref.call(null, G__16539);
    }(), function() {
      var G__16540 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16540) : cljs.core.deref.call(null, G__16540);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj16542 = {};
  return obj16542;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3756__auto__ = mf;
    if (and__3756__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4412__auto__ = mf == null ? null : mf;
    return function() {
      var or__3768__auto__ = cljs.core._reset[function() {
        var G__16546 = x__4412__auto__;
        return goog.typeOf(G__16546);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._reset["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3756__auto__ = mf;
    if (and__3756__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4412__auto__ = mf == null ? null : mf;
    return function() {
      var or__3768__auto__ = cljs.core._add_method[function() {
        var G__16550 = x__4412__auto__;
        return goog.typeOf(G__16550);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._add_method["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3756__auto__ = mf;
    if (and__3756__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4412__auto__ = mf == null ? null : mf;
    return function() {
      var or__3768__auto__ = cljs.core._remove_method[function() {
        var G__16554 = x__4412__auto__;
        return goog.typeOf(G__16554);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._remove_method["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3756__auto__ = mf;
    if (and__3756__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4412__auto__ = mf == null ? null : mf;
    return function() {
      var or__3768__auto__ = cljs.core._prefer_method[function() {
        var G__16558 = x__4412__auto__;
        return goog.typeOf(G__16558);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3756__auto__ = mf;
    if (and__3756__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4412__auto__ = mf == null ? null : mf;
    return function() {
      var or__3768__auto__ = cljs.core._get_method[function() {
        var G__16562 = x__4412__auto__;
        return goog.typeOf(G__16562);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._get_method["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3756__auto__ = mf;
    if (and__3756__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4412__auto__ = mf == null ? null : mf;
    return function() {
      var or__3768__auto__ = cljs.core._methods[function() {
        var G__16566 = x__4412__auto__;
        return goog.typeOf(G__16566);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._methods["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3756__auto__ = mf;
    if (and__3756__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4412__auto__ = mf == null ? null : mf;
    return function() {
      var or__3768__auto__ = cljs.core._prefers[function() {
        var G__16570 = x__4412__auto__;
        return goog.typeOf(G__16570);
      }()];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core._prefers["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__16572 = this$__$1;
  return goog.getUid(G__16572);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__16573 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16573) : cljs.core.deref.call(null, G__16573);
  }(), function() {
    var G__16574 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16574) : cljs.core.deref.call(null, G__16574);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = function() {
    var G__16575 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16575) : cljs.core.deref.call(null, G__16575);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__16576 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16576) : cljs.core.deref.call(null, G__16576);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__16577 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16577) : cljs.core.deref.call(null, G__16577);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__16578 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16578) : cljs.core.deref.call(null, G__16578);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__17419 = null;
  var G__17419__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__17419__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16579 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__16579) : self__.dispatch_fn.call(null, G__16579);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16580 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__16580) : target_fn.call(null, G__16580);
  };
  var G__17419__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16581 = a;
      var G__16582 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__16581, G__16582) : self__.dispatch_fn.call(null, G__16581, G__16582);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16583 = a;
    var G__16584 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__16583, G__16584) : target_fn.call(null, G__16583, G__16584);
  };
  var G__17419__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16585 = a;
      var G__16586 = b;
      var G__16587 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__16585, G__16586, G__16587) : self__.dispatch_fn.call(null, G__16585, G__16586, G__16587);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16588 = a;
    var G__16589 = b;
    var G__16590 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__16588, G__16589, G__16590) : target_fn.call(null, G__16588, G__16589, G__16590);
  };
  var G__17419__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16591 = a;
      var G__16592 = b;
      var G__16593 = c;
      var G__16594 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__16591, G__16592, G__16593, G__16594) : self__.dispatch_fn.call(null, G__16591, G__16592, G__16593, G__16594);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16595 = a;
    var G__16596 = b;
    var G__16597 = c;
    var G__16598 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__16595, G__16596, G__16597, G__16598) : target_fn.call(null, G__16595, G__16596, G__16597, G__16598);
  };
  var G__17419__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16599 = a;
      var G__16600 = b;
      var G__16601 = c;
      var G__16602 = d;
      var G__16603 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__16599, G__16600, G__16601, G__16602, G__16603) : self__.dispatch_fn.call(null, G__16599, G__16600, G__16601, G__16602, G__16603);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16604 = a;
    var G__16605 = b;
    var G__16606 = c;
    var G__16607 = d;
    var G__16608 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__16604, G__16605, G__16606, G__16607, G__16608) : target_fn.call(null, G__16604, G__16605, G__16606, G__16607, G__16608);
  };
  var G__17419__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16609 = a;
      var G__16610 = b;
      var G__16611 = c;
      var G__16612 = d;
      var G__16613 = e;
      var G__16614 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__16609, G__16610, G__16611, G__16612, G__16613, G__16614) : self__.dispatch_fn.call(null, G__16609, G__16610, G__16611, G__16612, G__16613, G__16614);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16615 = a;
    var G__16616 = b;
    var G__16617 = c;
    var G__16618 = d;
    var G__16619 = e;
    var G__16620 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__16615, G__16616, G__16617, G__16618, G__16619, G__16620) : target_fn.call(null, G__16615, G__16616, G__16617, G__16618, G__16619, G__16620);
  };
  var G__17419__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16621 = a;
      var G__16622 = b;
      var G__16623 = c;
      var G__16624 = d;
      var G__16625 = e;
      var G__16626 = f;
      var G__16627 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__16621, G__16622, G__16623, G__16624, G__16625, G__16626, G__16627) : self__.dispatch_fn.call(null, G__16621, G__16622, G__16623, G__16624, G__16625, G__16626, G__16627);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16628 = a;
    var G__16629 = b;
    var G__16630 = c;
    var G__16631 = d;
    var G__16632 = e;
    var G__16633 = f;
    var G__16634 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__16628, G__16629, G__16630, G__16631, G__16632, G__16633, G__16634) : target_fn.call(null, G__16628, G__16629, G__16630, G__16631, G__16632, G__16633, G__16634);
  };
  var G__17419__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16635 = a;
      var G__16636 = b;
      var G__16637 = c;
      var G__16638 = d;
      var G__16639 = e;
      var G__16640 = f;
      var G__16641 = g;
      var G__16642 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__16635, G__16636, G__16637, G__16638, G__16639, G__16640, G__16641, G__16642) : self__.dispatch_fn.call(null, G__16635, G__16636, G__16637, G__16638, G__16639, G__16640, G__16641, G__16642);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16643 = a;
    var G__16644 = b;
    var G__16645 = c;
    var G__16646 = d;
    var G__16647 = e;
    var G__16648 = f;
    var G__16649 = g;
    var G__16650 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__16643, G__16644, G__16645, G__16646, G__16647, G__16648, G__16649, G__16650) : target_fn.call(null, G__16643, G__16644, G__16645, G__16646, G__16647, G__16648, G__16649, G__16650);
  };
  var G__17419__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16651 = a;
      var G__16652 = b;
      var G__16653 = c;
      var G__16654 = d;
      var G__16655 = e;
      var G__16656 = f;
      var G__16657 = g;
      var G__16658 = h;
      var G__16659 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__16651, G__16652, G__16653, G__16654, G__16655, G__16656, G__16657, G__16658, G__16659) : self__.dispatch_fn.call(null, G__16651, G__16652, G__16653, G__16654, G__16655, G__16656, G__16657, G__16658, G__16659);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16660 = a;
    var G__16661 = b;
    var G__16662 = c;
    var G__16663 = d;
    var G__16664 = e;
    var G__16665 = f;
    var G__16666 = g;
    var G__16667 = h;
    var G__16668 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__16660, G__16661, G__16662, G__16663, G__16664, G__16665, G__16666, G__16667, G__16668) : target_fn.call(null, G__16660, G__16661, G__16662, G__16663, G__16664, G__16665, G__16666, G__16667, G__16668);
  };
  var G__17419__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16669 = a;
      var G__16670 = b;
      var G__16671 = c;
      var G__16672 = d;
      var G__16673 = e;
      var G__16674 = f;
      var G__16675 = g;
      var G__16676 = h;
      var G__16677 = i;
      var G__16678 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__16669, G__16670, G__16671, G__16672, G__16673, G__16674, G__16675, G__16676, G__16677, G__16678) : self__.dispatch_fn.call(null, G__16669, G__16670, G__16671, G__16672, G__16673, G__16674, G__16675, G__16676, G__16677, G__16678);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16679 = a;
    var G__16680 = b;
    var G__16681 = c;
    var G__16682 = d;
    var G__16683 = e;
    var G__16684 = f;
    var G__16685 = g;
    var G__16686 = h;
    var G__16687 = i;
    var G__16688 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__16679, G__16680, G__16681, G__16682, G__16683, G__16684, G__16685, G__16686, G__16687, G__16688) : target_fn.call(null, G__16679, G__16680, G__16681, G__16682, G__16683, G__16684, G__16685, G__16686, G__16687, G__16688);
  };
  var G__17419__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16689 = a;
      var G__16690 = b;
      var G__16691 = c;
      var G__16692 = d;
      var G__16693 = e;
      var G__16694 = f;
      var G__16695 = g;
      var G__16696 = h;
      var G__16697 = i;
      var G__16698 = j;
      var G__16699 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__16689, G__16690, G__16691, G__16692, G__16693, G__16694, G__16695, G__16696, G__16697, G__16698, G__16699) : self__.dispatch_fn.call(null, G__16689, G__16690, G__16691, G__16692, G__16693, G__16694, G__16695, G__16696, G__16697, G__16698, G__16699);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16700 = a;
    var G__16701 = b;
    var G__16702 = c;
    var G__16703 = d;
    var G__16704 = e;
    var G__16705 = f;
    var G__16706 = g;
    var G__16707 = h;
    var G__16708 = i;
    var G__16709 = j;
    var G__16710 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__16700, G__16701, G__16702, G__16703, G__16704, G__16705, G__16706, G__16707, G__16708, G__16709, G__16710) : target_fn.call(null, G__16700, G__16701, G__16702, G__16703, G__16704, G__16705, G__16706, G__16707, G__16708, G__16709, G__16710);
  };
  var G__17419__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16711 = a;
      var G__16712 = b;
      var G__16713 = c;
      var G__16714 = d;
      var G__16715 = e;
      var G__16716 = f;
      var G__16717 = g;
      var G__16718 = h;
      var G__16719 = i;
      var G__16720 = j;
      var G__16721 = k;
      var G__16722 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__16711, G__16712, G__16713, G__16714, G__16715, G__16716, G__16717, G__16718, G__16719, G__16720, G__16721, G__16722) : self__.dispatch_fn.call(null, G__16711, G__16712, G__16713, G__16714, G__16715, G__16716, G__16717, G__16718, G__16719, G__16720, G__16721, G__16722);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16723 = a;
    var G__16724 = b;
    var G__16725 = c;
    var G__16726 = d;
    var G__16727 = e;
    var G__16728 = f;
    var G__16729 = g;
    var G__16730 = h;
    var G__16731 = i;
    var G__16732 = j;
    var G__16733 = k;
    var G__16734 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__16723, G__16724, G__16725, G__16726, G__16727, G__16728, G__16729, G__16730, G__16731, G__16732, G__16733, G__16734) : target_fn.call(null, G__16723, G__16724, G__16725, G__16726, G__16727, G__16728, G__16729, G__16730, G__16731, G__16732, G__16733, G__16734);
  };
  var G__17419__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16735 = a;
      var G__16736 = b;
      var G__16737 = c;
      var G__16738 = d;
      var G__16739 = e;
      var G__16740 = f;
      var G__16741 = g;
      var G__16742 = h;
      var G__16743 = i;
      var G__16744 = j;
      var G__16745 = k;
      var G__16746 = l;
      var G__16747 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__16735, G__16736, G__16737, G__16738, G__16739, G__16740, G__16741, G__16742, G__16743, G__16744, G__16745, G__16746, G__16747) : self__.dispatch_fn.call(null, G__16735, G__16736, G__16737, G__16738, G__16739, G__16740, G__16741, G__16742, G__16743, G__16744, G__16745, G__16746, G__16747);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16748 = a;
    var G__16749 = b;
    var G__16750 = c;
    var G__16751 = d;
    var G__16752 = e;
    var G__16753 = f;
    var G__16754 = g;
    var G__16755 = h;
    var G__16756 = i;
    var G__16757 = j;
    var G__16758 = k;
    var G__16759 = l;
    var G__16760 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__16748, G__16749, G__16750, G__16751, G__16752, G__16753, G__16754, G__16755, G__16756, G__16757, G__16758, G__16759, G__16760) : target_fn.call(null, G__16748, G__16749, G__16750, G__16751, G__16752, G__16753, G__16754, G__16755, G__16756, G__16757, G__16758, G__16759, G__16760);
  };
  var G__17419__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16761 = a;
      var G__16762 = b;
      var G__16763 = c;
      var G__16764 = d;
      var G__16765 = e;
      var G__16766 = f;
      var G__16767 = g;
      var G__16768 = h;
      var G__16769 = i;
      var G__16770 = j;
      var G__16771 = k;
      var G__16772 = l;
      var G__16773 = m;
      var G__16774 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__16761, G__16762, G__16763, G__16764, G__16765, G__16766, G__16767, G__16768, G__16769, G__16770, G__16771, G__16772, G__16773, G__16774) : self__.dispatch_fn.call(null, G__16761, G__16762, G__16763, G__16764, G__16765, G__16766, G__16767, G__16768, G__16769, G__16770, G__16771, G__16772, G__16773, G__16774);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16775 = a;
    var G__16776 = b;
    var G__16777 = c;
    var G__16778 = d;
    var G__16779 = e;
    var G__16780 = f;
    var G__16781 = g;
    var G__16782 = h;
    var G__16783 = i;
    var G__16784 = j;
    var G__16785 = k;
    var G__16786 = l;
    var G__16787 = m;
    var G__16788 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__16775, G__16776, G__16777, G__16778, G__16779, G__16780, G__16781, G__16782, G__16783, G__16784, G__16785, G__16786, G__16787, G__16788) : target_fn.call(null, G__16775, G__16776, G__16777, G__16778, G__16779, G__16780, G__16781, G__16782, G__16783, G__16784, G__16785, G__16786, G__16787, G__16788);
  };
  var G__17419__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16789 = a;
      var G__16790 = b;
      var G__16791 = c;
      var G__16792 = d;
      var G__16793 = e;
      var G__16794 = f;
      var G__16795 = g;
      var G__16796 = h;
      var G__16797 = i;
      var G__16798 = j;
      var G__16799 = k;
      var G__16800 = l;
      var G__16801 = m;
      var G__16802 = n;
      var G__16803 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__16789, G__16790, G__16791, G__16792, G__16793, G__16794, G__16795, G__16796, G__16797, G__16798, G__16799, G__16800, G__16801, G__16802, G__16803) : self__.dispatch_fn.call(null, G__16789, G__16790, G__16791, G__16792, G__16793, G__16794, G__16795, G__16796, G__16797, G__16798, G__16799, G__16800, G__16801, G__16802, G__16803);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16804 = a;
    var G__16805 = b;
    var G__16806 = c;
    var G__16807 = d;
    var G__16808 = e;
    var G__16809 = f;
    var G__16810 = g;
    var G__16811 = h;
    var G__16812 = i;
    var G__16813 = j;
    var G__16814 = k;
    var G__16815 = l;
    var G__16816 = m;
    var G__16817 = n;
    var G__16818 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__16804, G__16805, G__16806, G__16807, G__16808, G__16809, G__16810, G__16811, G__16812, G__16813, G__16814, G__16815, G__16816, G__16817, G__16818) : target_fn.call(null, G__16804, G__16805, G__16806, G__16807, G__16808, G__16809, G__16810, G__16811, G__16812, G__16813, G__16814, G__16815, G__16816, G__16817, G__16818);
  };
  var G__17419__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16819 = a;
      var G__16820 = b;
      var G__16821 = c;
      var G__16822 = d;
      var G__16823 = e;
      var G__16824 = f;
      var G__16825 = g;
      var G__16826 = h;
      var G__16827 = i;
      var G__16828 = j;
      var G__16829 = k;
      var G__16830 = l;
      var G__16831 = m;
      var G__16832 = n;
      var G__16833 = o;
      var G__16834 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__16819, G__16820, G__16821, G__16822, G__16823, G__16824, G__16825, G__16826, G__16827, G__16828, G__16829, G__16830, G__16831, G__16832, G__16833, G__16834) : self__.dispatch_fn.call(null, G__16819, G__16820, G__16821, G__16822, G__16823, G__16824, G__16825, G__16826, G__16827, G__16828, G__16829, G__16830, G__16831, G__16832, G__16833, G__16834);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16835 = a;
    var G__16836 = b;
    var G__16837 = c;
    var G__16838 = d;
    var G__16839 = e;
    var G__16840 = f;
    var G__16841 = g;
    var G__16842 = h;
    var G__16843 = i;
    var G__16844 = j;
    var G__16845 = k;
    var G__16846 = l;
    var G__16847 = m;
    var G__16848 = n;
    var G__16849 = o;
    var G__16850 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__16835, G__16836, G__16837, G__16838, G__16839, G__16840, G__16841, G__16842, G__16843, G__16844, G__16845, G__16846, G__16847, G__16848, G__16849, G__16850) : target_fn.call(null, G__16835, G__16836, G__16837, G__16838, G__16839, G__16840, G__16841, G__16842, G__16843, G__16844, G__16845, G__16846, G__16847, G__16848, G__16849, G__16850);
  };
  var G__17419__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16851 = a;
      var G__16852 = b;
      var G__16853 = c;
      var G__16854 = d;
      var G__16855 = e;
      var G__16856 = f;
      var G__16857 = g;
      var G__16858 = h;
      var G__16859 = i;
      var G__16860 = j;
      var G__16861 = k;
      var G__16862 = l;
      var G__16863 = m;
      var G__16864 = n;
      var G__16865 = o;
      var G__16866 = p;
      var G__16867 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__16851, G__16852, G__16853, G__16854, G__16855, G__16856, G__16857, G__16858, G__16859, G__16860, G__16861, G__16862, G__16863, G__16864, G__16865, G__16866, G__16867) : self__.dispatch_fn.call(null, G__16851, G__16852, G__16853, G__16854, G__16855, G__16856, G__16857, G__16858, G__16859, G__16860, G__16861, G__16862, G__16863, G__16864, G__16865, G__16866, G__16867);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16868 = a;
    var G__16869 = b;
    var G__16870 = c;
    var G__16871 = d;
    var G__16872 = e;
    var G__16873 = f;
    var G__16874 = g;
    var G__16875 = h;
    var G__16876 = i;
    var G__16877 = j;
    var G__16878 = k;
    var G__16879 = l;
    var G__16880 = m;
    var G__16881 = n;
    var G__16882 = o;
    var G__16883 = p;
    var G__16884 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__16868, G__16869, G__16870, G__16871, G__16872, G__16873, G__16874, G__16875, G__16876, G__16877, G__16878, G__16879, G__16880, G__16881, G__16882, G__16883, G__16884) : target_fn.call(null, G__16868, G__16869, G__16870, G__16871, G__16872, G__16873, G__16874, G__16875, G__16876, G__16877, G__16878, G__16879, G__16880, G__16881, G__16882, G__16883, G__16884);
  };
  var G__17419__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16885 = a;
      var G__16886 = b;
      var G__16887 = c;
      var G__16888 = d;
      var G__16889 = e;
      var G__16890 = f;
      var G__16891 = g;
      var G__16892 = h;
      var G__16893 = i;
      var G__16894 = j;
      var G__16895 = k;
      var G__16896 = l;
      var G__16897 = m;
      var G__16898 = n;
      var G__16899 = o;
      var G__16900 = p;
      var G__16901 = q;
      var G__16902 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__16885, G__16886, G__16887, G__16888, G__16889, G__16890, G__16891, G__16892, G__16893, G__16894, G__16895, G__16896, G__16897, G__16898, G__16899, G__16900, G__16901, G__16902) : self__.dispatch_fn.call(null, G__16885, G__16886, G__16887, G__16888, G__16889, G__16890, G__16891, G__16892, G__16893, G__16894, G__16895, G__16896, G__16897, G__16898, G__16899, G__16900, G__16901, G__16902);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16903 = a;
    var G__16904 = b;
    var G__16905 = c;
    var G__16906 = d;
    var G__16907 = e;
    var G__16908 = f;
    var G__16909 = g;
    var G__16910 = h;
    var G__16911 = i;
    var G__16912 = j;
    var G__16913 = k;
    var G__16914 = l;
    var G__16915 = m;
    var G__16916 = n;
    var G__16917 = o;
    var G__16918 = p;
    var G__16919 = q;
    var G__16920 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__16903, G__16904, G__16905, G__16906, G__16907, G__16908, G__16909, G__16910, G__16911, G__16912, G__16913, G__16914, G__16915, G__16916, G__16917, G__16918, G__16919, G__16920) : target_fn.call(null, G__16903, G__16904, G__16905, G__16906, G__16907, G__16908, G__16909, G__16910, G__16911, G__16912, G__16913, G__16914, G__16915, G__16916, G__16917, G__16918, G__16919, G__16920);
  };
  var G__17419__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16921 = a;
      var G__16922 = b;
      var G__16923 = c;
      var G__16924 = d;
      var G__16925 = e;
      var G__16926 = f;
      var G__16927 = g;
      var G__16928 = h;
      var G__16929 = i;
      var G__16930 = j;
      var G__16931 = k;
      var G__16932 = l;
      var G__16933 = m;
      var G__16934 = n;
      var G__16935 = o;
      var G__16936 = p;
      var G__16937 = q;
      var G__16938 = r;
      var G__16939 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__16921, G__16922, G__16923, G__16924, G__16925, G__16926, G__16927, G__16928, G__16929, G__16930, G__16931, G__16932, G__16933, G__16934, G__16935, G__16936, G__16937, G__16938, G__16939) : self__.dispatch_fn.call(null, G__16921, G__16922, G__16923, G__16924, G__16925, G__16926, G__16927, G__16928, G__16929, G__16930, G__16931, G__16932, G__16933, G__16934, G__16935, G__16936, G__16937, 
      G__16938, G__16939);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16940 = a;
    var G__16941 = b;
    var G__16942 = c;
    var G__16943 = d;
    var G__16944 = e;
    var G__16945 = f;
    var G__16946 = g;
    var G__16947 = h;
    var G__16948 = i;
    var G__16949 = j;
    var G__16950 = k;
    var G__16951 = l;
    var G__16952 = m;
    var G__16953 = n;
    var G__16954 = o;
    var G__16955 = p;
    var G__16956 = q;
    var G__16957 = r;
    var G__16958 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__16940, G__16941, G__16942, G__16943, G__16944, G__16945, G__16946, G__16947, G__16948, G__16949, G__16950, G__16951, G__16952, G__16953, G__16954, G__16955, G__16956, G__16957, G__16958) : target_fn.call(null, G__16940, G__16941, G__16942, G__16943, G__16944, G__16945, G__16946, G__16947, G__16948, G__16949, G__16950, G__16951, G__16952, G__16953, G__16954, G__16955, G__16956, G__16957, G__16958);
  };
  var G__17419__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16959 = a;
      var G__16960 = b;
      var G__16961 = c;
      var G__16962 = d;
      var G__16963 = e;
      var G__16964 = f;
      var G__16965 = g;
      var G__16966 = h;
      var G__16967 = i;
      var G__16968 = j;
      var G__16969 = k;
      var G__16970 = l;
      var G__16971 = m;
      var G__16972 = n;
      var G__16973 = o;
      var G__16974 = p;
      var G__16975 = q;
      var G__16976 = r;
      var G__16977 = s;
      var G__16978 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__16959, G__16960, G__16961, G__16962, G__16963, G__16964, G__16965, G__16966, G__16967, G__16968, G__16969, G__16970, G__16971, G__16972, G__16973, G__16974, G__16975, G__16976, G__16977, G__16978) : self__.dispatch_fn.call(null, G__16959, G__16960, G__16961, G__16962, G__16963, G__16964, G__16965, G__16966, G__16967, G__16968, G__16969, G__16970, G__16971, G__16972, G__16973, G__16974, 
      G__16975, G__16976, G__16977, G__16978);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16979 = a;
    var G__16980 = b;
    var G__16981 = c;
    var G__16982 = d;
    var G__16983 = e;
    var G__16984 = f;
    var G__16985 = g;
    var G__16986 = h;
    var G__16987 = i;
    var G__16988 = j;
    var G__16989 = k;
    var G__16990 = l;
    var G__16991 = m;
    var G__16992 = n;
    var G__16993 = o;
    var G__16994 = p;
    var G__16995 = q;
    var G__16996 = r;
    var G__16997 = s;
    var G__16998 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__16979, G__16980, G__16981, G__16982, G__16983, G__16984, G__16985, G__16986, G__16987, G__16988, G__16989, G__16990, G__16991, G__16992, G__16993, G__16994, G__16995, G__16996, G__16997, G__16998) : target_fn.call(null, G__16979, G__16980, G__16981, G__16982, G__16983, G__16984, G__16985, G__16986, G__16987, G__16988, G__16989, G__16990, G__16991, G__16992, G__16993, G__16994, G__16995, G__16996, G__16997, 
    G__16998);
  };
  var G__17419__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__17419 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__17419__1.call(this, self__);
      case 2:
        return G__17419__2.call(this, self__, a);
      case 3:
        return G__17419__3.call(this, self__, a, b);
      case 4:
        return G__17419__4.call(this, self__, a, b, c);
      case 5:
        return G__17419__5.call(this, self__, a, b, c, d);
      case 6:
        return G__17419__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__17419__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__17419__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__17419__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__17419__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__17419__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__17419__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__17419__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__17419__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__17419__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__17419__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__17419__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__17419__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__17419__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__17419__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__17419__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__17419__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__17419.cljs$core$IFn$_invoke$arity$1 = G__17419__1;
  G__17419.cljs$core$IFn$_invoke$arity$2 = G__17419__2;
  G__17419.cljs$core$IFn$_invoke$arity$3 = G__17419__3;
  G__17419.cljs$core$IFn$_invoke$arity$4 = G__17419__4;
  G__17419.cljs$core$IFn$_invoke$arity$5 = G__17419__5;
  G__17419.cljs$core$IFn$_invoke$arity$6 = G__17419__6;
  G__17419.cljs$core$IFn$_invoke$arity$7 = G__17419__7;
  G__17419.cljs$core$IFn$_invoke$arity$8 = G__17419__8;
  G__17419.cljs$core$IFn$_invoke$arity$9 = G__17419__9;
  G__17419.cljs$core$IFn$_invoke$arity$10 = G__17419__10;
  G__17419.cljs$core$IFn$_invoke$arity$11 = G__17419__11;
  G__17419.cljs$core$IFn$_invoke$arity$12 = G__17419__12;
  G__17419.cljs$core$IFn$_invoke$arity$13 = G__17419__13;
  G__17419.cljs$core$IFn$_invoke$arity$14 = G__17419__14;
  G__17419.cljs$core$IFn$_invoke$arity$15 = G__17419__15;
  G__17419.cljs$core$IFn$_invoke$arity$16 = G__17419__16;
  G__17419.cljs$core$IFn$_invoke$arity$17 = G__17419__17;
  G__17419.cljs$core$IFn$_invoke$arity$18 = G__17419__18;
  G__17419.cljs$core$IFn$_invoke$arity$19 = G__17419__19;
  G__17419.cljs$core$IFn$_invoke$arity$20 = G__17419__20;
  G__17419.cljs$core$IFn$_invoke$arity$21 = G__17419__21;
  G__17419.cljs$core$IFn$_invoke$arity$22 = G__17419__22;
  return G__17419;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args16571) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16571)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16999 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__16999) : self__.dispatch_fn.call(null, G__16999);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17000 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__17000) : target_fn.call(null, G__17000);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17001 = a;
    var G__17002 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__17001, G__17002) : self__.dispatch_fn.call(null, G__17001, G__17002);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17003 = a;
  var G__17004 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__17003, G__17004) : target_fn.call(null, G__17003, G__17004);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17005 = a;
    var G__17006 = b;
    var G__17007 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__17005, G__17006, G__17007) : self__.dispatch_fn.call(null, G__17005, G__17006, G__17007);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17008 = a;
  var G__17009 = b;
  var G__17010 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__17008, G__17009, G__17010) : target_fn.call(null, G__17008, G__17009, G__17010);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17011 = a;
    var G__17012 = b;
    var G__17013 = c;
    var G__17014 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__17011, G__17012, G__17013, G__17014) : self__.dispatch_fn.call(null, G__17011, G__17012, G__17013, G__17014);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17015 = a;
  var G__17016 = b;
  var G__17017 = c;
  var G__17018 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__17015, G__17016, G__17017, G__17018) : target_fn.call(null, G__17015, G__17016, G__17017, G__17018);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17019 = a;
    var G__17020 = b;
    var G__17021 = c;
    var G__17022 = d;
    var G__17023 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__17019, G__17020, G__17021, G__17022, G__17023) : self__.dispatch_fn.call(null, G__17019, G__17020, G__17021, G__17022, G__17023);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17024 = a;
  var G__17025 = b;
  var G__17026 = c;
  var G__17027 = d;
  var G__17028 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__17024, G__17025, G__17026, G__17027, G__17028) : target_fn.call(null, G__17024, G__17025, G__17026, G__17027, G__17028);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17029 = a;
    var G__17030 = b;
    var G__17031 = c;
    var G__17032 = d;
    var G__17033 = e;
    var G__17034 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__17029, G__17030, G__17031, G__17032, G__17033, G__17034) : self__.dispatch_fn.call(null, G__17029, G__17030, G__17031, G__17032, G__17033, G__17034);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17035 = a;
  var G__17036 = b;
  var G__17037 = c;
  var G__17038 = d;
  var G__17039 = e;
  var G__17040 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__17035, G__17036, G__17037, G__17038, G__17039, G__17040) : target_fn.call(null, G__17035, G__17036, G__17037, G__17038, G__17039, G__17040);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17041 = a;
    var G__17042 = b;
    var G__17043 = c;
    var G__17044 = d;
    var G__17045 = e;
    var G__17046 = f;
    var G__17047 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__17041, G__17042, G__17043, G__17044, G__17045, G__17046, G__17047) : self__.dispatch_fn.call(null, G__17041, G__17042, G__17043, G__17044, G__17045, G__17046, G__17047);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17048 = a;
  var G__17049 = b;
  var G__17050 = c;
  var G__17051 = d;
  var G__17052 = e;
  var G__17053 = f;
  var G__17054 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__17048, G__17049, G__17050, G__17051, G__17052, G__17053, G__17054) : target_fn.call(null, G__17048, G__17049, G__17050, G__17051, G__17052, G__17053, G__17054);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17055 = a;
    var G__17056 = b;
    var G__17057 = c;
    var G__17058 = d;
    var G__17059 = e;
    var G__17060 = f;
    var G__17061 = g;
    var G__17062 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__17055, G__17056, G__17057, G__17058, G__17059, G__17060, G__17061, G__17062) : self__.dispatch_fn.call(null, G__17055, G__17056, G__17057, G__17058, G__17059, G__17060, G__17061, G__17062);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17063 = a;
  var G__17064 = b;
  var G__17065 = c;
  var G__17066 = d;
  var G__17067 = e;
  var G__17068 = f;
  var G__17069 = g;
  var G__17070 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__17063, G__17064, G__17065, G__17066, G__17067, G__17068, G__17069, G__17070) : target_fn.call(null, G__17063, G__17064, G__17065, G__17066, G__17067, G__17068, G__17069, G__17070);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17071 = a;
    var G__17072 = b;
    var G__17073 = c;
    var G__17074 = d;
    var G__17075 = e;
    var G__17076 = f;
    var G__17077 = g;
    var G__17078 = h;
    var G__17079 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__17071, G__17072, G__17073, G__17074, G__17075, G__17076, G__17077, G__17078, G__17079) : self__.dispatch_fn.call(null, G__17071, G__17072, G__17073, G__17074, G__17075, G__17076, G__17077, G__17078, G__17079);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17080 = a;
  var G__17081 = b;
  var G__17082 = c;
  var G__17083 = d;
  var G__17084 = e;
  var G__17085 = f;
  var G__17086 = g;
  var G__17087 = h;
  var G__17088 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__17080, G__17081, G__17082, G__17083, G__17084, G__17085, G__17086, G__17087, G__17088) : target_fn.call(null, G__17080, G__17081, G__17082, G__17083, G__17084, G__17085, G__17086, G__17087, G__17088);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17089 = a;
    var G__17090 = b;
    var G__17091 = c;
    var G__17092 = d;
    var G__17093 = e;
    var G__17094 = f;
    var G__17095 = g;
    var G__17096 = h;
    var G__17097 = i;
    var G__17098 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__17089, G__17090, G__17091, G__17092, G__17093, G__17094, G__17095, G__17096, G__17097, G__17098) : self__.dispatch_fn.call(null, G__17089, G__17090, G__17091, G__17092, G__17093, G__17094, G__17095, G__17096, G__17097, G__17098);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17099 = a;
  var G__17100 = b;
  var G__17101 = c;
  var G__17102 = d;
  var G__17103 = e;
  var G__17104 = f;
  var G__17105 = g;
  var G__17106 = h;
  var G__17107 = i;
  var G__17108 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__17099, G__17100, G__17101, G__17102, G__17103, G__17104, G__17105, G__17106, G__17107, G__17108) : target_fn.call(null, G__17099, G__17100, G__17101, G__17102, G__17103, G__17104, G__17105, G__17106, G__17107, G__17108);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17109 = a;
    var G__17110 = b;
    var G__17111 = c;
    var G__17112 = d;
    var G__17113 = e;
    var G__17114 = f;
    var G__17115 = g;
    var G__17116 = h;
    var G__17117 = i;
    var G__17118 = j;
    var G__17119 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__17109, G__17110, G__17111, G__17112, G__17113, G__17114, G__17115, G__17116, G__17117, G__17118, G__17119) : self__.dispatch_fn.call(null, G__17109, G__17110, G__17111, G__17112, G__17113, G__17114, G__17115, G__17116, G__17117, G__17118, G__17119);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17120 = a;
  var G__17121 = b;
  var G__17122 = c;
  var G__17123 = d;
  var G__17124 = e;
  var G__17125 = f;
  var G__17126 = g;
  var G__17127 = h;
  var G__17128 = i;
  var G__17129 = j;
  var G__17130 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__17120, G__17121, G__17122, G__17123, G__17124, G__17125, G__17126, G__17127, G__17128, G__17129, G__17130) : target_fn.call(null, G__17120, G__17121, G__17122, G__17123, G__17124, G__17125, G__17126, G__17127, G__17128, G__17129, G__17130);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17131 = a;
    var G__17132 = b;
    var G__17133 = c;
    var G__17134 = d;
    var G__17135 = e;
    var G__17136 = f;
    var G__17137 = g;
    var G__17138 = h;
    var G__17139 = i;
    var G__17140 = j;
    var G__17141 = k;
    var G__17142 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__17131, G__17132, G__17133, G__17134, G__17135, G__17136, G__17137, G__17138, G__17139, G__17140, G__17141, G__17142) : self__.dispatch_fn.call(null, G__17131, G__17132, G__17133, G__17134, G__17135, G__17136, G__17137, G__17138, G__17139, G__17140, G__17141, G__17142);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17143 = a;
  var G__17144 = b;
  var G__17145 = c;
  var G__17146 = d;
  var G__17147 = e;
  var G__17148 = f;
  var G__17149 = g;
  var G__17150 = h;
  var G__17151 = i;
  var G__17152 = j;
  var G__17153 = k;
  var G__17154 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__17143, G__17144, G__17145, G__17146, G__17147, G__17148, G__17149, G__17150, G__17151, G__17152, G__17153, G__17154) : target_fn.call(null, G__17143, G__17144, G__17145, G__17146, G__17147, G__17148, G__17149, G__17150, G__17151, G__17152, G__17153, G__17154);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17155 = a;
    var G__17156 = b;
    var G__17157 = c;
    var G__17158 = d;
    var G__17159 = e;
    var G__17160 = f;
    var G__17161 = g;
    var G__17162 = h;
    var G__17163 = i;
    var G__17164 = j;
    var G__17165 = k;
    var G__17166 = l;
    var G__17167 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__17155, G__17156, G__17157, G__17158, G__17159, G__17160, G__17161, G__17162, G__17163, G__17164, G__17165, G__17166, G__17167) : self__.dispatch_fn.call(null, G__17155, G__17156, G__17157, G__17158, G__17159, G__17160, G__17161, G__17162, G__17163, G__17164, G__17165, G__17166, G__17167);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17168 = a;
  var G__17169 = b;
  var G__17170 = c;
  var G__17171 = d;
  var G__17172 = e;
  var G__17173 = f;
  var G__17174 = g;
  var G__17175 = h;
  var G__17176 = i;
  var G__17177 = j;
  var G__17178 = k;
  var G__17179 = l;
  var G__17180 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__17168, G__17169, G__17170, G__17171, G__17172, G__17173, G__17174, G__17175, G__17176, G__17177, G__17178, G__17179, G__17180) : target_fn.call(null, G__17168, G__17169, G__17170, G__17171, G__17172, G__17173, G__17174, G__17175, G__17176, G__17177, G__17178, G__17179, G__17180);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17181 = a;
    var G__17182 = b;
    var G__17183 = c;
    var G__17184 = d;
    var G__17185 = e;
    var G__17186 = f;
    var G__17187 = g;
    var G__17188 = h;
    var G__17189 = i;
    var G__17190 = j;
    var G__17191 = k;
    var G__17192 = l;
    var G__17193 = m;
    var G__17194 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__17181, G__17182, G__17183, G__17184, G__17185, G__17186, G__17187, G__17188, G__17189, G__17190, G__17191, G__17192, G__17193, G__17194) : self__.dispatch_fn.call(null, G__17181, G__17182, G__17183, G__17184, G__17185, G__17186, G__17187, G__17188, G__17189, G__17190, G__17191, G__17192, G__17193, G__17194);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17195 = a;
  var G__17196 = b;
  var G__17197 = c;
  var G__17198 = d;
  var G__17199 = e;
  var G__17200 = f;
  var G__17201 = g;
  var G__17202 = h;
  var G__17203 = i;
  var G__17204 = j;
  var G__17205 = k;
  var G__17206 = l;
  var G__17207 = m;
  var G__17208 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__17195, G__17196, G__17197, G__17198, G__17199, G__17200, G__17201, G__17202, G__17203, G__17204, G__17205, G__17206, G__17207, G__17208) : target_fn.call(null, G__17195, G__17196, G__17197, G__17198, G__17199, G__17200, G__17201, G__17202, G__17203, G__17204, G__17205, G__17206, G__17207, G__17208);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17209 = a;
    var G__17210 = b;
    var G__17211 = c;
    var G__17212 = d;
    var G__17213 = e;
    var G__17214 = f;
    var G__17215 = g;
    var G__17216 = h;
    var G__17217 = i;
    var G__17218 = j;
    var G__17219 = k;
    var G__17220 = l;
    var G__17221 = m;
    var G__17222 = n;
    var G__17223 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__17209, G__17210, G__17211, G__17212, G__17213, G__17214, G__17215, G__17216, G__17217, G__17218, G__17219, G__17220, G__17221, G__17222, G__17223) : self__.dispatch_fn.call(null, G__17209, G__17210, G__17211, G__17212, G__17213, G__17214, G__17215, G__17216, G__17217, G__17218, G__17219, G__17220, G__17221, G__17222, G__17223);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17224 = a;
  var G__17225 = b;
  var G__17226 = c;
  var G__17227 = d;
  var G__17228 = e;
  var G__17229 = f;
  var G__17230 = g;
  var G__17231 = h;
  var G__17232 = i;
  var G__17233 = j;
  var G__17234 = k;
  var G__17235 = l;
  var G__17236 = m;
  var G__17237 = n;
  var G__17238 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__17224, G__17225, G__17226, G__17227, G__17228, G__17229, G__17230, G__17231, G__17232, G__17233, G__17234, G__17235, G__17236, G__17237, G__17238) : target_fn.call(null, G__17224, G__17225, G__17226, G__17227, G__17228, G__17229, G__17230, G__17231, G__17232, G__17233, G__17234, G__17235, G__17236, G__17237, G__17238);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17239 = a;
    var G__17240 = b;
    var G__17241 = c;
    var G__17242 = d;
    var G__17243 = e;
    var G__17244 = f;
    var G__17245 = g;
    var G__17246 = h;
    var G__17247 = i;
    var G__17248 = j;
    var G__17249 = k;
    var G__17250 = l;
    var G__17251 = m;
    var G__17252 = n;
    var G__17253 = o;
    var G__17254 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__17239, G__17240, G__17241, G__17242, G__17243, G__17244, G__17245, G__17246, G__17247, G__17248, G__17249, G__17250, G__17251, G__17252, G__17253, G__17254) : self__.dispatch_fn.call(null, G__17239, G__17240, G__17241, G__17242, G__17243, G__17244, G__17245, G__17246, G__17247, G__17248, G__17249, G__17250, G__17251, G__17252, G__17253, G__17254);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17255 = a;
  var G__17256 = b;
  var G__17257 = c;
  var G__17258 = d;
  var G__17259 = e;
  var G__17260 = f;
  var G__17261 = g;
  var G__17262 = h;
  var G__17263 = i;
  var G__17264 = j;
  var G__17265 = k;
  var G__17266 = l;
  var G__17267 = m;
  var G__17268 = n;
  var G__17269 = o;
  var G__17270 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__17255, G__17256, G__17257, G__17258, G__17259, G__17260, G__17261, G__17262, G__17263, G__17264, G__17265, G__17266, G__17267, G__17268, G__17269, G__17270) : target_fn.call(null, G__17255, G__17256, G__17257, G__17258, G__17259, G__17260, G__17261, G__17262, G__17263, G__17264, G__17265, G__17266, G__17267, G__17268, G__17269, G__17270);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17271 = a;
    var G__17272 = b;
    var G__17273 = c;
    var G__17274 = d;
    var G__17275 = e;
    var G__17276 = f;
    var G__17277 = g;
    var G__17278 = h;
    var G__17279 = i;
    var G__17280 = j;
    var G__17281 = k;
    var G__17282 = l;
    var G__17283 = m;
    var G__17284 = n;
    var G__17285 = o;
    var G__17286 = p;
    var G__17287 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__17271, G__17272, G__17273, G__17274, G__17275, G__17276, G__17277, G__17278, G__17279, G__17280, G__17281, G__17282, G__17283, G__17284, G__17285, G__17286, G__17287) : self__.dispatch_fn.call(null, G__17271, G__17272, G__17273, G__17274, G__17275, G__17276, G__17277, G__17278, G__17279, G__17280, G__17281, G__17282, G__17283, G__17284, G__17285, G__17286, G__17287);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17288 = a;
  var G__17289 = b;
  var G__17290 = c;
  var G__17291 = d;
  var G__17292 = e;
  var G__17293 = f;
  var G__17294 = g;
  var G__17295 = h;
  var G__17296 = i;
  var G__17297 = j;
  var G__17298 = k;
  var G__17299 = l;
  var G__17300 = m;
  var G__17301 = n;
  var G__17302 = o;
  var G__17303 = p;
  var G__17304 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__17288, G__17289, G__17290, G__17291, G__17292, G__17293, G__17294, G__17295, G__17296, G__17297, G__17298, G__17299, G__17300, G__17301, G__17302, G__17303, G__17304) : target_fn.call(null, G__17288, G__17289, G__17290, G__17291, G__17292, G__17293, G__17294, G__17295, G__17296, G__17297, G__17298, G__17299, G__17300, G__17301, G__17302, G__17303, G__17304);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17305 = a;
    var G__17306 = b;
    var G__17307 = c;
    var G__17308 = d;
    var G__17309 = e;
    var G__17310 = f;
    var G__17311 = g;
    var G__17312 = h;
    var G__17313 = i;
    var G__17314 = j;
    var G__17315 = k;
    var G__17316 = l;
    var G__17317 = m;
    var G__17318 = n;
    var G__17319 = o;
    var G__17320 = p;
    var G__17321 = q;
    var G__17322 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__17305, G__17306, G__17307, G__17308, G__17309, G__17310, G__17311, G__17312, G__17313, G__17314, G__17315, G__17316, G__17317, G__17318, G__17319, G__17320, G__17321, G__17322) : self__.dispatch_fn.call(null, G__17305, G__17306, G__17307, G__17308, G__17309, G__17310, G__17311, G__17312, G__17313, G__17314, G__17315, G__17316, G__17317, G__17318, G__17319, G__17320, G__17321, G__17322);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17323 = a;
  var G__17324 = b;
  var G__17325 = c;
  var G__17326 = d;
  var G__17327 = e;
  var G__17328 = f;
  var G__17329 = g;
  var G__17330 = h;
  var G__17331 = i;
  var G__17332 = j;
  var G__17333 = k;
  var G__17334 = l;
  var G__17335 = m;
  var G__17336 = n;
  var G__17337 = o;
  var G__17338 = p;
  var G__17339 = q;
  var G__17340 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__17323, G__17324, G__17325, G__17326, G__17327, G__17328, G__17329, G__17330, G__17331, G__17332, G__17333, G__17334, G__17335, G__17336, G__17337, G__17338, G__17339, G__17340) : target_fn.call(null, G__17323, G__17324, G__17325, G__17326, G__17327, G__17328, G__17329, G__17330, G__17331, G__17332, G__17333, G__17334, G__17335, G__17336, G__17337, G__17338, G__17339, G__17340);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17341 = a;
    var G__17342 = b;
    var G__17343 = c;
    var G__17344 = d;
    var G__17345 = e;
    var G__17346 = f;
    var G__17347 = g;
    var G__17348 = h;
    var G__17349 = i;
    var G__17350 = j;
    var G__17351 = k;
    var G__17352 = l;
    var G__17353 = m;
    var G__17354 = n;
    var G__17355 = o;
    var G__17356 = p;
    var G__17357 = q;
    var G__17358 = r;
    var G__17359 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__17341, G__17342, G__17343, G__17344, G__17345, G__17346, G__17347, G__17348, G__17349, G__17350, G__17351, G__17352, G__17353, G__17354, G__17355, G__17356, G__17357, G__17358, G__17359) : self__.dispatch_fn.call(null, G__17341, G__17342, G__17343, G__17344, G__17345, G__17346, G__17347, G__17348, G__17349, G__17350, G__17351, G__17352, G__17353, G__17354, G__17355, G__17356, G__17357, 
    G__17358, G__17359);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17360 = a;
  var G__17361 = b;
  var G__17362 = c;
  var G__17363 = d;
  var G__17364 = e;
  var G__17365 = f;
  var G__17366 = g;
  var G__17367 = h;
  var G__17368 = i;
  var G__17369 = j;
  var G__17370 = k;
  var G__17371 = l;
  var G__17372 = m;
  var G__17373 = n;
  var G__17374 = o;
  var G__17375 = p;
  var G__17376 = q;
  var G__17377 = r;
  var G__17378 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__17360, G__17361, G__17362, G__17363, G__17364, G__17365, G__17366, G__17367, G__17368, G__17369, G__17370, G__17371, G__17372, G__17373, G__17374, G__17375, G__17376, G__17377, G__17378) : target_fn.call(null, G__17360, G__17361, G__17362, G__17363, G__17364, G__17365, G__17366, G__17367, G__17368, G__17369, G__17370, G__17371, G__17372, G__17373, G__17374, G__17375, G__17376, G__17377, G__17378);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17379 = a;
    var G__17380 = b;
    var G__17381 = c;
    var G__17382 = d;
    var G__17383 = e;
    var G__17384 = f;
    var G__17385 = g;
    var G__17386 = h;
    var G__17387 = i;
    var G__17388 = j;
    var G__17389 = k;
    var G__17390 = l;
    var G__17391 = m;
    var G__17392 = n;
    var G__17393 = o;
    var G__17394 = p;
    var G__17395 = q;
    var G__17396 = r;
    var G__17397 = s;
    var G__17398 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__17379, G__17380, G__17381, G__17382, G__17383, G__17384, G__17385, G__17386, G__17387, G__17388, G__17389, G__17390, G__17391, G__17392, G__17393, G__17394, G__17395, G__17396, G__17397, G__17398) : self__.dispatch_fn.call(null, G__17379, G__17380, G__17381, G__17382, G__17383, G__17384, G__17385, G__17386, G__17387, G__17388, G__17389, G__17390, G__17391, G__17392, G__17393, G__17394, 
    G__17395, G__17396, G__17397, G__17398);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17399 = a;
  var G__17400 = b;
  var G__17401 = c;
  var G__17402 = d;
  var G__17403 = e;
  var G__17404 = f;
  var G__17405 = g;
  var G__17406 = h;
  var G__17407 = i;
  var G__17408 = j;
  var G__17409 = k;
  var G__17410 = l;
  var G__17411 = m;
  var G__17412 = n;
  var G__17413 = o;
  var G__17414 = p;
  var G__17415 = q;
  var G__17416 = r;
  var G__17417 = s;
  var G__17418 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__17399, G__17400, G__17401, G__17402, G__17403, G__17404, G__17405, G__17406, G__17407, G__17408, G__17409, G__17410, G__17411, G__17412, G__17413, G__17414, G__17415, G__17416, G__17417, G__17418) : target_fn.call(null, G__17399, G__17400, G__17401, G__17402, G__17403, G__17404, G__17405, G__17406, G__17407, G__17408, G__17409, G__17410, G__17411, G__17412, G__17413, G__17414, G__17415, G__17416, G__17417, 
  G__17418);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__17420 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
  return goog.string.hashCode(G__17420);
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write(writer__4356__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.pr_writer_ex_info = function pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#ExceptionInfo{:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, data) {
    return ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
  };
  var ex_info__3 = function(msg, data, cause) {
    cljs.core.ExceptionInfo.prototype = function() {
      var G__17425 = msg;
      return Error(G__17425);
    }();
    cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";
    cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
    cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
      var obj__$1 = this;
      return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
    };
    return new cljs.core.ExceptionInfo(msg, data, cause);
  };
  ex_info = function(msg, data, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, data);
      case 3:
        return ex_info__3.call(this, msg, data, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__17430 = x;
      var G__17431 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__17430, G__17431) : pred.call(null, G__17430, G__17431);
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(function() {
        var G__17432 = y;
        var G__17433 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__17432, G__17433) : pred.call(null, G__17432, G__17433);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
goog.provide("gridlife.gamemodel");
goog.require("cljs.core");
gridlife.gamemodel.game = function() {
  var obj5268 = {};
  return obj5268;
}();
gridlife.gamemodel.game_name = function game_name(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.gridlife$gamemodel$game$game_name$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.gridlife$gamemodel$game$game_name$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = gridlife.gamemodel.game_name[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = gridlife.gamemodel.game_name["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "game.game-name", this$);
        }
      }
    }().call(null, this$);
  }
};
gridlife.gamemodel.to_str = function to_str(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.gridlife$gamemodel$game$to_str$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.gridlife$gamemodel$game$to_str$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = gridlife.gamemodel.to_str[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = gridlife.gamemodel.to_str["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "game.to-str", this$);
        }
      }
    }().call(null, this$);
  }
};
gridlife.gamemodel.tick = function tick(this$, gridmodel) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.gridlife$gamemodel$game$tick$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.gridlife$gamemodel$game$tick$arity$2(this$, gridmodel);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = gridlife.gamemodel.tick[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = gridlife.gamemodel.tick["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "game.tick", this$);
        }
      }
    }().call(null, this$, gridmodel);
  }
};
goog.provide("gridlife.gridmodel");
goog.require("cljs.core");
gridlife.gridmodel.GridModel = function(model, cells_wide, cells_high, __meta, __extmap, __hash) {
  this.model = model;
  this.cells_wide = cells_wide;
  this.cells_high = cells_high;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
gridlife.gridmodel.GridModel.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4371__auto__, k__4372__auto__) {
  var self__ = this;
  var this__4371__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4371__auto____$1, k__4372__auto__, null);
};
gridlife.gridmodel.GridModel.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4373__auto__, k5272, else__4374__auto__) {
  var self__ = this;
  var this__4373__auto____$1 = this;
  var G__5274 = k5272 instanceof cljs.core.Keyword ? k5272.fqn : null;
  switch(G__5274) {
    case "cells-high":
      return self__.cells_high;
      break;
    case "cells-wide":
      return self__.cells_wide;
      break;
    case "model":
      return self__.model;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k5272, else__4374__auto__);
  }
};
gridlife.gridmodel.GridModel.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4385__auto__, writer__4386__auto__, opts__4387__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  var pr_pair__4388__auto__ = function(this__4385__auto____$1) {
    return function(keyval__4389__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4386__auto__, cljs.core.pr_writer, "", " ", "", opts__4387__auto__, keyval__4389__auto__);
    };
  }(this__4385__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4386__auto__, pr_pair__4388__auto__, "#gridlife.gridmodel.GridModel{", ", ", "}", opts__4387__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "model", "model", 331153215), self__.model], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "cells-wide", "cells-wide", -1579921448), self__.cells_wide], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465), self__.cells_high], null)], null), self__.__extmap));
};
gridlife.gridmodel.GridModel.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4369__auto__) {
  var self__ = this;
  var this__4369__auto____$1 = this;
  return self__.__meta;
};
gridlife.gridmodel.GridModel.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4365__auto__) {
  var self__ = this;
  var this__4365__auto____$1 = this;
  return new gridlife.gridmodel.GridModel(self__.model, self__.cells_wide, self__.cells_high, self__.__meta, self__.__extmap, self__.__hash);
};
gridlife.gridmodel.GridModel.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
gridlife.gridmodel.GridModel.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4366__auto__) {
  var self__ = this;
  var this__4366__auto____$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_imap.call(null, this__4366__auto____$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
gridlife.gridmodel.GridModel.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4367__auto__, other__4368__auto__) {
  var self__ = this;
  var this__4367__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3756__auto__ = other__4368__auto__;
    if (cljs.core.truth_(and__3756__auto__)) {
      return this__4367__auto____$1.constructor === other__4368__auto__.constructor && cljs.core.equiv_map.call(null, this__4367__auto____$1, other__4368__auto__);
    } else {
      return and__3756__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
gridlife.gridmodel.GridModel.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465), null, new cljs.core.Keyword(null, "cells-wide", "cells-wide", -1579921448), null, new cljs.core.Keyword(null, "model", "model", 331153215), null], null), null), k__4381__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4380__auto____$1), self__.__meta), k__4381__auto__);
  } else {
    return new gridlife.gridmodel.GridModel(self__.model, self__.cells_wide, self__.cells_high, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4381__auto__)), null);
  }
};
gridlife.gridmodel.GridModel.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4378__auto__, k__4379__auto__, G__5271) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  var pred__5275 = cljs.core.keyword_identical_QMARK_;
  var expr__5276 = k__4379__auto__;
  if (cljs.core.truth_(pred__5275.call(null, new cljs.core.Keyword(null, "model", "model", 331153215), expr__5276))) {
    return new gridlife.gridmodel.GridModel(G__5271, self__.cells_wide, self__.cells_high, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__5275.call(null, new cljs.core.Keyword(null, "cells-wide", "cells-wide", -1579921448), expr__5276))) {
      return new gridlife.gridmodel.GridModel(self__.model, G__5271, self__.cells_high, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__5275.call(null, new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465), expr__5276))) {
        return new gridlife.gridmodel.GridModel(self__.model, self__.cells_wide, G__5271, self__.__meta, self__.__extmap, null);
      } else {
        return new gridlife.gridmodel.GridModel(self__.model, self__.cells_wide, self__.cells_high, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4379__auto__, G__5271), null);
      }
    }
  }
};
gridlife.gridmodel.GridModel.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4383__auto__) {
  var self__ = this;
  var this__4383__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "model", "model", 331153215), self__.model], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cells-wide", "cells-wide", -1579921448), self__.cells_wide], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465), self__.cells_high], null)], null), self__.__extmap));
};
gridlife.gridmodel.GridModel.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4370__auto__, G__5271) {
  var self__ = this;
  var this__4370__auto____$1 = this;
  return new gridlife.gridmodel.GridModel(self__.model, self__.cells_wide, self__.cells_high, G__5271, self__.__extmap, self__.__hash);
};
gridlife.gridmodel.GridModel.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4376__auto__, entry__4377__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4377__auto__)) {
    return cljs.core._assoc.call(null, this__4376__auto____$1, cljs.core._nth.call(null, entry__4377__auto__, 0), cljs.core._nth.call(null, entry__4377__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4376__auto____$1, entry__4377__auto__);
  }
};
gridlife.gridmodel.GridModel.cljs$lang$type = true;
gridlife.gridmodel.GridModel.cljs$lang$ctorPrSeq = function(this__4405__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "gridlife.gridmodel/GridModel");
};
gridlife.gridmodel.GridModel.cljs$lang$ctorPrWriter = function(this__4405__auto__, writer__4406__auto__) {
  return cljs.core._write.call(null, writer__4406__auto__, "gridlife.gridmodel/GridModel");
};
gridlife.gridmodel.__GT_GridModel = function __GT_GridModel(model, cells_wide, cells_high) {
  return new gridlife.gridmodel.GridModel(model, cells_wide, cells_high, null, null, null);
};
gridlife.gridmodel.map__GT_GridModel = function map__GT_GridModel(G__5273) {
  return new gridlife.gridmodel.GridModel((new cljs.core.Keyword(null, "model", "model", 331153215)).cljs$core$IFn$_invoke$arity$1(G__5273), (new cljs.core.Keyword(null, "cells-wide", "cells-wide", -1579921448)).cljs$core$IFn$_invoke$arity$1(G__5273), (new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465)).cljs$core$IFn$_invoke$arity$1(G__5273), null, cljs.core.dissoc.call(null, G__5273, new cljs.core.Keyword(null, "model", "model", 331153215), new cljs.core.Keyword(null, "cells-wide", 
  "cells-wide", -1579921448), new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465)), null);
};
gridlife.gridmodel.index__GT_headings = new cljs.core.PersistentArrayMap(null, 4, [0, new cljs.core.Keyword(null, "north", "north", 651323902), 1, new cljs.core.Keyword(null, "east", "east", 1189821678), 2, new cljs.core.Keyword(null, "south", "south", 1586796293), 3, new cljs.core.Keyword(null, "west", "west", 708776677)], null);
gridlife.gridmodel.headings__GT_index = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "north", "north", 651323902), 0, new cljs.core.Keyword(null, "east", "east", 1189821678), 1, new cljs.core.Keyword(null, "south", "south", 1586796293), 2, new cljs.core.Keyword(null, "west", "west", 708776677), 3], null);
gridlife.gridmodel.turn = function turn(heading, f) {
  var current_index = cljs.core.get.call(null, gridlife.gridmodel.headings__GT_index, heading);
  var index = f.call(null, current_index, 1);
  var new_index = cljs.core.mod.call(null, index, 4);
  var new_heading = cljs.core.get.call(null, gridlife.gridmodel.index__GT_headings, new_index);
  return new_heading;
};
gridlife.gridmodel.turn_right = function turn_right(heading) {
  return gridlife.gridmodel.turn.call(null, heading, cljs.core._PLUS_);
};
gridlife.gridmodel.turn_left = function turn_left(heading) {
  return gridlife.gridmodel.turn.call(null, heading, cljs.core._);
};
gridlife.gridmodel.random_int = function random_int(min, max) {
  return min + Math.floor(Math.random() * (1 + (max - min)));
};
gridlife.gridmodel.random = function random(size) {
  return gridlife.gridmodel.random_int.call(null, 0, size - 1);
};
gridlife.gridmodel.random_grid_coord = function random_grid_coord(xsize, ysize) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), gridlife.gridmodel.random.call(null, xsize), new cljs.core.Keyword(null, "y", "y", -1757859776), gridlife.gridmodel.random.call(null, ysize)], null);
};
gridlife.gridmodel.white_QMARK_ = function white_QMARK_(contents) {
  return cljs.core._EQ_.call(null, contents, new cljs.core.Keyword(null, "white", "white", -483998618));
};
gridlife.gridmodel.black_QMARK_ = function black_QMARK_(contents) {
  return cljs.core._EQ_.call(null, contents, new cljs.core.Keyword(null, "black", "black", 1294279647));
};
gridlife.gridmodel.toggle_color = function toggle_color(color) {
  if (gridlife.gridmodel.white_QMARK_.call(null, color)) {
    return new cljs.core.Keyword(null, "black", "black", 1294279647);
  } else {
    return new cljs.core.Keyword(null, "white", "white", -483998618);
  }
};
gridlife.gridmodel.color_QMARK_ = function color_QMARK_(contents) {
  return gridlife.gridmodel.white_QMARK_.call(null, contents) || gridlife.gridmodel.black_QMARK_.call(null, contents);
};
gridlife.gridmodel.toggle_if_color = function toggle_if_color(contents) {
  if (gridlife.gridmodel.color_QMARK_.call(null, contents)) {
    return gridlife.gridmodel.toggle_color.call(null, contents);
  } else {
    return contents;
  }
};
gridlife.gridmodel.compass = function compass(cells_wide, cells_high, location, distance) {
  var old_x = (new cljs.core.Keyword(null, "x", "x", 2099068185)).cljs$core$IFn$_invoke$arity$1(location);
  var old_y = (new cljs.core.Keyword(null, "y", "y", -1757859776)).cljs$core$IFn$_invoke$arity$1(location);
  return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "north", "north", 651323902), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), old_x, new cljs.core.Keyword(null, "y", "y", -1757859776), cljs.core.mod.call(null, old_y - distance, cells_high)], null), new cljs.core.Keyword(null, "south", "south", 1586796293), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), old_x, new cljs.core.Keyword(null, 
  "y", "y", -1757859776), cljs.core.mod.call(null, old_y + distance, cells_high)], null), new cljs.core.Keyword(null, "east", "east", 1189821678), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), cljs.core.mod.call(null, old_x + distance, cells_wide), new cljs.core.Keyword(null, "y", "y", -1757859776), old_y], null), new cljs.core.Keyword(null, "west", "west", 708776677), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 
  2099068185), cljs.core.mod.call(null, old_x - distance, cells_wide), new cljs.core.Keyword(null, "y", "y", -1757859776), old_y], null)], null);
};
gridlife.gridmodel.new_location = function new_location(cells_wide, cells_high, location, heading, distance) {
  return cljs.core.get.call(null, gridlife.gridmodel.compass.call(null, cells_wide, cells_high, location, distance), heading);
};
goog.provide("gridlife.random");
goog.require("cljs.core");
goog.require("gridlife.gamemodel");
goog.require("gridlife.gridmodel");
gridlife.random.RandomNoise = function(__meta, __extmap, __hash) {
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
gridlife.random.RandomNoise.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4371__auto__, k__4372__auto__) {
  var self__ = this;
  var this__4371__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4371__auto____$1, k__4372__auto__, null);
};
gridlife.random.RandomNoise.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4373__auto__, k11195, else__4374__auto__) {
  var self__ = this;
  var this__4373__auto____$1 = this;
  var G__11197 = k11195;
  switch(G__11197) {
    default:
      return cljs.core.get.call(null, self__.__extmap, k11195, else__4374__auto__);
  }
};
gridlife.random.RandomNoise.prototype.gridlife$gamemodel$game$ = true;
gridlife.random.RandomNoise.prototype.gridlife$gamemodel$game$game_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return "Random Noise";
};
gridlife.random.RandomNoise.prototype.gridlife$gamemodel$game$to_str$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return "Random Noise";
};
gridlife.random.RandomNoise.prototype.gridlife$gamemodel$game$tick$arity$2 = function(this$, gridmodel) {
  var self__ = this;
  var this$__$1 = this;
  var model = (new cljs.core.Keyword(null, "model", "model", 331153215)).cljs$core$IFn$_invoke$arity$1(gridmodel);
  var cells_wide = (new cljs.core.Keyword(null, "cells-wide", "cells-wide", -1579921448)).cljs$core$IFn$_invoke$arity$1(gridmodel);
  var cells_high = (new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465)).cljs$core$IFn$_invoke$arity$1(gridmodel);
  var random_coord = gridlife.gridmodel.random_grid_coord.call(null, cells_wide, cells_high);
  var new_color = gridlife.gridmodel.toggle_if_color.call(null, cljs.core.get.call(null, model, random_coord));
  var new_model = cljs.core.assoc.call(null, model, random_coord, new_color);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, gridmodel, new cljs.core.Keyword(null, "model", "model", 331153215), new_model), this$__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [random_coord, cljs.core.name.call(null, new_color)], null)], null)], null);
};
gridlife.random.RandomNoise.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4385__auto__, writer__4386__auto__, opts__4387__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  var pr_pair__4388__auto__ = function(this__4385__auto____$1) {
    return function(keyval__4389__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4386__auto__, cljs.core.pr_writer, "", " ", "", opts__4387__auto__, keyval__4389__auto__);
    };
  }(this__4385__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4386__auto__, pr_pair__4388__auto__, "#gridlife.random.RandomNoise{", ", ", "}", opts__4387__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.EMPTY, self__.__extmap));
};
gridlife.random.RandomNoise.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4369__auto__) {
  var self__ = this;
  var this__4369__auto____$1 = this;
  return self__.__meta;
};
gridlife.random.RandomNoise.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4365__auto__) {
  var self__ = this;
  var this__4365__auto____$1 = this;
  return new gridlife.random.RandomNoise(self__.__meta, self__.__extmap, self__.__hash);
};
gridlife.random.RandomNoise.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return 0 + cljs.core.count.call(null, self__.__extmap);
};
gridlife.random.RandomNoise.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4366__auto__) {
  var self__ = this;
  var this__4366__auto____$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_imap.call(null, this__4366__auto____$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
gridlife.random.RandomNoise.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4367__auto__, other__4368__auto__) {
  var self__ = this;
  var this__4367__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3756__auto__ = other__4368__auto__;
    if (cljs.core.truth_(and__3756__auto__)) {
      return this__4367__auto____$1.constructor === other__4368__auto__.constructor && cljs.core.equiv_map.call(null, this__4367__auto____$1, other__4368__auto__);
    } else {
      return and__3756__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
gridlife.random.RandomNoise.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.EMPTY, k__4381__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4380__auto____$1), self__.__meta), k__4381__auto__);
  } else {
    return new gridlife.random.RandomNoise(self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4381__auto__)), null);
  }
};
gridlife.random.RandomNoise.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4378__auto__, k__4379__auto__, G__11194) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  var pred__11198 = cljs.core.keyword_identical_QMARK_;
  var expr__11199 = k__4379__auto__;
  return new gridlife.random.RandomNoise(self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4379__auto__, G__11194), null);
};
gridlife.random.RandomNoise.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4383__auto__) {
  var self__ = this;
  var this__4383__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.EMPTY, self__.__extmap));
};
gridlife.random.RandomNoise.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4370__auto__, G__11194) {
  var self__ = this;
  var this__4370__auto____$1 = this;
  return new gridlife.random.RandomNoise(G__11194, self__.__extmap, self__.__hash);
};
gridlife.random.RandomNoise.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4376__auto__, entry__4377__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4377__auto__)) {
    return cljs.core._assoc.call(null, this__4376__auto____$1, cljs.core._nth.call(null, entry__4377__auto__, 0), cljs.core._nth.call(null, entry__4377__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4376__auto____$1, entry__4377__auto__);
  }
};
gridlife.random.RandomNoise.cljs$lang$type = true;
gridlife.random.RandomNoise.cljs$lang$ctorPrSeq = function(this__4405__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "gridlife.random/RandomNoise");
};
gridlife.random.RandomNoise.cljs$lang$ctorPrWriter = function(this__4405__auto__, writer__4406__auto__) {
  return cljs.core._write.call(null, writer__4406__auto__, "gridlife.random/RandomNoise");
};
gridlife.random.__GT_RandomNoise = function __GT_RandomNoise() {
  return new gridlife.random.RandomNoise(null, null, null);
};
gridlife.random.map__GT_RandomNoise = function map__GT_RandomNoise(G__11196) {
  return new gridlife.random.RandomNoise(null, cljs.core.dissoc.call(null, G__11196), null);
};
gridlife.random.new_random_noise = function new_random_noise() {
  return new gridlife.random.RandomNoise(null, null, null);
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS") && !goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return goog.labs.userAgent.browser.getOperaVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.labs.userAgent.browser.getOperaVersion_ = function(userAgent) {
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgent);
  var lastTuple = goog.array.peek(versionTuples);
  if (lastTuple[0] == "OPR" && lastTuple[1]) {
    return lastTuple[1];
  }
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.getVersionFromTuples_ = function(versionTuples) {
  goog.asserts.assert(versionTuples.length > 2, "Couldn't extract version tuple from user agent string");
  return versionTuples[2] && versionTuples[2][1] ? versionTuples[2][1] : "";
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit");
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = tuples[1];
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && goog.string.contains(ua, "Android");
  goog.userAgent.detectedIPhone_ = !!ua && goog.string.contains(ua, "iPhone");
  goog.userAgent.detectedIPad_ = !!ua && goog.string.contains(ua, "iPad");
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  if (goog.userAgent.GECKO) {
    re = /rv\:([^\);]+)(\)|;)/;
  } else {
    if (goog.userAgent.IE) {
      re = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.WEBKIT) {
        re = /WebKit\/(\S+)/;
      }
    }
  }
  if (re) {
    var arr = re.exec(goog.userAgent.getUserAgentString());
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj20599 = {};
  return obj20599;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3756__auto__ = port;
    if (and__3756__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4412__auto__ = port == null ? null : port;
    return function() {
      var or__3768__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj20601 = {};
  return obj20601;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn1_handler) {
  if (function() {
    var and__3756__auto__ = port;
    if (and__3756__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__4412__auto__ = port == null ? null : port;
    return function() {
      var or__3768__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn1_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj20603 = {};
  return obj20603;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3756__auto__ = chan;
    if (and__3756__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4412__auto__ = chan == null ? null : chan;
    return function() {
      var or__3768__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function closed_QMARK_(chan) {
  if (function() {
    var and__3756__auto__ = chan;
    if (and__3756__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__4412__auto__ = chan == null ? null : chan;
    return function() {
      var or__3768__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj20605 = {};
  return obj20605;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3756__auto__ = h;
    if (and__3756__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4412__auto__ = h == null ? null : h;
    return function() {
      var or__3768__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3756__auto__ = h;
    if (and__3756__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4412__auto__ = h == null ? null : h;
    return function() {
      var or__3768__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj20607 = {};
  return obj20607;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3756__auto__ = b;
    if (and__3756__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4412__auto__ = b == null ? null : b;
    return function() {
      var or__3768__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3756__auto__ = b;
    if (and__3756__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4412__auto__ = b == null ? null : b;
    return function() {
      var or__3768__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function add_BANG__STAR_(b, itm) {
  if (function() {
    var and__3756__auto__ = b;
    if (and__3756__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__4412__auto__ = b == null ? null : b;
    return function() {
      var or__3768__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function() {
  var add_BANG_ = null;
  var add_BANG___1 = function(b) {
    return b;
  };
  var add_BANG___2 = function(b, itm) {
    if (!(itm == null)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "itm", "itm", -713282527, null)))))].join(""));
    }
    return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
  };
  add_BANG_ = function(b, itm) {
    switch(arguments.length) {
      case 1:
        return add_BANG___1.call(this, b);
      case 2:
        return add_BANG___2.call(this, b, itm);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_BANG_.cljs$core$IFn$_invoke$arity$1 = add_BANG___1;
  add_BANG_.cljs$core$IFn$_invoke$arity$2 = add_BANG___2;
  return add_BANG_;
}();
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj20609 = {};
  return obj20609;
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t20557 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t20557 = function(f, fn_handler, meta20558) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta20558 = meta20558;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t20557.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t20557.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t20557.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t20557.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20559) {
      var self__ = this;
      var _20559__$1 = this;
      return self__.meta20558;
    };
    cljs.core.async.impl.ioc_helpers.t20557.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20559, meta20558__$1) {
      var self__ = this;
      var _20559__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t20557(self__.f, self__.fn_handler, meta20558__$1);
    };
    cljs.core.async.impl.ioc_helpers.t20557.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t20557.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t20557";
    cljs.core.async.impl.ioc_helpers.t20557.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
      return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async.impl.ioc-helpers/t20557");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t20557 = function __GT_t20557(f__$1, fn_handler__$1, meta20558) {
      return new cljs.core.async.impl.ioc_helpers.t20557(f__$1, fn_handler__$1, meta20558);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t20557(f, fn_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 19, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 30, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 27, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/mhurd/development/workspace/gridlife/target/cljsbuild-compiler-0/cljs/core/async/impl/ioc_helpers.cljs"], 
  null));
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e20561) {
    if (e20561 instanceof Object) {
      var ex = e20561;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e20561;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_20564_20566 = state;
    statearr_20564_20566[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_20564_20566[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_20565_20567 = state;
    statearr_20565_20567[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_20565_20567[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_20570_20572 = state;
    statearr_20570_20572[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_20570_20572[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_20571_20573 = state;
    statearr_20571_20573[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_20571_20573[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap, __hash) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4371__auto__, k__4372__auto__) {
  var self__ = this;
  var this__4371__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4371__auto____$1, k__4372__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4373__auto__, k20575, else__4374__auto__) {
  var self__ = this;
  var this__4373__auto____$1 = this;
  var G__20577 = k20575 instanceof cljs.core.Keyword ? k20575.fqn : null;
  switch(G__20577) {
    case "prev":
      return self__.prev;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "catch-block":
      return self__.catch_block;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20575, else__4374__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4385__auto__, writer__4386__auto__, opts__4387__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  var pr_pair__4388__auto__ = function(this__4385__auto____$1) {
    return function(keyval__4389__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4386__auto__, cljs.core.pr_writer, "", " ", "", opts__4387__auto__, keyval__4389__auto__);
    };
  }(this__4385__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4386__auto__, pr_pair__4388__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4387__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4369__auto__) {
  var self__ = this;
  var this__4369__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4365__auto__) {
  var self__ = this;
  var this__4365__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4366__auto__) {
  var self__ = this;
  var this__4366__auto____$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_imap.call(null, this__4366__auto____$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4367__auto__, other__4368__auto__) {
  var self__ = this;
  var this__4367__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3756__auto__ = other__4368__auto__;
    if (cljs.core.truth_(and__3756__auto__)) {
      return this__4367__auto____$1.constructor === other__4368__auto__.constructor && cljs.core.equiv_map.call(null, this__4367__auto____$1, other__4368__auto__);
    } else {
      return and__3756__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__4381__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4380__auto____$1), self__.__meta), k__4381__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4381__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4378__auto__, k__4379__auto__, G__20574) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  var pred__20578 = cljs.core.keyword_identical_QMARK_;
  var expr__20579 = k__4379__auto__;
  if (cljs.core.truth_(pred__20578.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__20579))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__20574, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__20578.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__20579))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__20574, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__20578.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__20579))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__20574, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__20578.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__20579))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__20574, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__20578.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__20579))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__20574, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4379__auto__, G__20574), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4383__auto__) {
  var self__ = this;
  var this__4383__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4370__auto__, G__20574) {
  var self__ = this;
  var this__4370__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__20574, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4376__auto__, entry__4377__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4377__auto__)) {
    return cljs.core._assoc.call(null, this__4376__auto____$1, cljs.core._nth.call(null, entry__4377__auto__, 0), cljs.core._nth.call(null, entry__4377__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4376__auto____$1, entry__4377__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4405__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4405__auto__, writer__4406__auto__) {
  return cljs.core._write.call(null, writer__4406__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__20576) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__20576), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__20576), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__20576), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__20576), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__20576), null, cljs.core.dissoc.call(null, G__20576, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)), 
  null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_20583 = state;
  statearr_20583[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_20583;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3756__auto__ = exception;
      if (cljs.core.truth_(and__3756__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3756__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3756__auto__ = exception;
        if (cljs.core.truth_(and__3756__auto__)) {
          var and__3756__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3756__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3756__auto____$1;
          }
        } else {
          return and__3756__auto__;
        }
      }())) {
        var statearr_20589 = state;
        statearr_20589[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_20589[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_20589[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_20589[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_20589;
      } else {
        if (cljs.core.truth_(function() {
          var and__3756__auto__ = exception;
          if (cljs.core.truth_(and__3756__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3756__auto__;
          }
        }())) {
          var statearr_20590_20594 = state;
          statearr_20590_20594[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__20595 = state;
          state = G__20595;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3756__auto__ = exception;
            if (cljs.core.truth_(and__3756__auto__)) {
              var and__3756__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3756__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3756__auto____$1;
              }
            } else {
              return and__3756__auto__;
            }
          }())) {
            var statearr_20591 = state;
            statearr_20591[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_20591[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_20591;
          } else {
            if (cljs.core.truth_(function() {
              var and__3756__auto__ = cljs.core.not.call(null, exception);
              if (and__3756__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3756__auto__;
              }
            }())) {
              var statearr_20592 = state;
              statearr_20592[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_20592[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_20592;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_20593 = state;
                statearr_20593[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_20593[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_20593;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.functions");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener) {
    Channel = function() {
      var iframe = document.createElement("iframe");
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (e.origin != origin && e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined") {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      head = head.next;
      var cb = head.cb;
      head.cb = null;
      cb();
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement("script")) {
    return function(cb) {
      var script = document.createElement("script");
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__20612 = cnt + 1;
      cnt = G__20612;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4655__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4655__auto__) {
      var v_20613 = this$.pop();
      if (keep_QMARK_.call(null, v_20613)) {
        this$.unshift(v_20613);
      } else {
      }
      var G__20614 = x + 1;
      x = G__20614;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("om.dom");
goog.require("cljs.core");
goog.require("goog.object");
om.dom.a = function() {
  var a__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var a = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21358__i = 0, G__21358__a = new Array(arguments.length - 1);
      while (G__21358__i < G__21358__a.length) {
        G__21358__a[G__21358__i] = arguments[G__21358__i + 1];
        ++G__21358__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21358__a, 0);
    }
    return a__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__21359) {
    var opts__10704__auto__ = cljs.core.first(arglist__21359);
    var children__10705__auto__ = cljs.core.rest(arglist__21359);
    return a__delegate(opts__10704__auto__, children__10705__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var abbr = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21360__i = 0, G__21360__a = new Array(arguments.length - 1);
      while (G__21360__i < G__21360__a.length) {
        G__21360__a[G__21360__i] = arguments[G__21360__i + 1];
        ++G__21360__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21360__a, 0);
    }
    return abbr__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__21361) {
    var opts__10704__auto__ = cljs.core.first(arglist__21361);
    var children__10705__auto__ = cljs.core.rest(arglist__21361);
    return abbr__delegate(opts__10704__auto__, children__10705__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var address = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21362__i = 0, G__21362__a = new Array(arguments.length - 1);
      while (G__21362__i < G__21362__a.length) {
        G__21362__a[G__21362__i] = arguments[G__21362__i + 1];
        ++G__21362__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21362__a, 0);
    }
    return address__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__21363) {
    var opts__10704__auto__ = cljs.core.first(arglist__21363);
    var children__10705__auto__ = cljs.core.rest(arglist__21363);
    return address__delegate(opts__10704__auto__, children__10705__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var area = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21364__i = 0, G__21364__a = new Array(arguments.length - 1);
      while (G__21364__i < G__21364__a.length) {
        G__21364__a[G__21364__i] = arguments[G__21364__i + 1];
        ++G__21364__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21364__a, 0);
    }
    return area__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__21365) {
    var opts__10704__auto__ = cljs.core.first(arglist__21365);
    var children__10705__auto__ = cljs.core.rest(arglist__21365);
    return area__delegate(opts__10704__auto__, children__10705__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var article = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21366__i = 0, G__21366__a = new Array(arguments.length - 1);
      while (G__21366__i < G__21366__a.length) {
        G__21366__a[G__21366__i] = arguments[G__21366__i + 1];
        ++G__21366__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21366__a, 0);
    }
    return article__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__21367) {
    var opts__10704__auto__ = cljs.core.first(arglist__21367);
    var children__10705__auto__ = cljs.core.rest(arglist__21367);
    return article__delegate(opts__10704__auto__, children__10705__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var aside = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21368__i = 0, G__21368__a = new Array(arguments.length - 1);
      while (G__21368__i < G__21368__a.length) {
        G__21368__a[G__21368__i] = arguments[G__21368__i + 1];
        ++G__21368__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21368__a, 0);
    }
    return aside__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__21369) {
    var opts__10704__auto__ = cljs.core.first(arglist__21369);
    var children__10705__auto__ = cljs.core.rest(arglist__21369);
    return aside__delegate(opts__10704__auto__, children__10705__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var audio = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21370__i = 0, G__21370__a = new Array(arguments.length - 1);
      while (G__21370__i < G__21370__a.length) {
        G__21370__a[G__21370__i] = arguments[G__21370__i + 1];
        ++G__21370__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21370__a, 0);
    }
    return audio__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__21371) {
    var opts__10704__auto__ = cljs.core.first(arglist__21371);
    var children__10705__auto__ = cljs.core.rest(arglist__21371);
    return audio__delegate(opts__10704__auto__, children__10705__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var b = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21372__i = 0, G__21372__a = new Array(arguments.length - 1);
      while (G__21372__i < G__21372__a.length) {
        G__21372__a[G__21372__i] = arguments[G__21372__i + 1];
        ++G__21372__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21372__a, 0);
    }
    return b__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__21373) {
    var opts__10704__auto__ = cljs.core.first(arglist__21373);
    var children__10705__auto__ = cljs.core.rest(arglist__21373);
    return b__delegate(opts__10704__auto__, children__10705__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var base = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21374__i = 0, G__21374__a = new Array(arguments.length - 1);
      while (G__21374__i < G__21374__a.length) {
        G__21374__a[G__21374__i] = arguments[G__21374__i + 1];
        ++G__21374__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21374__a, 0);
    }
    return base__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__21375) {
    var opts__10704__auto__ = cljs.core.first(arglist__21375);
    var children__10705__auto__ = cljs.core.rest(arglist__21375);
    return base__delegate(opts__10704__auto__, children__10705__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var bdi = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21376__i = 0, G__21376__a = new Array(arguments.length - 1);
      while (G__21376__i < G__21376__a.length) {
        G__21376__a[G__21376__i] = arguments[G__21376__i + 1];
        ++G__21376__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21376__a, 0);
    }
    return bdi__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__21377) {
    var opts__10704__auto__ = cljs.core.first(arglist__21377);
    var children__10705__auto__ = cljs.core.rest(arglist__21377);
    return bdi__delegate(opts__10704__auto__, children__10705__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var bdo = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21378__i = 0, G__21378__a = new Array(arguments.length - 1);
      while (G__21378__i < G__21378__a.length) {
        G__21378__a[G__21378__i] = arguments[G__21378__i + 1];
        ++G__21378__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21378__a, 0);
    }
    return bdo__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__21379) {
    var opts__10704__auto__ = cljs.core.first(arglist__21379);
    var children__10705__auto__ = cljs.core.rest(arglist__21379);
    return bdo__delegate(opts__10704__auto__, children__10705__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var big = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21380__i = 0, G__21380__a = new Array(arguments.length - 1);
      while (G__21380__i < G__21380__a.length) {
        G__21380__a[G__21380__i] = arguments[G__21380__i + 1];
        ++G__21380__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21380__a, 0);
    }
    return big__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__21381) {
    var opts__10704__auto__ = cljs.core.first(arglist__21381);
    var children__10705__auto__ = cljs.core.rest(arglist__21381);
    return big__delegate(opts__10704__auto__, children__10705__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var blockquote = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21382__i = 0, G__21382__a = new Array(arguments.length - 1);
      while (G__21382__i < G__21382__a.length) {
        G__21382__a[G__21382__i] = arguments[G__21382__i + 1];
        ++G__21382__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21382__a, 0);
    }
    return blockquote__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__21383) {
    var opts__10704__auto__ = cljs.core.first(arglist__21383);
    var children__10705__auto__ = cljs.core.rest(arglist__21383);
    return blockquote__delegate(opts__10704__auto__, children__10705__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var body = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21384__i = 0, G__21384__a = new Array(arguments.length - 1);
      while (G__21384__i < G__21384__a.length) {
        G__21384__a[G__21384__i] = arguments[G__21384__i + 1];
        ++G__21384__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21384__a, 0);
    }
    return body__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__21385) {
    var opts__10704__auto__ = cljs.core.first(arglist__21385);
    var children__10705__auto__ = cljs.core.rest(arglist__21385);
    return body__delegate(opts__10704__auto__, children__10705__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var br = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21386__i = 0, G__21386__a = new Array(arguments.length - 1);
      while (G__21386__i < G__21386__a.length) {
        G__21386__a[G__21386__i] = arguments[G__21386__i + 1];
        ++G__21386__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21386__a, 0);
    }
    return br__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__21387) {
    var opts__10704__auto__ = cljs.core.first(arglist__21387);
    var children__10705__auto__ = cljs.core.rest(arglist__21387);
    return br__delegate(opts__10704__auto__, children__10705__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var button = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21388__i = 0, G__21388__a = new Array(arguments.length - 1);
      while (G__21388__i < G__21388__a.length) {
        G__21388__a[G__21388__i] = arguments[G__21388__i + 1];
        ++G__21388__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21388__a, 0);
    }
    return button__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__21389) {
    var opts__10704__auto__ = cljs.core.first(arglist__21389);
    var children__10705__auto__ = cljs.core.rest(arglist__21389);
    return button__delegate(opts__10704__auto__, children__10705__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var canvas = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21390__i = 0, G__21390__a = new Array(arguments.length - 1);
      while (G__21390__i < G__21390__a.length) {
        G__21390__a[G__21390__i] = arguments[G__21390__i + 1];
        ++G__21390__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21390__a, 0);
    }
    return canvas__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__21391) {
    var opts__10704__auto__ = cljs.core.first(arglist__21391);
    var children__10705__auto__ = cljs.core.rest(arglist__21391);
    return canvas__delegate(opts__10704__auto__, children__10705__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var caption = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21392__i = 0, G__21392__a = new Array(arguments.length - 1);
      while (G__21392__i < G__21392__a.length) {
        G__21392__a[G__21392__i] = arguments[G__21392__i + 1];
        ++G__21392__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21392__a, 0);
    }
    return caption__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__21393) {
    var opts__10704__auto__ = cljs.core.first(arglist__21393);
    var children__10705__auto__ = cljs.core.rest(arglist__21393);
    return caption__delegate(opts__10704__auto__, children__10705__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var cite = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21394__i = 0, G__21394__a = new Array(arguments.length - 1);
      while (G__21394__i < G__21394__a.length) {
        G__21394__a[G__21394__i] = arguments[G__21394__i + 1];
        ++G__21394__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21394__a, 0);
    }
    return cite__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__21395) {
    var opts__10704__auto__ = cljs.core.first(arglist__21395);
    var children__10705__auto__ = cljs.core.rest(arglist__21395);
    return cite__delegate(opts__10704__auto__, children__10705__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var code = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21396__i = 0, G__21396__a = new Array(arguments.length - 1);
      while (G__21396__i < G__21396__a.length) {
        G__21396__a[G__21396__i] = arguments[G__21396__i + 1];
        ++G__21396__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21396__a, 0);
    }
    return code__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__21397) {
    var opts__10704__auto__ = cljs.core.first(arglist__21397);
    var children__10705__auto__ = cljs.core.rest(arglist__21397);
    return code__delegate(opts__10704__auto__, children__10705__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var col = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21398__i = 0, G__21398__a = new Array(arguments.length - 1);
      while (G__21398__i < G__21398__a.length) {
        G__21398__a[G__21398__i] = arguments[G__21398__i + 1];
        ++G__21398__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21398__a, 0);
    }
    return col__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__21399) {
    var opts__10704__auto__ = cljs.core.first(arglist__21399);
    var children__10705__auto__ = cljs.core.rest(arglist__21399);
    return col__delegate(opts__10704__auto__, children__10705__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var colgroup = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21400__i = 0, G__21400__a = new Array(arguments.length - 1);
      while (G__21400__i < G__21400__a.length) {
        G__21400__a[G__21400__i] = arguments[G__21400__i + 1];
        ++G__21400__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21400__a, 0);
    }
    return colgroup__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__21401) {
    var opts__10704__auto__ = cljs.core.first(arglist__21401);
    var children__10705__auto__ = cljs.core.rest(arglist__21401);
    return colgroup__delegate(opts__10704__auto__, children__10705__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var data = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21402__i = 0, G__21402__a = new Array(arguments.length - 1);
      while (G__21402__i < G__21402__a.length) {
        G__21402__a[G__21402__i] = arguments[G__21402__i + 1];
        ++G__21402__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21402__a, 0);
    }
    return data__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__21403) {
    var opts__10704__auto__ = cljs.core.first(arglist__21403);
    var children__10705__auto__ = cljs.core.rest(arglist__21403);
    return data__delegate(opts__10704__auto__, children__10705__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var datalist = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21404__i = 0, G__21404__a = new Array(arguments.length - 1);
      while (G__21404__i < G__21404__a.length) {
        G__21404__a[G__21404__i] = arguments[G__21404__i + 1];
        ++G__21404__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21404__a, 0);
    }
    return datalist__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__21405) {
    var opts__10704__auto__ = cljs.core.first(arglist__21405);
    var children__10705__auto__ = cljs.core.rest(arglist__21405);
    return datalist__delegate(opts__10704__auto__, children__10705__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var dd = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21406__i = 0, G__21406__a = new Array(arguments.length - 1);
      while (G__21406__i < G__21406__a.length) {
        G__21406__a[G__21406__i] = arguments[G__21406__i + 1];
        ++G__21406__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21406__a, 0);
    }
    return dd__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__21407) {
    var opts__10704__auto__ = cljs.core.first(arglist__21407);
    var children__10705__auto__ = cljs.core.rest(arglist__21407);
    return dd__delegate(opts__10704__auto__, children__10705__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var del = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21408__i = 0, G__21408__a = new Array(arguments.length - 1);
      while (G__21408__i < G__21408__a.length) {
        G__21408__a[G__21408__i] = arguments[G__21408__i + 1];
        ++G__21408__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21408__a, 0);
    }
    return del__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__21409) {
    var opts__10704__auto__ = cljs.core.first(arglist__21409);
    var children__10705__auto__ = cljs.core.rest(arglist__21409);
    return del__delegate(opts__10704__auto__, children__10705__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var dfn = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21410__i = 0, G__21410__a = new Array(arguments.length - 1);
      while (G__21410__i < G__21410__a.length) {
        G__21410__a[G__21410__i] = arguments[G__21410__i + 1];
        ++G__21410__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21410__a, 0);
    }
    return dfn__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__21411) {
    var opts__10704__auto__ = cljs.core.first(arglist__21411);
    var children__10705__auto__ = cljs.core.rest(arglist__21411);
    return dfn__delegate(opts__10704__auto__, children__10705__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var div = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21412__i = 0, G__21412__a = new Array(arguments.length - 1);
      while (G__21412__i < G__21412__a.length) {
        G__21412__a[G__21412__i] = arguments[G__21412__i + 1];
        ++G__21412__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21412__a, 0);
    }
    return div__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__21413) {
    var opts__10704__auto__ = cljs.core.first(arglist__21413);
    var children__10705__auto__ = cljs.core.rest(arglist__21413);
    return div__delegate(opts__10704__auto__, children__10705__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var dl = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21414__i = 0, G__21414__a = new Array(arguments.length - 1);
      while (G__21414__i < G__21414__a.length) {
        G__21414__a[G__21414__i] = arguments[G__21414__i + 1];
        ++G__21414__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21414__a, 0);
    }
    return dl__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__21415) {
    var opts__10704__auto__ = cljs.core.first(arglist__21415);
    var children__10705__auto__ = cljs.core.rest(arglist__21415);
    return dl__delegate(opts__10704__auto__, children__10705__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var dt = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21416__i = 0, G__21416__a = new Array(arguments.length - 1);
      while (G__21416__i < G__21416__a.length) {
        G__21416__a[G__21416__i] = arguments[G__21416__i + 1];
        ++G__21416__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21416__a, 0);
    }
    return dt__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__21417) {
    var opts__10704__auto__ = cljs.core.first(arglist__21417);
    var children__10705__auto__ = cljs.core.rest(arglist__21417);
    return dt__delegate(opts__10704__auto__, children__10705__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var em = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21418__i = 0, G__21418__a = new Array(arguments.length - 1);
      while (G__21418__i < G__21418__a.length) {
        G__21418__a[G__21418__i] = arguments[G__21418__i + 1];
        ++G__21418__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21418__a, 0);
    }
    return em__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__21419) {
    var opts__10704__auto__ = cljs.core.first(arglist__21419);
    var children__10705__auto__ = cljs.core.rest(arglist__21419);
    return em__delegate(opts__10704__auto__, children__10705__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var embed = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21420__i = 0, G__21420__a = new Array(arguments.length - 1);
      while (G__21420__i < G__21420__a.length) {
        G__21420__a[G__21420__i] = arguments[G__21420__i + 1];
        ++G__21420__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21420__a, 0);
    }
    return embed__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__21421) {
    var opts__10704__auto__ = cljs.core.first(arglist__21421);
    var children__10705__auto__ = cljs.core.rest(arglist__21421);
    return embed__delegate(opts__10704__auto__, children__10705__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var fieldset = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21422__i = 0, G__21422__a = new Array(arguments.length - 1);
      while (G__21422__i < G__21422__a.length) {
        G__21422__a[G__21422__i] = arguments[G__21422__i + 1];
        ++G__21422__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21422__a, 0);
    }
    return fieldset__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__21423) {
    var opts__10704__auto__ = cljs.core.first(arglist__21423);
    var children__10705__auto__ = cljs.core.rest(arglist__21423);
    return fieldset__delegate(opts__10704__auto__, children__10705__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var figcaption = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21424__i = 0, G__21424__a = new Array(arguments.length - 1);
      while (G__21424__i < G__21424__a.length) {
        G__21424__a[G__21424__i] = arguments[G__21424__i + 1];
        ++G__21424__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21424__a, 0);
    }
    return figcaption__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__21425) {
    var opts__10704__auto__ = cljs.core.first(arglist__21425);
    var children__10705__auto__ = cljs.core.rest(arglist__21425);
    return figcaption__delegate(opts__10704__auto__, children__10705__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var figure = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21426__i = 0, G__21426__a = new Array(arguments.length - 1);
      while (G__21426__i < G__21426__a.length) {
        G__21426__a[G__21426__i] = arguments[G__21426__i + 1];
        ++G__21426__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21426__a, 0);
    }
    return figure__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__21427) {
    var opts__10704__auto__ = cljs.core.first(arglist__21427);
    var children__10705__auto__ = cljs.core.rest(arglist__21427);
    return figure__delegate(opts__10704__auto__, children__10705__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var footer = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21428__i = 0, G__21428__a = new Array(arguments.length - 1);
      while (G__21428__i < G__21428__a.length) {
        G__21428__a[G__21428__i] = arguments[G__21428__i + 1];
        ++G__21428__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21428__a, 0);
    }
    return footer__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__21429) {
    var opts__10704__auto__ = cljs.core.first(arglist__21429);
    var children__10705__auto__ = cljs.core.rest(arglist__21429);
    return footer__delegate(opts__10704__auto__, children__10705__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var form = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21430__i = 0, G__21430__a = new Array(arguments.length - 1);
      while (G__21430__i < G__21430__a.length) {
        G__21430__a[G__21430__i] = arguments[G__21430__i + 1];
        ++G__21430__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21430__a, 0);
    }
    return form__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__21431) {
    var opts__10704__auto__ = cljs.core.first(arglist__21431);
    var children__10705__auto__ = cljs.core.rest(arglist__21431);
    return form__delegate(opts__10704__auto__, children__10705__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var h1 = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21432__i = 0, G__21432__a = new Array(arguments.length - 1);
      while (G__21432__i < G__21432__a.length) {
        G__21432__a[G__21432__i] = arguments[G__21432__i + 1];
        ++G__21432__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21432__a, 0);
    }
    return h1__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__21433) {
    var opts__10704__auto__ = cljs.core.first(arglist__21433);
    var children__10705__auto__ = cljs.core.rest(arglist__21433);
    return h1__delegate(opts__10704__auto__, children__10705__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var h2 = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21434__i = 0, G__21434__a = new Array(arguments.length - 1);
      while (G__21434__i < G__21434__a.length) {
        G__21434__a[G__21434__i] = arguments[G__21434__i + 1];
        ++G__21434__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21434__a, 0);
    }
    return h2__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__21435) {
    var opts__10704__auto__ = cljs.core.first(arglist__21435);
    var children__10705__auto__ = cljs.core.rest(arglist__21435);
    return h2__delegate(opts__10704__auto__, children__10705__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var h3 = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21436__i = 0, G__21436__a = new Array(arguments.length - 1);
      while (G__21436__i < G__21436__a.length) {
        G__21436__a[G__21436__i] = arguments[G__21436__i + 1];
        ++G__21436__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21436__a, 0);
    }
    return h3__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__21437) {
    var opts__10704__auto__ = cljs.core.first(arglist__21437);
    var children__10705__auto__ = cljs.core.rest(arglist__21437);
    return h3__delegate(opts__10704__auto__, children__10705__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var h4 = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21438__i = 0, G__21438__a = new Array(arguments.length - 1);
      while (G__21438__i < G__21438__a.length) {
        G__21438__a[G__21438__i] = arguments[G__21438__i + 1];
        ++G__21438__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21438__a, 0);
    }
    return h4__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__21439) {
    var opts__10704__auto__ = cljs.core.first(arglist__21439);
    var children__10705__auto__ = cljs.core.rest(arglist__21439);
    return h4__delegate(opts__10704__auto__, children__10705__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var h5 = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21440__i = 0, G__21440__a = new Array(arguments.length - 1);
      while (G__21440__i < G__21440__a.length) {
        G__21440__a[G__21440__i] = arguments[G__21440__i + 1];
        ++G__21440__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21440__a, 0);
    }
    return h5__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__21441) {
    var opts__10704__auto__ = cljs.core.first(arglist__21441);
    var children__10705__auto__ = cljs.core.rest(arglist__21441);
    return h5__delegate(opts__10704__auto__, children__10705__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var h6 = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21442__i = 0, G__21442__a = new Array(arguments.length - 1);
      while (G__21442__i < G__21442__a.length) {
        G__21442__a[G__21442__i] = arguments[G__21442__i + 1];
        ++G__21442__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21442__a, 0);
    }
    return h6__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__21443) {
    var opts__10704__auto__ = cljs.core.first(arglist__21443);
    var children__10705__auto__ = cljs.core.rest(arglist__21443);
    return h6__delegate(opts__10704__auto__, children__10705__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var head = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21444__i = 0, G__21444__a = new Array(arguments.length - 1);
      while (G__21444__i < G__21444__a.length) {
        G__21444__a[G__21444__i] = arguments[G__21444__i + 1];
        ++G__21444__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21444__a, 0);
    }
    return head__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__21445) {
    var opts__10704__auto__ = cljs.core.first(arglist__21445);
    var children__10705__auto__ = cljs.core.rest(arglist__21445);
    return head__delegate(opts__10704__auto__, children__10705__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var header = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21446__i = 0, G__21446__a = new Array(arguments.length - 1);
      while (G__21446__i < G__21446__a.length) {
        G__21446__a[G__21446__i] = arguments[G__21446__i + 1];
        ++G__21446__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21446__a, 0);
    }
    return header__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__21447) {
    var opts__10704__auto__ = cljs.core.first(arglist__21447);
    var children__10705__auto__ = cljs.core.rest(arglist__21447);
    return header__delegate(opts__10704__auto__, children__10705__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var hr = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21448__i = 0, G__21448__a = new Array(arguments.length - 1);
      while (G__21448__i < G__21448__a.length) {
        G__21448__a[G__21448__i] = arguments[G__21448__i + 1];
        ++G__21448__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21448__a, 0);
    }
    return hr__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__21449) {
    var opts__10704__auto__ = cljs.core.first(arglist__21449);
    var children__10705__auto__ = cljs.core.rest(arglist__21449);
    return hr__delegate(opts__10704__auto__, children__10705__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var html = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21450__i = 0, G__21450__a = new Array(arguments.length - 1);
      while (G__21450__i < G__21450__a.length) {
        G__21450__a[G__21450__i] = arguments[G__21450__i + 1];
        ++G__21450__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21450__a, 0);
    }
    return html__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__21451) {
    var opts__10704__auto__ = cljs.core.first(arglist__21451);
    var children__10705__auto__ = cljs.core.rest(arglist__21451);
    return html__delegate(opts__10704__auto__, children__10705__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var i = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21452__i = 0, G__21452__a = new Array(arguments.length - 1);
      while (G__21452__i < G__21452__a.length) {
        G__21452__a[G__21452__i] = arguments[G__21452__i + 1];
        ++G__21452__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21452__a, 0);
    }
    return i__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__21453) {
    var opts__10704__auto__ = cljs.core.first(arglist__21453);
    var children__10705__auto__ = cljs.core.rest(arglist__21453);
    return i__delegate(opts__10704__auto__, children__10705__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var iframe = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21454__i = 0, G__21454__a = new Array(arguments.length - 1);
      while (G__21454__i < G__21454__a.length) {
        G__21454__a[G__21454__i] = arguments[G__21454__i + 1];
        ++G__21454__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21454__a, 0);
    }
    return iframe__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__21455) {
    var opts__10704__auto__ = cljs.core.first(arglist__21455);
    var children__10705__auto__ = cljs.core.rest(arglist__21455);
    return iframe__delegate(opts__10704__auto__, children__10705__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var img = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21456__i = 0, G__21456__a = new Array(arguments.length - 1);
      while (G__21456__i < G__21456__a.length) {
        G__21456__a[G__21456__i] = arguments[G__21456__i + 1];
        ++G__21456__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21456__a, 0);
    }
    return img__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__21457) {
    var opts__10704__auto__ = cljs.core.first(arglist__21457);
    var children__10705__auto__ = cljs.core.rest(arglist__21457);
    return img__delegate(opts__10704__auto__, children__10705__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var ins = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21458__i = 0, G__21458__a = new Array(arguments.length - 1);
      while (G__21458__i < G__21458__a.length) {
        G__21458__a[G__21458__i] = arguments[G__21458__i + 1];
        ++G__21458__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21458__a, 0);
    }
    return ins__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__21459) {
    var opts__10704__auto__ = cljs.core.first(arglist__21459);
    var children__10705__auto__ = cljs.core.rest(arglist__21459);
    return ins__delegate(opts__10704__auto__, children__10705__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var kbd = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21460__i = 0, G__21460__a = new Array(arguments.length - 1);
      while (G__21460__i < G__21460__a.length) {
        G__21460__a[G__21460__i] = arguments[G__21460__i + 1];
        ++G__21460__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21460__a, 0);
    }
    return kbd__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__21461) {
    var opts__10704__auto__ = cljs.core.first(arglist__21461);
    var children__10705__auto__ = cljs.core.rest(arglist__21461);
    return kbd__delegate(opts__10704__auto__, children__10705__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var keygen = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21462__i = 0, G__21462__a = new Array(arguments.length - 1);
      while (G__21462__i < G__21462__a.length) {
        G__21462__a[G__21462__i] = arguments[G__21462__i + 1];
        ++G__21462__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21462__a, 0);
    }
    return keygen__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__21463) {
    var opts__10704__auto__ = cljs.core.first(arglist__21463);
    var children__10705__auto__ = cljs.core.rest(arglist__21463);
    return keygen__delegate(opts__10704__auto__, children__10705__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var label = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21464__i = 0, G__21464__a = new Array(arguments.length - 1);
      while (G__21464__i < G__21464__a.length) {
        G__21464__a[G__21464__i] = arguments[G__21464__i + 1];
        ++G__21464__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21464__a, 0);
    }
    return label__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__21465) {
    var opts__10704__auto__ = cljs.core.first(arglist__21465);
    var children__10705__auto__ = cljs.core.rest(arglist__21465);
    return label__delegate(opts__10704__auto__, children__10705__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var legend = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21466__i = 0, G__21466__a = new Array(arguments.length - 1);
      while (G__21466__i < G__21466__a.length) {
        G__21466__a[G__21466__i] = arguments[G__21466__i + 1];
        ++G__21466__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21466__a, 0);
    }
    return legend__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__21467) {
    var opts__10704__auto__ = cljs.core.first(arglist__21467);
    var children__10705__auto__ = cljs.core.rest(arglist__21467);
    return legend__delegate(opts__10704__auto__, children__10705__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var li = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21468__i = 0, G__21468__a = new Array(arguments.length - 1);
      while (G__21468__i < G__21468__a.length) {
        G__21468__a[G__21468__i] = arguments[G__21468__i + 1];
        ++G__21468__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21468__a, 0);
    }
    return li__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__21469) {
    var opts__10704__auto__ = cljs.core.first(arglist__21469);
    var children__10705__auto__ = cljs.core.rest(arglist__21469);
    return li__delegate(opts__10704__auto__, children__10705__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var link = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21470__i = 0, G__21470__a = new Array(arguments.length - 1);
      while (G__21470__i < G__21470__a.length) {
        G__21470__a[G__21470__i] = arguments[G__21470__i + 1];
        ++G__21470__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21470__a, 0);
    }
    return link__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__21471) {
    var opts__10704__auto__ = cljs.core.first(arglist__21471);
    var children__10705__auto__ = cljs.core.rest(arglist__21471);
    return link__delegate(opts__10704__auto__, children__10705__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var main = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21472__i = 0, G__21472__a = new Array(arguments.length - 1);
      while (G__21472__i < G__21472__a.length) {
        G__21472__a[G__21472__i] = arguments[G__21472__i + 1];
        ++G__21472__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21472__a, 0);
    }
    return main__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__21473) {
    var opts__10704__auto__ = cljs.core.first(arglist__21473);
    var children__10705__auto__ = cljs.core.rest(arglist__21473);
    return main__delegate(opts__10704__auto__, children__10705__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var map = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21474__i = 0, G__21474__a = new Array(arguments.length - 1);
      while (G__21474__i < G__21474__a.length) {
        G__21474__a[G__21474__i] = arguments[G__21474__i + 1];
        ++G__21474__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21474__a, 0);
    }
    return map__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__21475) {
    var opts__10704__auto__ = cljs.core.first(arglist__21475);
    var children__10705__auto__ = cljs.core.rest(arglist__21475);
    return map__delegate(opts__10704__auto__, children__10705__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var mark = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21476__i = 0, G__21476__a = new Array(arguments.length - 1);
      while (G__21476__i < G__21476__a.length) {
        G__21476__a[G__21476__i] = arguments[G__21476__i + 1];
        ++G__21476__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21476__a, 0);
    }
    return mark__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__21477) {
    var opts__10704__auto__ = cljs.core.first(arglist__21477);
    var children__10705__auto__ = cljs.core.rest(arglist__21477);
    return mark__delegate(opts__10704__auto__, children__10705__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.marquee = function() {
  var marquee__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.marquee.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var marquee = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21478__i = 0, G__21478__a = new Array(arguments.length - 1);
      while (G__21478__i < G__21478__a.length) {
        G__21478__a[G__21478__i] = arguments[G__21478__i + 1];
        ++G__21478__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21478__a, 0);
    }
    return marquee__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  marquee.cljs$lang$maxFixedArity = 1;
  marquee.cljs$lang$applyTo = function(arglist__21479) {
    var opts__10704__auto__ = cljs.core.first(arglist__21479);
    var children__10705__auto__ = cljs.core.rest(arglist__21479);
    return marquee__delegate(opts__10704__auto__, children__10705__auto__);
  };
  marquee.cljs$core$IFn$_invoke$arity$variadic = marquee__delegate;
  return marquee;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var menu = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21480__i = 0, G__21480__a = new Array(arguments.length - 1);
      while (G__21480__i < G__21480__a.length) {
        G__21480__a[G__21480__i] = arguments[G__21480__i + 1];
        ++G__21480__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21480__a, 0);
    }
    return menu__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__21481) {
    var opts__10704__auto__ = cljs.core.first(arglist__21481);
    var children__10705__auto__ = cljs.core.rest(arglist__21481);
    return menu__delegate(opts__10704__auto__, children__10705__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var menuitem = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21482__i = 0, G__21482__a = new Array(arguments.length - 1);
      while (G__21482__i < G__21482__a.length) {
        G__21482__a[G__21482__i] = arguments[G__21482__i + 1];
        ++G__21482__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21482__a, 0);
    }
    return menuitem__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__21483) {
    var opts__10704__auto__ = cljs.core.first(arglist__21483);
    var children__10705__auto__ = cljs.core.rest(arglist__21483);
    return menuitem__delegate(opts__10704__auto__, children__10705__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var meta = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21484__i = 0, G__21484__a = new Array(arguments.length - 1);
      while (G__21484__i < G__21484__a.length) {
        G__21484__a[G__21484__i] = arguments[G__21484__i + 1];
        ++G__21484__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21484__a, 0);
    }
    return meta__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__21485) {
    var opts__10704__auto__ = cljs.core.first(arglist__21485);
    var children__10705__auto__ = cljs.core.rest(arglist__21485);
    return meta__delegate(opts__10704__auto__, children__10705__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var meter = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21486__i = 0, G__21486__a = new Array(arguments.length - 1);
      while (G__21486__i < G__21486__a.length) {
        G__21486__a[G__21486__i] = arguments[G__21486__i + 1];
        ++G__21486__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21486__a, 0);
    }
    return meter__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__21487) {
    var opts__10704__auto__ = cljs.core.first(arglist__21487);
    var children__10705__auto__ = cljs.core.rest(arglist__21487);
    return meter__delegate(opts__10704__auto__, children__10705__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var nav = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21488__i = 0, G__21488__a = new Array(arguments.length - 1);
      while (G__21488__i < G__21488__a.length) {
        G__21488__a[G__21488__i] = arguments[G__21488__i + 1];
        ++G__21488__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21488__a, 0);
    }
    return nav__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__21489) {
    var opts__10704__auto__ = cljs.core.first(arglist__21489);
    var children__10705__auto__ = cljs.core.rest(arglist__21489);
    return nav__delegate(opts__10704__auto__, children__10705__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var noscript = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21490__i = 0, G__21490__a = new Array(arguments.length - 1);
      while (G__21490__i < G__21490__a.length) {
        G__21490__a[G__21490__i] = arguments[G__21490__i + 1];
        ++G__21490__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21490__a, 0);
    }
    return noscript__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__21491) {
    var opts__10704__auto__ = cljs.core.first(arglist__21491);
    var children__10705__auto__ = cljs.core.rest(arglist__21491);
    return noscript__delegate(opts__10704__auto__, children__10705__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var object = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21492__i = 0, G__21492__a = new Array(arguments.length - 1);
      while (G__21492__i < G__21492__a.length) {
        G__21492__a[G__21492__i] = arguments[G__21492__i + 1];
        ++G__21492__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21492__a, 0);
    }
    return object__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__21493) {
    var opts__10704__auto__ = cljs.core.first(arglist__21493);
    var children__10705__auto__ = cljs.core.rest(arglist__21493);
    return object__delegate(opts__10704__auto__, children__10705__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var ol = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21494__i = 0, G__21494__a = new Array(arguments.length - 1);
      while (G__21494__i < G__21494__a.length) {
        G__21494__a[G__21494__i] = arguments[G__21494__i + 1];
        ++G__21494__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21494__a, 0);
    }
    return ol__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__21495) {
    var opts__10704__auto__ = cljs.core.first(arglist__21495);
    var children__10705__auto__ = cljs.core.rest(arglist__21495);
    return ol__delegate(opts__10704__auto__, children__10705__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var optgroup = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21496__i = 0, G__21496__a = new Array(arguments.length - 1);
      while (G__21496__i < G__21496__a.length) {
        G__21496__a[G__21496__i] = arguments[G__21496__i + 1];
        ++G__21496__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21496__a, 0);
    }
    return optgroup__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__21497) {
    var opts__10704__auto__ = cljs.core.first(arglist__21497);
    var children__10705__auto__ = cljs.core.rest(arglist__21497);
    return optgroup__delegate(opts__10704__auto__, children__10705__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var output = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21498__i = 0, G__21498__a = new Array(arguments.length - 1);
      while (G__21498__i < G__21498__a.length) {
        G__21498__a[G__21498__i] = arguments[G__21498__i + 1];
        ++G__21498__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21498__a, 0);
    }
    return output__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__21499) {
    var opts__10704__auto__ = cljs.core.first(arglist__21499);
    var children__10705__auto__ = cljs.core.rest(arglist__21499);
    return output__delegate(opts__10704__auto__, children__10705__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var p = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21500__i = 0, G__21500__a = new Array(arguments.length - 1);
      while (G__21500__i < G__21500__a.length) {
        G__21500__a[G__21500__i] = arguments[G__21500__i + 1];
        ++G__21500__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21500__a, 0);
    }
    return p__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__21501) {
    var opts__10704__auto__ = cljs.core.first(arglist__21501);
    var children__10705__auto__ = cljs.core.rest(arglist__21501);
    return p__delegate(opts__10704__auto__, children__10705__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var param = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21502__i = 0, G__21502__a = new Array(arguments.length - 1);
      while (G__21502__i < G__21502__a.length) {
        G__21502__a[G__21502__i] = arguments[G__21502__i + 1];
        ++G__21502__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21502__a, 0);
    }
    return param__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__21503) {
    var opts__10704__auto__ = cljs.core.first(arglist__21503);
    var children__10705__auto__ = cljs.core.rest(arglist__21503);
    return param__delegate(opts__10704__auto__, children__10705__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var pre = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21504__i = 0, G__21504__a = new Array(arguments.length - 1);
      while (G__21504__i < G__21504__a.length) {
        G__21504__a[G__21504__i] = arguments[G__21504__i + 1];
        ++G__21504__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21504__a, 0);
    }
    return pre__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__21505) {
    var opts__10704__auto__ = cljs.core.first(arglist__21505);
    var children__10705__auto__ = cljs.core.rest(arglist__21505);
    return pre__delegate(opts__10704__auto__, children__10705__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var progress = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21506__i = 0, G__21506__a = new Array(arguments.length - 1);
      while (G__21506__i < G__21506__a.length) {
        G__21506__a[G__21506__i] = arguments[G__21506__i + 1];
        ++G__21506__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21506__a, 0);
    }
    return progress__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__21507) {
    var opts__10704__auto__ = cljs.core.first(arglist__21507);
    var children__10705__auto__ = cljs.core.rest(arglist__21507);
    return progress__delegate(opts__10704__auto__, children__10705__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var q = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21508__i = 0, G__21508__a = new Array(arguments.length - 1);
      while (G__21508__i < G__21508__a.length) {
        G__21508__a[G__21508__i] = arguments[G__21508__i + 1];
        ++G__21508__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21508__a, 0);
    }
    return q__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__21509) {
    var opts__10704__auto__ = cljs.core.first(arglist__21509);
    var children__10705__auto__ = cljs.core.rest(arglist__21509);
    return q__delegate(opts__10704__auto__, children__10705__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var rp = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21510__i = 0, G__21510__a = new Array(arguments.length - 1);
      while (G__21510__i < G__21510__a.length) {
        G__21510__a[G__21510__i] = arguments[G__21510__i + 1];
        ++G__21510__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21510__a, 0);
    }
    return rp__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__21511) {
    var opts__10704__auto__ = cljs.core.first(arglist__21511);
    var children__10705__auto__ = cljs.core.rest(arglist__21511);
    return rp__delegate(opts__10704__auto__, children__10705__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var rt = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21512__i = 0, G__21512__a = new Array(arguments.length - 1);
      while (G__21512__i < G__21512__a.length) {
        G__21512__a[G__21512__i] = arguments[G__21512__i + 1];
        ++G__21512__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21512__a, 0);
    }
    return rt__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__21513) {
    var opts__10704__auto__ = cljs.core.first(arglist__21513);
    var children__10705__auto__ = cljs.core.rest(arglist__21513);
    return rt__delegate(opts__10704__auto__, children__10705__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var ruby = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21514__i = 0, G__21514__a = new Array(arguments.length - 1);
      while (G__21514__i < G__21514__a.length) {
        G__21514__a[G__21514__i] = arguments[G__21514__i + 1];
        ++G__21514__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21514__a, 0);
    }
    return ruby__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__21515) {
    var opts__10704__auto__ = cljs.core.first(arglist__21515);
    var children__10705__auto__ = cljs.core.rest(arglist__21515);
    return ruby__delegate(opts__10704__auto__, children__10705__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var s = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21516__i = 0, G__21516__a = new Array(arguments.length - 1);
      while (G__21516__i < G__21516__a.length) {
        G__21516__a[G__21516__i] = arguments[G__21516__i + 1];
        ++G__21516__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21516__a, 0);
    }
    return s__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__21517) {
    var opts__10704__auto__ = cljs.core.first(arglist__21517);
    var children__10705__auto__ = cljs.core.rest(arglist__21517);
    return s__delegate(opts__10704__auto__, children__10705__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var samp = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21518__i = 0, G__21518__a = new Array(arguments.length - 1);
      while (G__21518__i < G__21518__a.length) {
        G__21518__a[G__21518__i] = arguments[G__21518__i + 1];
        ++G__21518__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21518__a, 0);
    }
    return samp__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__21519) {
    var opts__10704__auto__ = cljs.core.first(arglist__21519);
    var children__10705__auto__ = cljs.core.rest(arglist__21519);
    return samp__delegate(opts__10704__auto__, children__10705__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var script = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21520__i = 0, G__21520__a = new Array(arguments.length - 1);
      while (G__21520__i < G__21520__a.length) {
        G__21520__a[G__21520__i] = arguments[G__21520__i + 1];
        ++G__21520__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21520__a, 0);
    }
    return script__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__21521) {
    var opts__10704__auto__ = cljs.core.first(arglist__21521);
    var children__10705__auto__ = cljs.core.rest(arglist__21521);
    return script__delegate(opts__10704__auto__, children__10705__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var section = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21522__i = 0, G__21522__a = new Array(arguments.length - 1);
      while (G__21522__i < G__21522__a.length) {
        G__21522__a[G__21522__i] = arguments[G__21522__i + 1];
        ++G__21522__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21522__a, 0);
    }
    return section__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__21523) {
    var opts__10704__auto__ = cljs.core.first(arglist__21523);
    var children__10705__auto__ = cljs.core.rest(arglist__21523);
    return section__delegate(opts__10704__auto__, children__10705__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var select = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21524__i = 0, G__21524__a = new Array(arguments.length - 1);
      while (G__21524__i < G__21524__a.length) {
        G__21524__a[G__21524__i] = arguments[G__21524__i + 1];
        ++G__21524__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21524__a, 0);
    }
    return select__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__21525) {
    var opts__10704__auto__ = cljs.core.first(arglist__21525);
    var children__10705__auto__ = cljs.core.rest(arglist__21525);
    return select__delegate(opts__10704__auto__, children__10705__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var small = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21526__i = 0, G__21526__a = new Array(arguments.length - 1);
      while (G__21526__i < G__21526__a.length) {
        G__21526__a[G__21526__i] = arguments[G__21526__i + 1];
        ++G__21526__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21526__a, 0);
    }
    return small__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__21527) {
    var opts__10704__auto__ = cljs.core.first(arglist__21527);
    var children__10705__auto__ = cljs.core.rest(arglist__21527);
    return small__delegate(opts__10704__auto__, children__10705__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var source = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21528__i = 0, G__21528__a = new Array(arguments.length - 1);
      while (G__21528__i < G__21528__a.length) {
        G__21528__a[G__21528__i] = arguments[G__21528__i + 1];
        ++G__21528__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21528__a, 0);
    }
    return source__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__21529) {
    var opts__10704__auto__ = cljs.core.first(arglist__21529);
    var children__10705__auto__ = cljs.core.rest(arglist__21529);
    return source__delegate(opts__10704__auto__, children__10705__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var span = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21530__i = 0, G__21530__a = new Array(arguments.length - 1);
      while (G__21530__i < G__21530__a.length) {
        G__21530__a[G__21530__i] = arguments[G__21530__i + 1];
        ++G__21530__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21530__a, 0);
    }
    return span__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__21531) {
    var opts__10704__auto__ = cljs.core.first(arglist__21531);
    var children__10705__auto__ = cljs.core.rest(arglist__21531);
    return span__delegate(opts__10704__auto__, children__10705__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var strong = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21532__i = 0, G__21532__a = new Array(arguments.length - 1);
      while (G__21532__i < G__21532__a.length) {
        G__21532__a[G__21532__i] = arguments[G__21532__i + 1];
        ++G__21532__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21532__a, 0);
    }
    return strong__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__21533) {
    var opts__10704__auto__ = cljs.core.first(arglist__21533);
    var children__10705__auto__ = cljs.core.rest(arglist__21533);
    return strong__delegate(opts__10704__auto__, children__10705__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var style = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21534__i = 0, G__21534__a = new Array(arguments.length - 1);
      while (G__21534__i < G__21534__a.length) {
        G__21534__a[G__21534__i] = arguments[G__21534__i + 1];
        ++G__21534__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21534__a, 0);
    }
    return style__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__21535) {
    var opts__10704__auto__ = cljs.core.first(arglist__21535);
    var children__10705__auto__ = cljs.core.rest(arglist__21535);
    return style__delegate(opts__10704__auto__, children__10705__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var sub = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21536__i = 0, G__21536__a = new Array(arguments.length - 1);
      while (G__21536__i < G__21536__a.length) {
        G__21536__a[G__21536__i] = arguments[G__21536__i + 1];
        ++G__21536__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21536__a, 0);
    }
    return sub__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__21537) {
    var opts__10704__auto__ = cljs.core.first(arglist__21537);
    var children__10705__auto__ = cljs.core.rest(arglist__21537);
    return sub__delegate(opts__10704__auto__, children__10705__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var summary = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21538__i = 0, G__21538__a = new Array(arguments.length - 1);
      while (G__21538__i < G__21538__a.length) {
        G__21538__a[G__21538__i] = arguments[G__21538__i + 1];
        ++G__21538__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21538__a, 0);
    }
    return summary__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__21539) {
    var opts__10704__auto__ = cljs.core.first(arglist__21539);
    var children__10705__auto__ = cljs.core.rest(arglist__21539);
    return summary__delegate(opts__10704__auto__, children__10705__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var sup = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21540__i = 0, G__21540__a = new Array(arguments.length - 1);
      while (G__21540__i < G__21540__a.length) {
        G__21540__a[G__21540__i] = arguments[G__21540__i + 1];
        ++G__21540__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21540__a, 0);
    }
    return sup__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__21541) {
    var opts__10704__auto__ = cljs.core.first(arglist__21541);
    var children__10705__auto__ = cljs.core.rest(arglist__21541);
    return sup__delegate(opts__10704__auto__, children__10705__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var table = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21542__i = 0, G__21542__a = new Array(arguments.length - 1);
      while (G__21542__i < G__21542__a.length) {
        G__21542__a[G__21542__i] = arguments[G__21542__i + 1];
        ++G__21542__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21542__a, 0);
    }
    return table__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__21543) {
    var opts__10704__auto__ = cljs.core.first(arglist__21543);
    var children__10705__auto__ = cljs.core.rest(arglist__21543);
    return table__delegate(opts__10704__auto__, children__10705__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var tbody = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21544__i = 0, G__21544__a = new Array(arguments.length - 1);
      while (G__21544__i < G__21544__a.length) {
        G__21544__a[G__21544__i] = arguments[G__21544__i + 1];
        ++G__21544__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21544__a, 0);
    }
    return tbody__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__21545) {
    var opts__10704__auto__ = cljs.core.first(arglist__21545);
    var children__10705__auto__ = cljs.core.rest(arglist__21545);
    return tbody__delegate(opts__10704__auto__, children__10705__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var td = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21546__i = 0, G__21546__a = new Array(arguments.length - 1);
      while (G__21546__i < G__21546__a.length) {
        G__21546__a[G__21546__i] = arguments[G__21546__i + 1];
        ++G__21546__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21546__a, 0);
    }
    return td__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__21547) {
    var opts__10704__auto__ = cljs.core.first(arglist__21547);
    var children__10705__auto__ = cljs.core.rest(arglist__21547);
    return td__delegate(opts__10704__auto__, children__10705__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var tfoot = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21548__i = 0, G__21548__a = new Array(arguments.length - 1);
      while (G__21548__i < G__21548__a.length) {
        G__21548__a[G__21548__i] = arguments[G__21548__i + 1];
        ++G__21548__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21548__a, 0);
    }
    return tfoot__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__21549) {
    var opts__10704__auto__ = cljs.core.first(arglist__21549);
    var children__10705__auto__ = cljs.core.rest(arglist__21549);
    return tfoot__delegate(opts__10704__auto__, children__10705__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var th = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21550__i = 0, G__21550__a = new Array(arguments.length - 1);
      while (G__21550__i < G__21550__a.length) {
        G__21550__a[G__21550__i] = arguments[G__21550__i + 1];
        ++G__21550__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21550__a, 0);
    }
    return th__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__21551) {
    var opts__10704__auto__ = cljs.core.first(arglist__21551);
    var children__10705__auto__ = cljs.core.rest(arglist__21551);
    return th__delegate(opts__10704__auto__, children__10705__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var thead = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21552__i = 0, G__21552__a = new Array(arguments.length - 1);
      while (G__21552__i < G__21552__a.length) {
        G__21552__a[G__21552__i] = arguments[G__21552__i + 1];
        ++G__21552__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21552__a, 0);
    }
    return thead__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__21553) {
    var opts__10704__auto__ = cljs.core.first(arglist__21553);
    var children__10705__auto__ = cljs.core.rest(arglist__21553);
    return thead__delegate(opts__10704__auto__, children__10705__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var time = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21554__i = 0, G__21554__a = new Array(arguments.length - 1);
      while (G__21554__i < G__21554__a.length) {
        G__21554__a[G__21554__i] = arguments[G__21554__i + 1];
        ++G__21554__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21554__a, 0);
    }
    return time__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__21555) {
    var opts__10704__auto__ = cljs.core.first(arglist__21555);
    var children__10705__auto__ = cljs.core.rest(arglist__21555);
    return time__delegate(opts__10704__auto__, children__10705__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var title = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21556__i = 0, G__21556__a = new Array(arguments.length - 1);
      while (G__21556__i < G__21556__a.length) {
        G__21556__a[G__21556__i] = arguments[G__21556__i + 1];
        ++G__21556__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21556__a, 0);
    }
    return title__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__21557) {
    var opts__10704__auto__ = cljs.core.first(arglist__21557);
    var children__10705__auto__ = cljs.core.rest(arglist__21557);
    return title__delegate(opts__10704__auto__, children__10705__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var tr = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21558__i = 0, G__21558__a = new Array(arguments.length - 1);
      while (G__21558__i < G__21558__a.length) {
        G__21558__a[G__21558__i] = arguments[G__21558__i + 1];
        ++G__21558__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21558__a, 0);
    }
    return tr__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__21559) {
    var opts__10704__auto__ = cljs.core.first(arglist__21559);
    var children__10705__auto__ = cljs.core.rest(arglist__21559);
    return tr__delegate(opts__10704__auto__, children__10705__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var track = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21560__i = 0, G__21560__a = new Array(arguments.length - 1);
      while (G__21560__i < G__21560__a.length) {
        G__21560__a[G__21560__i] = arguments[G__21560__i + 1];
        ++G__21560__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21560__a, 0);
    }
    return track__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__21561) {
    var opts__10704__auto__ = cljs.core.first(arglist__21561);
    var children__10705__auto__ = cljs.core.rest(arglist__21561);
    return track__delegate(opts__10704__auto__, children__10705__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var u = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21562__i = 0, G__21562__a = new Array(arguments.length - 1);
      while (G__21562__i < G__21562__a.length) {
        G__21562__a[G__21562__i] = arguments[G__21562__i + 1];
        ++G__21562__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21562__a, 0);
    }
    return u__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__21563) {
    var opts__10704__auto__ = cljs.core.first(arglist__21563);
    var children__10705__auto__ = cljs.core.rest(arglist__21563);
    return u__delegate(opts__10704__auto__, children__10705__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var ul = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21564__i = 0, G__21564__a = new Array(arguments.length - 1);
      while (G__21564__i < G__21564__a.length) {
        G__21564__a[G__21564__i] = arguments[G__21564__i + 1];
        ++G__21564__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21564__a, 0);
    }
    return ul__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__21565) {
    var opts__10704__auto__ = cljs.core.first(arglist__21565);
    var children__10705__auto__ = cljs.core.rest(arglist__21565);
    return ul__delegate(opts__10704__auto__, children__10705__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var var$ = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21566__i = 0, G__21566__a = new Array(arguments.length - 1);
      while (G__21566__i < G__21566__a.length) {
        G__21566__a[G__21566__i] = arguments[G__21566__i + 1];
        ++G__21566__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21566__a, 0);
    }
    return var$__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__21567) {
    var opts__10704__auto__ = cljs.core.first(arglist__21567);
    var children__10705__auto__ = cljs.core.rest(arglist__21567);
    return var$__delegate(opts__10704__auto__, children__10705__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var video = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21568__i = 0, G__21568__a = new Array(arguments.length - 1);
      while (G__21568__i < G__21568__a.length) {
        G__21568__a[G__21568__i] = arguments[G__21568__i + 1];
        ++G__21568__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21568__a, 0);
    }
    return video__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__21569) {
    var opts__10704__auto__ = cljs.core.first(arglist__21569);
    var children__10705__auto__ = cljs.core.rest(arglist__21569);
    return video__delegate(opts__10704__auto__, children__10705__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var wbr = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21570__i = 0, G__21570__a = new Array(arguments.length - 1);
      while (G__21570__i < G__21570__a.length) {
        G__21570__a[G__21570__i] = arguments[G__21570__i + 1];
        ++G__21570__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21570__a, 0);
    }
    return wbr__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__21571) {
    var opts__10704__auto__ = cljs.core.first(arglist__21571);
    var children__10705__auto__ = cljs.core.rest(arglist__21571);
    return wbr__delegate(opts__10704__auto__, children__10705__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var circle = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21572__i = 0, G__21572__a = new Array(arguments.length - 1);
      while (G__21572__i < G__21572__a.length) {
        G__21572__a[G__21572__i] = arguments[G__21572__i + 1];
        ++G__21572__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21572__a, 0);
    }
    return circle__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__21573) {
    var opts__10704__auto__ = cljs.core.first(arglist__21573);
    var children__10705__auto__ = cljs.core.rest(arglist__21573);
    return circle__delegate(opts__10704__auto__, children__10705__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.ellipse = function() {
  var ellipse__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.ellipse.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var ellipse = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21574__i = 0, G__21574__a = new Array(arguments.length - 1);
      while (G__21574__i < G__21574__a.length) {
        G__21574__a[G__21574__i] = arguments[G__21574__i + 1];
        ++G__21574__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21574__a, 0);
    }
    return ellipse__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  ellipse.cljs$lang$maxFixedArity = 1;
  ellipse.cljs$lang$applyTo = function(arglist__21575) {
    var opts__10704__auto__ = cljs.core.first(arglist__21575);
    var children__10705__auto__ = cljs.core.rest(arglist__21575);
    return ellipse__delegate(opts__10704__auto__, children__10705__auto__);
  };
  ellipse.cljs$core$IFn$_invoke$arity$variadic = ellipse__delegate;
  return ellipse;
}();
om.dom.g = function() {
  var g__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var g = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21576__i = 0, G__21576__a = new Array(arguments.length - 1);
      while (G__21576__i < G__21576__a.length) {
        G__21576__a[G__21576__i] = arguments[G__21576__i + 1];
        ++G__21576__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21576__a, 0);
    }
    return g__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__21577) {
    var opts__10704__auto__ = cljs.core.first(arglist__21577);
    var children__10705__auto__ = cljs.core.rest(arglist__21577);
    return g__delegate(opts__10704__auto__, children__10705__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var line = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21578__i = 0, G__21578__a = new Array(arguments.length - 1);
      while (G__21578__i < G__21578__a.length) {
        G__21578__a[G__21578__i] = arguments[G__21578__i + 1];
        ++G__21578__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21578__a, 0);
    }
    return line__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__21579) {
    var opts__10704__auto__ = cljs.core.first(arglist__21579);
    var children__10705__auto__ = cljs.core.rest(arglist__21579);
    return line__delegate(opts__10704__auto__, children__10705__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var path = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21580__i = 0, G__21580__a = new Array(arguments.length - 1);
      while (G__21580__i < G__21580__a.length) {
        G__21580__a[G__21580__i] = arguments[G__21580__i + 1];
        ++G__21580__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21580__a, 0);
    }
    return path__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__21581) {
    var opts__10704__auto__ = cljs.core.first(arglist__21581);
    var children__10705__auto__ = cljs.core.rest(arglist__21581);
    return path__delegate(opts__10704__auto__, children__10705__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var polyline = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21582__i = 0, G__21582__a = new Array(arguments.length - 1);
      while (G__21582__i < G__21582__a.length) {
        G__21582__a[G__21582__i] = arguments[G__21582__i + 1];
        ++G__21582__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21582__a, 0);
    }
    return polyline__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__21583) {
    var opts__10704__auto__ = cljs.core.first(arglist__21583);
    var children__10705__auto__ = cljs.core.rest(arglist__21583);
    return polyline__delegate(opts__10704__auto__, children__10705__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var rect = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21584__i = 0, G__21584__a = new Array(arguments.length - 1);
      while (G__21584__i < G__21584__a.length) {
        G__21584__a[G__21584__i] = arguments[G__21584__i + 1];
        ++G__21584__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21584__a, 0);
    }
    return rect__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__21585) {
    var opts__10704__auto__ = cljs.core.first(arglist__21585);
    var children__10705__auto__ = cljs.core.rest(arglist__21585);
    return rect__delegate(opts__10704__auto__, children__10705__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var svg = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21586__i = 0, G__21586__a = new Array(arguments.length - 1);
      while (G__21586__i < G__21586__a.length) {
        G__21586__a[G__21586__i] = arguments[G__21586__i + 1];
        ++G__21586__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21586__a, 0);
    }
    return svg__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__21587) {
    var opts__10704__auto__ = cljs.core.first(arglist__21587);
    var children__10705__auto__ = cljs.core.rest(arglist__21587);
    return svg__delegate(opts__10704__auto__, children__10705__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var text = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21588__i = 0, G__21588__a = new Array(arguments.length - 1);
      while (G__21588__i < G__21588__a.length) {
        G__21588__a[G__21588__i] = arguments[G__21588__i + 1];
        ++G__21588__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21588__a, 0);
    }
    return text__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__21589) {
    var opts__10704__auto__ = cljs.core.first(arglist__21589);
    var children__10705__auto__ = cljs.core.rest(arglist__21589);
    return text__delegate(opts__10704__auto__, children__10705__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.defs = function() {
  var defs__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.defs.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var defs = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21590__i = 0, G__21590__a = new Array(arguments.length - 1);
      while (G__21590__i < G__21590__a.length) {
        G__21590__a[G__21590__i] = arguments[G__21590__i + 1];
        ++G__21590__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21590__a, 0);
    }
    return defs__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  defs.cljs$lang$maxFixedArity = 1;
  defs.cljs$lang$applyTo = function(arglist__21591) {
    var opts__10704__auto__ = cljs.core.first(arglist__21591);
    var children__10705__auto__ = cljs.core.rest(arglist__21591);
    return defs__delegate(opts__10704__auto__, children__10705__auto__);
  };
  defs.cljs$core$IFn$_invoke$arity$variadic = defs__delegate;
  return defs;
}();
om.dom.linearGradient = function() {
  var linearGradient__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.linearGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var linearGradient = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21592__i = 0, G__21592__a = new Array(arguments.length - 1);
      while (G__21592__i < G__21592__a.length) {
        G__21592__a[G__21592__i] = arguments[G__21592__i + 1];
        ++G__21592__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21592__a, 0);
    }
    return linearGradient__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  linearGradient.cljs$lang$maxFixedArity = 1;
  linearGradient.cljs$lang$applyTo = function(arglist__21593) {
    var opts__10704__auto__ = cljs.core.first(arglist__21593);
    var children__10705__auto__ = cljs.core.rest(arglist__21593);
    return linearGradient__delegate(opts__10704__auto__, children__10705__auto__);
  };
  linearGradient.cljs$core$IFn$_invoke$arity$variadic = linearGradient__delegate;
  return linearGradient;
}();
om.dom.polygon = function() {
  var polygon__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.polygon.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var polygon = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21594__i = 0, G__21594__a = new Array(arguments.length - 1);
      while (G__21594__i < G__21594__a.length) {
        G__21594__a[G__21594__i] = arguments[G__21594__i + 1];
        ++G__21594__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21594__a, 0);
    }
    return polygon__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  polygon.cljs$lang$maxFixedArity = 1;
  polygon.cljs$lang$applyTo = function(arglist__21595) {
    var opts__10704__auto__ = cljs.core.first(arglist__21595);
    var children__10705__auto__ = cljs.core.rest(arglist__21595);
    return polygon__delegate(opts__10704__auto__, children__10705__auto__);
  };
  polygon.cljs$core$IFn$_invoke$arity$variadic = polygon__delegate;
  return polygon;
}();
om.dom.radialGradient = function() {
  var radialGradient__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.radialGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var radialGradient = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21596__i = 0, G__21596__a = new Array(arguments.length - 1);
      while (G__21596__i < G__21596__a.length) {
        G__21596__a[G__21596__i] = arguments[G__21596__i + 1];
        ++G__21596__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21596__a, 0);
    }
    return radialGradient__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  radialGradient.cljs$lang$maxFixedArity = 1;
  radialGradient.cljs$lang$applyTo = function(arglist__21597) {
    var opts__10704__auto__ = cljs.core.first(arglist__21597);
    var children__10705__auto__ = cljs.core.rest(arglist__21597);
    return radialGradient__delegate(opts__10704__auto__, children__10705__auto__);
  };
  radialGradient.cljs$core$IFn$_invoke$arity$variadic = radialGradient__delegate;
  return radialGradient;
}();
om.dom.stop = function() {
  var stop__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.stop.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var stop = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21598__i = 0, G__21598__a = new Array(arguments.length - 1);
      while (G__21598__i < G__21598__a.length) {
        G__21598__a[G__21598__i] = arguments[G__21598__i + 1];
        ++G__21598__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21598__a, 0);
    }
    return stop__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  stop.cljs$lang$maxFixedArity = 1;
  stop.cljs$lang$applyTo = function(arglist__21599) {
    var opts__10704__auto__ = cljs.core.first(arglist__21599);
    var children__10705__auto__ = cljs.core.rest(arglist__21599);
    return stop__delegate(opts__10704__auto__, children__10705__auto__);
  };
  stop.cljs$core$IFn$_invoke$arity$variadic = stop__delegate;
  return stop;
}();
om.dom.tspan = function() {
  var tspan__delegate = function(opts__10704__auto__, children__10705__auto__) {
    return React.DOM.tspan.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10704__auto__, children__10705__auto__)));
  };
  var tspan = function(opts__10704__auto__, var_args) {
    var children__10705__auto__ = null;
    if (arguments.length > 1) {
      var G__21600__i = 0, G__21600__a = new Array(arguments.length - 1);
      while (G__21600__i < G__21600__a.length) {
        G__21600__a[G__21600__i] = arguments[G__21600__i + 1];
        ++G__21600__i;
      }
      children__10705__auto__ = new cljs.core.IndexedSeq(G__21600__a, 0);
    }
    return tspan__delegate.call(this, opts__10704__auto__, children__10705__auto__);
  };
  tspan.cljs$lang$maxFixedArity = 1;
  tspan.cljs$lang$applyTo = function(arglist__21601) {
    var opts__10704__auto__ = cljs.core.first(arglist__21601);
    var children__10705__auto__ = cljs.core.rest(arglist__21601);
    return tspan__delegate(opts__10704__auto__, children__10705__auto__);
  };
  tspan.cljs$core$IFn$_invoke$arity$variadic = tspan__delegate;
  return tspan;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createFactory(React.createClass({"render":function() {
    var this$ = this;
    var props = {};
    goog.object.extend(props, this$.props, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]});
    return ctor.call(null, props);
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }}));
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input, "input");
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea, "textarea");
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option, "option");
om.dom.render = function render(component, el) {
  return React.render(component, el);
};
om.dom.render_to_str = function render_to_str(c) {
  return React.renderToString(c);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("goog.async.nextTick");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_20617 = 0;
  while (true) {
    var m_20618 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_20618 == null) {
    } else {
      m_20618.call(null);
      if (count_20617 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__20619 = count_20617 + 1;
        count_20617 = G__20619;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3756__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (cljs.core.truth_(and__3756__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3756__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t20625 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t20625 = function(val, box, meta20626) {
      this.val = val;
      this.box = box;
      this.meta20626 = meta20626;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t20625.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t20625.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20627) {
      var self__ = this;
      var _20627__$1 = this;
      return self__.meta20626;
    };
    cljs.core.async.impl.channels.t20625.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20627, meta20626__$1) {
      var self__ = this;
      var _20627__$1 = this;
      return new cljs.core.async.impl.channels.t20625(self__.val, self__.box, meta20626__$1);
    };
    cljs.core.async.impl.channels.t20625.cljs$lang$type = true;
    cljs.core.async.impl.channels.t20625.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t20625";
    cljs.core.async.impl.channels.t20625.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
      return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async.impl.channels/t20625");
    };
    cljs.core.async.impl.channels.__GT_t20625 = function __GT_t20625(val__$1, box__$1, meta20626) {
      return new cljs.core.async.impl.channels.t20625(val__$1, box__$1, meta20626);
    };
  }
  return new cljs.core.async.impl.channels.t20625(val, box, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 22, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 18, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 17, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/mhurd/development/workspace/gridlife/target/cljsbuild-compiler-0/cljs/core/async/impl/channels.cljs"], 
  null));
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
  var obj20629 = {};
  return obj20629;
}();
cljs.core.async.impl.channels.abort = function abort(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.cljs$core$async$impl$channels$MMC$abort$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.impl.channels.abort["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__3756__auto__ = self__.buf;
      if (cljs.core.truth_(and__3756__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__3756__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_20630 = self__.takes.pop();
      if (taker_20630 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_20630)) {
          var take_cb_20631 = cljs.core.async.impl.protocols.commit.call(null, taker_20630);
          var val_20632 = cljs.core.truth_(function() {
            var and__3756__auto__ = self__.buf;
            if (cljs.core.truth_(and__3756__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__3756__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_20631, val_20632, taker_20630, this$__$1) {
            return function() {
              return take_cb_20631.call(null, val_20632);
            };
          }(take_cb_20631, val_20632, taker_20630, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
        } else {
          var putter_20633 = self__.puts.pop();
          if (putter_20633 == null) {
          } else {
            var put_handler_20634 = putter_20633.handler;
            var val_20635 = putter_20633.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_20634)) {
              var put_cb_20636 = cljs.core.async.impl.protocols.commit.call(null, put_handler_20634);
              cljs.core.async.impl.protocols.commit.call(null, handler);
              cljs.core.async.impl.dispatch.run.call(null, function(put_cb_20636, put_handler_20634, val_20635, putter_20633, _, retval, this$__$1) {
                return function() {
                  return put_cb_20636.call(null, true);
                };
              }(put_cb_20636, put_handler_20634, val_20635, putter_20633, _, retval, this$__$1));
              if (cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val_20635))) {
                cljs.core.async.impl.channels.abort.call(null, this$__$1);
              } else {
              }
            } else {
            }
            continue;
          }
        }
        break;
      }
      return retval;
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__3756__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__3756__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__3756__auto__;
            }
          }())) {
            var has_val = function() {
              var and__3756__auto__ = self__.buf;
              if (cljs.core.truth_(and__3756__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__3756__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, "takes", 
            "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
          }
          self__.takes.unbounded_unshift(handler);
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__3756__auto__ = self__.buf;
      if (cljs.core.truth_(and__3756__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__3756__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      while (true) {
        if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
          var taker_20637 = self__.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_20637)) {
            var take_cb_20638 = cljs.core.async.impl.protocols.commit.call(null, taker_20637);
            var val_20639__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
            cljs.core.async.impl.dispatch.run.call(null, function(take_cb_20638, val_20639__$1, taker_20637, done_QMARK_, closed__$1, this$__$1) {
              return function() {
                return take_cb_20638.call(null, val_20639__$1);
              };
            }(take_cb_20638, val_20639__$1, taker_20637, done_QMARK_, closed__$1, this$__$1));
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
          -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
        }
        self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_20640 = self__.puts.pop();
    if (putter_20640 == null) {
    } else {
      var put_handler_20641 = putter_20640.handler;
      var val_20642 = putter_20640.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_20641)) {
        var put_cb_20643 = cljs.core.async.impl.protocols.commit.call(null, put_handler_20641);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_20643, put_handler_20641, val_20642, putter_20640, this$__$1) {
          return function() {
            return put_cb_20643.call(null, true);
          };
        }(put_cb_20643, put_handler_20641, val_20642, putter_20640, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function handle(buf, exh, t) {
  var else$ = function() {
    var or__3768__auto__ = exh;
    if (cljs.core.truth_(or__3768__auto__)) {
      return or__3768__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function() {
  var chan = null;
  var chan__1 = function(buf) {
    return chan.call(null, buf, null);
  };
  var chan__2 = function(buf, xform) {
    return chan.call(null, buf, xform, null);
  };
  var chan__3 = function(buf, xform, exh) {
    return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
      var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
      return function(add_BANG_) {
        return function() {
          var G__20648 = null;
          var G__20648__1 = function(buf__$1) {
            try {
              return add_BANG_.call(null, buf__$1);
            } catch (e20646) {
              var t = e20646;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          var G__20648__2 = function(buf__$1, val) {
            try {
              return add_BANG_.call(null, buf__$1, val);
            } catch (e20647) {
              var t = e20647;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          G__20648 = function(buf__$1, val) {
            switch(arguments.length) {
              case 1:
                return G__20648__1.call(this, buf__$1);
              case 2:
                return G__20648__2.call(this, buf__$1, val);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20648.cljs$core$IFn$_invoke$arity$1 = G__20648__1;
          G__20648.cljs$core$IFn$_invoke$arity$2 = G__20648__2;
          return G__20648;
        }();
      }(add_BANG_);
    }());
  };
  chan = function(buf, xform, exh) {
    switch(arguments.length) {
      case 1:
        return chan__1.call(this, buf);
      case 2:
        return chan__2.call(this, buf, xform);
      case 3:
        return chan__3.call(this, buf, xform, exh);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = doc.documentElement;
    if (!body && !docEl) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element["getBoundingClientRect"]) ? element.getBoundingClientRect() : {"height":element.offsetHeight, "width":element.offsetWidth};
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.devicePixelRatio_;
goog.dom.getPixelRatio = goog.functions.cacheReturnValue(function() {
  var win = goog.dom.getWindow();
  var isFirefoxMobile = goog.userAgent.GECKO && goog.userAgent.MOBILE;
  if (goog.isDef(win.devicePixelRatio) && !isFirefoxMobile) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1;
    }
  }
  return 1;
});
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var iterator = goog.iter.toIterator(arguments);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.chainFromIterable = function(iterable) {
  return goog.iter.chain.apply(undefined, iterable);
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  return goog.iter.every(pairs, function(pair) {
    return pair[0] == pair[1];
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return!!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return[this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return[];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt((opt_end)) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return!goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  goog.uri.utils.phishingProtection_();
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.needsPhishingProtection_ = goog.userAgent.WEBKIT;
goog.uri.utils.phishingProtection_ = function() {
  if (goog.uri.utils.needsPhishingProtection_) {
    goog.uri.utils.needsPhishingProtection_ = false;
    var location = goog.global["location"];
    if (location) {
      var href = location["href"];
      if (href) {
        var domain = goog.uri.utils.getDomain(href);
        if (domain && domain != location["hostname"]) {
          goog.uri.utils.needsPhishingProtection_ = true;
          throw Error();
        }
      }
    }
  }
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var paramArr = [uri, "\x26", key];
  if (goog.isDefAndNotNull(opt_value)) {
    paramArr.push("\x3d", goog.string.urlEncode(opt_value));
  }
  return goog.uri.utils.appendQueryData_(paramArr);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":");
  }
  var domain = this.getDomain();
  if (domain) {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@");
    }
    out.push(goog.string.urlEncode(domain));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, (values));
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return(this.queryData_.get(paramName));
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : "";
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  if (goog.isString(unescapedPart)) {
    return encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("\x26");
      for (var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("\x3d");
        var name = null;
        var value = null;
        if (indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1);
        } else {
          name = pairs[i];
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "");
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ -= this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = (this.keyMap_.getValues());
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for (var j = 0;j < val.length;j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = (this.keyMap_.getValues());
    for (var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ -= this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ += values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__20820_SHARP_) {
      return max === p1__20820_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var union__1 = function(s1) {
    return s1;
  };
  var union__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
    }
  };
  var union__3 = function() {
    var G__20821__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__20821 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        var G__20822__i = 0, G__20822__a = new Array(arguments.length - 2);
        while (G__20822__i < G__20822__a.length) {
          G__20822__a[G__20822__i] = arguments[G__20822__i + 2];
          ++G__20822__i;
        }
        sets = new cljs.core.IndexedSeq(G__20822__a, 0);
      }
      return G__20821__delegate.call(this, s1, s2, sets);
    };
    G__20821.cljs$lang$maxFixedArity = 2;
    G__20821.cljs$lang$applyTo = function(arglist__20823) {
      var s1 = cljs.core.first(arglist__20823);
      arglist__20823 = cljs.core.next(arglist__20823);
      var s2 = cljs.core.first(arglist__20823);
      var sets = cljs.core.rest(arglist__20823);
      return G__20821__delegate(s1, s2, sets);
    };
    G__20821.cljs$core$IFn$_invoke$arity$variadic = G__20821__delegate;
    return G__20821;
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        var G__20824 = null;
        if (arguments.length > 2) {
          var G__20825__i = 0, G__20825__a = new Array(arguments.length - 2);
          while (G__20825__i < G__20825__a.length) {
            G__20825__a[G__20825__i] = arguments[G__20825__i + 2];
            ++G__20825__i;
          }
          G__20824 = new cljs.core.IndexedSeq(G__20825__a, 0);
        }
        return union__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, G__20824);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$core$IFn$_invoke$arity$0 = union__0;
  union.cljs$core$IFn$_invoke$arity$1 = union__1;
  union.cljs$core$IFn$_invoke$arity$2 = union__2;
  union.cljs$core$IFn$_invoke$arity$variadic = union__3.cljs$core$IFn$_invoke$arity$variadic;
  return union;
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1;
  };
  var intersection__2 = function(s1, s2) {
    while (true) {
      if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__20827 = s2;
        var G__20828 = s1;
        s1 = G__20827;
        s2 = G__20828;
        continue;
      } else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if (cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result;
            } else {
              return cljs.core.disj.call(null, result, item);
            }
          };
        }(s1, s2), s1, s1);
      }
      break;
    }
  };
  var intersection__3 = function() {
    var G__20829__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__20826_SHARP_) {
        return-cljs.core.count.call(null, p1__20826_SHARP_);
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__20829 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        var G__20830__i = 0, G__20830__a = new Array(arguments.length - 2);
        while (G__20830__i < G__20830__a.length) {
          G__20830__a[G__20830__i] = arguments[G__20830__i + 2];
          ++G__20830__i;
        }
        sets = new cljs.core.IndexedSeq(G__20830__a, 0);
      }
      return G__20829__delegate.call(this, s1, s2, sets);
    };
    G__20829.cljs$lang$maxFixedArity = 2;
    G__20829.cljs$lang$applyTo = function(arglist__20831) {
      var s1 = cljs.core.first(arglist__20831);
      arglist__20831 = cljs.core.next(arglist__20831);
      var s2 = cljs.core.first(arglist__20831);
      var sets = cljs.core.rest(arglist__20831);
      return G__20829__delegate(s1, s2, sets);
    };
    G__20829.cljs$core$IFn$_invoke$arity$variadic = G__20829__delegate;
    return G__20829;
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        var G__20832 = null;
        if (arguments.length > 2) {
          var G__20833__i = 0, G__20833__a = new Array(arguments.length - 2);
          while (G__20833__i < G__20833__a.length) {
            G__20833__a[G__20833__i] = arguments[G__20833__i + 2];
            ++G__20833__i;
          }
          G__20832 = new cljs.core.IndexedSeq(G__20833__a, 0);
        }
        return intersection__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, G__20832);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$core$IFn$_invoke$arity$1 = intersection__1;
  intersection.cljs$core$IFn$_invoke$arity$2 = intersection__2;
  intersection.cljs$core$IFn$_invoke$arity$variadic = intersection__3.cljs$core$IFn$_invoke$arity$variadic;
  return intersection;
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1;
  };
  var difference__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if (cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item);
        } else {
          return result;
        }
      }, s1, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
    }
  };
  var difference__3 = function() {
    var G__20834__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2));
    };
    var G__20834 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        var G__20835__i = 0, G__20835__a = new Array(arguments.length - 2);
        while (G__20835__i < G__20835__a.length) {
          G__20835__a[G__20835__i] = arguments[G__20835__i + 2];
          ++G__20835__i;
        }
        sets = new cljs.core.IndexedSeq(G__20835__a, 0);
      }
      return G__20834__delegate.call(this, s1, s2, sets);
    };
    G__20834.cljs$lang$maxFixedArity = 2;
    G__20834.cljs$lang$applyTo = function(arglist__20836) {
      var s1 = cljs.core.first(arglist__20836);
      arglist__20836 = cljs.core.next(arglist__20836);
      var s2 = cljs.core.first(arglist__20836);
      var sets = cljs.core.rest(arglist__20836);
      return G__20834__delegate(s1, s2, sets);
    };
    G__20834.cljs$core$IFn$_invoke$arity$variadic = G__20834__delegate;
    return G__20834;
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        var G__20837 = null;
        if (arguments.length > 2) {
          var G__20838__i = 0, G__20838__a = new Array(arguments.length - 2);
          while (G__20838__i < G__20838__a.length) {
            G__20838__a[G__20838__i] = arguments[G__20838__i + 2];
            ++G__20838__i;
          }
          G__20837 = new cljs.core.IndexedSeq(G__20838__a, 0);
        }
        return difference__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, G__20837);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$core$IFn$_invoke$arity$1 = difference__1;
  difference.cljs$core$IFn$_invoke$arity$2 = difference__2;
  difference.cljs$core$IFn$_invoke$arity$variadic = difference__3.cljs$core$IFn$_invoke$arity$variadic;
  return difference;
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__20839_SHARP_) {
    return cljs.core.select_keys.call(null, p1__20839_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__20842) {
    var vec__20843 = p__20842;
    var old = cljs.core.nth.call(null, vec__20843, 0, null);
    var new$ = cljs.core.nth.call(null, vec__20843, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__20844_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__20844_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__20847) {
    var vec__20848 = p__20847;
    var k = cljs.core.nth.call(null, vec__20848, 0, null);
    var v = cljs.core.nth.call(null, vec__20848, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
      var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__20855 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
      var r = cljs.core.nth.call(null, vec__20855, 0, null);
      var s = cljs.core.nth.call(null, vec__20855, 1, null);
      var idx = clojure.set.index.call(null, r, ks);
      return cljs.core.reduce.call(null, function(ks, vec__20855, r, s, idx) {
        return function(ret, x) {
          var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
          if (cljs.core.truth_(found)) {
            return cljs.core.reduce.call(null, function(found, ks, vec__20855, r, s, idx) {
              return function(p1__20849_SHARP_, p2__20850_SHARP_) {
                return cljs.core.conj.call(null, p1__20849_SHARP_, cljs.core.merge.call(null, p2__20850_SHARP_, x));
              };
            }(found, ks, vec__20855, r, s, idx), ret, found);
          } else {
            return ret;
          }
        };
      }(ks, vec__20855, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__20856 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
    var r = cljs.core.nth.call(null, vec__20856, 0, null);
    var s = cljs.core.nth.call(null, vec__20856, 1, null);
    var k = cljs.core.nth.call(null, vec__20856, 2, null);
    var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
    return cljs.core.reduce.call(null, function(vec__20856, r, s, k, idx) {
      return function(ret, x) {
        var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, vec__20856, r, s, k, idx) {
            return function(p1__20851_SHARP_, p2__20852_SHARP_) {
              return cljs.core.conj.call(null, p1__20851_SHARP_, cljs.core.merge.call(null, p2__20852_SHARP_, x));
            };
          }(found, vec__20856, r, s, k, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(vec__20856, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  join.cljs$core$IFn$_invoke$arity$3 = join__3;
  return join;
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__20857_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__20857_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__20858_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__20858_SHARP_);
  }, set2);
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var G__20770 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var G__20771 = cljs.core.next.call(null, coll__$1);
        sb = G__20770;
        coll__$1 = G__20771;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  var join__2 = function(separator, coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var coll__$2 = cljs.core.next.call(null, coll__$1);
        if (coll__$2 == null) {
        } else {
          sb.append(separator);
        }
        var G__20772 = sb;
        var G__20773 = coll__$2;
        sb = G__20772;
        coll__$1 = G__20773;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__20774 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__20774;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__20778 = cljs.core._EQ_;
    var expr__20779 = limit;
    if (cljs.core.truth_(pred__20778.call(null, 1, expr__20779))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__20778.call(null, 2, expr__20779))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__20781 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__20782 = limit__$1 - 1;
            var G__20783 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__20781;
            limit__$1 = G__20782;
            parts = G__20783;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__20784 = index - 1;
        index = G__20784;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___20785 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___20785)) {
        var replacement_20786 = temp__4124__auto___20785;
        buffer.append([cljs.core.str(replacement_20786)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__20787 = index + 1;
      index = G__20787;
      continue;
    }
    break;
  }
};
goog.provide("sablono.util");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.set");
goog.require("goog.Uri");
sablono.util._STAR_base_url_STAR_ = null;
sablono.util.ToString = function() {
  var obj20797 = {};
  return obj20797;
}();
sablono.util.to_str = function to_str(x) {
  if (function() {
    var and__3756__auto__ = x;
    if (and__3756__auto__) {
      return x.sablono$util$ToString$to_str$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return x.sablono$util$ToString$to_str$arity$1(x);
  } else {
    var x__4412__auto__ = x == null ? null : x;
    return function() {
      var or__3768__auto__ = sablono.util.to_str[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = sablono.util.to_str["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ToString.to-str", x);
        }
      }
    }().call(null, x);
  }
};
sablono.util.ToURI = function() {
  var obj20799 = {};
  return obj20799;
}();
sablono.util.to_uri = function to_uri(x) {
  if (function() {
    var and__3756__auto__ = x;
    if (and__3756__auto__) {
      return x.sablono$util$ToURI$to_uri$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return x.sablono$util$ToURI$to_uri$arity$1(x);
  } else {
    var x__4412__auto__ = x == null ? null : x;
    return function() {
      var or__3768__auto__ = sablono.util.to_uri[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = sablono.util.to_uri["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ToURI.to-uri", x);
        }
      }
    }().call(null, x);
  }
};
sablono.util.as_str = function() {
  var as_str__delegate = function(xs) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, sablono.util.to_str, xs));
  };
  var as_str = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__20800__i = 0, G__20800__a = new Array(arguments.length - 0);
      while (G__20800__i < G__20800__a.length) {
        G__20800__a[G__20800__i] = arguments[G__20800__i + 0];
        ++G__20800__i;
      }
      xs = new cljs.core.IndexedSeq(G__20800__a, 0);
    }
    return as_str__delegate.call(this, xs);
  };
  as_str.cljs$lang$maxFixedArity = 0;
  as_str.cljs$lang$applyTo = function(arglist__20801) {
    var xs = cljs.core.seq(arglist__20801);
    return as_str__delegate(xs);
  };
  as_str.cljs$core$IFn$_invoke$arity$variadic = as_str__delegate;
  return as_str;
}();
sablono.util.camel_case = function camel_case(k) {
  if (cljs.core.truth_(k)) {
    var vec__20803 = clojure.string.split.call(null, cljs.core.name.call(null, k), /-/);
    var first_word = cljs.core.nth.call(null, vec__20803, 0, null);
    var words = cljs.core.nthnext.call(null, vec__20803, 1);
    if (cljs.core.empty_QMARK_.call(null, words) || cljs.core._EQ_.call(null, "aria", first_word) || cljs.core._EQ_.call(null, "data", first_word)) {
      return k;
    } else {
      return cljs.core.keyword.call(null, clojure.string.join.call(null, cljs.core.conj.call(null, cljs.core.map.call(null, clojure.string.capitalize, words), first_word)));
    }
  } else {
    return null;
  }
};
sablono.util.camel_case_keys = function camel_case_keys(m) {
  if (cljs.core.map_QMARK_.call(null, m)) {
    var ks = cljs.core.keys.call(null, m);
    var kmap = cljs.core.zipmap.call(null, ks, cljs.core.map.call(null, sablono.util.camel_case, ks));
    var G__20805 = clojure.set.rename_keys.call(null, m, kmap);
    var G__20805__$1 = cljs.core.map_QMARK_.call(null, (new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(m)) ? cljs.core.update_in.call(null, G__20805, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "style", "style", -496642736)], null), camel_case_keys) : G__20805;
    return G__20805__$1;
  } else {
    return m;
  }
};
sablono.util.html_to_dom_attrs = function html_to_dom_attrs(attrs) {
  return clojure.set.rename_keys.call(null, sablono.util.camel_case_keys.call(null, attrs), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.Keyword(null, "className", "className", -1983287057), new cljs.core.Keyword(null, "for", "for", -1323786319), new cljs.core.Keyword(null, "htmlFor", "htmlFor", -1050291720)], null));
};
sablono.util.compact_map = function compact_map(m) {
  return cljs.core.reduce.call(null, function(m__$1, k) {
    var v = cljs.core.get.call(null, m__$1, k);
    if (cljs.core.empty_QMARK_.call(null, v)) {
      return cljs.core.dissoc.call(null, m__$1, k);
    } else {
      return m__$1;
    }
  }, m, cljs.core.keys.call(null, m));
};
sablono.util.merge_with_class = function() {
  var merge_with_class__delegate = function(maps) {
    var classes = cljs.core.vec.call(null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.mapcat.call(null, function(p1__20806_SHARP_) {
      if (cljs.core.list_QMARK_.call(null, p1__20806_SHARP_)) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__20806_SHARP_], null);
      } else {
        if (cljs.core.sequential_QMARK_.call(null, p1__20806_SHARP_)) {
          return p1__20806_SHARP_;
        } else {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__20806_SHARP_], null);
        }
      }
    }, cljs.core.map.call(null, new cljs.core.Keyword(null, "class", "class", -2030961996), maps))));
    var maps__$1 = cljs.core.apply.call(null, cljs.core.merge, maps);
    if (cljs.core.empty_QMARK_.call(null, classes)) {
      return maps__$1;
    } else {
      return cljs.core.assoc.call(null, maps__$1, new cljs.core.Keyword(null, "class", "class", -2030961996), classes);
    }
  };
  var merge_with_class = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      var G__20807__i = 0, G__20807__a = new Array(arguments.length - 0);
      while (G__20807__i < G__20807__a.length) {
        G__20807__a[G__20807__i] = arguments[G__20807__i + 0];
        ++G__20807__i;
      }
      maps = new cljs.core.IndexedSeq(G__20807__a, 0);
    }
    return merge_with_class__delegate.call(this, maps);
  };
  merge_with_class.cljs$lang$maxFixedArity = 0;
  merge_with_class.cljs$lang$applyTo = function(arglist__20808) {
    var maps = cljs.core.seq(arglist__20808);
    return merge_with_class__delegate(maps);
  };
  merge_with_class.cljs$core$IFn$_invoke$arity$variadic = merge_with_class__delegate;
  return merge_with_class;
}();
sablono.util.strip_css = function strip_css(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, s, /^[.#]/, "");
  } else {
    return null;
  }
};
sablono.util.match_tag = function match_tag(s) {
  var matches = cljs.core.re_seq.call(null, /[#.]?[^#.]+/, cljs.core.name.call(null, s));
  var vec__20812 = cljs.core.empty_QMARK_.call(null, matches) ? function() {
    throw cljs.core.ex_info.call(null, [cljs.core.str("Can't match CSS tag: "), cljs.core.str(s)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), s], null));
  }() : cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["#", null, ".", null], null), null)).call(null, cljs.core.ffirst.call(null, matches))) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["div", matches], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, matches), cljs.core.rest.call(null, matches)], null);
  var tag_name = cljs.core.nth.call(null, vec__20812, 0, null);
  var names = cljs.core.nth.call(null, vec__20812, 1, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_name, cljs.core.first.call(null, cljs.core.map.call(null, sablono.util.strip_css, cljs.core.filter.call(null, function(matches, vec__20812, tag_name, names) {
    return function(p1__20809_SHARP_) {
      return cljs.core._EQ_.call(null, "#", cljs.core.first.call(null, p1__20809_SHARP_));
    };
  }(matches, vec__20812, tag_name, names), names))), cljs.core.vec.call(null, cljs.core.map.call(null, sablono.util.strip_css, cljs.core.filter.call(null, function(matches, vec__20812, tag_name, names) {
    return function(p1__20810_SHARP_) {
      return cljs.core._EQ_.call(null, ".", cljs.core.first.call(null, p1__20810_SHARP_));
    };
  }(matches, vec__20812, tag_name, names), names)))], null);
};
sablono.util.normalize_element = function normalize_element(p__20813) {
  var vec__20816 = p__20813;
  var tag = cljs.core.nth.call(null, vec__20816, 0, null);
  var content = cljs.core.nthnext.call(null, vec__20816, 1);
  if (!(tag instanceof cljs.core.Keyword || tag instanceof cljs.core.Symbol || typeof tag === "string")) {
    throw cljs.core.ex_info.call(null, [cljs.core.str(tag), cljs.core.str(" is not a valid element name.")].join(""), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag, new cljs.core.Keyword(null, "content", "content", 15833224), content], null));
  } else {
  }
  var vec__20817 = sablono.util.match_tag.call(null, tag);
  var tag__$1 = cljs.core.nth.call(null, vec__20817, 0, null);
  var id = cljs.core.nth.call(null, vec__20817, 1, null);
  var class$ = cljs.core.nth.call(null, vec__20817, 2, null);
  var tag_attrs = sablono.util.compact_map.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), id, new cljs.core.Keyword(null, "class", "class", -2030961996), class$], null));
  var map_attrs = cljs.core.first.call(null, content);
  if (cljs.core.map_QMARK_.call(null, map_attrs)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, sablono.util.merge_with_class.call(null, tag_attrs, map_attrs), cljs.core.next.call(null, content)], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, tag_attrs, content], null);
  }
};
sablono.util.join_classes = function join_classes(classes) {
  return clojure.string.join.call(null, " ", cljs.core.flatten.call(null, classes));
};
sablono.util.react_symbol = function react_symbol(tag) {
  return cljs.core.symbol.call(null, "js", [cljs.core.str("React.DOM."), cljs.core.str(cljs.core.name.call(null, tag))].join(""));
};
sablono.util.react_fn = function react_fn(tag) {
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "textarea", "textarea", -650375824), null, new cljs.core.Keyword(null, "option", "option", 65132272), null, new cljs.core.Keyword(null, "input", "input", 556931961), null], null), null), cljs.core.keyword.call(null, tag))) {
    return cljs.core.symbol.call(null, "sablono.interpreter", cljs.core.name.call(null, tag));
  } else {
    return sablono.util.react_symbol.call(null, tag);
  }
};
sablono.util.attr_pattern = function attr_pattern(attr) {
  return cljs.core.re_pattern.call(null, [cljs.core.str("\\s+"), cljs.core.str(cljs.core.name.call(null, attr)), cljs.core.str("\\s*\x3d\\s*['\"][^\"']+['\"]")].join(""));
};
sablono.util.strip_attr = function strip_attr(s, attr) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, s, sablono.util.attr_pattern.call(null, attr), "");
  } else {
    return null;
  }
};
sablono.util.strip_outer = function strip_outer(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, clojure.string.replace.call(null, s, /^\s*<[^>]+>\s*/, ""), /\s*<\/[^>]+>\s*$/, "");
  } else {
    return null;
  }
};
sablono.util.ToString["_"] = true;
sablono.util.to_str["_"] = function(x) {
  return[cljs.core.str(x)].join("");
};
sablono.util.ToString["number"] = true;
sablono.util.to_str["number"] = function(x) {
  return[cljs.core.str(x)].join("");
};
sablono.util.ToString["null"] = true;
sablono.util.to_str["null"] = function(_) {
  return "";
};
goog.Uri.prototype.sablono$util$ToString$ = true;
goog.Uri.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  if (cljs.core.truth_(function() {
    var or__3768__auto__ = x__$1.hasDomain();
    if (cljs.core.truth_(or__3768__auto__)) {
      return or__3768__auto__;
    } else {
      return x__$1.getPath() == null || cljs.core.not.call(null, cljs.core.re_matches.call(null, /^\/.*/, x__$1.getPath()));
    }
  }())) {
    return[cljs.core.str(x__$1)].join("");
  } else {
    var base = [cljs.core.str(sablono.util._STAR_base_url_STAR_)].join("");
    if (cljs.core.truth_(cljs.core.re_matches.call(null, /.*\/$/, base))) {
      return[cljs.core.str(cljs.core.subs.call(null, base, 0, cljs.core.count.call(null, base) - 1)), cljs.core.str(x__$1)].join("");
    } else {
      return[cljs.core.str(base), cljs.core.str(x__$1)].join("");
    }
  }
};
cljs.core.Keyword.prototype.sablono$util$ToString$ = true;
cljs.core.Keyword.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  return cljs.core.name.call(null, x__$1);
};
sablono.util.ToURI["_"] = true;
sablono.util.to_uri["_"] = function(x) {
  return new goog.Uri([cljs.core.str(x)].join(""));
};
goog.Uri.prototype.sablono$util$ToURI$ = true;
goog.Uri.prototype.sablono$util$ToURI$to_uri$arity$1 = function(x) {
  var x__$1 = this;
  return x__$1;
};
goog.provide("sablono.interpreter");
goog.require("cljs.core");
goog.require("sablono.util");
goog.require("clojure.string");
sablono.interpreter.IInterpreter = function() {
  var obj20791 = {};
  return obj20791;
}();
sablono.interpreter.interpret = function interpret(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.sablono$interpreter$IInterpreter$interpret$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.sablono$interpreter$IInterpreter$interpret$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = sablono.interpreter.interpret[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = sablono.interpreter.interpret["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInterpreter.interpret", this$);
        }
      }
    }().call(null, this$);
  }
};
sablono.interpreter.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
sablono.interpreter.input = sablono.interpreter.wrap_form_element.call(null, React.DOM.input, "input");
sablono.interpreter.option = sablono.interpreter.wrap_form_element.call(null, React.DOM.option, "option");
sablono.interpreter.textarea = sablono.interpreter.wrap_form_element.call(null, React.DOM.textarea, "textarea");
sablono.interpreter.dom_fn = function dom_fn(tag) {
  var temp__4124__auto__ = React.DOM[cljs.core.name.call(null, tag)];
  if (cljs.core.truth_(temp__4124__auto__)) {
    var dom_fn__$1 = temp__4124__auto__;
    return cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "input", "input", 556931961), sablono.interpreter.input, new cljs.core.Keyword(null, "option", "option", 65132272), sablono.interpreter.option, new cljs.core.Keyword(null, "textarea", "textarea", -650375824), sablono.interpreter.textarea], null), cljs.core.keyword.call(null, tag), dom_fn__$1);
  } else {
    throw cljs.core.ex_info.call(null, [cljs.core.str("Unsupported HTML tag: "), cljs.core.str(cljs.core.name.call(null, tag))].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag], null));
  }
};
sablono.interpreter.attributes = function attributes(attrs) {
  var attrs__$1 = cljs.core.clj__GT_js.call(null, sablono.util.html_to_dom_attrs.call(null, attrs));
  var class$ = attrs__$1.className;
  var class$__$1 = class$ instanceof Array ? clojure.string.join.call(null, " ", class$) : class$;
  if (cljs.core.truth_(clojure.string.blank_QMARK_.call(null, class$__$1))) {
    delete attrs__$1["className"];
  } else {
    attrs__$1.className = class$__$1;
  }
  return attrs__$1;
};
sablono.interpreter.element = function element(element__$1) {
  var vec__20793 = sablono.util.normalize_element.call(null, element__$1);
  var tag = cljs.core.nth.call(null, vec__20793, 0, null);
  var attrs = cljs.core.nth.call(null, vec__20793, 1, null);
  var content = cljs.core.nth.call(null, vec__20793, 2, null);
  var f = sablono.interpreter.dom_fn.call(null, tag);
  var js_attrs = sablono.interpreter.attributes.call(null, attrs);
  if (cljs.core.sequential_QMARK_.call(null, content) && cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, content))) {
    return f.call(null, js_attrs, sablono.interpreter.interpret.call(null, cljs.core.first.call(null, content)));
  } else {
    if (cljs.core.truth_(content)) {
      return cljs.core.apply.call(null, f, js_attrs, sablono.interpreter.interpret.call(null, content));
    } else {
      return f.call(null, js_attrs, null);
    }
  }
};
sablono.interpreter.interpret_seq = function interpret_seq(s) {
  return cljs.core.into_array.call(null, cljs.core.map.call(null, sablono.interpreter.interpret, s));
};
sablono.interpreter.IInterpreter["null"] = true;
sablono.interpreter.interpret["null"] = function(this$) {
  return null;
};
sablono.interpreter.IInterpreter["_"] = true;
sablono.interpreter.interpret["_"] = function(this$) {
  return this$;
};
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.element.call(null, this$__$1);
};
cljs.core.Subvec.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.Subvec.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.element.call(null, this$__$1);
};
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.List.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.List.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return ":" + (this.nextId_++).toString(36);
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__20528 = level + 1;
        level = G__20528;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_20529 = 0;
    while (true) {
      if (i_20529 < arr.length) {
        arr[i_20529] = null;
        var G__20530 = i_20529 + 1;
        i_20529 = G__20530;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__20531 = x_SINGLEQUOTE_;
                x__$1 = G__20531;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__20532 = x__$1;
        var G__20533 = k;
        var G__20534 = level - 1;
        var G__20535 = update;
        x = G__20532;
        k = G__20533;
        level = G__20534;
        update = G__20535;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_20536 = self__.level + 1;
      while (true) {
        if (i_20536 <= new_level + 1) {
          update[i_20536] = self__.header;
          var G__20537 = i_20536 + 1;
          i_20536 = G__20537;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_20538 = 0;
    while (true) {
      if (i_20538 <= self__.level) {
        var links_20539 = update[i_20538].forward;
        if (links_20539[i_20538] === x__$1) {
          links_20539[i_20538] = x__$1.forward[i_20538];
          var G__20540 = i_20538 + 1;
          i_20538 = G__20540;
          continue;
        } else {
          var G__20541 = i_20538 + 1;
          i_20538 = G__20541;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__20542 = x_SINGLEQUOTE_;
              x__$1 = G__20542;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__20543 = nx;
        var G__20544 = level__$1 - 1;
        x = G__20543;
        level__$1 = G__20544;
        continue;
      } else {
        var G__20545 = x;
        var G__20546 = level__$1 - 1;
        x = G__20545;
        level__$1 = G__20546;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__20547 = x_SINGLEQUOTE_;
              x__$1 = G__20547;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__20548 = nx;
        var G__20549 = level__$1 - 1;
        x = G__20548;
        level__$1 = G__20549;
        continue;
      } else {
        var G__20550 = x;
        var G__20551 = level__$1 - 1;
        x = G__20550;
        level__$1 = G__20551;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3768__auto__ = cljs.core.truth_(function() {
    var and__3756__auto__ = me;
    if (cljs.core.truth_(and__3756__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3756__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3768__auto__)) {
    return or__3768__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3768__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3768__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t17439 !== "undefined") {
  } else {
    cljs.core.async.t17439 = function(f, fn_handler, meta17440) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta17440 = meta17440;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t17439.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t17439.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t17439.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t17439.prototype.cljs$core$IMeta$_meta$arity$1 = function(_17441) {
      var self__ = this;
      var _17441__$1 = this;
      return self__.meta17440;
    };
    cljs.core.async.t17439.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_17441, meta17440__$1) {
      var self__ = this;
      var _17441__$1 = this;
      return new cljs.core.async.t17439(self__.f, self__.fn_handler, meta17440__$1);
    };
    cljs.core.async.t17439.cljs$lang$type = true;
    cljs.core.async.t17439.cljs$lang$ctorStr = "cljs.core.async/t17439";
    cljs.core.async.t17439.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
      return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async/t17439");
    };
    cljs.core.async.__GT_t17439 = function __GT_t17439(f__$1, fn_handler__$1, meta17440) {
      return new cljs.core.async.t17439(f__$1, fn_handler__$1, meta17440);
    };
  }
  return new cljs.core.async.t17439(f, fn_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 20, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 16, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 13, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/mhurd/development/workspace/gridlife/target/cljsbuild-compiler-0/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__17443 = buff;
  if (G__17443) {
    var bit__4449__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3768__auto__ = bit__4449__auto__;
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        return G__17443.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__17443.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__17443);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__17443);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    return chan.call(null, buf_or_n, null, null);
  };
  var chan__2 = function(buf_or_n, xform) {
    return chan.call(null, buf_or_n, xform, null);
  };
  var chan__3 = function(buf_or_n, xform, ex_handler) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    if (cljs.core.truth_(xform)) {
      if (cljs.core.truth_(buf_or_n__$1)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("buffer must be supplied when transducer is"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "buf-or-n", "buf-or-n", -1646815050, null)))].join(""));
      }
    } else {
    }
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
  };
  chan = function(buf_or_n, xform, ex_handler) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
      case 2:
        return chan__2.call(this, buf_or_n, xform);
      case 3:
        return chan__3.call(this, buf_or_n, xform, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_17444 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_17444);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_17444, ret) {
          return function() {
            return fn1.call(null, val_17444);
          };
        }(val_17444, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var ret = temp__4124__auto__;
      return cljs.core.deref.call(null, ret);
    } else {
      return true;
    }
  };
  var put_BANG___3 = function(port, val, fn1) {
    return put_BANG_.call(null, port, val, fn1, true);
  };
  var put_BANG___4 = function(port, val, fn1, on_caller_QMARK_) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(temp__4124__auto__)) {
      var retb = temp__4124__auto__;
      var ret = cljs.core.deref.call(null, retb);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, ret);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4124__auto__) {
          return function() {
            return fn1.call(null, ret);
          };
        }(ret, retb, temp__4124__auto__));
      }
      return ret;
    } else {
      return true;
    }
  };
  put_BANG_ = function(port, val, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn1);
      case 4:
        return put_BANG___4.call(this, port, val, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4655__auto___17445 = n;
  var x_17446 = 0;
  while (true) {
    if (x_17446 < n__4655__auto___17445) {
      a[x_17446] = 0;
      var G__17447 = x_17446 + 1;
      x_17446 = G__17447;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__17448 = i + 1;
      i = G__17448;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t17452 !== "undefined") {
  } else {
    cljs.core.async.t17452 = function(flag, alt_flag, meta17453) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta17453 = meta17453;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t17452.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t17452.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t17452.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t17452.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_17454) {
        var self__ = this;
        var _17454__$1 = this;
        return self__.meta17453;
      };
    }(flag);
    cljs.core.async.t17452.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_17454, meta17453__$1) {
        var self__ = this;
        var _17454__$1 = this;
        return new cljs.core.async.t17452(self__.flag, self__.alt_flag, meta17453__$1);
      };
    }(flag);
    cljs.core.async.t17452.cljs$lang$type = true;
    cljs.core.async.t17452.cljs$lang$ctorStr = "cljs.core.async/t17452";
    cljs.core.async.t17452.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
        return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async/t17452");
      };
    }(flag);
    cljs.core.async.__GT_t17452 = function(flag) {
      return function __GT_t17452(flag__$1, alt_flag__$1, meta17453) {
        return new cljs.core.async.t17452(flag__$1, alt_flag__$1, meta17453);
      };
    }(flag);
  }
  return new cljs.core.async.t17452(flag, alt_flag, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 15, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 146, new cljs.core.Keyword(null, "column", "column", 2078222095), 5, new cljs.core.Keyword(null, "line", "line", 212345235), 141, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/mhurd/development/workspace/gridlife/target/cljsbuild-compiler-0/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t17458 !== "undefined") {
  } else {
    cljs.core.async.t17458 = function(cb, flag, alt_handler, meta17459) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta17459 = meta17459;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t17458.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t17458.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t17458.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t17458.prototype.cljs$core$IMeta$_meta$arity$1 = function(_17460) {
      var self__ = this;
      var _17460__$1 = this;
      return self__.meta17459;
    };
    cljs.core.async.t17458.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_17460, meta17459__$1) {
      var self__ = this;
      var _17460__$1 = this;
      return new cljs.core.async.t17458(self__.cb, self__.flag, self__.alt_handler, meta17459__$1);
    };
    cljs.core.async.t17458.cljs$lang$type = true;
    cljs.core.async.t17458.cljs$lang$ctorStr = "cljs.core.async/t17458";
    cljs.core.async.t17458.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
      return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async/t17458");
    };
    cljs.core.async.__GT_t17458 = function __GT_t17458(cb__$1, flag__$1, alt_handler__$1, meta17459) {
      return new cljs.core.async.t17458(cb__$1, flag__$1, alt_handler__$1, meta17459);
    };
  }
  return new cljs.core.async.t17458(cb, flag, alt_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 11, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 154, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 149, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/mhurd/development/workspace/gridlife/target/cljsbuild-compiler-0/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__17461_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__17461_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__17462_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__17462_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3768__auto__ = wport;
            if (cljs.core.truth_(or__3768__auto__)) {
              return or__3768__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__17463 = i + 1;
          i = G__17463;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3768__auto__ = ret;
  if (cljs.core.truth_(or__3768__auto__)) {
    return or__3768__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4126__auto__ = function() {
        var and__3756__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3756__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3756__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__17464) {
    var map__17466 = p__17464;
    var map__17466__$1 = cljs.core.seq_QMARK_.call(null, map__17466) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17466) : map__17466;
    var opts = map__17466__$1;
    throw new Error("alts! used not in (go ...) block");
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__17464 = null;
    if (arguments.length > 1) {
      var G__17467__i = 0, G__17467__a = new Array(arguments.length - 1);
      while (G__17467__i < G__17467__a.length) {
        G__17467__a[G__17467__i] = arguments[G__17467__i + 1];
        ++G__17467__i;
      }
      p__17464 = new cljs.core.IndexedSeq(G__17467__a, 0);
    }
    return alts_BANG___delegate.call(this, ports, p__17464);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__17468) {
    var ports = cljs.core.first(arglist__17468);
    var p__17464 = cljs.core.rest(arglist__17468);
    return alts_BANG___delegate(ports, p__17464);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__6560__auto___17563 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___17563) {
      return function() {
        var f__6561__auto__ = function() {
          var switch__6504__auto__ = function(c__6560__auto___17563) {
            return function(state_17539) {
              var state_val_17540 = state_17539[1];
              if (state_val_17540 === 7) {
                var inst_17535 = state_17539[2];
                var state_17539__$1 = state_17539;
                var statearr_17541_17564 = state_17539__$1;
                statearr_17541_17564[2] = inst_17535;
                statearr_17541_17564[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_17540 === 1) {
                  var state_17539__$1 = state_17539;
                  var statearr_17542_17565 = state_17539__$1;
                  statearr_17542_17565[2] = null;
                  statearr_17542_17565[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17540 === 4) {
                    var inst_17518 = state_17539[7];
                    var inst_17518__$1 = state_17539[2];
                    var inst_17519 = inst_17518__$1 == null;
                    var state_17539__$1 = function() {
                      var statearr_17543 = state_17539;
                      statearr_17543[7] = inst_17518__$1;
                      return statearr_17543;
                    }();
                    if (cljs.core.truth_(inst_17519)) {
                      var statearr_17544_17566 = state_17539__$1;
                      statearr_17544_17566[1] = 5;
                    } else {
                      var statearr_17545_17567 = state_17539__$1;
                      statearr_17545_17567[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_17540 === 13) {
                      var state_17539__$1 = state_17539;
                      var statearr_17546_17568 = state_17539__$1;
                      statearr_17546_17568[2] = null;
                      statearr_17546_17568[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17540 === 6) {
                        var inst_17518 = state_17539[7];
                        var state_17539__$1 = state_17539;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17539__$1, 11, to, inst_17518);
                      } else {
                        if (state_val_17540 === 3) {
                          var inst_17537 = state_17539[2];
                          var state_17539__$1 = state_17539;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17539__$1, inst_17537);
                        } else {
                          if (state_val_17540 === 12) {
                            var state_17539__$1 = state_17539;
                            var statearr_17547_17569 = state_17539__$1;
                            statearr_17547_17569[2] = null;
                            statearr_17547_17569[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_17540 === 2) {
                              var state_17539__$1 = state_17539;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17539__$1, 4, from);
                            } else {
                              if (state_val_17540 === 11) {
                                var inst_17528 = state_17539[2];
                                var state_17539__$1 = state_17539;
                                if (cljs.core.truth_(inst_17528)) {
                                  var statearr_17548_17570 = state_17539__$1;
                                  statearr_17548_17570[1] = 12;
                                } else {
                                  var statearr_17549_17571 = state_17539__$1;
                                  statearr_17549_17571[1] = 13;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_17540 === 9) {
                                  var state_17539__$1 = state_17539;
                                  var statearr_17550_17572 = state_17539__$1;
                                  statearr_17550_17572[2] = null;
                                  statearr_17550_17572[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_17540 === 5) {
                                    var state_17539__$1 = state_17539;
                                    if (cljs.core.truth_(close_QMARK_)) {
                                      var statearr_17551_17573 = state_17539__$1;
                                      statearr_17551_17573[1] = 8;
                                    } else {
                                      var statearr_17552_17574 = state_17539__$1;
                                      statearr_17552_17574[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_17540 === 14) {
                                      var inst_17533 = state_17539[2];
                                      var state_17539__$1 = state_17539;
                                      var statearr_17553_17575 = state_17539__$1;
                                      statearr_17553_17575[2] = inst_17533;
                                      statearr_17553_17575[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_17540 === 10) {
                                        var inst_17525 = state_17539[2];
                                        var state_17539__$1 = state_17539;
                                        var statearr_17554_17576 = state_17539__$1;
                                        statearr_17554_17576[2] = inst_17525;
                                        statearr_17554_17576[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_17540 === 8) {
                                          var inst_17522 = cljs.core.async.close_BANG_.call(null, to);
                                          var state_17539__$1 = state_17539;
                                          var statearr_17555_17577 = state_17539__$1;
                                          statearr_17555_17577[2] = inst_17522;
                                          statearr_17555_17577[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6560__auto___17563);
          return function(switch__6504__auto__, c__6560__auto___17563) {
            return function() {
              var state_machine__6505__auto__ = null;
              var state_machine__6505__auto____0 = function() {
                var statearr_17559 = [null, null, null, null, null, null, null, null];
                statearr_17559[0] = state_machine__6505__auto__;
                statearr_17559[1] = 1;
                return statearr_17559;
              };
              var state_machine__6505__auto____1 = function(state_17539) {
                while (true) {
                  var ret_value__6506__auto__ = function() {
                    try {
                      while (true) {
                        var result__6507__auto__ = switch__6504__auto__.call(null, state_17539);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6507__auto__;
                        }
                        break;
                      }
                    } catch (e17560) {
                      if (e17560 instanceof Object) {
                        var ex__6508__auto__ = e17560;
                        var statearr_17561_17578 = state_17539;
                        statearr_17561_17578[5] = ex__6508__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17539);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e17560;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__17579 = state_17539;
                    state_17539 = G__17579;
                    continue;
                  } else {
                    return ret_value__6506__auto__;
                  }
                  break;
                }
              };
              state_machine__6505__auto__ = function(state_17539) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6505__auto____0.call(this);
                  case 1:
                    return state_machine__6505__auto____1.call(this, state_17539);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
              return state_machine__6505__auto__;
            }();
          }(switch__6504__auto__, c__6560__auto___17563);
        }();
        var state__6562__auto__ = function() {
          var statearr_17562 = f__6561__auto__.call(null);
          statearr_17562[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___17563;
          return statearr_17562;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
      };
    }(c__6560__auto___17563));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.pipeline_STAR_ = function pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null))))].join(""));
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__17763) {
      var vec__17764 = p__17763;
      var v = cljs.core.nth.call(null, vec__17764, 0, null);
      var p = cljs.core.nth.call(null, vec__17764, 1, null);
      var job = vec__17764;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__6560__auto___17946 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___17946, res, vec__17764, v, p, job, jobs, results) {
          return function() {
            var f__6561__auto__ = function() {
              var switch__6504__auto__ = function(c__6560__auto___17946, res, vec__17764, v, p, job, jobs, results) {
                return function(state_17769) {
                  var state_val_17770 = state_17769[1];
                  if (state_val_17770 === 2) {
                    var inst_17766 = state_17769[2];
                    var inst_17767 = cljs.core.async.close_BANG_.call(null, res);
                    var state_17769__$1 = function() {
                      var statearr_17771 = state_17769;
                      statearr_17771[7] = inst_17766;
                      return statearr_17771;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17769__$1, inst_17767);
                  } else {
                    if (state_val_17770 === 1) {
                      var state_17769__$1 = state_17769;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17769__$1, 2, res, v);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__6560__auto___17946, res, vec__17764, v, p, job, jobs, results);
              return function(switch__6504__auto__, c__6560__auto___17946, res, vec__17764, v, p, job, jobs, results) {
                return function() {
                  var state_machine__6505__auto__ = null;
                  var state_machine__6505__auto____0 = function() {
                    var statearr_17775 = [null, null, null, null, null, null, null, null];
                    statearr_17775[0] = state_machine__6505__auto__;
                    statearr_17775[1] = 1;
                    return statearr_17775;
                  };
                  var state_machine__6505__auto____1 = function(state_17769) {
                    while (true) {
                      var ret_value__6506__auto__ = function() {
                        try {
                          while (true) {
                            var result__6507__auto__ = switch__6504__auto__.call(null, state_17769);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__6507__auto__;
                            }
                            break;
                          }
                        } catch (e17776) {
                          if (e17776 instanceof Object) {
                            var ex__6508__auto__ = e17776;
                            var statearr_17777_17947 = state_17769;
                            statearr_17777_17947[5] = ex__6508__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17769);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e17776;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__17948 = state_17769;
                        state_17769 = G__17948;
                        continue;
                      } else {
                        return ret_value__6506__auto__;
                      }
                      break;
                    }
                  };
                  state_machine__6505__auto__ = function(state_17769) {
                    switch(arguments.length) {
                      case 0:
                        return state_machine__6505__auto____0.call(this);
                      case 1:
                        return state_machine__6505__auto____1.call(this, state_17769);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
                  state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
                  return state_machine__6505__auto__;
                }();
              }(switch__6504__auto__, c__6560__auto___17946, res, vec__17764, v, p, job, jobs, results);
            }();
            var state__6562__auto__ = function() {
              var statearr_17778 = f__6561__auto__.call(null);
              statearr_17778[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___17946;
              return statearr_17778;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
          };
        }(c__6560__auto___17946, res, vec__17764, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__17779) {
      var vec__17780 = p__17779;
      var v = cljs.core.nth.call(null, vec__17780, 0, null);
      var p = cljs.core.nth.call(null, vec__17780, 1, null);
      var job = vec__17780;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__4655__auto___17949 = n;
  var __17950 = 0;
  while (true) {
    if (__17950 < n__4655__auto___17949) {
      var G__17781_17951 = type instanceof cljs.core.Keyword ? type.fqn : null;
      switch(G__17781_17951) {
        case "async":
          var c__6560__auto___17953 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__17950, c__6560__auto___17953, G__17781_17951, n__4655__auto___17949, jobs, results, process, async) {
            return function() {
              var f__6561__auto__ = function() {
                var switch__6504__auto__ = function(__17950, c__6560__auto___17953, G__17781_17951, n__4655__auto___17949, jobs, results, process, async) {
                  return function(state_17794) {
                    var state_val_17795 = state_17794[1];
                    if (state_val_17795 === 7) {
                      var inst_17790 = state_17794[2];
                      var state_17794__$1 = state_17794;
                      var statearr_17796_17954 = state_17794__$1;
                      statearr_17796_17954[2] = inst_17790;
                      statearr_17796_17954[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17795 === 6) {
                        var state_17794__$1 = state_17794;
                        var statearr_17797_17955 = state_17794__$1;
                        statearr_17797_17955[2] = null;
                        statearr_17797_17955[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17795 === 5) {
                          var state_17794__$1 = state_17794;
                          var statearr_17798_17956 = state_17794__$1;
                          statearr_17798_17956[2] = null;
                          statearr_17798_17956[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_17795 === 4) {
                            var inst_17784 = state_17794[2];
                            var inst_17785 = async.call(null, inst_17784);
                            var state_17794__$1 = state_17794;
                            if (cljs.core.truth_(inst_17785)) {
                              var statearr_17799_17957 = state_17794__$1;
                              statearr_17799_17957[1] = 5;
                            } else {
                              var statearr_17800_17958 = state_17794__$1;
                              statearr_17800_17958[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_17795 === 3) {
                              var inst_17792 = state_17794[2];
                              var state_17794__$1 = state_17794;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17794__$1, inst_17792);
                            } else {
                              if (state_val_17795 === 2) {
                                var state_17794__$1 = state_17794;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17794__$1, 4, jobs);
                              } else {
                                if (state_val_17795 === 1) {
                                  var state_17794__$1 = state_17794;
                                  var statearr_17801_17959 = state_17794__$1;
                                  statearr_17801_17959[2] = null;
                                  statearr_17801_17959[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__17950, c__6560__auto___17953, G__17781_17951, n__4655__auto___17949, jobs, results, process, async);
                return function(__17950, switch__6504__auto__, c__6560__auto___17953, G__17781_17951, n__4655__auto___17949, jobs, results, process, async) {
                  return function() {
                    var state_machine__6505__auto__ = null;
                    var state_machine__6505__auto____0 = function() {
                      var statearr_17805 = [null, null, null, null, null, null, null];
                      statearr_17805[0] = state_machine__6505__auto__;
                      statearr_17805[1] = 1;
                      return statearr_17805;
                    };
                    var state_machine__6505__auto____1 = function(state_17794) {
                      while (true) {
                        var ret_value__6506__auto__ = function() {
                          try {
                            while (true) {
                              var result__6507__auto__ = switch__6504__auto__.call(null, state_17794);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6507__auto__;
                              }
                              break;
                            }
                          } catch (e17806) {
                            if (e17806 instanceof Object) {
                              var ex__6508__auto__ = e17806;
                              var statearr_17807_17960 = state_17794;
                              statearr_17807_17960[5] = ex__6508__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17794);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e17806;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__17961 = state_17794;
                          state_17794 = G__17961;
                          continue;
                        } else {
                          return ret_value__6506__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6505__auto__ = function(state_17794) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6505__auto____0.call(this);
                        case 1:
                          return state_machine__6505__auto____1.call(this, state_17794);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
                    state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
                    return state_machine__6505__auto__;
                  }();
                }(__17950, switch__6504__auto__, c__6560__auto___17953, G__17781_17951, n__4655__auto___17949, jobs, results, process, async);
              }();
              var state__6562__auto__ = function() {
                var statearr_17808 = f__6561__auto__.call(null);
                statearr_17808[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___17953;
                return statearr_17808;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
            };
          }(__17950, c__6560__auto___17953, G__17781_17951, n__4655__auto___17949, jobs, results, process, async));
          break;
        case "compute":
          var c__6560__auto___17962 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__17950, c__6560__auto___17962, G__17781_17951, n__4655__auto___17949, jobs, results, process, async) {
            return function() {
              var f__6561__auto__ = function() {
                var switch__6504__auto__ = function(__17950, c__6560__auto___17962, G__17781_17951, n__4655__auto___17949, jobs, results, process, async) {
                  return function(state_17821) {
                    var state_val_17822 = state_17821[1];
                    if (state_val_17822 === 7) {
                      var inst_17817 = state_17821[2];
                      var state_17821__$1 = state_17821;
                      var statearr_17823_17963 = state_17821__$1;
                      statearr_17823_17963[2] = inst_17817;
                      statearr_17823_17963[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17822 === 6) {
                        var state_17821__$1 = state_17821;
                        var statearr_17824_17964 = state_17821__$1;
                        statearr_17824_17964[2] = null;
                        statearr_17824_17964[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17822 === 5) {
                          var state_17821__$1 = state_17821;
                          var statearr_17825_17965 = state_17821__$1;
                          statearr_17825_17965[2] = null;
                          statearr_17825_17965[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_17822 === 4) {
                            var inst_17811 = state_17821[2];
                            var inst_17812 = process.call(null, inst_17811);
                            var state_17821__$1 = state_17821;
                            if (cljs.core.truth_(inst_17812)) {
                              var statearr_17826_17966 = state_17821__$1;
                              statearr_17826_17966[1] = 5;
                            } else {
                              var statearr_17827_17967 = state_17821__$1;
                              statearr_17827_17967[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_17822 === 3) {
                              var inst_17819 = state_17821[2];
                              var state_17821__$1 = state_17821;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17821__$1, inst_17819);
                            } else {
                              if (state_val_17822 === 2) {
                                var state_17821__$1 = state_17821;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17821__$1, 4, jobs);
                              } else {
                                if (state_val_17822 === 1) {
                                  var state_17821__$1 = state_17821;
                                  var statearr_17828_17968 = state_17821__$1;
                                  statearr_17828_17968[2] = null;
                                  statearr_17828_17968[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__17950, c__6560__auto___17962, G__17781_17951, n__4655__auto___17949, jobs, results, process, async);
                return function(__17950, switch__6504__auto__, c__6560__auto___17962, G__17781_17951, n__4655__auto___17949, jobs, results, process, async) {
                  return function() {
                    var state_machine__6505__auto__ = null;
                    var state_machine__6505__auto____0 = function() {
                      var statearr_17832 = [null, null, null, null, null, null, null];
                      statearr_17832[0] = state_machine__6505__auto__;
                      statearr_17832[1] = 1;
                      return statearr_17832;
                    };
                    var state_machine__6505__auto____1 = function(state_17821) {
                      while (true) {
                        var ret_value__6506__auto__ = function() {
                          try {
                            while (true) {
                              var result__6507__auto__ = switch__6504__auto__.call(null, state_17821);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6507__auto__;
                              }
                              break;
                            }
                          } catch (e17833) {
                            if (e17833 instanceof Object) {
                              var ex__6508__auto__ = e17833;
                              var statearr_17834_17969 = state_17821;
                              statearr_17834_17969[5] = ex__6508__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17821);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e17833;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__17970 = state_17821;
                          state_17821 = G__17970;
                          continue;
                        } else {
                          return ret_value__6506__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6505__auto__ = function(state_17821) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6505__auto____0.call(this);
                        case 1:
                          return state_machine__6505__auto____1.call(this, state_17821);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
                    state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
                    return state_machine__6505__auto__;
                  }();
                }(__17950, switch__6504__auto__, c__6560__auto___17962, G__17781_17951, n__4655__auto___17949, jobs, results, process, async);
              }();
              var state__6562__auto__ = function() {
                var statearr_17835 = f__6561__auto__.call(null);
                statearr_17835[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___17962;
                return statearr_17835;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
            };
          }(__17950, c__6560__auto___17962, G__17781_17951, n__4655__auto___17949, jobs, results, process, async));
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
      }
      var G__17971 = __17950 + 1;
      __17950 = G__17971;
      continue;
    } else {
    }
    break;
  }
  var c__6560__auto___17972 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___17972, jobs, results, process, async) {
    return function() {
      var f__6561__auto__ = function() {
        var switch__6504__auto__ = function(c__6560__auto___17972, jobs, results, process, async) {
          return function(state_17857) {
            var state_val_17858 = state_17857[1];
            if (state_val_17858 === 9) {
              var inst_17850 = state_17857[2];
              var state_17857__$1 = function() {
                var statearr_17859 = state_17857;
                statearr_17859[7] = inst_17850;
                return statearr_17859;
              }();
              var statearr_17860_17973 = state_17857__$1;
              statearr_17860_17973[2] = null;
              statearr_17860_17973[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_17858 === 8) {
                var inst_17843 = state_17857[8];
                var inst_17848 = state_17857[2];
                var state_17857__$1 = function() {
                  var statearr_17861 = state_17857;
                  statearr_17861[9] = inst_17848;
                  return statearr_17861;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17857__$1, 9, results, inst_17843);
              } else {
                if (state_val_17858 === 7) {
                  var inst_17853 = state_17857[2];
                  var state_17857__$1 = state_17857;
                  var statearr_17862_17974 = state_17857__$1;
                  statearr_17862_17974[2] = inst_17853;
                  statearr_17862_17974[1] = 3;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17858 === 6) {
                    var inst_17843 = state_17857[8];
                    var inst_17838 = state_17857[10];
                    var inst_17843__$1 = cljs.core.async.chan.call(null, 1);
                    var inst_17844 = cljs.core.PersistentVector.EMPTY_NODE;
                    var inst_17845 = [inst_17838, inst_17843__$1];
                    var inst_17846 = new cljs.core.PersistentVector(null, 2, 5, inst_17844, inst_17845, null);
                    var state_17857__$1 = function() {
                      var statearr_17863 = state_17857;
                      statearr_17863[8] = inst_17843__$1;
                      return statearr_17863;
                    }();
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17857__$1, 8, jobs, inst_17846);
                  } else {
                    if (state_val_17858 === 5) {
                      var inst_17841 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_17857__$1 = state_17857;
                      var statearr_17864_17975 = state_17857__$1;
                      statearr_17864_17975[2] = inst_17841;
                      statearr_17864_17975[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17858 === 4) {
                        var inst_17838 = state_17857[10];
                        var inst_17838__$1 = state_17857[2];
                        var inst_17839 = inst_17838__$1 == null;
                        var state_17857__$1 = function() {
                          var statearr_17865 = state_17857;
                          statearr_17865[10] = inst_17838__$1;
                          return statearr_17865;
                        }();
                        if (cljs.core.truth_(inst_17839)) {
                          var statearr_17866_17976 = state_17857__$1;
                          statearr_17866_17976[1] = 5;
                        } else {
                          var statearr_17867_17977 = state_17857__$1;
                          statearr_17867_17977[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17858 === 3) {
                          var inst_17855 = state_17857[2];
                          var state_17857__$1 = state_17857;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17857__$1, inst_17855);
                        } else {
                          if (state_val_17858 === 2) {
                            var state_17857__$1 = state_17857;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17857__$1, 4, from);
                          } else {
                            if (state_val_17858 === 1) {
                              var state_17857__$1 = state_17857;
                              var statearr_17868_17978 = state_17857__$1;
                              statearr_17868_17978[2] = null;
                              statearr_17868_17978[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6560__auto___17972, jobs, results, process, async);
        return function(switch__6504__auto__, c__6560__auto___17972, jobs, results, process, async) {
          return function() {
            var state_machine__6505__auto__ = null;
            var state_machine__6505__auto____0 = function() {
              var statearr_17872 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_17872[0] = state_machine__6505__auto__;
              statearr_17872[1] = 1;
              return statearr_17872;
            };
            var state_machine__6505__auto____1 = function(state_17857) {
              while (true) {
                var ret_value__6506__auto__ = function() {
                  try {
                    while (true) {
                      var result__6507__auto__ = switch__6504__auto__.call(null, state_17857);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6507__auto__;
                      }
                      break;
                    }
                  } catch (e17873) {
                    if (e17873 instanceof Object) {
                      var ex__6508__auto__ = e17873;
                      var statearr_17874_17979 = state_17857;
                      statearr_17874_17979[5] = ex__6508__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17857);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e17873;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__17980 = state_17857;
                  state_17857 = G__17980;
                  continue;
                } else {
                  return ret_value__6506__auto__;
                }
                break;
              }
            };
            state_machine__6505__auto__ = function(state_17857) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6505__auto____0.call(this);
                case 1:
                  return state_machine__6505__auto____1.call(this, state_17857);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
            state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
            return state_machine__6505__auto__;
          }();
        }(switch__6504__auto__, c__6560__auto___17972, jobs, results, process, async);
      }();
      var state__6562__auto__ = function() {
        var statearr_17875 = f__6561__auto__.call(null);
        statearr_17875[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___17972;
        return statearr_17875;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
    };
  }(c__6560__auto___17972, jobs, results, process, async));
  var c__6560__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto__, jobs, results, process, async) {
    return function() {
      var f__6561__auto__ = function() {
        var switch__6504__auto__ = function(c__6560__auto__, jobs, results, process, async) {
          return function(state_17913) {
            var state_val_17914 = state_17913[1];
            if (state_val_17914 === 7) {
              var inst_17909 = state_17913[2];
              var state_17913__$1 = state_17913;
              var statearr_17915_17981 = state_17913__$1;
              statearr_17915_17981[2] = inst_17909;
              statearr_17915_17981[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_17914 === 20) {
                var state_17913__$1 = state_17913;
                var statearr_17916_17982 = state_17913__$1;
                statearr_17916_17982[2] = null;
                statearr_17916_17982[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_17914 === 1) {
                  var state_17913__$1 = state_17913;
                  var statearr_17917_17983 = state_17913__$1;
                  statearr_17917_17983[2] = null;
                  statearr_17917_17983[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17914 === 4) {
                    var inst_17878 = state_17913[7];
                    var inst_17878__$1 = state_17913[2];
                    var inst_17879 = inst_17878__$1 == null;
                    var state_17913__$1 = function() {
                      var statearr_17918 = state_17913;
                      statearr_17918[7] = inst_17878__$1;
                      return statearr_17918;
                    }();
                    if (cljs.core.truth_(inst_17879)) {
                      var statearr_17919_17984 = state_17913__$1;
                      statearr_17919_17984[1] = 5;
                    } else {
                      var statearr_17920_17985 = state_17913__$1;
                      statearr_17920_17985[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_17914 === 15) {
                      var inst_17891 = state_17913[8];
                      var state_17913__$1 = state_17913;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17913__$1, 18, to, inst_17891);
                    } else {
                      if (state_val_17914 === 21) {
                        var inst_17904 = state_17913[2];
                        var state_17913__$1 = state_17913;
                        var statearr_17921_17986 = state_17913__$1;
                        statearr_17921_17986[2] = inst_17904;
                        statearr_17921_17986[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17914 === 13) {
                          var inst_17906 = state_17913[2];
                          var state_17913__$1 = function() {
                            var statearr_17922 = state_17913;
                            statearr_17922[9] = inst_17906;
                            return statearr_17922;
                          }();
                          var statearr_17923_17987 = state_17913__$1;
                          statearr_17923_17987[2] = null;
                          statearr_17923_17987[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_17914 === 6) {
                            var inst_17878 = state_17913[7];
                            var state_17913__$1 = state_17913;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17913__$1, 11, inst_17878);
                          } else {
                            if (state_val_17914 === 17) {
                              var inst_17899 = state_17913[2];
                              var state_17913__$1 = state_17913;
                              if (cljs.core.truth_(inst_17899)) {
                                var statearr_17924_17988 = state_17913__$1;
                                statearr_17924_17988[1] = 19;
                              } else {
                                var statearr_17925_17989 = state_17913__$1;
                                statearr_17925_17989[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_17914 === 3) {
                                var inst_17911 = state_17913[2];
                                var state_17913__$1 = state_17913;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17913__$1, inst_17911);
                              } else {
                                if (state_val_17914 === 12) {
                                  var inst_17888 = state_17913[10];
                                  var state_17913__$1 = state_17913;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17913__$1, 14, inst_17888);
                                } else {
                                  if (state_val_17914 === 2) {
                                    var state_17913__$1 = state_17913;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17913__$1, 4, results);
                                  } else {
                                    if (state_val_17914 === 19) {
                                      var state_17913__$1 = state_17913;
                                      var statearr_17926_17990 = state_17913__$1;
                                      statearr_17926_17990[2] = null;
                                      statearr_17926_17990[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_17914 === 11) {
                                        var inst_17888 = state_17913[2];
                                        var state_17913__$1 = function() {
                                          var statearr_17927 = state_17913;
                                          statearr_17927[10] = inst_17888;
                                          return statearr_17927;
                                        }();
                                        var statearr_17928_17991 = state_17913__$1;
                                        statearr_17928_17991[2] = null;
                                        statearr_17928_17991[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_17914 === 9) {
                                          var state_17913__$1 = state_17913;
                                          var statearr_17929_17992 = state_17913__$1;
                                          statearr_17929_17992[2] = null;
                                          statearr_17929_17992[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_17914 === 5) {
                                            var state_17913__$1 = state_17913;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_17930_17993 = state_17913__$1;
                                              statearr_17930_17993[1] = 8;
                                            } else {
                                              var statearr_17931_17994 = state_17913__$1;
                                              statearr_17931_17994[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_17914 === 14) {
                                              var inst_17893 = state_17913[11];
                                              var inst_17891 = state_17913[8];
                                              var inst_17891__$1 = state_17913[2];
                                              var inst_17892 = inst_17891__$1 == null;
                                              var inst_17893__$1 = cljs.core.not.call(null, inst_17892);
                                              var state_17913__$1 = function() {
                                                var statearr_17932 = state_17913;
                                                statearr_17932[11] = inst_17893__$1;
                                                statearr_17932[8] = inst_17891__$1;
                                                return statearr_17932;
                                              }();
                                              if (inst_17893__$1) {
                                                var statearr_17933_17995 = state_17913__$1;
                                                statearr_17933_17995[1] = 15;
                                              } else {
                                                var statearr_17934_17996 = state_17913__$1;
                                                statearr_17934_17996[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_17914 === 16) {
                                                var inst_17893 = state_17913[11];
                                                var state_17913__$1 = state_17913;
                                                var statearr_17935_17997 = state_17913__$1;
                                                statearr_17935_17997[2] = inst_17893;
                                                statearr_17935_17997[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_17914 === 10) {
                                                  var inst_17885 = state_17913[2];
                                                  var state_17913__$1 = state_17913;
                                                  var statearr_17936_17998 = state_17913__$1;
                                                  statearr_17936_17998[2] = inst_17885;
                                                  statearr_17936_17998[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_17914 === 18) {
                                                    var inst_17896 = state_17913[2];
                                                    var state_17913__$1 = state_17913;
                                                    var statearr_17937_17999 = state_17913__$1;
                                                    statearr_17937_17999[2] = inst_17896;
                                                    statearr_17937_17999[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_17914 === 8) {
                                                      var inst_17882 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_17913__$1 = state_17913;
                                                      var statearr_17938_18000 = state_17913__$1;
                                                      statearr_17938_18000[2] = inst_17882;
                                                      statearr_17938_18000[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6560__auto__, jobs, results, process, async);
        return function(switch__6504__auto__, c__6560__auto__, jobs, results, process, async) {
          return function() {
            var state_machine__6505__auto__ = null;
            var state_machine__6505__auto____0 = function() {
              var statearr_17942 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_17942[0] = state_machine__6505__auto__;
              statearr_17942[1] = 1;
              return statearr_17942;
            };
            var state_machine__6505__auto____1 = function(state_17913) {
              while (true) {
                var ret_value__6506__auto__ = function() {
                  try {
                    while (true) {
                      var result__6507__auto__ = switch__6504__auto__.call(null, state_17913);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6507__auto__;
                      }
                      break;
                    }
                  } catch (e17943) {
                    if (e17943 instanceof Object) {
                      var ex__6508__auto__ = e17943;
                      var statearr_17944_18001 = state_17913;
                      statearr_17944_18001[5] = ex__6508__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17913);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e17943;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__18002 = state_17913;
                  state_17913 = G__18002;
                  continue;
                } else {
                  return ret_value__6506__auto__;
                }
                break;
              }
            };
            state_machine__6505__auto__ = function(state_17913) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6505__auto____0.call(this);
                case 1:
                  return state_machine__6505__auto____1.call(this, state_17913);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
            state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
            return state_machine__6505__auto__;
          }();
        }(switch__6504__auto__, c__6560__auto__, jobs, results, process, async);
      }();
      var state__6562__auto__ = function() {
        var statearr_17945 = f__6561__auto__.call(null);
        statearr_17945[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto__;
        return statearr_17945;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
    };
  }(c__6560__auto__, jobs, results, process, async));
  return c__6560__auto__;
};
cljs.core.async.pipeline_async = function() {
  var pipeline_async = null;
  var pipeline_async__4 = function(n, to, af, from) {
    return pipeline_async.call(null, n, to, af, from, true);
  };
  var pipeline_async__5 = function(n, to, af, from, close_QMARK_) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
  };
  pipeline_async = function(n, to, af, from, close_QMARK_) {
    switch(arguments.length) {
      case 4:
        return pipeline_async__4.call(this, n, to, af, from);
      case 5:
        return pipeline_async__5.call(this, n, to, af, from, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline_async.cljs$core$IFn$_invoke$arity$4 = pipeline_async__4;
  pipeline_async.cljs$core$IFn$_invoke$arity$5 = pipeline_async__5;
  return pipeline_async;
}();
cljs.core.async.pipeline = function() {
  var pipeline = null;
  var pipeline__4 = function(n, to, xf, from) {
    return pipeline.call(null, n, to, xf, from, true);
  };
  var pipeline__5 = function(n, to, xf, from, close_QMARK_) {
    return pipeline.call(null, n, to, xf, from, close_QMARK_, null);
  };
  var pipeline__6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
  };
  pipeline = function(n, to, xf, from, close_QMARK_, ex_handler) {
    switch(arguments.length) {
      case 4:
        return pipeline__4.call(this, n, to, xf, from);
      case 5:
        return pipeline__5.call(this, n, to, xf, from, close_QMARK_);
      case 6:
        return pipeline__6.call(this, n, to, xf, from, close_QMARK_, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline.cljs$core$IFn$_invoke$arity$4 = pipeline__4;
  pipeline.cljs$core$IFn$_invoke$arity$5 = pipeline__5;
  pipeline.cljs$core$IFn$_invoke$arity$6 = pipeline__6;
  return pipeline;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__6560__auto___18103 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___18103, tc, fc) {
      return function() {
        var f__6561__auto__ = function() {
          var switch__6504__auto__ = function(c__6560__auto___18103, tc, fc) {
            return function(state_18078) {
              var state_val_18079 = state_18078[1];
              if (state_val_18079 === 7) {
                var inst_18074 = state_18078[2];
                var state_18078__$1 = state_18078;
                var statearr_18080_18104 = state_18078__$1;
                statearr_18080_18104[2] = inst_18074;
                statearr_18080_18104[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18079 === 1) {
                  var state_18078__$1 = state_18078;
                  var statearr_18081_18105 = state_18078__$1;
                  statearr_18081_18105[2] = null;
                  statearr_18081_18105[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18079 === 4) {
                    var inst_18055 = state_18078[7];
                    var inst_18055__$1 = state_18078[2];
                    var inst_18056 = inst_18055__$1 == null;
                    var state_18078__$1 = function() {
                      var statearr_18082 = state_18078;
                      statearr_18082[7] = inst_18055__$1;
                      return statearr_18082;
                    }();
                    if (cljs.core.truth_(inst_18056)) {
                      var statearr_18083_18106 = state_18078__$1;
                      statearr_18083_18106[1] = 5;
                    } else {
                      var statearr_18084_18107 = state_18078__$1;
                      statearr_18084_18107[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18079 === 13) {
                      var state_18078__$1 = state_18078;
                      var statearr_18085_18108 = state_18078__$1;
                      statearr_18085_18108[2] = null;
                      statearr_18085_18108[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18079 === 6) {
                        var inst_18055 = state_18078[7];
                        var inst_18061 = p.call(null, inst_18055);
                        var state_18078__$1 = state_18078;
                        if (cljs.core.truth_(inst_18061)) {
                          var statearr_18086_18109 = state_18078__$1;
                          statearr_18086_18109[1] = 9;
                        } else {
                          var statearr_18087_18110 = state_18078__$1;
                          statearr_18087_18110[1] = 10;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_18079 === 3) {
                          var inst_18076 = state_18078[2];
                          var state_18078__$1 = state_18078;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18078__$1, inst_18076);
                        } else {
                          if (state_val_18079 === 12) {
                            var state_18078__$1 = state_18078;
                            var statearr_18088_18111 = state_18078__$1;
                            statearr_18088_18111[2] = null;
                            statearr_18088_18111[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18079 === 2) {
                              var state_18078__$1 = state_18078;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18078__$1, 4, ch);
                            } else {
                              if (state_val_18079 === 11) {
                                var inst_18055 = state_18078[7];
                                var inst_18065 = state_18078[2];
                                var state_18078__$1 = state_18078;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18078__$1, 8, inst_18065, inst_18055);
                              } else {
                                if (state_val_18079 === 9) {
                                  var state_18078__$1 = state_18078;
                                  var statearr_18089_18112 = state_18078__$1;
                                  statearr_18089_18112[2] = tc;
                                  statearr_18089_18112[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18079 === 5) {
                                    var inst_18058 = cljs.core.async.close_BANG_.call(null, tc);
                                    var inst_18059 = cljs.core.async.close_BANG_.call(null, fc);
                                    var state_18078__$1 = function() {
                                      var statearr_18090 = state_18078;
                                      statearr_18090[8] = inst_18058;
                                      return statearr_18090;
                                    }();
                                    var statearr_18091_18113 = state_18078__$1;
                                    statearr_18091_18113[2] = inst_18059;
                                    statearr_18091_18113[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_18079 === 14) {
                                      var inst_18072 = state_18078[2];
                                      var state_18078__$1 = state_18078;
                                      var statearr_18092_18114 = state_18078__$1;
                                      statearr_18092_18114[2] = inst_18072;
                                      statearr_18092_18114[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_18079 === 10) {
                                        var state_18078__$1 = state_18078;
                                        var statearr_18093_18115 = state_18078__$1;
                                        statearr_18093_18115[2] = fc;
                                        statearr_18093_18115[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_18079 === 8) {
                                          var inst_18067 = state_18078[2];
                                          var state_18078__$1 = state_18078;
                                          if (cljs.core.truth_(inst_18067)) {
                                            var statearr_18094_18116 = state_18078__$1;
                                            statearr_18094_18116[1] = 12;
                                          } else {
                                            var statearr_18095_18117 = state_18078__$1;
                                            statearr_18095_18117[1] = 13;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6560__auto___18103, tc, fc);
          return function(switch__6504__auto__, c__6560__auto___18103, tc, fc) {
            return function() {
              var state_machine__6505__auto__ = null;
              var state_machine__6505__auto____0 = function() {
                var statearr_18099 = [null, null, null, null, null, null, null, null, null];
                statearr_18099[0] = state_machine__6505__auto__;
                statearr_18099[1] = 1;
                return statearr_18099;
              };
              var state_machine__6505__auto____1 = function(state_18078) {
                while (true) {
                  var ret_value__6506__auto__ = function() {
                    try {
                      while (true) {
                        var result__6507__auto__ = switch__6504__auto__.call(null, state_18078);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6507__auto__;
                        }
                        break;
                      }
                    } catch (e18100) {
                      if (e18100 instanceof Object) {
                        var ex__6508__auto__ = e18100;
                        var statearr_18101_18118 = state_18078;
                        statearr_18101_18118[5] = ex__6508__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18078);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e18100;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__18119 = state_18078;
                    state_18078 = G__18119;
                    continue;
                  } else {
                    return ret_value__6506__auto__;
                  }
                  break;
                }
              };
              state_machine__6505__auto__ = function(state_18078) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6505__auto____0.call(this);
                  case 1:
                    return state_machine__6505__auto____1.call(this, state_18078);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
              return state_machine__6505__auto__;
            }();
          }(switch__6504__auto__, c__6560__auto___18103, tc, fc);
        }();
        var state__6562__auto__ = function() {
          var statearr_18102 = f__6561__auto__.call(null);
          statearr_18102[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___18103;
          return statearr_18102;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
      };
    }(c__6560__auto___18103, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__6560__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto__) {
    return function() {
      var f__6561__auto__ = function() {
        var switch__6504__auto__ = function(c__6560__auto__) {
          return function(state_18166) {
            var state_val_18167 = state_18166[1];
            if (state_val_18167 === 7) {
              var inst_18162 = state_18166[2];
              var state_18166__$1 = state_18166;
              var statearr_18168_18184 = state_18166__$1;
              statearr_18168_18184[2] = inst_18162;
              statearr_18168_18184[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_18167 === 6) {
                var inst_18152 = state_18166[7];
                var inst_18155 = state_18166[8];
                var inst_18159 = f.call(null, inst_18152, inst_18155);
                var inst_18152__$1 = inst_18159;
                var state_18166__$1 = function() {
                  var statearr_18169 = state_18166;
                  statearr_18169[7] = inst_18152__$1;
                  return statearr_18169;
                }();
                var statearr_18170_18185 = state_18166__$1;
                statearr_18170_18185[2] = null;
                statearr_18170_18185[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18167 === 5) {
                  var inst_18152 = state_18166[7];
                  var state_18166__$1 = state_18166;
                  var statearr_18171_18186 = state_18166__$1;
                  statearr_18171_18186[2] = inst_18152;
                  statearr_18171_18186[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18167 === 4) {
                    var inst_18155 = state_18166[8];
                    var inst_18155__$1 = state_18166[2];
                    var inst_18156 = inst_18155__$1 == null;
                    var state_18166__$1 = function() {
                      var statearr_18172 = state_18166;
                      statearr_18172[8] = inst_18155__$1;
                      return statearr_18172;
                    }();
                    if (cljs.core.truth_(inst_18156)) {
                      var statearr_18173_18187 = state_18166__$1;
                      statearr_18173_18187[1] = 5;
                    } else {
                      var statearr_18174_18188 = state_18166__$1;
                      statearr_18174_18188[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18167 === 3) {
                      var inst_18164 = state_18166[2];
                      var state_18166__$1 = state_18166;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18166__$1, inst_18164);
                    } else {
                      if (state_val_18167 === 2) {
                        var state_18166__$1 = state_18166;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18166__$1, 4, ch);
                      } else {
                        if (state_val_18167 === 1) {
                          var inst_18152 = init;
                          var state_18166__$1 = function() {
                            var statearr_18175 = state_18166;
                            statearr_18175[7] = inst_18152;
                            return statearr_18175;
                          }();
                          var statearr_18176_18189 = state_18166__$1;
                          statearr_18176_18189[2] = null;
                          statearr_18176_18189[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6560__auto__);
        return function(switch__6504__auto__, c__6560__auto__) {
          return function() {
            var state_machine__6505__auto__ = null;
            var state_machine__6505__auto____0 = function() {
              var statearr_18180 = [null, null, null, null, null, null, null, null, null];
              statearr_18180[0] = state_machine__6505__auto__;
              statearr_18180[1] = 1;
              return statearr_18180;
            };
            var state_machine__6505__auto____1 = function(state_18166) {
              while (true) {
                var ret_value__6506__auto__ = function() {
                  try {
                    while (true) {
                      var result__6507__auto__ = switch__6504__auto__.call(null, state_18166);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6507__auto__;
                      }
                      break;
                    }
                  } catch (e18181) {
                    if (e18181 instanceof Object) {
                      var ex__6508__auto__ = e18181;
                      var statearr_18182_18190 = state_18166;
                      statearr_18182_18190[5] = ex__6508__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18166);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e18181;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__18191 = state_18166;
                  state_18166 = G__18191;
                  continue;
                } else {
                  return ret_value__6506__auto__;
                }
                break;
              }
            };
            state_machine__6505__auto__ = function(state_18166) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6505__auto____0.call(this);
                case 1:
                  return state_machine__6505__auto____1.call(this, state_18166);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
            state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
            return state_machine__6505__auto__;
          }();
        }(switch__6504__auto__, c__6560__auto__);
      }();
      var state__6562__auto__ = function() {
        var statearr_18183 = f__6561__auto__.call(null);
        statearr_18183[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto__;
        return statearr_18183;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
    };
  }(c__6560__auto__));
  return c__6560__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__6560__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto__) {
      return function() {
        var f__6561__auto__ = function() {
          var switch__6504__auto__ = function(c__6560__auto__) {
            return function(state_18265) {
              var state_val_18266 = state_18265[1];
              if (state_val_18266 === 7) {
                var inst_18247 = state_18265[2];
                var state_18265__$1 = state_18265;
                var statearr_18267_18290 = state_18265__$1;
                statearr_18267_18290[2] = inst_18247;
                statearr_18267_18290[1] = 6;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18266 === 1) {
                  var inst_18241 = cljs.core.seq.call(null, coll);
                  var inst_18242 = inst_18241;
                  var state_18265__$1 = function() {
                    var statearr_18268 = state_18265;
                    statearr_18268[7] = inst_18242;
                    return statearr_18268;
                  }();
                  var statearr_18269_18291 = state_18265__$1;
                  statearr_18269_18291[2] = null;
                  statearr_18269_18291[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18266 === 4) {
                    var inst_18242 = state_18265[7];
                    var inst_18245 = cljs.core.first.call(null, inst_18242);
                    var state_18265__$1 = state_18265;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18265__$1, 7, ch, inst_18245);
                  } else {
                    if (state_val_18266 === 13) {
                      var inst_18259 = state_18265[2];
                      var state_18265__$1 = state_18265;
                      var statearr_18270_18292 = state_18265__$1;
                      statearr_18270_18292[2] = inst_18259;
                      statearr_18270_18292[1] = 10;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18266 === 6) {
                        var inst_18250 = state_18265[2];
                        var state_18265__$1 = state_18265;
                        if (cljs.core.truth_(inst_18250)) {
                          var statearr_18271_18293 = state_18265__$1;
                          statearr_18271_18293[1] = 8;
                        } else {
                          var statearr_18272_18294 = state_18265__$1;
                          statearr_18272_18294[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_18266 === 3) {
                          var inst_18263 = state_18265[2];
                          var state_18265__$1 = state_18265;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18265__$1, inst_18263);
                        } else {
                          if (state_val_18266 === 12) {
                            var state_18265__$1 = state_18265;
                            var statearr_18273_18295 = state_18265__$1;
                            statearr_18273_18295[2] = null;
                            statearr_18273_18295[1] = 13;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18266 === 2) {
                              var inst_18242 = state_18265[7];
                              var state_18265__$1 = state_18265;
                              if (cljs.core.truth_(inst_18242)) {
                                var statearr_18274_18296 = state_18265__$1;
                                statearr_18274_18296[1] = 4;
                              } else {
                                var statearr_18275_18297 = state_18265__$1;
                                statearr_18275_18297[1] = 5;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_18266 === 11) {
                                var inst_18256 = cljs.core.async.close_BANG_.call(null, ch);
                                var state_18265__$1 = state_18265;
                                var statearr_18276_18298 = state_18265__$1;
                                statearr_18276_18298[2] = inst_18256;
                                statearr_18276_18298[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_18266 === 9) {
                                  var state_18265__$1 = state_18265;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_18277_18299 = state_18265__$1;
                                    statearr_18277_18299[1] = 11;
                                  } else {
                                    var statearr_18278_18300 = state_18265__$1;
                                    statearr_18278_18300[1] = 12;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18266 === 5) {
                                    var inst_18242 = state_18265[7];
                                    var state_18265__$1 = state_18265;
                                    var statearr_18279_18301 = state_18265__$1;
                                    statearr_18279_18301[2] = inst_18242;
                                    statearr_18279_18301[1] = 6;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_18266 === 10) {
                                      var inst_18261 = state_18265[2];
                                      var state_18265__$1 = state_18265;
                                      var statearr_18280_18302 = state_18265__$1;
                                      statearr_18280_18302[2] = inst_18261;
                                      statearr_18280_18302[1] = 3;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_18266 === 8) {
                                        var inst_18242 = state_18265[7];
                                        var inst_18252 = cljs.core.next.call(null, inst_18242);
                                        var inst_18242__$1 = inst_18252;
                                        var state_18265__$1 = function() {
                                          var statearr_18281 = state_18265;
                                          statearr_18281[7] = inst_18242__$1;
                                          return statearr_18281;
                                        }();
                                        var statearr_18282_18303 = state_18265__$1;
                                        statearr_18282_18303[2] = null;
                                        statearr_18282_18303[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6560__auto__);
          return function(switch__6504__auto__, c__6560__auto__) {
            return function() {
              var state_machine__6505__auto__ = null;
              var state_machine__6505__auto____0 = function() {
                var statearr_18286 = [null, null, null, null, null, null, null, null];
                statearr_18286[0] = state_machine__6505__auto__;
                statearr_18286[1] = 1;
                return statearr_18286;
              };
              var state_machine__6505__auto____1 = function(state_18265) {
                while (true) {
                  var ret_value__6506__auto__ = function() {
                    try {
                      while (true) {
                        var result__6507__auto__ = switch__6504__auto__.call(null, state_18265);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6507__auto__;
                        }
                        break;
                      }
                    } catch (e18287) {
                      if (e18287 instanceof Object) {
                        var ex__6508__auto__ = e18287;
                        var statearr_18288_18304 = state_18265;
                        statearr_18288_18304[5] = ex__6508__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18265);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e18287;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__18305 = state_18265;
                    state_18265 = G__18305;
                    continue;
                  } else {
                    return ret_value__6506__auto__;
                  }
                  break;
                }
              };
              state_machine__6505__auto__ = function(state_18265) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6505__auto____0.call(this);
                  case 1:
                    return state_machine__6505__auto____1.call(this, state_18265);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
              return state_machine__6505__auto__;
            }();
          }(switch__6504__auto__, c__6560__auto__);
        }();
        var state__6562__auto__ = function() {
          var statearr_18289 = f__6561__auto__.call(null);
          statearr_18289[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto__;
          return statearr_18289;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
      };
    }(c__6560__auto__));
    return c__6560__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj18307 = {};
  return obj18307;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3756__auto__ = _;
    if (and__3756__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4412__auto__ = _ == null ? null : _;
    return function() {
      var or__3768__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj18309 = {};
  return obj18309;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3756__auto__ = m;
    if (and__3756__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4412__auto__ = m == null ? null : m;
    return function() {
      var or__3768__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3756__auto__ = m;
    if (and__3756__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4412__auto__ = m == null ? null : m;
    return function() {
      var or__3768__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3756__auto__ = m;
    if (and__3756__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4412__auto__ = m == null ? null : m;
    return function() {
      var or__3768__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t18531 !== "undefined") {
    } else {
      cljs.core.async.t18531 = function(cs, ch, mult, meta18532) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta18532 = meta18532;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t18531.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t18531.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t18531.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t18531.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t18531.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t18531.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t18531.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_18533) {
          var self__ = this;
          var _18533__$1 = this;
          return self__.meta18532;
        };
      }(cs);
      cljs.core.async.t18531.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_18533, meta18532__$1) {
          var self__ = this;
          var _18533__$1 = this;
          return new cljs.core.async.t18531(self__.cs, self__.ch, self__.mult, meta18532__$1);
        };
      }(cs);
      cljs.core.async.t18531.cljs$lang$type = true;
      cljs.core.async.t18531.cljs$lang$ctorStr = "cljs.core.async/t18531";
      cljs.core.async.t18531.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
          return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async/t18531");
        };
      }(cs);
      cljs.core.async.__GT_t18531 = function(cs) {
        return function __GT_t18531(cs__$1, ch__$1, mult__$1, meta18532) {
          return new cljs.core.async.t18531(cs__$1, ch__$1, mult__$1, meta18532);
        };
      }(cs);
    }
    return new cljs.core.async.t18531(cs, ch, mult, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 48, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 397, new cljs.core.Keyword(null, "column", "column", 2078222095), 11, new cljs.core.Keyword(null, "line", "line", 212345235), 390, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/mhurd/development/workspace/gridlife/target/cljsbuild-compiler-0/cljs/core/async.cljs"], 
    null));
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__6560__auto___18752 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___18752, cs, m, dchan, dctr, done) {
    return function() {
      var f__6561__auto__ = function() {
        var switch__6504__auto__ = function(c__6560__auto___18752, cs, m, dchan, dctr, done) {
          return function(state_18664) {
            var state_val_18665 = state_18664[1];
            if (state_val_18665 === 7) {
              var inst_18660 = state_18664[2];
              var state_18664__$1 = state_18664;
              var statearr_18666_18753 = state_18664__$1;
              statearr_18666_18753[2] = inst_18660;
              statearr_18666_18753[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_18665 === 20) {
                var inst_18565 = state_18664[7];
                var inst_18575 = cljs.core.first.call(null, inst_18565);
                var inst_18576 = cljs.core.nth.call(null, inst_18575, 0, null);
                var inst_18577 = cljs.core.nth.call(null, inst_18575, 1, null);
                var state_18664__$1 = function() {
                  var statearr_18667 = state_18664;
                  statearr_18667[8] = inst_18576;
                  return statearr_18667;
                }();
                if (cljs.core.truth_(inst_18577)) {
                  var statearr_18668_18754 = state_18664__$1;
                  statearr_18668_18754[1] = 22;
                } else {
                  var statearr_18669_18755 = state_18664__$1;
                  statearr_18669_18755[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18665 === 27) {
                  var inst_18612 = state_18664[9];
                  var inst_18536 = state_18664[10];
                  var inst_18607 = state_18664[11];
                  var inst_18605 = state_18664[12];
                  var inst_18612__$1 = cljs.core._nth.call(null, inst_18605, inst_18607);
                  var inst_18613 = cljs.core.async.put_BANG_.call(null, inst_18612__$1, inst_18536, done);
                  var state_18664__$1 = function() {
                    var statearr_18670 = state_18664;
                    statearr_18670[9] = inst_18612__$1;
                    return statearr_18670;
                  }();
                  if (cljs.core.truth_(inst_18613)) {
                    var statearr_18671_18756 = state_18664__$1;
                    statearr_18671_18756[1] = 30;
                  } else {
                    var statearr_18672_18757 = state_18664__$1;
                    statearr_18672_18757[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18665 === 1) {
                    var state_18664__$1 = state_18664;
                    var statearr_18673_18758 = state_18664__$1;
                    statearr_18673_18758[2] = null;
                    statearr_18673_18758[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18665 === 24) {
                      var inst_18565 = state_18664[7];
                      var inst_18582 = state_18664[2];
                      var inst_18583 = cljs.core.next.call(null, inst_18565);
                      var inst_18545 = inst_18583;
                      var inst_18546 = null;
                      var inst_18547 = 0;
                      var inst_18548 = 0;
                      var state_18664__$1 = function() {
                        var statearr_18674 = state_18664;
                        statearr_18674[13] = inst_18547;
                        statearr_18674[14] = inst_18582;
                        statearr_18674[15] = inst_18545;
                        statearr_18674[16] = inst_18546;
                        statearr_18674[17] = inst_18548;
                        return statearr_18674;
                      }();
                      var statearr_18675_18759 = state_18664__$1;
                      statearr_18675_18759[2] = null;
                      statearr_18675_18759[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18665 === 39) {
                        var state_18664__$1 = state_18664;
                        var statearr_18679_18760 = state_18664__$1;
                        statearr_18679_18760[2] = null;
                        statearr_18679_18760[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_18665 === 4) {
                          var inst_18536 = state_18664[10];
                          var inst_18536__$1 = state_18664[2];
                          var inst_18537 = inst_18536__$1 == null;
                          var state_18664__$1 = function() {
                            var statearr_18680 = state_18664;
                            statearr_18680[10] = inst_18536__$1;
                            return statearr_18680;
                          }();
                          if (cljs.core.truth_(inst_18537)) {
                            var statearr_18681_18761 = state_18664__$1;
                            statearr_18681_18761[1] = 5;
                          } else {
                            var statearr_18682_18762 = state_18664__$1;
                            statearr_18682_18762[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_18665 === 15) {
                            var inst_18547 = state_18664[13];
                            var inst_18545 = state_18664[15];
                            var inst_18546 = state_18664[16];
                            var inst_18548 = state_18664[17];
                            var inst_18561 = state_18664[2];
                            var inst_18562 = inst_18548 + 1;
                            var tmp18676 = inst_18547;
                            var tmp18677 = inst_18545;
                            var tmp18678 = inst_18546;
                            var inst_18545__$1 = tmp18677;
                            var inst_18546__$1 = tmp18678;
                            var inst_18547__$1 = tmp18676;
                            var inst_18548__$1 = inst_18562;
                            var state_18664__$1 = function() {
                              var statearr_18683 = state_18664;
                              statearr_18683[13] = inst_18547__$1;
                              statearr_18683[15] = inst_18545__$1;
                              statearr_18683[16] = inst_18546__$1;
                              statearr_18683[18] = inst_18561;
                              statearr_18683[17] = inst_18548__$1;
                              return statearr_18683;
                            }();
                            var statearr_18684_18763 = state_18664__$1;
                            statearr_18684_18763[2] = null;
                            statearr_18684_18763[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18665 === 21) {
                              var inst_18586 = state_18664[2];
                              var state_18664__$1 = state_18664;
                              var statearr_18688_18764 = state_18664__$1;
                              statearr_18688_18764[2] = inst_18586;
                              statearr_18688_18764[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_18665 === 31) {
                                var inst_18612 = state_18664[9];
                                var inst_18616 = done.call(null, null);
                                var inst_18617 = cljs.core.async.untap_STAR_.call(null, m, inst_18612);
                                var state_18664__$1 = function() {
                                  var statearr_18689 = state_18664;
                                  statearr_18689[19] = inst_18616;
                                  return statearr_18689;
                                }();
                                var statearr_18690_18765 = state_18664__$1;
                                statearr_18690_18765[2] = inst_18617;
                                statearr_18690_18765[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_18665 === 32) {
                                  var inst_18606 = state_18664[20];
                                  var inst_18607 = state_18664[11];
                                  var inst_18605 = state_18664[12];
                                  var inst_18604 = state_18664[21];
                                  var inst_18619 = state_18664[2];
                                  var inst_18620 = inst_18607 + 1;
                                  var tmp18685 = inst_18606;
                                  var tmp18686 = inst_18605;
                                  var tmp18687 = inst_18604;
                                  var inst_18604__$1 = tmp18687;
                                  var inst_18605__$1 = tmp18686;
                                  var inst_18606__$1 = tmp18685;
                                  var inst_18607__$1 = inst_18620;
                                  var state_18664__$1 = function() {
                                    var statearr_18691 = state_18664;
                                    statearr_18691[20] = inst_18606__$1;
                                    statearr_18691[11] = inst_18607__$1;
                                    statearr_18691[12] = inst_18605__$1;
                                    statearr_18691[21] = inst_18604__$1;
                                    statearr_18691[22] = inst_18619;
                                    return statearr_18691;
                                  }();
                                  var statearr_18692_18766 = state_18664__$1;
                                  statearr_18692_18766[2] = null;
                                  statearr_18692_18766[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18665 === 40) {
                                    var inst_18632 = state_18664[23];
                                    var inst_18636 = done.call(null, null);
                                    var inst_18637 = cljs.core.async.untap_STAR_.call(null, m, inst_18632);
                                    var state_18664__$1 = function() {
                                      var statearr_18693 = state_18664;
                                      statearr_18693[24] = inst_18636;
                                      return statearr_18693;
                                    }();
                                    var statearr_18694_18767 = state_18664__$1;
                                    statearr_18694_18767[2] = inst_18637;
                                    statearr_18694_18767[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_18665 === 33) {
                                      var inst_18623 = state_18664[25];
                                      var inst_18625 = cljs.core.chunked_seq_QMARK_.call(null, inst_18623);
                                      var state_18664__$1 = state_18664;
                                      if (inst_18625) {
                                        var statearr_18695_18768 = state_18664__$1;
                                        statearr_18695_18768[1] = 36;
                                      } else {
                                        var statearr_18696_18769 = state_18664__$1;
                                        statearr_18696_18769[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_18665 === 13) {
                                        var inst_18555 = state_18664[26];
                                        var inst_18558 = cljs.core.async.close_BANG_.call(null, inst_18555);
                                        var state_18664__$1 = state_18664;
                                        var statearr_18697_18770 = state_18664__$1;
                                        statearr_18697_18770[2] = inst_18558;
                                        statearr_18697_18770[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_18665 === 22) {
                                          var inst_18576 = state_18664[8];
                                          var inst_18579 = cljs.core.async.close_BANG_.call(null, inst_18576);
                                          var state_18664__$1 = state_18664;
                                          var statearr_18698_18771 = state_18664__$1;
                                          statearr_18698_18771[2] = inst_18579;
                                          statearr_18698_18771[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_18665 === 36) {
                                            var inst_18623 = state_18664[25];
                                            var inst_18627 = cljs.core.chunk_first.call(null, inst_18623);
                                            var inst_18628 = cljs.core.chunk_rest.call(null, inst_18623);
                                            var inst_18629 = cljs.core.count.call(null, inst_18627);
                                            var inst_18604 = inst_18628;
                                            var inst_18605 = inst_18627;
                                            var inst_18606 = inst_18629;
                                            var inst_18607 = 0;
                                            var state_18664__$1 = function() {
                                              var statearr_18699 = state_18664;
                                              statearr_18699[20] = inst_18606;
                                              statearr_18699[11] = inst_18607;
                                              statearr_18699[12] = inst_18605;
                                              statearr_18699[21] = inst_18604;
                                              return statearr_18699;
                                            }();
                                            var statearr_18700_18772 = state_18664__$1;
                                            statearr_18700_18772[2] = null;
                                            statearr_18700_18772[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_18665 === 41) {
                                              var inst_18623 = state_18664[25];
                                              var inst_18639 = state_18664[2];
                                              var inst_18640 = cljs.core.next.call(null, inst_18623);
                                              var inst_18604 = inst_18640;
                                              var inst_18605 = null;
                                              var inst_18606 = 0;
                                              var inst_18607 = 0;
                                              var state_18664__$1 = function() {
                                                var statearr_18701 = state_18664;
                                                statearr_18701[20] = inst_18606;
                                                statearr_18701[27] = inst_18639;
                                                statearr_18701[11] = inst_18607;
                                                statearr_18701[12] = inst_18605;
                                                statearr_18701[21] = inst_18604;
                                                return statearr_18701;
                                              }();
                                              var statearr_18702_18773 = state_18664__$1;
                                              statearr_18702_18773[2] = null;
                                              statearr_18702_18773[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_18665 === 43) {
                                                var state_18664__$1 = state_18664;
                                                var statearr_18703_18774 = state_18664__$1;
                                                statearr_18703_18774[2] = null;
                                                statearr_18703_18774[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_18665 === 29) {
                                                  var inst_18648 = state_18664[2];
                                                  var state_18664__$1 = state_18664;
                                                  var statearr_18704_18775 = state_18664__$1;
                                                  statearr_18704_18775[2] = inst_18648;
                                                  statearr_18704_18775[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_18665 === 44) {
                                                    var inst_18657 = state_18664[2];
                                                    var state_18664__$1 = function() {
                                                      var statearr_18705 = state_18664;
                                                      statearr_18705[28] = inst_18657;
                                                      return statearr_18705;
                                                    }();
                                                    var statearr_18706_18776 = state_18664__$1;
                                                    statearr_18706_18776[2] = null;
                                                    statearr_18706_18776[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_18665 === 6) {
                                                      var inst_18596 = state_18664[29];
                                                      var inst_18595 = cljs.core.deref.call(null, cs);
                                                      var inst_18596__$1 = cljs.core.keys.call(null, inst_18595);
                                                      var inst_18597 = cljs.core.count.call(null, inst_18596__$1);
                                                      var inst_18598 = cljs.core.reset_BANG_.call(null, dctr, inst_18597);
                                                      var inst_18603 = cljs.core.seq.call(null, inst_18596__$1);
                                                      var inst_18604 = inst_18603;
                                                      var inst_18605 = null;
                                                      var inst_18606 = 0;
                                                      var inst_18607 = 0;
                                                      var state_18664__$1 = function() {
                                                        var statearr_18707 = state_18664;
                                                        statearr_18707[30] = inst_18598;
                                                        statearr_18707[20] = inst_18606;
                                                        statearr_18707[11] = inst_18607;
                                                        statearr_18707[29] = inst_18596__$1;
                                                        statearr_18707[12] = inst_18605;
                                                        statearr_18707[21] = inst_18604;
                                                        return statearr_18707;
                                                      }();
                                                      var statearr_18708_18777 = state_18664__$1;
                                                      statearr_18708_18777[2] = null;
                                                      statearr_18708_18777[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_18665 === 28) {
                                                        var inst_18623 = state_18664[25];
                                                        var inst_18604 = state_18664[21];
                                                        var inst_18623__$1 = cljs.core.seq.call(null, inst_18604);
                                                        var state_18664__$1 = function() {
                                                          var statearr_18709 = state_18664;
                                                          statearr_18709[25] = inst_18623__$1;
                                                          return statearr_18709;
                                                        }();
                                                        if (inst_18623__$1) {
                                                          var statearr_18710_18778 = state_18664__$1;
                                                          statearr_18710_18778[1] = 33;
                                                        } else {
                                                          var statearr_18711_18779 = state_18664__$1;
                                                          statearr_18711_18779[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_18665 === 25) {
                                                          var inst_18606 = state_18664[20];
                                                          var inst_18607 = state_18664[11];
                                                          var inst_18609 = inst_18607 < inst_18606;
                                                          var inst_18610 = inst_18609;
                                                          var state_18664__$1 = state_18664;
                                                          if (cljs.core.truth_(inst_18610)) {
                                                            var statearr_18712_18780 = state_18664__$1;
                                                            statearr_18712_18780[1] = 27;
                                                          } else {
                                                            var statearr_18713_18781 = state_18664__$1;
                                                            statearr_18713_18781[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_18665 === 34) {
                                                            var state_18664__$1 = state_18664;
                                                            var statearr_18714_18782 = state_18664__$1;
                                                            statearr_18714_18782[2] = null;
                                                            statearr_18714_18782[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_18665 === 17) {
                                                              var state_18664__$1 = state_18664;
                                                              var statearr_18715_18783 = state_18664__$1;
                                                              statearr_18715_18783[2] = null;
                                                              statearr_18715_18783[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_18665 === 3) {
                                                                var inst_18662 = state_18664[2];
                                                                var state_18664__$1 = state_18664;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18664__$1, inst_18662);
                                                              } else {
                                                                if (state_val_18665 === 12) {
                                                                  var inst_18591 = state_18664[2];
                                                                  var state_18664__$1 = state_18664;
                                                                  var statearr_18716_18784 = state_18664__$1;
                                                                  statearr_18716_18784[2] = inst_18591;
                                                                  statearr_18716_18784[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_18665 === 2) {
                                                                    var state_18664__$1 = state_18664;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18664__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_18665 === 23) {
                                                                      var state_18664__$1 = state_18664;
                                                                      var statearr_18717_18785 = state_18664__$1;
                                                                      statearr_18717_18785[2] = null;
                                                                      statearr_18717_18785[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_18665 === 35) {
                                                                        var inst_18646 = state_18664[2];
                                                                        var state_18664__$1 = state_18664;
                                                                        var statearr_18718_18786 = state_18664__$1;
                                                                        statearr_18718_18786[2] = inst_18646;
                                                                        statearr_18718_18786[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_18665 === 19) {
                                                                          var inst_18565 = state_18664[7];
                                                                          var inst_18569 = cljs.core.chunk_first.call(null, inst_18565);
                                                                          var inst_18570 = cljs.core.chunk_rest.call(null, inst_18565);
                                                                          var inst_18571 = cljs.core.count.call(null, inst_18569);
                                                                          var inst_18545 = inst_18570;
                                                                          var inst_18546 = inst_18569;
                                                                          var inst_18547 = inst_18571;
                                                                          var inst_18548 = 0;
                                                                          var state_18664__$1 = function() {
                                                                            var statearr_18719 = state_18664;
                                                                            statearr_18719[13] = inst_18547;
                                                                            statearr_18719[15] = inst_18545;
                                                                            statearr_18719[16] = inst_18546;
                                                                            statearr_18719[17] = inst_18548;
                                                                            return statearr_18719;
                                                                          }();
                                                                          var statearr_18720_18787 = state_18664__$1;
                                                                          statearr_18720_18787[2] = null;
                                                                          statearr_18720_18787[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_18665 === 11) {
                                                                            var inst_18545 = state_18664[15];
                                                                            var inst_18565 = state_18664[7];
                                                                            var inst_18565__$1 = cljs.core.seq.call(null, inst_18545);
                                                                            var state_18664__$1 = function() {
                                                                              var statearr_18721 = state_18664;
                                                                              statearr_18721[7] = inst_18565__$1;
                                                                              return statearr_18721;
                                                                            }();
                                                                            if (inst_18565__$1) {
                                                                              var statearr_18722_18788 = state_18664__$1;
                                                                              statearr_18722_18788[1] = 16;
                                                                            } else {
                                                                              var statearr_18723_18789 = state_18664__$1;
                                                                              statearr_18723_18789[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_18665 === 9) {
                                                                              var inst_18593 = state_18664[2];
                                                                              var state_18664__$1 = state_18664;
                                                                              var statearr_18724_18790 = state_18664__$1;
                                                                              statearr_18724_18790[2] = inst_18593;
                                                                              statearr_18724_18790[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_18665 === 5) {
                                                                                var inst_18543 = cljs.core.deref.call(null, cs);
                                                                                var inst_18544 = cljs.core.seq.call(null, inst_18543);
                                                                                var inst_18545 = inst_18544;
                                                                                var inst_18546 = null;
                                                                                var inst_18547 = 0;
                                                                                var inst_18548 = 0;
                                                                                var state_18664__$1 = function() {
                                                                                  var statearr_18725 = state_18664;
                                                                                  statearr_18725[13] = inst_18547;
                                                                                  statearr_18725[15] = inst_18545;
                                                                                  statearr_18725[16] = inst_18546;
                                                                                  statearr_18725[17] = inst_18548;
                                                                                  return statearr_18725;
                                                                                }();
                                                                                var statearr_18726_18791 = state_18664__$1;
                                                                                statearr_18726_18791[2] = null;
                                                                                statearr_18726_18791[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_18665 === 14) {
                                                                                  var state_18664__$1 = state_18664;
                                                                                  var statearr_18727_18792 = state_18664__$1;
                                                                                  statearr_18727_18792[2] = null;
                                                                                  statearr_18727_18792[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_18665 === 45) {
                                                                                    var inst_18654 = state_18664[2];
                                                                                    var state_18664__$1 = state_18664;
                                                                                    var statearr_18728_18793 = state_18664__$1;
                                                                                    statearr_18728_18793[2] = inst_18654;
                                                                                    statearr_18728_18793[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_18665 === 26) {
                                                                                      var inst_18596 = state_18664[29];
                                                                                      var inst_18650 = state_18664[2];
                                                                                      var inst_18651 = cljs.core.seq.call(null, inst_18596);
                                                                                      var state_18664__$1 = function() {
                                                                                        var statearr_18729 = state_18664;
                                                                                        statearr_18729[31] = inst_18650;
                                                                                        return statearr_18729;
                                                                                      }();
                                                                                      if (inst_18651) {
                                                                                        var statearr_18730_18794 = state_18664__$1;
                                                                                        statearr_18730_18794[1] = 42;
                                                                                      } else {
                                                                                        var statearr_18731_18795 = state_18664__$1;
                                                                                        statearr_18731_18795[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_18665 === 16) {
                                                                                        var inst_18565 = state_18664[7];
                                                                                        var inst_18567 = cljs.core.chunked_seq_QMARK_.call(null, inst_18565);
                                                                                        var state_18664__$1 = state_18664;
                                                                                        if (inst_18567) {
                                                                                          var statearr_18732_18796 = state_18664__$1;
                                                                                          statearr_18732_18796[1] = 19;
                                                                                        } else {
                                                                                          var statearr_18733_18797 = state_18664__$1;
                                                                                          statearr_18733_18797[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_18665 === 38) {
                                                                                          var inst_18643 = state_18664[2];
                                                                                          var state_18664__$1 = state_18664;
                                                                                          var statearr_18734_18798 = state_18664__$1;
                                                                                          statearr_18734_18798[2] = inst_18643;
                                                                                          statearr_18734_18798[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_18665 === 30) {
                                                                                            var state_18664__$1 = state_18664;
                                                                                            var statearr_18735_18799 = state_18664__$1;
                                                                                            statearr_18735_18799[2] = null;
                                                                                            statearr_18735_18799[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_18665 === 10) {
                                                                                              var inst_18546 = state_18664[16];
                                                                                              var inst_18548 = state_18664[17];
                                                                                              var inst_18554 = cljs.core._nth.call(null, inst_18546, inst_18548);
                                                                                              var inst_18555 = cljs.core.nth.call(null, inst_18554, 0, null);
                                                                                              var inst_18556 = cljs.core.nth.call(null, inst_18554, 1, null);
                                                                                              var state_18664__$1 = function() {
                                                                                                var statearr_18736 = state_18664;
                                                                                                statearr_18736[26] = inst_18555;
                                                                                                return statearr_18736;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_18556)) {
                                                                                                var statearr_18737_18800 = state_18664__$1;
                                                                                                statearr_18737_18800[1] = 13;
                                                                                              } else {
                                                                                                var statearr_18738_18801 = state_18664__$1;
                                                                                                statearr_18738_18801[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_18665 === 18) {
                                                                                                var inst_18589 = state_18664[2];
                                                                                                var state_18664__$1 = state_18664;
                                                                                                var statearr_18739_18802 = state_18664__$1;
                                                                                                statearr_18739_18802[2] = inst_18589;
                                                                                                statearr_18739_18802[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_18665 === 42) {
                                                                                                  var state_18664__$1 = state_18664;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18664__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_18665 === 37) {
                                                                                                    var inst_18536 = state_18664[10];
                                                                                                    var inst_18623 = state_18664[25];
                                                                                                    var inst_18632 = state_18664[23];
                                                                                                    var inst_18632__$1 = cljs.core.first.call(null, inst_18623);
                                                                                                    var inst_18633 = cljs.core.async.put_BANG_.call(null, inst_18632__$1, inst_18536, done);
                                                                                                    var state_18664__$1 = function() {
                                                                                                      var statearr_18740 = state_18664;
                                                                                                      statearr_18740[23] = inst_18632__$1;
                                                                                                      return statearr_18740;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_18633)) {
                                                                                                      var statearr_18741_18803 = state_18664__$1;
                                                                                                      statearr_18741_18803[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_18742_18804 = state_18664__$1;
                                                                                                      statearr_18742_18804[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_18665 === 8) {
                                                                                                      var inst_18547 = state_18664[13];
                                                                                                      var inst_18548 = state_18664[17];
                                                                                                      var inst_18550 = inst_18548 < inst_18547;
                                                                                                      var inst_18551 = inst_18550;
                                                                                                      var state_18664__$1 = state_18664;
                                                                                                      if (cljs.core.truth_(inst_18551)) {
                                                                                                        var statearr_18743_18805 = state_18664__$1;
                                                                                                        statearr_18743_18805[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_18744_18806 = state_18664__$1;
                                                                                                        statearr_18744_18806[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6560__auto___18752, cs, m, dchan, dctr, done);
        return function(switch__6504__auto__, c__6560__auto___18752, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__6505__auto__ = null;
            var state_machine__6505__auto____0 = function() {
              var statearr_18748 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_18748[0] = state_machine__6505__auto__;
              statearr_18748[1] = 1;
              return statearr_18748;
            };
            var state_machine__6505__auto____1 = function(state_18664) {
              while (true) {
                var ret_value__6506__auto__ = function() {
                  try {
                    while (true) {
                      var result__6507__auto__ = switch__6504__auto__.call(null, state_18664);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6507__auto__;
                      }
                      break;
                    }
                  } catch (e18749) {
                    if (e18749 instanceof Object) {
                      var ex__6508__auto__ = e18749;
                      var statearr_18750_18807 = state_18664;
                      statearr_18750_18807[5] = ex__6508__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18664);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e18749;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__18808 = state_18664;
                  state_18664 = G__18808;
                  continue;
                } else {
                  return ret_value__6506__auto__;
                }
                break;
              }
            };
            state_machine__6505__auto__ = function(state_18664) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6505__auto____0.call(this);
                case 1:
                  return state_machine__6505__auto____1.call(this, state_18664);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
            state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
            return state_machine__6505__auto__;
          }();
        }(switch__6504__auto__, c__6560__auto___18752, cs, m, dchan, dctr, done);
      }();
      var state__6562__auto__ = function() {
        var statearr_18751 = f__6561__auto__.call(null);
        statearr_18751[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___18752;
        return statearr_18751;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
    };
  }(c__6560__auto___18752, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj18810 = {};
  return obj18810;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3756__auto__ = m;
    if (and__3756__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4412__auto__ = m == null ? null : m;
    return function() {
      var or__3768__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3756__auto__ = m;
    if (and__3756__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4412__auto__ = m == null ? null : m;
    return function() {
      var or__3768__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3756__auto__ = m;
    if (and__3756__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4412__auto__ = m == null ? null : m;
    return function() {
      var or__3768__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3756__auto__ = m;
    if (and__3756__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4412__auto__ = m == null ? null : m;
    return function() {
      var or__3768__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3756__auto__ = m;
    if (and__3756__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4412__auto__ = m == null ? null : m;
    return function() {
      var or__3768__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__18811) {
    var map__18816 = p__18811;
    var map__18816__$1 = cljs.core.seq_QMARK_.call(null, map__18816) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18816) : map__18816;
    var opts = map__18816__$1;
    var statearr_18817_18820 = state;
    statearr_18817_18820[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__18816, map__18816__$1, opts) {
      return function(val) {
        var statearr_18818_18821 = state;
        statearr_18818_18821[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__18816, map__18816__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_18819_18822 = state;
      statearr_18819_18822[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__18811 = null;
    if (arguments.length > 3) {
      var G__18823__i = 0, G__18823__a = new Array(arguments.length - 3);
      while (G__18823__i < G__18823__a.length) {
        G__18823__a[G__18823__i] = arguments[G__18823__i + 3];
        ++G__18823__i;
      }
      p__18811 = new cljs.core.IndexedSeq(G__18823__a, 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__18811);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__18824) {
    var state = cljs.core.first(arglist__18824);
    arglist__18824 = cljs.core.next(arglist__18824);
    var cont_block = cljs.core.first(arglist__18824);
    arglist__18824 = cljs.core.next(arglist__18824);
    var ports = cljs.core.first(arglist__18824);
    var p__18811 = cljs.core.rest(arglist__18824);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__18811);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t18944 !== "undefined") {
    } else {
      cljs.core.async.t18944 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta18945) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta18945 = meta18945;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t18944.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t18944.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18944.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18944.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18944.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18944.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18944.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t18944.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18944.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_18946) {
          var self__ = this;
          var _18946__$1 = this;
          return self__.meta18945;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18944.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_18946, meta18945__$1) {
          var self__ = this;
          var _18946__$1 = this;
          return new cljs.core.async.t18944(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta18945__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18944.cljs$lang$type = true;
      cljs.core.async.t18944.cljs$lang$ctorStr = "cljs.core.async/t18944";
      cljs.core.async.t18944.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
          return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async/t18944");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t18944 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t18944(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta18945) {
          return new cljs.core.async.t18944(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta18945);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t18944(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 25, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 510, new cljs.core.Keyword(null, "column", "column", 2078222095), 11, new cljs.core.Keyword(null, "line", "line", 212345235), 499, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/mhurd/development/workspace/gridlife/target/cljsbuild-compiler-0/cljs/core/async.cljs"], 
    null));
  }();
  var c__6560__auto___19063 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___19063, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__6561__auto__ = function() {
        var switch__6504__auto__ = function(c__6560__auto___19063, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_19016) {
            var state_val_19017 = state_19016[1];
            if (state_val_19017 === 7) {
              var inst_18960 = state_19016[7];
              var inst_18965 = cljs.core.apply.call(null, cljs.core.hash_map, inst_18960);
              var state_19016__$1 = state_19016;
              var statearr_19018_19064 = state_19016__$1;
              statearr_19018_19064[2] = inst_18965;
              statearr_19018_19064[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_19017 === 20) {
                var inst_18975 = state_19016[8];
                var state_19016__$1 = state_19016;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19016__$1, 23, out, inst_18975);
              } else {
                if (state_val_19017 === 1) {
                  var inst_18950 = state_19016[9];
                  var inst_18950__$1 = calc_state.call(null);
                  var inst_18951 = cljs.core.seq_QMARK_.call(null, inst_18950__$1);
                  var state_19016__$1 = function() {
                    var statearr_19019 = state_19016;
                    statearr_19019[9] = inst_18950__$1;
                    return statearr_19019;
                  }();
                  if (inst_18951) {
                    var statearr_19020_19065 = state_19016__$1;
                    statearr_19020_19065[1] = 2;
                  } else {
                    var statearr_19021_19066 = state_19016__$1;
                    statearr_19021_19066[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19017 === 24) {
                    var inst_18968 = state_19016[10];
                    var inst_18960 = inst_18968;
                    var state_19016__$1 = function() {
                      var statearr_19022 = state_19016;
                      statearr_19022[7] = inst_18960;
                      return statearr_19022;
                    }();
                    var statearr_19023_19067 = state_19016__$1;
                    statearr_19023_19067[2] = null;
                    statearr_19023_19067[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19017 === 4) {
                      var inst_18950 = state_19016[9];
                      var inst_18956 = state_19016[2];
                      var inst_18957 = cljs.core.get.call(null, inst_18956, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                      var inst_18958 = cljs.core.get.call(null, inst_18956, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                      var inst_18959 = cljs.core.get.call(null, inst_18956, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                      var inst_18960 = inst_18950;
                      var state_19016__$1 = function() {
                        var statearr_19024 = state_19016;
                        statearr_19024[11] = inst_18958;
                        statearr_19024[12] = inst_18957;
                        statearr_19024[13] = inst_18959;
                        statearr_19024[7] = inst_18960;
                        return statearr_19024;
                      }();
                      var statearr_19025_19068 = state_19016__$1;
                      statearr_19025_19068[2] = null;
                      statearr_19025_19068[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19017 === 15) {
                        var state_19016__$1 = state_19016;
                        var statearr_19026_19069 = state_19016__$1;
                        statearr_19026_19069[2] = null;
                        statearr_19026_19069[1] = 16;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_19017 === 21) {
                          var inst_18968 = state_19016[10];
                          var inst_18960 = inst_18968;
                          var state_19016__$1 = function() {
                            var statearr_19027 = state_19016;
                            statearr_19027[7] = inst_18960;
                            return statearr_19027;
                          }();
                          var statearr_19028_19070 = state_19016__$1;
                          statearr_19028_19070[2] = null;
                          statearr_19028_19070[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_19017 === 13) {
                            var inst_19012 = state_19016[2];
                            var state_19016__$1 = state_19016;
                            var statearr_19029_19071 = state_19016__$1;
                            statearr_19029_19071[2] = inst_19012;
                            statearr_19029_19071[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_19017 === 22) {
                              var inst_19010 = state_19016[2];
                              var state_19016__$1 = state_19016;
                              var statearr_19030_19072 = state_19016__$1;
                              statearr_19030_19072[2] = inst_19010;
                              statearr_19030_19072[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_19017 === 6) {
                                var inst_19014 = state_19016[2];
                                var state_19016__$1 = state_19016;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19016__$1, inst_19014);
                              } else {
                                if (state_val_19017 === 25) {
                                  var state_19016__$1 = state_19016;
                                  var statearr_19031_19073 = state_19016__$1;
                                  statearr_19031_19073[2] = null;
                                  statearr_19031_19073[1] = 26;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_19017 === 17) {
                                    var inst_18990 = state_19016[14];
                                    var state_19016__$1 = state_19016;
                                    var statearr_19032_19074 = state_19016__$1;
                                    statearr_19032_19074[2] = inst_18990;
                                    statearr_19032_19074[1] = 19;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_19017 === 3) {
                                      var inst_18950 = state_19016[9];
                                      var state_19016__$1 = state_19016;
                                      var statearr_19033_19075 = state_19016__$1;
                                      statearr_19033_19075[2] = inst_18950;
                                      statearr_19033_19075[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_19017 === 12) {
                                        var inst_18976 = state_19016[15];
                                        var inst_18971 = state_19016[16];
                                        var inst_18990 = state_19016[14];
                                        var inst_18990__$1 = inst_18971.call(null, inst_18976);
                                        var state_19016__$1 = function() {
                                          var statearr_19034 = state_19016;
                                          statearr_19034[14] = inst_18990__$1;
                                          return statearr_19034;
                                        }();
                                        if (cljs.core.truth_(inst_18990__$1)) {
                                          var statearr_19035_19076 = state_19016__$1;
                                          statearr_19035_19076[1] = 17;
                                        } else {
                                          var statearr_19036_19077 = state_19016__$1;
                                          statearr_19036_19077[1] = 18;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_19017 === 2) {
                                          var inst_18950 = state_19016[9];
                                          var inst_18953 = cljs.core.apply.call(null, cljs.core.hash_map, inst_18950);
                                          var state_19016__$1 = state_19016;
                                          var statearr_19037_19078 = state_19016__$1;
                                          statearr_19037_19078[2] = inst_18953;
                                          statearr_19037_19078[1] = 4;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_19017 === 23) {
                                            var inst_19001 = state_19016[2];
                                            var state_19016__$1 = state_19016;
                                            if (cljs.core.truth_(inst_19001)) {
                                              var statearr_19038_19079 = state_19016__$1;
                                              statearr_19038_19079[1] = 24;
                                            } else {
                                              var statearr_19039_19080 = state_19016__$1;
                                              statearr_19039_19080[1] = 25;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_19017 === 19) {
                                              var inst_18998 = state_19016[2];
                                              var state_19016__$1 = state_19016;
                                              if (cljs.core.truth_(inst_18998)) {
                                                var statearr_19040_19081 = state_19016__$1;
                                                statearr_19040_19081[1] = 20;
                                              } else {
                                                var statearr_19041_19082 = state_19016__$1;
                                                statearr_19041_19082[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_19017 === 11) {
                                                var inst_18975 = state_19016[8];
                                                var inst_18981 = inst_18975 == null;
                                                var state_19016__$1 = state_19016;
                                                if (cljs.core.truth_(inst_18981)) {
                                                  var statearr_19042_19083 = state_19016__$1;
                                                  statearr_19042_19083[1] = 14;
                                                } else {
                                                  var statearr_19043_19084 = state_19016__$1;
                                                  statearr_19043_19084[1] = 15;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_19017 === 9) {
                                                  var inst_18968 = state_19016[10];
                                                  var inst_18968__$1 = state_19016[2];
                                                  var inst_18969 = cljs.core.get.call(null, inst_18968__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                  var inst_18970 = cljs.core.get.call(null, inst_18968__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                  var inst_18971 = cljs.core.get.call(null, inst_18968__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                  var state_19016__$1 = function() {
                                                    var statearr_19044 = state_19016;
                                                    statearr_19044[17] = inst_18970;
                                                    statearr_19044[16] = inst_18971;
                                                    statearr_19044[10] = inst_18968__$1;
                                                    return statearr_19044;
                                                  }();
                                                  return cljs.core.async.ioc_alts_BANG_.call(null, state_19016__$1, 10, inst_18969);
                                                } else {
                                                  if (state_val_19017 === 5) {
                                                    var inst_18960 = state_19016[7];
                                                    var inst_18963 = cljs.core.seq_QMARK_.call(null, inst_18960);
                                                    var state_19016__$1 = state_19016;
                                                    if (inst_18963) {
                                                      var statearr_19045_19085 = state_19016__$1;
                                                      statearr_19045_19085[1] = 7;
                                                    } else {
                                                      var statearr_19046_19086 = state_19016__$1;
                                                      statearr_19046_19086[1] = 8;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_19017 === 14) {
                                                      var inst_18976 = state_19016[15];
                                                      var inst_18983 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_18976);
                                                      var state_19016__$1 = state_19016;
                                                      var statearr_19047_19087 = state_19016__$1;
                                                      statearr_19047_19087[2] = inst_18983;
                                                      statearr_19047_19087[1] = 16;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_19017 === 26) {
                                                        var inst_19006 = state_19016[2];
                                                        var state_19016__$1 = state_19016;
                                                        var statearr_19048_19088 = state_19016__$1;
                                                        statearr_19048_19088[2] = inst_19006;
                                                        statearr_19048_19088[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_19017 === 16) {
                                                          var inst_18986 = state_19016[2];
                                                          var inst_18987 = calc_state.call(null);
                                                          var inst_18960 = inst_18987;
                                                          var state_19016__$1 = function() {
                                                            var statearr_19049 = state_19016;
                                                            statearr_19049[7] = inst_18960;
                                                            statearr_19049[18] = inst_18986;
                                                            return statearr_19049;
                                                          }();
                                                          var statearr_19050_19089 = state_19016__$1;
                                                          statearr_19050_19089[2] = null;
                                                          statearr_19050_19089[1] = 5;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_19017 === 10) {
                                                            var inst_18976 = state_19016[15];
                                                            var inst_18975 = state_19016[8];
                                                            var inst_18974 = state_19016[2];
                                                            var inst_18975__$1 = cljs.core.nth.call(null, inst_18974, 0, null);
                                                            var inst_18976__$1 = cljs.core.nth.call(null, inst_18974, 1, null);
                                                            var inst_18977 = inst_18975__$1 == null;
                                                            var inst_18978 = cljs.core._EQ_.call(null, inst_18976__$1, change);
                                                            var inst_18979 = inst_18977 || inst_18978;
                                                            var state_19016__$1 = function() {
                                                              var statearr_19051 = state_19016;
                                                              statearr_19051[15] = inst_18976__$1;
                                                              statearr_19051[8] = inst_18975__$1;
                                                              return statearr_19051;
                                                            }();
                                                            if (cljs.core.truth_(inst_18979)) {
                                                              var statearr_19052_19090 = state_19016__$1;
                                                              statearr_19052_19090[1] = 11;
                                                            } else {
                                                              var statearr_19053_19091 = state_19016__$1;
                                                              statearr_19053_19091[1] = 12;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_19017 === 18) {
                                                              var inst_18976 = state_19016[15];
                                                              var inst_18970 = state_19016[17];
                                                              var inst_18971 = state_19016[16];
                                                              var inst_18993 = cljs.core.empty_QMARK_.call(null, inst_18971);
                                                              var inst_18994 = inst_18970.call(null, inst_18976);
                                                              var inst_18995 = cljs.core.not.call(null, inst_18994);
                                                              var inst_18996 = inst_18993 && inst_18995;
                                                              var state_19016__$1 = state_19016;
                                                              var statearr_19054_19092 = state_19016__$1;
                                                              statearr_19054_19092[2] = inst_18996;
                                                              statearr_19054_19092[1] = 19;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_19017 === 8) {
                                                                var inst_18960 = state_19016[7];
                                                                var state_19016__$1 = state_19016;
                                                                var statearr_19055_19093 = state_19016__$1;
                                                                statearr_19055_19093[2] = inst_18960;
                                                                statearr_19055_19093[1] = 9;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6560__auto___19063, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__6504__auto__, c__6560__auto___19063, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__6505__auto__ = null;
            var state_machine__6505__auto____0 = function() {
              var statearr_19059 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_19059[0] = state_machine__6505__auto__;
              statearr_19059[1] = 1;
              return statearr_19059;
            };
            var state_machine__6505__auto____1 = function(state_19016) {
              while (true) {
                var ret_value__6506__auto__ = function() {
                  try {
                    while (true) {
                      var result__6507__auto__ = switch__6504__auto__.call(null, state_19016);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6507__auto__;
                      }
                      break;
                    }
                  } catch (e19060) {
                    if (e19060 instanceof Object) {
                      var ex__6508__auto__ = e19060;
                      var statearr_19061_19094 = state_19016;
                      statearr_19061_19094[5] = ex__6508__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19016);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e19060;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__19095 = state_19016;
                  state_19016 = G__19095;
                  continue;
                } else {
                  return ret_value__6506__auto__;
                }
                break;
              }
            };
            state_machine__6505__auto__ = function(state_19016) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6505__auto____0.call(this);
                case 1:
                  return state_machine__6505__auto____1.call(this, state_19016);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
            state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
            return state_machine__6505__auto__;
          }();
        }(switch__6504__auto__, c__6560__auto___19063, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__6562__auto__ = function() {
        var statearr_19062 = f__6561__auto__.call(null);
        statearr_19062[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___19063;
        return statearr_19062;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
    };
  }(c__6560__auto___19063, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj19097 = {};
  return obj19097;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3756__auto__ = p;
    if (and__3756__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4412__auto__ = p == null ? null : p;
    return function() {
      var or__3768__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3756__auto__ = p;
    if (and__3756__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4412__auto__ = p == null ? null : p;
    return function() {
      var or__3768__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3756__auto__ = p;
      if (and__3756__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4412__auto__ = p == null ? null : p;
      return function() {
        var or__3768__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4412__auto__)];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3756__auto__ = p;
      if (and__3756__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4412__auto__ = p == null ? null : p;
      return function() {
        var or__3768__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4412__auto__)];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3768__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3768__auto__, mults) {
            return function(p1__19098_SHARP_) {
              if (cljs.core.truth_(p1__19098_SHARP_.call(null, topic))) {
                return p1__19098_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__19098_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3768__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t19221 !== "undefined") {
      } else {
        cljs.core.async.t19221 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta19222) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta19222 = meta19222;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t19221.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t19221.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t19221.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$1);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t19221.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t19221.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t19221.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t19221.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t19221.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_19223) {
            var self__ = this;
            var _19223__$1 = this;
            return self__.meta19222;
          };
        }(mults, ensure_mult);
        cljs.core.async.t19221.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_19223, meta19222__$1) {
            var self__ = this;
            var _19223__$1 = this;
            return new cljs.core.async.t19221(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta19222__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.t19221.cljs$lang$type = true;
        cljs.core.async.t19221.cljs$lang$ctorStr = "cljs.core.async/t19221";
        cljs.core.async.t19221.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
            return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async/t19221");
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t19221 = function(mults, ensure_mult) {
          return function __GT_t19221(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta19222) {
            return new cljs.core.async.t19221(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta19222);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t19221(ensure_mult, mults, buf_fn, topic_fn, ch, pub, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 65, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 603, new cljs.core.Keyword(null, "column", "column", 2078222095), 14, new cljs.core.Keyword(null, "line", "line", 212345235), 591, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/mhurd/development/workspace/gridlife/target/cljsbuild-compiler-0/cljs/core/async.cljs"], 
      null));
    }();
    var c__6560__auto___19343 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___19343, mults, ensure_mult, p) {
      return function() {
        var f__6561__auto__ = function() {
          var switch__6504__auto__ = function(c__6560__auto___19343, mults, ensure_mult, p) {
            return function(state_19295) {
              var state_val_19296 = state_19295[1];
              if (state_val_19296 === 7) {
                var inst_19291 = state_19295[2];
                var state_19295__$1 = state_19295;
                var statearr_19297_19344 = state_19295__$1;
                statearr_19297_19344[2] = inst_19291;
                statearr_19297_19344[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19296 === 20) {
                  var state_19295__$1 = state_19295;
                  var statearr_19298_19345 = state_19295__$1;
                  statearr_19298_19345[2] = null;
                  statearr_19298_19345[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19296 === 1) {
                    var state_19295__$1 = state_19295;
                    var statearr_19299_19346 = state_19295__$1;
                    statearr_19299_19346[2] = null;
                    statearr_19299_19346[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19296 === 24) {
                      var inst_19274 = state_19295[7];
                      var inst_19283 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_19274);
                      var state_19295__$1 = state_19295;
                      var statearr_19300_19347 = state_19295__$1;
                      statearr_19300_19347[2] = inst_19283;
                      statearr_19300_19347[1] = 25;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19296 === 4) {
                        var inst_19226 = state_19295[8];
                        var inst_19226__$1 = state_19295[2];
                        var inst_19227 = inst_19226__$1 == null;
                        var state_19295__$1 = function() {
                          var statearr_19301 = state_19295;
                          statearr_19301[8] = inst_19226__$1;
                          return statearr_19301;
                        }();
                        if (cljs.core.truth_(inst_19227)) {
                          var statearr_19302_19348 = state_19295__$1;
                          statearr_19302_19348[1] = 5;
                        } else {
                          var statearr_19303_19349 = state_19295__$1;
                          statearr_19303_19349[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_19296 === 15) {
                          var inst_19268 = state_19295[2];
                          var state_19295__$1 = state_19295;
                          var statearr_19304_19350 = state_19295__$1;
                          statearr_19304_19350[2] = inst_19268;
                          statearr_19304_19350[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_19296 === 21) {
                            var inst_19288 = state_19295[2];
                            var state_19295__$1 = function() {
                              var statearr_19305 = state_19295;
                              statearr_19305[9] = inst_19288;
                              return statearr_19305;
                            }();
                            var statearr_19306_19351 = state_19295__$1;
                            statearr_19306_19351[2] = null;
                            statearr_19306_19351[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_19296 === 13) {
                              var inst_19250 = state_19295[10];
                              var inst_19252 = cljs.core.chunked_seq_QMARK_.call(null, inst_19250);
                              var state_19295__$1 = state_19295;
                              if (inst_19252) {
                                var statearr_19307_19352 = state_19295__$1;
                                statearr_19307_19352[1] = 16;
                              } else {
                                var statearr_19308_19353 = state_19295__$1;
                                statearr_19308_19353[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_19296 === 22) {
                                var inst_19280 = state_19295[2];
                                var state_19295__$1 = state_19295;
                                if (cljs.core.truth_(inst_19280)) {
                                  var statearr_19309_19354 = state_19295__$1;
                                  statearr_19309_19354[1] = 23;
                                } else {
                                  var statearr_19310_19355 = state_19295__$1;
                                  statearr_19310_19355[1] = 24;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_19296 === 6) {
                                  var inst_19276 = state_19295[11];
                                  var inst_19226 = state_19295[8];
                                  var inst_19274 = state_19295[7];
                                  var inst_19274__$1 = topic_fn.call(null, inst_19226);
                                  var inst_19275 = cljs.core.deref.call(null, mults);
                                  var inst_19276__$1 = cljs.core.get.call(null, inst_19275, inst_19274__$1);
                                  var state_19295__$1 = function() {
                                    var statearr_19311 = state_19295;
                                    statearr_19311[11] = inst_19276__$1;
                                    statearr_19311[7] = inst_19274__$1;
                                    return statearr_19311;
                                  }();
                                  if (cljs.core.truth_(inst_19276__$1)) {
                                    var statearr_19312_19356 = state_19295__$1;
                                    statearr_19312_19356[1] = 19;
                                  } else {
                                    var statearr_19313_19357 = state_19295__$1;
                                    statearr_19313_19357[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_19296 === 25) {
                                    var inst_19285 = state_19295[2];
                                    var state_19295__$1 = state_19295;
                                    var statearr_19314_19358 = state_19295__$1;
                                    statearr_19314_19358[2] = inst_19285;
                                    statearr_19314_19358[1] = 21;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_19296 === 17) {
                                      var inst_19250 = state_19295[10];
                                      var inst_19259 = cljs.core.first.call(null, inst_19250);
                                      var inst_19260 = cljs.core.async.muxch_STAR_.call(null, inst_19259);
                                      var inst_19261 = cljs.core.async.close_BANG_.call(null, inst_19260);
                                      var inst_19262 = cljs.core.next.call(null, inst_19250);
                                      var inst_19236 = inst_19262;
                                      var inst_19237 = null;
                                      var inst_19238 = 0;
                                      var inst_19239 = 0;
                                      var state_19295__$1 = function() {
                                        var statearr_19315 = state_19295;
                                        statearr_19315[12] = inst_19236;
                                        statearr_19315[13] = inst_19237;
                                        statearr_19315[14] = inst_19238;
                                        statearr_19315[15] = inst_19261;
                                        statearr_19315[16] = inst_19239;
                                        return statearr_19315;
                                      }();
                                      var statearr_19316_19359 = state_19295__$1;
                                      statearr_19316_19359[2] = null;
                                      statearr_19316_19359[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_19296 === 3) {
                                        var inst_19293 = state_19295[2];
                                        var state_19295__$1 = state_19295;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19295__$1, inst_19293);
                                      } else {
                                        if (state_val_19296 === 12) {
                                          var inst_19270 = state_19295[2];
                                          var state_19295__$1 = state_19295;
                                          var statearr_19317_19360 = state_19295__$1;
                                          statearr_19317_19360[2] = inst_19270;
                                          statearr_19317_19360[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_19296 === 2) {
                                            var state_19295__$1 = state_19295;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19295__$1, 4, ch);
                                          } else {
                                            if (state_val_19296 === 23) {
                                              var state_19295__$1 = state_19295;
                                              var statearr_19318_19361 = state_19295__$1;
                                              statearr_19318_19361[2] = null;
                                              statearr_19318_19361[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_19296 === 19) {
                                                var inst_19276 = state_19295[11];
                                                var inst_19226 = state_19295[8];
                                                var inst_19278 = cljs.core.async.muxch_STAR_.call(null, inst_19276);
                                                var state_19295__$1 = state_19295;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19295__$1, 22, inst_19278, inst_19226);
                                              } else {
                                                if (state_val_19296 === 11) {
                                                  var inst_19236 = state_19295[12];
                                                  var inst_19250 = state_19295[10];
                                                  var inst_19250__$1 = cljs.core.seq.call(null, inst_19236);
                                                  var state_19295__$1 = function() {
                                                    var statearr_19319 = state_19295;
                                                    statearr_19319[10] = inst_19250__$1;
                                                    return statearr_19319;
                                                  }();
                                                  if (inst_19250__$1) {
                                                    var statearr_19320_19362 = state_19295__$1;
                                                    statearr_19320_19362[1] = 13;
                                                  } else {
                                                    var statearr_19321_19363 = state_19295__$1;
                                                    statearr_19321_19363[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_19296 === 9) {
                                                    var inst_19272 = state_19295[2];
                                                    var state_19295__$1 = state_19295;
                                                    var statearr_19322_19364 = state_19295__$1;
                                                    statearr_19322_19364[2] = inst_19272;
                                                    statearr_19322_19364[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_19296 === 5) {
                                                      var inst_19233 = cljs.core.deref.call(null, mults);
                                                      var inst_19234 = cljs.core.vals.call(null, inst_19233);
                                                      var inst_19235 = cljs.core.seq.call(null, inst_19234);
                                                      var inst_19236 = inst_19235;
                                                      var inst_19237 = null;
                                                      var inst_19238 = 0;
                                                      var inst_19239 = 0;
                                                      var state_19295__$1 = function() {
                                                        var statearr_19323 = state_19295;
                                                        statearr_19323[12] = inst_19236;
                                                        statearr_19323[13] = inst_19237;
                                                        statearr_19323[14] = inst_19238;
                                                        statearr_19323[16] = inst_19239;
                                                        return statearr_19323;
                                                      }();
                                                      var statearr_19324_19365 = state_19295__$1;
                                                      statearr_19324_19365[2] = null;
                                                      statearr_19324_19365[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_19296 === 14) {
                                                        var state_19295__$1 = state_19295;
                                                        var statearr_19328_19366 = state_19295__$1;
                                                        statearr_19328_19366[2] = null;
                                                        statearr_19328_19366[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_19296 === 16) {
                                                          var inst_19250 = state_19295[10];
                                                          var inst_19254 = cljs.core.chunk_first.call(null, inst_19250);
                                                          var inst_19255 = cljs.core.chunk_rest.call(null, inst_19250);
                                                          var inst_19256 = cljs.core.count.call(null, inst_19254);
                                                          var inst_19236 = inst_19255;
                                                          var inst_19237 = inst_19254;
                                                          var inst_19238 = inst_19256;
                                                          var inst_19239 = 0;
                                                          var state_19295__$1 = function() {
                                                            var statearr_19329 = state_19295;
                                                            statearr_19329[12] = inst_19236;
                                                            statearr_19329[13] = inst_19237;
                                                            statearr_19329[14] = inst_19238;
                                                            statearr_19329[16] = inst_19239;
                                                            return statearr_19329;
                                                          }();
                                                          var statearr_19330_19367 = state_19295__$1;
                                                          statearr_19330_19367[2] = null;
                                                          statearr_19330_19367[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_19296 === 10) {
                                                            var inst_19236 = state_19295[12];
                                                            var inst_19237 = state_19295[13];
                                                            var inst_19238 = state_19295[14];
                                                            var inst_19239 = state_19295[16];
                                                            var inst_19244 = cljs.core._nth.call(null, inst_19237, inst_19239);
                                                            var inst_19245 = cljs.core.async.muxch_STAR_.call(null, inst_19244);
                                                            var inst_19246 = cljs.core.async.close_BANG_.call(null, inst_19245);
                                                            var inst_19247 = inst_19239 + 1;
                                                            var tmp19325 = inst_19236;
                                                            var tmp19326 = inst_19237;
                                                            var tmp19327 = inst_19238;
                                                            var inst_19236__$1 = tmp19325;
                                                            var inst_19237__$1 = tmp19326;
                                                            var inst_19238__$1 = tmp19327;
                                                            var inst_19239__$1 = inst_19247;
                                                            var state_19295__$1 = function() {
                                                              var statearr_19331 = state_19295;
                                                              statearr_19331[12] = inst_19236__$1;
                                                              statearr_19331[13] = inst_19237__$1;
                                                              statearr_19331[14] = inst_19238__$1;
                                                              statearr_19331[17] = inst_19246;
                                                              statearr_19331[16] = inst_19239__$1;
                                                              return statearr_19331;
                                                            }();
                                                            var statearr_19332_19368 = state_19295__$1;
                                                            statearr_19332_19368[2] = null;
                                                            statearr_19332_19368[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_19296 === 18) {
                                                              var inst_19265 = state_19295[2];
                                                              var state_19295__$1 = state_19295;
                                                              var statearr_19333_19369 = state_19295__$1;
                                                              statearr_19333_19369[2] = inst_19265;
                                                              statearr_19333_19369[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_19296 === 8) {
                                                                var inst_19238 = state_19295[14];
                                                                var inst_19239 = state_19295[16];
                                                                var inst_19241 = inst_19239 < inst_19238;
                                                                var inst_19242 = inst_19241;
                                                                var state_19295__$1 = state_19295;
                                                                if (cljs.core.truth_(inst_19242)) {
                                                                  var statearr_19334_19370 = state_19295__$1;
                                                                  statearr_19334_19370[1] = 10;
                                                                } else {
                                                                  var statearr_19335_19371 = state_19295__$1;
                                                                  statearr_19335_19371[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6560__auto___19343, mults, ensure_mult, p);
          return function(switch__6504__auto__, c__6560__auto___19343, mults, ensure_mult, p) {
            return function() {
              var state_machine__6505__auto__ = null;
              var state_machine__6505__auto____0 = function() {
                var statearr_19339 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_19339[0] = state_machine__6505__auto__;
                statearr_19339[1] = 1;
                return statearr_19339;
              };
              var state_machine__6505__auto____1 = function(state_19295) {
                while (true) {
                  var ret_value__6506__auto__ = function() {
                    try {
                      while (true) {
                        var result__6507__auto__ = switch__6504__auto__.call(null, state_19295);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6507__auto__;
                        }
                        break;
                      }
                    } catch (e19340) {
                      if (e19340 instanceof Object) {
                        var ex__6508__auto__ = e19340;
                        var statearr_19341_19372 = state_19295;
                        statearr_19341_19372[5] = ex__6508__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19295);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e19340;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__19373 = state_19295;
                    state_19295 = G__19373;
                    continue;
                  } else {
                    return ret_value__6506__auto__;
                  }
                  break;
                }
              };
              state_machine__6505__auto__ = function(state_19295) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6505__auto____0.call(this);
                  case 1:
                    return state_machine__6505__auto____1.call(this, state_19295);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
              return state_machine__6505__auto__;
            }();
          }(switch__6504__auto__, c__6560__auto___19343, mults, ensure_mult, p);
        }();
        var state__6562__auto__ = function() {
          var statearr_19342 = f__6561__auto__.call(null);
          statearr_19342[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___19343;
          return statearr_19342;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
      };
    }(c__6560__auto___19343, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__6560__auto___19510 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___19510, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__6561__auto__ = function() {
          var switch__6504__auto__ = function(c__6560__auto___19510, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_19480) {
              var state_val_19481 = state_19480[1];
              if (state_val_19481 === 7) {
                var state_19480__$1 = state_19480;
                var statearr_19482_19511 = state_19480__$1;
                statearr_19482_19511[2] = null;
                statearr_19482_19511[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19481 === 1) {
                  var state_19480__$1 = state_19480;
                  var statearr_19483_19512 = state_19480__$1;
                  statearr_19483_19512[2] = null;
                  statearr_19483_19512[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19481 === 4) {
                    var inst_19444 = state_19480[7];
                    var inst_19446 = inst_19444 < cnt;
                    var state_19480__$1 = state_19480;
                    if (cljs.core.truth_(inst_19446)) {
                      var statearr_19484_19513 = state_19480__$1;
                      statearr_19484_19513[1] = 6;
                    } else {
                      var statearr_19485_19514 = state_19480__$1;
                      statearr_19485_19514[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19481 === 15) {
                      var inst_19476 = state_19480[2];
                      var state_19480__$1 = state_19480;
                      var statearr_19486_19515 = state_19480__$1;
                      statearr_19486_19515[2] = inst_19476;
                      statearr_19486_19515[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19481 === 13) {
                        var inst_19469 = cljs.core.async.close_BANG_.call(null, out);
                        var state_19480__$1 = state_19480;
                        var statearr_19487_19516 = state_19480__$1;
                        statearr_19487_19516[2] = inst_19469;
                        statearr_19487_19516[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_19481 === 6) {
                          var state_19480__$1 = state_19480;
                          var statearr_19488_19517 = state_19480__$1;
                          statearr_19488_19517[2] = null;
                          statearr_19488_19517[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_19481 === 3) {
                            var inst_19478 = state_19480[2];
                            var state_19480__$1 = state_19480;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19480__$1, inst_19478);
                          } else {
                            if (state_val_19481 === 12) {
                              var inst_19466 = state_19480[8];
                              var inst_19466__$1 = state_19480[2];
                              var inst_19467 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_19466__$1);
                              var state_19480__$1 = function() {
                                var statearr_19489 = state_19480;
                                statearr_19489[8] = inst_19466__$1;
                                return statearr_19489;
                              }();
                              if (cljs.core.truth_(inst_19467)) {
                                var statearr_19490_19518 = state_19480__$1;
                                statearr_19490_19518[1] = 13;
                              } else {
                                var statearr_19491_19519 = state_19480__$1;
                                statearr_19491_19519[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_19481 === 2) {
                                var inst_19443 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_19444 = 0;
                                var state_19480__$1 = function() {
                                  var statearr_19492 = state_19480;
                                  statearr_19492[7] = inst_19444;
                                  statearr_19492[9] = inst_19443;
                                  return statearr_19492;
                                }();
                                var statearr_19493_19520 = state_19480__$1;
                                statearr_19493_19520[2] = null;
                                statearr_19493_19520[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_19481 === 11) {
                                  var inst_19444 = state_19480[7];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_19480, 10, Object, null, 9);
                                  var inst_19453 = chs__$1.call(null, inst_19444);
                                  var inst_19454 = done.call(null, inst_19444);
                                  var inst_19455 = cljs.core.async.take_BANG_.call(null, inst_19453, inst_19454);
                                  var state_19480__$1 = state_19480;
                                  var statearr_19494_19521 = state_19480__$1;
                                  statearr_19494_19521[2] = inst_19455;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19480__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_19481 === 9) {
                                    var inst_19444 = state_19480[7];
                                    var inst_19457 = state_19480[2];
                                    var inst_19458 = inst_19444 + 1;
                                    var inst_19444__$1 = inst_19458;
                                    var state_19480__$1 = function() {
                                      var statearr_19495 = state_19480;
                                      statearr_19495[7] = inst_19444__$1;
                                      statearr_19495[10] = inst_19457;
                                      return statearr_19495;
                                    }();
                                    var statearr_19496_19522 = state_19480__$1;
                                    statearr_19496_19522[2] = null;
                                    statearr_19496_19522[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_19481 === 5) {
                                      var inst_19464 = state_19480[2];
                                      var state_19480__$1 = function() {
                                        var statearr_19497 = state_19480;
                                        statearr_19497[11] = inst_19464;
                                        return statearr_19497;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19480__$1, 12, dchan);
                                    } else {
                                      if (state_val_19481 === 14) {
                                        var inst_19466 = state_19480[8];
                                        var inst_19471 = cljs.core.apply.call(null, f, inst_19466);
                                        var state_19480__$1 = state_19480;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19480__$1, 16, out, inst_19471);
                                      } else {
                                        if (state_val_19481 === 16) {
                                          var inst_19473 = state_19480[2];
                                          var state_19480__$1 = function() {
                                            var statearr_19498 = state_19480;
                                            statearr_19498[12] = inst_19473;
                                            return statearr_19498;
                                          }();
                                          var statearr_19499_19523 = state_19480__$1;
                                          statearr_19499_19523[2] = null;
                                          statearr_19499_19523[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_19481 === 10) {
                                            var inst_19448 = state_19480[2];
                                            var inst_19449 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_19480__$1 = function() {
                                              var statearr_19500 = state_19480;
                                              statearr_19500[13] = inst_19448;
                                              return statearr_19500;
                                            }();
                                            var statearr_19501_19524 = state_19480__$1;
                                            statearr_19501_19524[2] = inst_19449;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19480__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_19481 === 8) {
                                              var inst_19462 = state_19480[2];
                                              var state_19480__$1 = state_19480;
                                              var statearr_19502_19525 = state_19480__$1;
                                              statearr_19502_19525[2] = inst_19462;
                                              statearr_19502_19525[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6560__auto___19510, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__6504__auto__, c__6560__auto___19510, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__6505__auto__ = null;
              var state_machine__6505__auto____0 = function() {
                var statearr_19506 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_19506[0] = state_machine__6505__auto__;
                statearr_19506[1] = 1;
                return statearr_19506;
              };
              var state_machine__6505__auto____1 = function(state_19480) {
                while (true) {
                  var ret_value__6506__auto__ = function() {
                    try {
                      while (true) {
                        var result__6507__auto__ = switch__6504__auto__.call(null, state_19480);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6507__auto__;
                        }
                        break;
                      }
                    } catch (e19507) {
                      if (e19507 instanceof Object) {
                        var ex__6508__auto__ = e19507;
                        var statearr_19508_19526 = state_19480;
                        statearr_19508_19526[5] = ex__6508__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19480);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e19507;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__19527 = state_19480;
                    state_19480 = G__19527;
                    continue;
                  } else {
                    return ret_value__6506__auto__;
                  }
                  break;
                }
              };
              state_machine__6505__auto__ = function(state_19480) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6505__auto____0.call(this);
                  case 1:
                    return state_machine__6505__auto____1.call(this, state_19480);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
              return state_machine__6505__auto__;
            }();
          }(switch__6504__auto__, c__6560__auto___19510, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__6562__auto__ = function() {
          var statearr_19509 = f__6561__auto__.call(null);
          statearr_19509[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___19510;
          return statearr_19509;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
      };
    }(c__6560__auto___19510, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6560__auto___19635 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___19635, out) {
      return function() {
        var f__6561__auto__ = function() {
          var switch__6504__auto__ = function(c__6560__auto___19635, out) {
            return function(state_19611) {
              var state_val_19612 = state_19611[1];
              if (state_val_19612 === 7) {
                var inst_19591 = state_19611[7];
                var inst_19590 = state_19611[8];
                var inst_19590__$1 = state_19611[2];
                var inst_19591__$1 = cljs.core.nth.call(null, inst_19590__$1, 0, null);
                var inst_19592 = cljs.core.nth.call(null, inst_19590__$1, 1, null);
                var inst_19593 = inst_19591__$1 == null;
                var state_19611__$1 = function() {
                  var statearr_19613 = state_19611;
                  statearr_19613[7] = inst_19591__$1;
                  statearr_19613[8] = inst_19590__$1;
                  statearr_19613[9] = inst_19592;
                  return statearr_19613;
                }();
                if (cljs.core.truth_(inst_19593)) {
                  var statearr_19614_19636 = state_19611__$1;
                  statearr_19614_19636[1] = 8;
                } else {
                  var statearr_19615_19637 = state_19611__$1;
                  statearr_19615_19637[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19612 === 1) {
                  var inst_19582 = cljs.core.vec.call(null, chs);
                  var inst_19583 = inst_19582;
                  var state_19611__$1 = function() {
                    var statearr_19616 = state_19611;
                    statearr_19616[10] = inst_19583;
                    return statearr_19616;
                  }();
                  var statearr_19617_19638 = state_19611__$1;
                  statearr_19617_19638[2] = null;
                  statearr_19617_19638[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19612 === 4) {
                    var inst_19583 = state_19611[10];
                    var state_19611__$1 = state_19611;
                    return cljs.core.async.ioc_alts_BANG_.call(null, state_19611__$1, 7, inst_19583);
                  } else {
                    if (state_val_19612 === 6) {
                      var inst_19607 = state_19611[2];
                      var state_19611__$1 = state_19611;
                      var statearr_19618_19639 = state_19611__$1;
                      statearr_19618_19639[2] = inst_19607;
                      statearr_19618_19639[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19612 === 3) {
                        var inst_19609 = state_19611[2];
                        var state_19611__$1 = state_19611;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19611__$1, inst_19609);
                      } else {
                        if (state_val_19612 === 2) {
                          var inst_19583 = state_19611[10];
                          var inst_19585 = cljs.core.count.call(null, inst_19583);
                          var inst_19586 = inst_19585 > 0;
                          var state_19611__$1 = state_19611;
                          if (cljs.core.truth_(inst_19586)) {
                            var statearr_19620_19640 = state_19611__$1;
                            statearr_19620_19640[1] = 4;
                          } else {
                            var statearr_19621_19641 = state_19611__$1;
                            statearr_19621_19641[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_19612 === 11) {
                            var inst_19583 = state_19611[10];
                            var inst_19600 = state_19611[2];
                            var tmp19619 = inst_19583;
                            var inst_19583__$1 = tmp19619;
                            var state_19611__$1 = function() {
                              var statearr_19622 = state_19611;
                              statearr_19622[10] = inst_19583__$1;
                              statearr_19622[11] = inst_19600;
                              return statearr_19622;
                            }();
                            var statearr_19623_19642 = state_19611__$1;
                            statearr_19623_19642[2] = null;
                            statearr_19623_19642[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_19612 === 9) {
                              var inst_19591 = state_19611[7];
                              var state_19611__$1 = state_19611;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19611__$1, 11, out, inst_19591);
                            } else {
                              if (state_val_19612 === 5) {
                                var inst_19605 = cljs.core.async.close_BANG_.call(null, out);
                                var state_19611__$1 = state_19611;
                                var statearr_19624_19643 = state_19611__$1;
                                statearr_19624_19643[2] = inst_19605;
                                statearr_19624_19643[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_19612 === 10) {
                                  var inst_19603 = state_19611[2];
                                  var state_19611__$1 = state_19611;
                                  var statearr_19625_19644 = state_19611__$1;
                                  statearr_19625_19644[2] = inst_19603;
                                  statearr_19625_19644[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_19612 === 8) {
                                    var inst_19591 = state_19611[7];
                                    var inst_19590 = state_19611[8];
                                    var inst_19592 = state_19611[9];
                                    var inst_19583 = state_19611[10];
                                    var inst_19595 = function() {
                                      var c = inst_19592;
                                      var v = inst_19591;
                                      var vec__19588 = inst_19590;
                                      var cs = inst_19583;
                                      return function(c, v, vec__19588, cs, inst_19591, inst_19590, inst_19592, inst_19583, state_val_19612, c__6560__auto___19635, out) {
                                        return function(p1__19528_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__19528_SHARP_);
                                        };
                                      }(c, v, vec__19588, cs, inst_19591, inst_19590, inst_19592, inst_19583, state_val_19612, c__6560__auto___19635, out);
                                    }();
                                    var inst_19596 = cljs.core.filterv.call(null, inst_19595, inst_19583);
                                    var inst_19583__$1 = inst_19596;
                                    var state_19611__$1 = function() {
                                      var statearr_19626 = state_19611;
                                      statearr_19626[10] = inst_19583__$1;
                                      return statearr_19626;
                                    }();
                                    var statearr_19627_19645 = state_19611__$1;
                                    statearr_19627_19645[2] = null;
                                    statearr_19627_19645[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6560__auto___19635, out);
          return function(switch__6504__auto__, c__6560__auto___19635, out) {
            return function() {
              var state_machine__6505__auto__ = null;
              var state_machine__6505__auto____0 = function() {
                var statearr_19631 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_19631[0] = state_machine__6505__auto__;
                statearr_19631[1] = 1;
                return statearr_19631;
              };
              var state_machine__6505__auto____1 = function(state_19611) {
                while (true) {
                  var ret_value__6506__auto__ = function() {
                    try {
                      while (true) {
                        var result__6507__auto__ = switch__6504__auto__.call(null, state_19611);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6507__auto__;
                        }
                        break;
                      }
                    } catch (e19632) {
                      if (e19632 instanceof Object) {
                        var ex__6508__auto__ = e19632;
                        var statearr_19633_19646 = state_19611;
                        statearr_19633_19646[5] = ex__6508__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19611);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e19632;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__19647 = state_19611;
                    state_19611 = G__19647;
                    continue;
                  } else {
                    return ret_value__6506__auto__;
                  }
                  break;
                }
              };
              state_machine__6505__auto__ = function(state_19611) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6505__auto____0.call(this);
                  case 1:
                    return state_machine__6505__auto____1.call(this, state_19611);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
              return state_machine__6505__auto__;
            }();
          }(switch__6504__auto__, c__6560__auto___19635, out);
        }();
        var state__6562__auto__ = function() {
          var statearr_19634 = f__6561__auto__.call(null);
          statearr_19634[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___19635;
          return statearr_19634;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
      };
    }(c__6560__auto___19635, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6560__auto___19740 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___19740, out) {
      return function() {
        var f__6561__auto__ = function() {
          var switch__6504__auto__ = function(c__6560__auto___19740, out) {
            return function(state_19717) {
              var state_val_19718 = state_19717[1];
              if (state_val_19718 === 7) {
                var inst_19699 = state_19717[7];
                var inst_19699__$1 = state_19717[2];
                var inst_19700 = inst_19699__$1 == null;
                var inst_19701 = cljs.core.not.call(null, inst_19700);
                var state_19717__$1 = function() {
                  var statearr_19719 = state_19717;
                  statearr_19719[7] = inst_19699__$1;
                  return statearr_19719;
                }();
                if (inst_19701) {
                  var statearr_19720_19741 = state_19717__$1;
                  statearr_19720_19741[1] = 8;
                } else {
                  var statearr_19721_19742 = state_19717__$1;
                  statearr_19721_19742[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19718 === 1) {
                  var inst_19694 = 0;
                  var state_19717__$1 = function() {
                    var statearr_19722 = state_19717;
                    statearr_19722[8] = inst_19694;
                    return statearr_19722;
                  }();
                  var statearr_19723_19743 = state_19717__$1;
                  statearr_19723_19743[2] = null;
                  statearr_19723_19743[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19718 === 4) {
                    var state_19717__$1 = state_19717;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19717__$1, 7, ch);
                  } else {
                    if (state_val_19718 === 6) {
                      var inst_19712 = state_19717[2];
                      var state_19717__$1 = state_19717;
                      var statearr_19724_19744 = state_19717__$1;
                      statearr_19724_19744[2] = inst_19712;
                      statearr_19724_19744[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19718 === 3) {
                        var inst_19714 = state_19717[2];
                        var inst_19715 = cljs.core.async.close_BANG_.call(null, out);
                        var state_19717__$1 = function() {
                          var statearr_19725 = state_19717;
                          statearr_19725[9] = inst_19714;
                          return statearr_19725;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19717__$1, inst_19715);
                      } else {
                        if (state_val_19718 === 2) {
                          var inst_19694 = state_19717[8];
                          var inst_19696 = inst_19694 < n;
                          var state_19717__$1 = state_19717;
                          if (cljs.core.truth_(inst_19696)) {
                            var statearr_19726_19745 = state_19717__$1;
                            statearr_19726_19745[1] = 4;
                          } else {
                            var statearr_19727_19746 = state_19717__$1;
                            statearr_19727_19746[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_19718 === 11) {
                            var inst_19694 = state_19717[8];
                            var inst_19704 = state_19717[2];
                            var inst_19705 = inst_19694 + 1;
                            var inst_19694__$1 = inst_19705;
                            var state_19717__$1 = function() {
                              var statearr_19728 = state_19717;
                              statearr_19728[10] = inst_19704;
                              statearr_19728[8] = inst_19694__$1;
                              return statearr_19728;
                            }();
                            var statearr_19729_19747 = state_19717__$1;
                            statearr_19729_19747[2] = null;
                            statearr_19729_19747[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_19718 === 9) {
                              var state_19717__$1 = state_19717;
                              var statearr_19730_19748 = state_19717__$1;
                              statearr_19730_19748[2] = null;
                              statearr_19730_19748[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_19718 === 5) {
                                var state_19717__$1 = state_19717;
                                var statearr_19731_19749 = state_19717__$1;
                                statearr_19731_19749[2] = null;
                                statearr_19731_19749[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_19718 === 10) {
                                  var inst_19709 = state_19717[2];
                                  var state_19717__$1 = state_19717;
                                  var statearr_19732_19750 = state_19717__$1;
                                  statearr_19732_19750[2] = inst_19709;
                                  statearr_19732_19750[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_19718 === 8) {
                                    var inst_19699 = state_19717[7];
                                    var state_19717__$1 = state_19717;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19717__$1, 11, out, inst_19699);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6560__auto___19740, out);
          return function(switch__6504__auto__, c__6560__auto___19740, out) {
            return function() {
              var state_machine__6505__auto__ = null;
              var state_machine__6505__auto____0 = function() {
                var statearr_19736 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_19736[0] = state_machine__6505__auto__;
                statearr_19736[1] = 1;
                return statearr_19736;
              };
              var state_machine__6505__auto____1 = function(state_19717) {
                while (true) {
                  var ret_value__6506__auto__ = function() {
                    try {
                      while (true) {
                        var result__6507__auto__ = switch__6504__auto__.call(null, state_19717);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6507__auto__;
                        }
                        break;
                      }
                    } catch (e19737) {
                      if (e19737 instanceof Object) {
                        var ex__6508__auto__ = e19737;
                        var statearr_19738_19751 = state_19717;
                        statearr_19738_19751[5] = ex__6508__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19717);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e19737;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__19752 = state_19717;
                    state_19717 = G__19752;
                    continue;
                  } else {
                    return ret_value__6506__auto__;
                  }
                  break;
                }
              };
              state_machine__6505__auto__ = function(state_19717) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6505__auto____0.call(this);
                  case 1:
                    return state_machine__6505__auto____1.call(this, state_19717);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
              return state_machine__6505__auto__;
            }();
          }(switch__6504__auto__, c__6560__auto___19740, out);
        }();
        var state__6562__auto__ = function() {
          var statearr_19739 = f__6561__auto__.call(null);
          statearr_19739[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___19740;
          return statearr_19739;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
      };
    }(c__6560__auto___19740, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t19760 !== "undefined") {
  } else {
    cljs.core.async.t19760 = function(ch, f, map_LT_, meta19761) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta19761 = meta19761;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t19760.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t19760.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t19760.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t19760.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t19763 !== "undefined") {
        } else {
          cljs.core.async.t19763 = function(fn1, _, meta19761, map_LT_, f, ch, meta19764) {
            this.fn1 = fn1;
            this._ = _;
            this.meta19761 = meta19761;
            this.map_LT_ = map_LT_;
            this.f = f;
            this.ch = ch;
            this.meta19764 = meta19764;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t19763.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t19763.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t19763.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__19753_SHARP_) {
                  return f1.call(null, p1__19753_SHARP_ == null ? null : self__.f.call(null, p1__19753_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t19763.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_19765) {
              var self__ = this;
              var _19765__$1 = this;
              return self__.meta19764;
            };
          }(___$1);
          cljs.core.async.t19763.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_19765, meta19764__$1) {
              var self__ = this;
              var _19765__$1 = this;
              return new cljs.core.async.t19763(self__.fn1, self__._, self__.meta19761, self__.map_LT_, self__.f, self__.ch, meta19764__$1);
            };
          }(___$1);
          cljs.core.async.t19763.cljs$lang$type = true;
          cljs.core.async.t19763.cljs$lang$ctorStr = "cljs.core.async/t19763";
          cljs.core.async.t19763.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
              return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async/t19763");
            };
          }(___$1);
          cljs.core.async.__GT_t19763 = function(___$1) {
            return function __GT_t19763(fn1__$1, ___$2, meta19761__$1, map_LT___$1, f__$1, ch__$1, meta19764) {
              return new cljs.core.async.t19763(fn1__$1, ___$2, meta19761__$1, map_LT___$1, f__$1, ch__$1, meta19764);
            };
          }(___$1);
        }
        return new cljs.core.async.t19763(fn1, ___$1, self__.meta19761, self__.map_LT_, self__.f, self__.ch, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 46, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 737, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 731, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/mhurd/development/workspace/gridlife/target/cljsbuild-compiler-0/cljs/core/async.cljs"], 
        null));
      }());
      if (cljs.core.truth_(function() {
        var and__3756__auto__ = ret;
        if (cljs.core.truth_(and__3756__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3756__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t19760.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t19760.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t19760.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t19760.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19762) {
      var self__ = this;
      var _19762__$1 = this;
      return self__.meta19761;
    };
    cljs.core.async.t19760.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19762, meta19761__$1) {
      var self__ = this;
      var _19762__$1 = this;
      return new cljs.core.async.t19760(self__.ch, self__.f, self__.map_LT_, meta19761__$1);
    };
    cljs.core.async.t19760.cljs$lang$type = true;
    cljs.core.async.t19760.cljs$lang$ctorStr = "cljs.core.async/t19760";
    cljs.core.async.t19760.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
      return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async/t19760");
    };
    cljs.core.async.__GT_t19760 = function __GT_t19760(ch__$1, f__$1, map_LT___$1, meta19761) {
      return new cljs.core.async.t19760(ch__$1, f__$1, map_LT___$1, meta19761);
    };
  }
  return new cljs.core.async.t19760(ch, f, map_LT_, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 46, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 743, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 722, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/mhurd/development/workspace/gridlife/target/cljsbuild-compiler-0/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t19769 !== "undefined") {
  } else {
    cljs.core.async.t19769 = function(ch, f, map_GT_, meta19770) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta19770 = meta19770;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t19769.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t19769.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t19769.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t19769.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t19769.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t19769.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t19769.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19771) {
      var self__ = this;
      var _19771__$1 = this;
      return self__.meta19770;
    };
    cljs.core.async.t19769.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19771, meta19770__$1) {
      var self__ = this;
      var _19771__$1 = this;
      return new cljs.core.async.t19769(self__.ch, self__.f, self__.map_GT_, meta19770__$1);
    };
    cljs.core.async.t19769.cljs$lang$type = true;
    cljs.core.async.t19769.cljs$lang$ctorStr = "cljs.core.async/t19769";
    cljs.core.async.t19769.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
      return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async/t19769");
    };
    cljs.core.async.__GT_t19769 = function __GT_t19769(ch__$1, f__$1, map_GT___$1, meta19770) {
      return new cljs.core.async.t19769(ch__$1, f__$1, map_GT___$1, meta19770);
    };
  }
  return new cljs.core.async.t19769(ch, f, map_GT_, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 34, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 757, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 748, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/mhurd/development/workspace/gridlife/target/cljsbuild-compiler-0/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t19775 !== "undefined") {
  } else {
    cljs.core.async.t19775 = function(ch, p, filter_GT_, meta19776) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta19776 = meta19776;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t19775.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t19775.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t19775.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t19775.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t19775.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t19775.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t19775.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t19775.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19777) {
      var self__ = this;
      var _19777__$1 = this;
      return self__.meta19776;
    };
    cljs.core.async.t19775.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19777, meta19776__$1) {
      var self__ = this;
      var _19777__$1 = this;
      return new cljs.core.async.t19775(self__.ch, self__.p, self__.filter_GT_, meta19776__$1);
    };
    cljs.core.async.t19775.cljs$lang$type = true;
    cljs.core.async.t19775.cljs$lang$ctorStr = "cljs.core.async/t19775";
    cljs.core.async.t19775.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
      return cljs.core._write.call(null, writer__4356__auto__, "cljs.core.async/t19775");
    };
    cljs.core.async.__GT_t19775 = function __GT_t19775(ch__$1, p__$1, filter_GT___$1, meta19776) {
      return new cljs.core.async.t19775(ch__$1, p__$1, filter_GT___$1, meta19776);
    };
  }
  return new cljs.core.async.t19775(ch, p, filter_GT_, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 48, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 774, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 762, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/mhurd/development/workspace/gridlife/target/cljsbuild-compiler-0/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6560__auto___19860 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___19860, out) {
      return function() {
        var f__6561__auto__ = function() {
          var switch__6504__auto__ = function(c__6560__auto___19860, out) {
            return function(state_19839) {
              var state_val_19840 = state_19839[1];
              if (state_val_19840 === 7) {
                var inst_19835 = state_19839[2];
                var state_19839__$1 = state_19839;
                var statearr_19841_19861 = state_19839__$1;
                statearr_19841_19861[2] = inst_19835;
                statearr_19841_19861[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19840 === 1) {
                  var state_19839__$1 = state_19839;
                  var statearr_19842_19862 = state_19839__$1;
                  statearr_19842_19862[2] = null;
                  statearr_19842_19862[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19840 === 4) {
                    var inst_19821 = state_19839[7];
                    var inst_19821__$1 = state_19839[2];
                    var inst_19822 = inst_19821__$1 == null;
                    var state_19839__$1 = function() {
                      var statearr_19843 = state_19839;
                      statearr_19843[7] = inst_19821__$1;
                      return statearr_19843;
                    }();
                    if (cljs.core.truth_(inst_19822)) {
                      var statearr_19844_19863 = state_19839__$1;
                      statearr_19844_19863[1] = 5;
                    } else {
                      var statearr_19845_19864 = state_19839__$1;
                      statearr_19845_19864[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19840 === 6) {
                      var inst_19821 = state_19839[7];
                      var inst_19826 = p.call(null, inst_19821);
                      var state_19839__$1 = state_19839;
                      if (cljs.core.truth_(inst_19826)) {
                        var statearr_19846_19865 = state_19839__$1;
                        statearr_19846_19865[1] = 8;
                      } else {
                        var statearr_19847_19866 = state_19839__$1;
                        statearr_19847_19866[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19840 === 3) {
                        var inst_19837 = state_19839[2];
                        var state_19839__$1 = state_19839;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19839__$1, inst_19837);
                      } else {
                        if (state_val_19840 === 2) {
                          var state_19839__$1 = state_19839;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19839__$1, 4, ch);
                        } else {
                          if (state_val_19840 === 11) {
                            var inst_19829 = state_19839[2];
                            var state_19839__$1 = state_19839;
                            var statearr_19848_19867 = state_19839__$1;
                            statearr_19848_19867[2] = inst_19829;
                            statearr_19848_19867[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_19840 === 9) {
                              var state_19839__$1 = state_19839;
                              var statearr_19849_19868 = state_19839__$1;
                              statearr_19849_19868[2] = null;
                              statearr_19849_19868[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_19840 === 5) {
                                var inst_19824 = cljs.core.async.close_BANG_.call(null, out);
                                var state_19839__$1 = state_19839;
                                var statearr_19850_19869 = state_19839__$1;
                                statearr_19850_19869[2] = inst_19824;
                                statearr_19850_19869[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_19840 === 10) {
                                  var inst_19832 = state_19839[2];
                                  var state_19839__$1 = function() {
                                    var statearr_19851 = state_19839;
                                    statearr_19851[8] = inst_19832;
                                    return statearr_19851;
                                  }();
                                  var statearr_19852_19870 = state_19839__$1;
                                  statearr_19852_19870[2] = null;
                                  statearr_19852_19870[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_19840 === 8) {
                                    var inst_19821 = state_19839[7];
                                    var state_19839__$1 = state_19839;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19839__$1, 11, out, inst_19821);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6560__auto___19860, out);
          return function(switch__6504__auto__, c__6560__auto___19860, out) {
            return function() {
              var state_machine__6505__auto__ = null;
              var state_machine__6505__auto____0 = function() {
                var statearr_19856 = [null, null, null, null, null, null, null, null, null];
                statearr_19856[0] = state_machine__6505__auto__;
                statearr_19856[1] = 1;
                return statearr_19856;
              };
              var state_machine__6505__auto____1 = function(state_19839) {
                while (true) {
                  var ret_value__6506__auto__ = function() {
                    try {
                      while (true) {
                        var result__6507__auto__ = switch__6504__auto__.call(null, state_19839);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6507__auto__;
                        }
                        break;
                      }
                    } catch (e19857) {
                      if (e19857 instanceof Object) {
                        var ex__6508__auto__ = e19857;
                        var statearr_19858_19871 = state_19839;
                        statearr_19858_19871[5] = ex__6508__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19839);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e19857;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__19872 = state_19839;
                    state_19839 = G__19872;
                    continue;
                  } else {
                    return ret_value__6506__auto__;
                  }
                  break;
                }
              };
              state_machine__6505__auto__ = function(state_19839) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6505__auto____0.call(this);
                  case 1:
                    return state_machine__6505__auto____1.call(this, state_19839);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
              return state_machine__6505__auto__;
            }();
          }(switch__6504__auto__, c__6560__auto___19860, out);
        }();
        var state__6562__auto__ = function() {
          var statearr_19859 = f__6561__auto__.call(null);
          statearr_19859[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___19860;
          return statearr_19859;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
      };
    }(c__6560__auto___19860, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__6560__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto__) {
    return function() {
      var f__6561__auto__ = function() {
        var switch__6504__auto__ = function(c__6560__auto__) {
          return function(state_20038) {
            var state_val_20039 = state_20038[1];
            if (state_val_20039 === 7) {
              var inst_20034 = state_20038[2];
              var state_20038__$1 = state_20038;
              var statearr_20040_20081 = state_20038__$1;
              statearr_20040_20081[2] = inst_20034;
              statearr_20040_20081[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_20039 === 20) {
                var inst_20004 = state_20038[7];
                var inst_20015 = state_20038[2];
                var inst_20016 = cljs.core.next.call(null, inst_20004);
                var inst_19990 = inst_20016;
                var inst_19991 = null;
                var inst_19992 = 0;
                var inst_19993 = 0;
                var state_20038__$1 = function() {
                  var statearr_20041 = state_20038;
                  statearr_20041[8] = inst_19991;
                  statearr_20041[9] = inst_19990;
                  statearr_20041[10] = inst_19992;
                  statearr_20041[11] = inst_19993;
                  statearr_20041[12] = inst_20015;
                  return statearr_20041;
                }();
                var statearr_20042_20082 = state_20038__$1;
                statearr_20042_20082[2] = null;
                statearr_20042_20082[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_20039 === 1) {
                  var state_20038__$1 = state_20038;
                  var statearr_20043_20083 = state_20038__$1;
                  statearr_20043_20083[2] = null;
                  statearr_20043_20083[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_20039 === 4) {
                    var inst_19979 = state_20038[13];
                    var inst_19979__$1 = state_20038[2];
                    var inst_19980 = inst_19979__$1 == null;
                    var state_20038__$1 = function() {
                      var statearr_20044 = state_20038;
                      statearr_20044[13] = inst_19979__$1;
                      return statearr_20044;
                    }();
                    if (cljs.core.truth_(inst_19980)) {
                      var statearr_20045_20084 = state_20038__$1;
                      statearr_20045_20084[1] = 5;
                    } else {
                      var statearr_20046_20085 = state_20038__$1;
                      statearr_20046_20085[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_20039 === 15) {
                      var state_20038__$1 = state_20038;
                      var statearr_20050_20086 = state_20038__$1;
                      statearr_20050_20086[2] = null;
                      statearr_20050_20086[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20039 === 21) {
                        var state_20038__$1 = state_20038;
                        var statearr_20051_20087 = state_20038__$1;
                        statearr_20051_20087[2] = null;
                        statearr_20051_20087[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_20039 === 13) {
                          var inst_19991 = state_20038[8];
                          var inst_19990 = state_20038[9];
                          var inst_19992 = state_20038[10];
                          var inst_19993 = state_20038[11];
                          var inst_20000 = state_20038[2];
                          var inst_20001 = inst_19993 + 1;
                          var tmp20047 = inst_19991;
                          var tmp20048 = inst_19990;
                          var tmp20049 = inst_19992;
                          var inst_19990__$1 = tmp20048;
                          var inst_19991__$1 = tmp20047;
                          var inst_19992__$1 = tmp20049;
                          var inst_19993__$1 = inst_20001;
                          var state_20038__$1 = function() {
                            var statearr_20052 = state_20038;
                            statearr_20052[8] = inst_19991__$1;
                            statearr_20052[9] = inst_19990__$1;
                            statearr_20052[10] = inst_19992__$1;
                            statearr_20052[14] = inst_20000;
                            statearr_20052[11] = inst_19993__$1;
                            return statearr_20052;
                          }();
                          var statearr_20053_20088 = state_20038__$1;
                          statearr_20053_20088[2] = null;
                          statearr_20053_20088[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_20039 === 22) {
                            var state_20038__$1 = state_20038;
                            var statearr_20054_20089 = state_20038__$1;
                            statearr_20054_20089[2] = null;
                            statearr_20054_20089[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_20039 === 6) {
                              var inst_19979 = state_20038[13];
                              var inst_19988 = f.call(null, inst_19979);
                              var inst_19989 = cljs.core.seq.call(null, inst_19988);
                              var inst_19990 = inst_19989;
                              var inst_19991 = null;
                              var inst_19992 = 0;
                              var inst_19993 = 0;
                              var state_20038__$1 = function() {
                                var statearr_20055 = state_20038;
                                statearr_20055[8] = inst_19991;
                                statearr_20055[9] = inst_19990;
                                statearr_20055[10] = inst_19992;
                                statearr_20055[11] = inst_19993;
                                return statearr_20055;
                              }();
                              var statearr_20056_20090 = state_20038__$1;
                              statearr_20056_20090[2] = null;
                              statearr_20056_20090[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_20039 === 17) {
                                var inst_20004 = state_20038[7];
                                var inst_20008 = cljs.core.chunk_first.call(null, inst_20004);
                                var inst_20009 = cljs.core.chunk_rest.call(null, inst_20004);
                                var inst_20010 = cljs.core.count.call(null, inst_20008);
                                var inst_19990 = inst_20009;
                                var inst_19991 = inst_20008;
                                var inst_19992 = inst_20010;
                                var inst_19993 = 0;
                                var state_20038__$1 = function() {
                                  var statearr_20057 = state_20038;
                                  statearr_20057[8] = inst_19991;
                                  statearr_20057[9] = inst_19990;
                                  statearr_20057[10] = inst_19992;
                                  statearr_20057[11] = inst_19993;
                                  return statearr_20057;
                                }();
                                var statearr_20058_20091 = state_20038__$1;
                                statearr_20058_20091[2] = null;
                                statearr_20058_20091[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_20039 === 3) {
                                  var inst_20036 = state_20038[2];
                                  var state_20038__$1 = state_20038;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20038__$1, inst_20036);
                                } else {
                                  if (state_val_20039 === 12) {
                                    var inst_20024 = state_20038[2];
                                    var state_20038__$1 = state_20038;
                                    var statearr_20059_20092 = state_20038__$1;
                                    statearr_20059_20092[2] = inst_20024;
                                    statearr_20059_20092[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_20039 === 2) {
                                      var state_20038__$1 = state_20038;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20038__$1, 4, in$);
                                    } else {
                                      if (state_val_20039 === 23) {
                                        var inst_20032 = state_20038[2];
                                        var state_20038__$1 = state_20038;
                                        var statearr_20060_20093 = state_20038__$1;
                                        statearr_20060_20093[2] = inst_20032;
                                        statearr_20060_20093[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_20039 === 19) {
                                          var inst_20019 = state_20038[2];
                                          var state_20038__$1 = state_20038;
                                          var statearr_20061_20094 = state_20038__$1;
                                          statearr_20061_20094[2] = inst_20019;
                                          statearr_20061_20094[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_20039 === 11) {
                                            var inst_19990 = state_20038[9];
                                            var inst_20004 = state_20038[7];
                                            var inst_20004__$1 = cljs.core.seq.call(null, inst_19990);
                                            var state_20038__$1 = function() {
                                              var statearr_20062 = state_20038;
                                              statearr_20062[7] = inst_20004__$1;
                                              return statearr_20062;
                                            }();
                                            if (inst_20004__$1) {
                                              var statearr_20063_20095 = state_20038__$1;
                                              statearr_20063_20095[1] = 14;
                                            } else {
                                              var statearr_20064_20096 = state_20038__$1;
                                              statearr_20064_20096[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_20039 === 9) {
                                              var inst_20026 = state_20038[2];
                                              var inst_20027 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_20038__$1 = function() {
                                                var statearr_20065 = state_20038;
                                                statearr_20065[15] = inst_20026;
                                                return statearr_20065;
                                              }();
                                              if (cljs.core.truth_(inst_20027)) {
                                                var statearr_20066_20097 = state_20038__$1;
                                                statearr_20066_20097[1] = 21;
                                              } else {
                                                var statearr_20067_20098 = state_20038__$1;
                                                statearr_20067_20098[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_20039 === 5) {
                                                var inst_19982 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_20038__$1 = state_20038;
                                                var statearr_20068_20099 = state_20038__$1;
                                                statearr_20068_20099[2] = inst_19982;
                                                statearr_20068_20099[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_20039 === 14) {
                                                  var inst_20004 = state_20038[7];
                                                  var inst_20006 = cljs.core.chunked_seq_QMARK_.call(null, inst_20004);
                                                  var state_20038__$1 = state_20038;
                                                  if (inst_20006) {
                                                    var statearr_20069_20100 = state_20038__$1;
                                                    statearr_20069_20100[1] = 17;
                                                  } else {
                                                    var statearr_20070_20101 = state_20038__$1;
                                                    statearr_20070_20101[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_20039 === 16) {
                                                    var inst_20022 = state_20038[2];
                                                    var state_20038__$1 = state_20038;
                                                    var statearr_20071_20102 = state_20038__$1;
                                                    statearr_20071_20102[2] = inst_20022;
                                                    statearr_20071_20102[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_20039 === 10) {
                                                      var inst_19991 = state_20038[8];
                                                      var inst_19993 = state_20038[11];
                                                      var inst_19998 = cljs.core._nth.call(null, inst_19991, inst_19993);
                                                      var state_20038__$1 = state_20038;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20038__$1, 13, out, inst_19998);
                                                    } else {
                                                      if (state_val_20039 === 18) {
                                                        var inst_20004 = state_20038[7];
                                                        var inst_20013 = cljs.core.first.call(null, inst_20004);
                                                        var state_20038__$1 = state_20038;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20038__$1, 20, out, inst_20013);
                                                      } else {
                                                        if (state_val_20039 === 8) {
                                                          var inst_19992 = state_20038[10];
                                                          var inst_19993 = state_20038[11];
                                                          var inst_19995 = inst_19993 < inst_19992;
                                                          var inst_19996 = inst_19995;
                                                          var state_20038__$1 = state_20038;
                                                          if (cljs.core.truth_(inst_19996)) {
                                                            var statearr_20072_20103 = state_20038__$1;
                                                            statearr_20072_20103[1] = 10;
                                                          } else {
                                                            var statearr_20073_20104 = state_20038__$1;
                                                            statearr_20073_20104[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6560__auto__);
        return function(switch__6504__auto__, c__6560__auto__) {
          return function() {
            var state_machine__6505__auto__ = null;
            var state_machine__6505__auto____0 = function() {
              var statearr_20077 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_20077[0] = state_machine__6505__auto__;
              statearr_20077[1] = 1;
              return statearr_20077;
            };
            var state_machine__6505__auto____1 = function(state_20038) {
              while (true) {
                var ret_value__6506__auto__ = function() {
                  try {
                    while (true) {
                      var result__6507__auto__ = switch__6504__auto__.call(null, state_20038);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6507__auto__;
                      }
                      break;
                    }
                  } catch (e20078) {
                    if (e20078 instanceof Object) {
                      var ex__6508__auto__ = e20078;
                      var statearr_20079_20105 = state_20038;
                      statearr_20079_20105[5] = ex__6508__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20038);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e20078;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__20106 = state_20038;
                  state_20038 = G__20106;
                  continue;
                } else {
                  return ret_value__6506__auto__;
                }
                break;
              }
            };
            state_machine__6505__auto__ = function(state_20038) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6505__auto____0.call(this);
                case 1:
                  return state_machine__6505__auto____1.call(this, state_20038);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
            state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
            return state_machine__6505__auto__;
          }();
        }(switch__6504__auto__, c__6560__auto__);
      }();
      var state__6562__auto__ = function() {
        var statearr_20080 = f__6561__auto__.call(null);
        statearr_20080[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto__;
        return statearr_20080;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
    };
  }(c__6560__auto__));
  return c__6560__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6560__auto___20203 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___20203, out) {
      return function() {
        var f__6561__auto__ = function() {
          var switch__6504__auto__ = function(c__6560__auto___20203, out) {
            return function(state_20178) {
              var state_val_20179 = state_20178[1];
              if (state_val_20179 === 7) {
                var inst_20173 = state_20178[2];
                var state_20178__$1 = state_20178;
                var statearr_20180_20204 = state_20178__$1;
                statearr_20180_20204[2] = inst_20173;
                statearr_20180_20204[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_20179 === 1) {
                  var inst_20155 = null;
                  var state_20178__$1 = function() {
                    var statearr_20181 = state_20178;
                    statearr_20181[7] = inst_20155;
                    return statearr_20181;
                  }();
                  var statearr_20182_20205 = state_20178__$1;
                  statearr_20182_20205[2] = null;
                  statearr_20182_20205[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_20179 === 4) {
                    var inst_20158 = state_20178[8];
                    var inst_20158__$1 = state_20178[2];
                    var inst_20159 = inst_20158__$1 == null;
                    var inst_20160 = cljs.core.not.call(null, inst_20159);
                    var state_20178__$1 = function() {
                      var statearr_20183 = state_20178;
                      statearr_20183[8] = inst_20158__$1;
                      return statearr_20183;
                    }();
                    if (inst_20160) {
                      var statearr_20184_20206 = state_20178__$1;
                      statearr_20184_20206[1] = 5;
                    } else {
                      var statearr_20185_20207 = state_20178__$1;
                      statearr_20185_20207[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_20179 === 6) {
                      var state_20178__$1 = state_20178;
                      var statearr_20186_20208 = state_20178__$1;
                      statearr_20186_20208[2] = null;
                      statearr_20186_20208[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20179 === 3) {
                        var inst_20175 = state_20178[2];
                        var inst_20176 = cljs.core.async.close_BANG_.call(null, out);
                        var state_20178__$1 = function() {
                          var statearr_20187 = state_20178;
                          statearr_20187[9] = inst_20175;
                          return statearr_20187;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20178__$1, inst_20176);
                      } else {
                        if (state_val_20179 === 2) {
                          var state_20178__$1 = state_20178;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20178__$1, 4, ch);
                        } else {
                          if (state_val_20179 === 11) {
                            var inst_20158 = state_20178[8];
                            var inst_20167 = state_20178[2];
                            var inst_20155 = inst_20158;
                            var state_20178__$1 = function() {
                              var statearr_20188 = state_20178;
                              statearr_20188[7] = inst_20155;
                              statearr_20188[10] = inst_20167;
                              return statearr_20188;
                            }();
                            var statearr_20189_20209 = state_20178__$1;
                            statearr_20189_20209[2] = null;
                            statearr_20189_20209[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_20179 === 9) {
                              var inst_20158 = state_20178[8];
                              var state_20178__$1 = state_20178;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20178__$1, 11, out, inst_20158);
                            } else {
                              if (state_val_20179 === 5) {
                                var inst_20158 = state_20178[8];
                                var inst_20155 = state_20178[7];
                                var inst_20162 = cljs.core._EQ_.call(null, inst_20158, inst_20155);
                                var state_20178__$1 = state_20178;
                                if (inst_20162) {
                                  var statearr_20191_20210 = state_20178__$1;
                                  statearr_20191_20210[1] = 8;
                                } else {
                                  var statearr_20192_20211 = state_20178__$1;
                                  statearr_20192_20211[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_20179 === 10) {
                                  var inst_20170 = state_20178[2];
                                  var state_20178__$1 = state_20178;
                                  var statearr_20193_20212 = state_20178__$1;
                                  statearr_20193_20212[2] = inst_20170;
                                  statearr_20193_20212[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_20179 === 8) {
                                    var inst_20155 = state_20178[7];
                                    var tmp20190 = inst_20155;
                                    var inst_20155__$1 = tmp20190;
                                    var state_20178__$1 = function() {
                                      var statearr_20194 = state_20178;
                                      statearr_20194[7] = inst_20155__$1;
                                      return statearr_20194;
                                    }();
                                    var statearr_20195_20213 = state_20178__$1;
                                    statearr_20195_20213[2] = null;
                                    statearr_20195_20213[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6560__auto___20203, out);
          return function(switch__6504__auto__, c__6560__auto___20203, out) {
            return function() {
              var state_machine__6505__auto__ = null;
              var state_machine__6505__auto____0 = function() {
                var statearr_20199 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_20199[0] = state_machine__6505__auto__;
                statearr_20199[1] = 1;
                return statearr_20199;
              };
              var state_machine__6505__auto____1 = function(state_20178) {
                while (true) {
                  var ret_value__6506__auto__ = function() {
                    try {
                      while (true) {
                        var result__6507__auto__ = switch__6504__auto__.call(null, state_20178);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6507__auto__;
                        }
                        break;
                      }
                    } catch (e20200) {
                      if (e20200 instanceof Object) {
                        var ex__6508__auto__ = e20200;
                        var statearr_20201_20214 = state_20178;
                        statearr_20201_20214[5] = ex__6508__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20178);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e20200;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__20215 = state_20178;
                    state_20178 = G__20215;
                    continue;
                  } else {
                    return ret_value__6506__auto__;
                  }
                  break;
                }
              };
              state_machine__6505__auto__ = function(state_20178) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6505__auto____0.call(this);
                  case 1:
                    return state_machine__6505__auto____1.call(this, state_20178);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
              return state_machine__6505__auto__;
            }();
          }(switch__6504__auto__, c__6560__auto___20203, out);
        }();
        var state__6562__auto__ = function() {
          var statearr_20202 = f__6561__auto__.call(null);
          statearr_20202[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___20203;
          return statearr_20202;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
      };
    }(c__6560__auto___20203, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6560__auto___20350 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___20350, out) {
      return function() {
        var f__6561__auto__ = function() {
          var switch__6504__auto__ = function(c__6560__auto___20350, out) {
            return function(state_20320) {
              var state_val_20321 = state_20320[1];
              if (state_val_20321 === 7) {
                var inst_20316 = state_20320[2];
                var state_20320__$1 = state_20320;
                var statearr_20322_20351 = state_20320__$1;
                statearr_20322_20351[2] = inst_20316;
                statearr_20322_20351[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_20321 === 1) {
                  var inst_20283 = new Array(n);
                  var inst_20284 = inst_20283;
                  var inst_20285 = 0;
                  var state_20320__$1 = function() {
                    var statearr_20323 = state_20320;
                    statearr_20323[7] = inst_20285;
                    statearr_20323[8] = inst_20284;
                    return statearr_20323;
                  }();
                  var statearr_20324_20352 = state_20320__$1;
                  statearr_20324_20352[2] = null;
                  statearr_20324_20352[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_20321 === 4) {
                    var inst_20288 = state_20320[9];
                    var inst_20288__$1 = state_20320[2];
                    var inst_20289 = inst_20288__$1 == null;
                    var inst_20290 = cljs.core.not.call(null, inst_20289);
                    var state_20320__$1 = function() {
                      var statearr_20325 = state_20320;
                      statearr_20325[9] = inst_20288__$1;
                      return statearr_20325;
                    }();
                    if (inst_20290) {
                      var statearr_20326_20353 = state_20320__$1;
                      statearr_20326_20353[1] = 5;
                    } else {
                      var statearr_20327_20354 = state_20320__$1;
                      statearr_20327_20354[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_20321 === 15) {
                      var inst_20310 = state_20320[2];
                      var state_20320__$1 = state_20320;
                      var statearr_20328_20355 = state_20320__$1;
                      statearr_20328_20355[2] = inst_20310;
                      statearr_20328_20355[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20321 === 13) {
                        var state_20320__$1 = state_20320;
                        var statearr_20329_20356 = state_20320__$1;
                        statearr_20329_20356[2] = null;
                        statearr_20329_20356[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_20321 === 6) {
                          var inst_20285 = state_20320[7];
                          var inst_20306 = inst_20285 > 0;
                          var state_20320__$1 = state_20320;
                          if (cljs.core.truth_(inst_20306)) {
                            var statearr_20330_20357 = state_20320__$1;
                            statearr_20330_20357[1] = 12;
                          } else {
                            var statearr_20331_20358 = state_20320__$1;
                            statearr_20331_20358[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_20321 === 3) {
                            var inst_20318 = state_20320[2];
                            var state_20320__$1 = state_20320;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20320__$1, inst_20318);
                          } else {
                            if (state_val_20321 === 12) {
                              var inst_20284 = state_20320[8];
                              var inst_20308 = cljs.core.vec.call(null, inst_20284);
                              var state_20320__$1 = state_20320;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20320__$1, 15, out, inst_20308);
                            } else {
                              if (state_val_20321 === 2) {
                                var state_20320__$1 = state_20320;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20320__$1, 4, ch);
                              } else {
                                if (state_val_20321 === 11) {
                                  var inst_20300 = state_20320[2];
                                  var inst_20301 = new Array(n);
                                  var inst_20284 = inst_20301;
                                  var inst_20285 = 0;
                                  var state_20320__$1 = function() {
                                    var statearr_20332 = state_20320;
                                    statearr_20332[7] = inst_20285;
                                    statearr_20332[8] = inst_20284;
                                    statearr_20332[10] = inst_20300;
                                    return statearr_20332;
                                  }();
                                  var statearr_20333_20359 = state_20320__$1;
                                  statearr_20333_20359[2] = null;
                                  statearr_20333_20359[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_20321 === 9) {
                                    var inst_20284 = state_20320[8];
                                    var inst_20298 = cljs.core.vec.call(null, inst_20284);
                                    var state_20320__$1 = state_20320;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20320__$1, 11, out, inst_20298);
                                  } else {
                                    if (state_val_20321 === 5) {
                                      var inst_20285 = state_20320[7];
                                      var inst_20284 = state_20320[8];
                                      var inst_20288 = state_20320[9];
                                      var inst_20293 = state_20320[11];
                                      var inst_20292 = inst_20284[inst_20285] = inst_20288;
                                      var inst_20293__$1 = inst_20285 + 1;
                                      var inst_20294 = inst_20293__$1 < n;
                                      var state_20320__$1 = function() {
                                        var statearr_20334 = state_20320;
                                        statearr_20334[12] = inst_20292;
                                        statearr_20334[11] = inst_20293__$1;
                                        return statearr_20334;
                                      }();
                                      if (cljs.core.truth_(inst_20294)) {
                                        var statearr_20335_20360 = state_20320__$1;
                                        statearr_20335_20360[1] = 8;
                                      } else {
                                        var statearr_20336_20361 = state_20320__$1;
                                        statearr_20336_20361[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_20321 === 14) {
                                        var inst_20313 = state_20320[2];
                                        var inst_20314 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_20320__$1 = function() {
                                          var statearr_20338 = state_20320;
                                          statearr_20338[13] = inst_20313;
                                          return statearr_20338;
                                        }();
                                        var statearr_20339_20362 = state_20320__$1;
                                        statearr_20339_20362[2] = inst_20314;
                                        statearr_20339_20362[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_20321 === 10) {
                                          var inst_20304 = state_20320[2];
                                          var state_20320__$1 = state_20320;
                                          var statearr_20340_20363 = state_20320__$1;
                                          statearr_20340_20363[2] = inst_20304;
                                          statearr_20340_20363[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_20321 === 8) {
                                            var inst_20284 = state_20320[8];
                                            var inst_20293 = state_20320[11];
                                            var tmp20337 = inst_20284;
                                            var inst_20284__$1 = tmp20337;
                                            var inst_20285 = inst_20293;
                                            var state_20320__$1 = function() {
                                              var statearr_20341 = state_20320;
                                              statearr_20341[7] = inst_20285;
                                              statearr_20341[8] = inst_20284__$1;
                                              return statearr_20341;
                                            }();
                                            var statearr_20342_20364 = state_20320__$1;
                                            statearr_20342_20364[2] = null;
                                            statearr_20342_20364[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6560__auto___20350, out);
          return function(switch__6504__auto__, c__6560__auto___20350, out) {
            return function() {
              var state_machine__6505__auto__ = null;
              var state_machine__6505__auto____0 = function() {
                var statearr_20346 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_20346[0] = state_machine__6505__auto__;
                statearr_20346[1] = 1;
                return statearr_20346;
              };
              var state_machine__6505__auto____1 = function(state_20320) {
                while (true) {
                  var ret_value__6506__auto__ = function() {
                    try {
                      while (true) {
                        var result__6507__auto__ = switch__6504__auto__.call(null, state_20320);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6507__auto__;
                        }
                        break;
                      }
                    } catch (e20347) {
                      if (e20347 instanceof Object) {
                        var ex__6508__auto__ = e20347;
                        var statearr_20348_20365 = state_20320;
                        statearr_20348_20365[5] = ex__6508__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20320);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e20347;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__20366 = state_20320;
                    state_20320 = G__20366;
                    continue;
                  } else {
                    return ret_value__6506__auto__;
                  }
                  break;
                }
              };
              state_machine__6505__auto__ = function(state_20320) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6505__auto____0.call(this);
                  case 1:
                    return state_machine__6505__auto____1.call(this, state_20320);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
              return state_machine__6505__auto__;
            }();
          }(switch__6504__auto__, c__6560__auto___20350, out);
        }();
        var state__6562__auto__ = function() {
          var statearr_20349 = f__6561__auto__.call(null);
          statearr_20349[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___20350;
          return statearr_20349;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
      };
    }(c__6560__auto___20350, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6560__auto___20509 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6560__auto___20509, out) {
      return function() {
        var f__6561__auto__ = function() {
          var switch__6504__auto__ = function(c__6560__auto___20509, out) {
            return function(state_20479) {
              var state_val_20480 = state_20479[1];
              if (state_val_20480 === 7) {
                var inst_20475 = state_20479[2];
                var state_20479__$1 = state_20479;
                var statearr_20481_20510 = state_20479__$1;
                statearr_20481_20510[2] = inst_20475;
                statearr_20481_20510[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_20480 === 1) {
                  var inst_20438 = [];
                  var inst_20439 = inst_20438;
                  var inst_20440 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                  var state_20479__$1 = function() {
                    var statearr_20482 = state_20479;
                    statearr_20482[7] = inst_20440;
                    statearr_20482[8] = inst_20439;
                    return statearr_20482;
                  }();
                  var statearr_20483_20511 = state_20479__$1;
                  statearr_20483_20511[2] = null;
                  statearr_20483_20511[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_20480 === 4) {
                    var inst_20443 = state_20479[9];
                    var inst_20443__$1 = state_20479[2];
                    var inst_20444 = inst_20443__$1 == null;
                    var inst_20445 = cljs.core.not.call(null, inst_20444);
                    var state_20479__$1 = function() {
                      var statearr_20484 = state_20479;
                      statearr_20484[9] = inst_20443__$1;
                      return statearr_20484;
                    }();
                    if (inst_20445) {
                      var statearr_20485_20512 = state_20479__$1;
                      statearr_20485_20512[1] = 5;
                    } else {
                      var statearr_20486_20513 = state_20479__$1;
                      statearr_20486_20513[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_20480 === 15) {
                      var inst_20469 = state_20479[2];
                      var state_20479__$1 = state_20479;
                      var statearr_20487_20514 = state_20479__$1;
                      statearr_20487_20514[2] = inst_20469;
                      statearr_20487_20514[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20480 === 13) {
                        var state_20479__$1 = state_20479;
                        var statearr_20488_20515 = state_20479__$1;
                        statearr_20488_20515[2] = null;
                        statearr_20488_20515[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_20480 === 6) {
                          var inst_20439 = state_20479[8];
                          var inst_20464 = inst_20439.length;
                          var inst_20465 = inst_20464 > 0;
                          var state_20479__$1 = state_20479;
                          if (cljs.core.truth_(inst_20465)) {
                            var statearr_20489_20516 = state_20479__$1;
                            statearr_20489_20516[1] = 12;
                          } else {
                            var statearr_20490_20517 = state_20479__$1;
                            statearr_20490_20517[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_20480 === 3) {
                            var inst_20477 = state_20479[2];
                            var state_20479__$1 = state_20479;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20479__$1, inst_20477);
                          } else {
                            if (state_val_20480 === 12) {
                              var inst_20439 = state_20479[8];
                              var inst_20467 = cljs.core.vec.call(null, inst_20439);
                              var state_20479__$1 = state_20479;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20479__$1, 15, out, inst_20467);
                            } else {
                              if (state_val_20480 === 2) {
                                var state_20479__$1 = state_20479;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20479__$1, 4, ch);
                              } else {
                                if (state_val_20480 === 11) {
                                  var inst_20447 = state_20479[10];
                                  var inst_20443 = state_20479[9];
                                  var inst_20457 = state_20479[2];
                                  var inst_20458 = [];
                                  var inst_20459 = inst_20458.push(inst_20443);
                                  var inst_20439 = inst_20458;
                                  var inst_20440 = inst_20447;
                                  var state_20479__$1 = function() {
                                    var statearr_20491 = state_20479;
                                    statearr_20491[11] = inst_20459;
                                    statearr_20491[7] = inst_20440;
                                    statearr_20491[8] = inst_20439;
                                    statearr_20491[12] = inst_20457;
                                    return statearr_20491;
                                  }();
                                  var statearr_20492_20518 = state_20479__$1;
                                  statearr_20492_20518[2] = null;
                                  statearr_20492_20518[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_20480 === 9) {
                                    var inst_20439 = state_20479[8];
                                    var inst_20455 = cljs.core.vec.call(null, inst_20439);
                                    var state_20479__$1 = state_20479;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20479__$1, 11, out, inst_20455);
                                  } else {
                                    if (state_val_20480 === 5) {
                                      var inst_20447 = state_20479[10];
                                      var inst_20443 = state_20479[9];
                                      var inst_20440 = state_20479[7];
                                      var inst_20447__$1 = f.call(null, inst_20443);
                                      var inst_20448 = cljs.core._EQ_.call(null, inst_20447__$1, inst_20440);
                                      var inst_20449 = cljs.core.keyword_identical_QMARK_.call(null, inst_20440, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                      var inst_20450 = inst_20448 || inst_20449;
                                      var state_20479__$1 = function() {
                                        var statearr_20493 = state_20479;
                                        statearr_20493[10] = inst_20447__$1;
                                        return statearr_20493;
                                      }();
                                      if (cljs.core.truth_(inst_20450)) {
                                        var statearr_20494_20519 = state_20479__$1;
                                        statearr_20494_20519[1] = 8;
                                      } else {
                                        var statearr_20495_20520 = state_20479__$1;
                                        statearr_20495_20520[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_20480 === 14) {
                                        var inst_20472 = state_20479[2];
                                        var inst_20473 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_20479__$1 = function() {
                                          var statearr_20497 = state_20479;
                                          statearr_20497[13] = inst_20472;
                                          return statearr_20497;
                                        }();
                                        var statearr_20498_20521 = state_20479__$1;
                                        statearr_20498_20521[2] = inst_20473;
                                        statearr_20498_20521[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_20480 === 10) {
                                          var inst_20462 = state_20479[2];
                                          var state_20479__$1 = state_20479;
                                          var statearr_20499_20522 = state_20479__$1;
                                          statearr_20499_20522[2] = inst_20462;
                                          statearr_20499_20522[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_20480 === 8) {
                                            var inst_20447 = state_20479[10];
                                            var inst_20443 = state_20479[9];
                                            var inst_20439 = state_20479[8];
                                            var inst_20452 = inst_20439.push(inst_20443);
                                            var tmp20496 = inst_20439;
                                            var inst_20439__$1 = tmp20496;
                                            var inst_20440 = inst_20447;
                                            var state_20479__$1 = function() {
                                              var statearr_20500 = state_20479;
                                              statearr_20500[7] = inst_20440;
                                              statearr_20500[8] = inst_20439__$1;
                                              statearr_20500[14] = inst_20452;
                                              return statearr_20500;
                                            }();
                                            var statearr_20501_20523 = state_20479__$1;
                                            statearr_20501_20523[2] = null;
                                            statearr_20501_20523[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6560__auto___20509, out);
          return function(switch__6504__auto__, c__6560__auto___20509, out) {
            return function() {
              var state_machine__6505__auto__ = null;
              var state_machine__6505__auto____0 = function() {
                var statearr_20505 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_20505[0] = state_machine__6505__auto__;
                statearr_20505[1] = 1;
                return statearr_20505;
              };
              var state_machine__6505__auto____1 = function(state_20479) {
                while (true) {
                  var ret_value__6506__auto__ = function() {
                    try {
                      while (true) {
                        var result__6507__auto__ = switch__6504__auto__.call(null, state_20479);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6507__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6507__auto__;
                        }
                        break;
                      }
                    } catch (e20506) {
                      if (e20506 instanceof Object) {
                        var ex__6508__auto__ = e20506;
                        var statearr_20507_20524 = state_20479;
                        statearr_20507_20524[5] = ex__6508__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20479);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e20506;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6506__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__20525 = state_20479;
                    state_20479 = G__20525;
                    continue;
                  } else {
                    return ret_value__6506__auto__;
                  }
                  break;
                }
              };
              state_machine__6505__auto__ = function(state_20479) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6505__auto____0.call(this);
                  case 1:
                    return state_machine__6505__auto____1.call(this, state_20479);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6505__auto____0;
              state_machine__6505__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6505__auto____1;
              return state_machine__6505__auto__;
            }();
          }(switch__6504__auto__, c__6560__auto___20509, out);
        }();
        var state__6562__auto__ = function() {
          var statearr_20508 = f__6561__auto__.call(null);
          statearr_20508[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6560__auto___20509;
          return statearr_20508;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6562__auto__);
      };
    }(c__6560__auto___20509, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function walk(inner, outer, form) {
  if (cljs.core.seq_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.coll_QMARK_.call(null, form)) {
      return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
    } else {
      return outer.call(null, form);
    }
  }
};
clojure.walk.postwalk = function postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, postwalk, f), f, form);
};
clojure.walk.prewalk = function prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function keywordize_keys(m) {
  var f = function(p__20762) {
    var vec__20763 = p__20762;
    var k = cljs.core.nth.call(null, vec__20763, 0, null);
    var v = cljs.core.nth.call(null, vec__20763, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.stringify_keys = function stringify_keys(m) {
  var f = function(p__20766) {
    var vec__20767 = p__20766;
    var k = cljs.core.nth.call(null, vec__20767, 0, null);
    var v = cljs.core.nth.call(null, vec__20767, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.prewalk_replace = function prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("sablono.core");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("sablono.interpreter");
goog.require("sablono.util");
goog.require("clojure.walk");
goog.require("clojure.string");
sablono.core.wrap_attrs = function wrap_attrs(func) {
  return function() {
    var G__20653__delegate = function(args) {
      if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, args))) {
        var vec__20652 = cljs.core.apply.call(null, func, cljs.core.rest.call(null, args));
        var tag = cljs.core.nth.call(null, vec__20652, 0, null);
        var body = cljs.core.nthnext.call(null, vec__20652, 1);
        if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, body))) {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.merge.call(null, cljs.core.first.call(null, body), cljs.core.first.call(null, args)), cljs.core.rest.call(null, body));
        } else {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.first.call(null, args), body);
        }
      } else {
        return cljs.core.apply.call(null, func, args);
      }
    };
    var G__20653 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__20654__i = 0, G__20654__a = new Array(arguments.length - 0);
        while (G__20654__i < G__20654__a.length) {
          G__20654__a[G__20654__i] = arguments[G__20654__i + 0];
          ++G__20654__i;
        }
        args = new cljs.core.IndexedSeq(G__20654__a, 0);
      }
      return G__20653__delegate.call(this, args);
    };
    G__20653.cljs$lang$maxFixedArity = 0;
    G__20653.cljs$lang$applyTo = function(arglist__20655) {
      var args = cljs.core.seq(arglist__20655);
      return G__20653__delegate(args);
    };
    G__20653.cljs$core$IFn$_invoke$arity$variadic = G__20653__delegate;
    return G__20653;
  }();
};
sablono.core.update_arglists = function update_arglists(arglists) {
  var iter__4524__auto__ = function iter__20660(s__20661) {
    return new cljs.core.LazySeq(null, function() {
      var s__20661__$1 = s__20661;
      while (true) {
        var temp__4126__auto__ = cljs.core.seq.call(null, s__20661__$1);
        if (temp__4126__auto__) {
          var s__20661__$2 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__20661__$2)) {
            var c__4522__auto__ = cljs.core.chunk_first.call(null, s__20661__$2);
            var size__4523__auto__ = cljs.core.count.call(null, c__4522__auto__);
            var b__20663 = cljs.core.chunk_buffer.call(null, size__4523__auto__);
            if (function() {
              var i__20662 = 0;
              while (true) {
                if (i__20662 < size__4523__auto__) {
                  var args = cljs.core._nth.call(null, c__4522__auto__, i__20662);
                  cljs.core.chunk_append.call(null, b__20663, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", 116307443, null), args)));
                  var G__20664 = i__20662 + 1;
                  i__20662 = G__20664;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20663), iter__20660.call(null, cljs.core.chunk_rest.call(null, s__20661__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20663), null);
            }
          } else {
            var args = cljs.core.first.call(null, s__20661__$2);
            return cljs.core.cons.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", 116307443, null), args)), iter__20660.call(null, cljs.core.rest.call(null, s__20661__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__4524__auto__.call(null, arglists);
};
sablono.core.render = function render(component) {
  return React.renderComponentToString(component);
};
sablono.core.include_css = function() {
  var include_css__delegate = function(styles) {
    var iter__4524__auto__ = function iter__20669(s__20670) {
      return new cljs.core.LazySeq(null, function() {
        var s__20670__$1 = s__20670;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__20670__$1);
          if (temp__4126__auto__) {
            var s__20670__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__20670__$2)) {
              var c__4522__auto__ = cljs.core.chunk_first.call(null, s__20670__$2);
              var size__4523__auto__ = cljs.core.count.call(null, c__4522__auto__);
              var b__20672 = cljs.core.chunk_buffer.call(null, size__4523__auto__);
              if (function() {
                var i__20671 = 0;
                while (true) {
                  if (i__20671 < size__4523__auto__) {
                    var style = cljs.core._nth.call(null, c__4522__auto__, i__20671);
                    cljs.core.chunk_append.call(null, b__20672, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", -1769163468), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text/css", new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1378823488), "stylesheet"], null)], null));
                    var G__20673 = i__20671 + 1;
                    i__20671 = G__20673;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20672), iter__20669.call(null, cljs.core.chunk_rest.call(null, s__20670__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20672), null);
              }
            } else {
              var style = cljs.core.first.call(null, s__20670__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", -1769163468), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text/css", new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1378823488), "stylesheet"], null)], null), iter__20669.call(null, 
              cljs.core.rest.call(null, s__20670__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4524__auto__.call(null, styles);
  };
  var include_css = function(var_args) {
    var styles = null;
    if (arguments.length > 0) {
      var G__20674__i = 0, G__20674__a = new Array(arguments.length - 0);
      while (G__20674__i < G__20674__a.length) {
        G__20674__a[G__20674__i] = arguments[G__20674__i + 0];
        ++G__20674__i;
      }
      styles = new cljs.core.IndexedSeq(G__20674__a, 0);
    }
    return include_css__delegate.call(this, styles);
  };
  include_css.cljs$lang$maxFixedArity = 0;
  include_css.cljs$lang$applyTo = function(arglist__20675) {
    var styles = cljs.core.seq(arglist__20675);
    return include_css__delegate(styles);
  };
  include_css.cljs$core$IFn$_invoke$arity$variadic = include_css__delegate;
  return include_css;
}();
sablono.core.include_js = function include_js(src) {
  return goog.dom.appendChild(goog.dom.getDocument().body, goog.dom.createDom("script", {"src":src}));
};
sablono.core.include_react = function include_react() {
  return sablono.core.include_js.call(null, "http://fb.me/react-0.9.0.js");
};
sablono.core.link_to20676 = function() {
  var link_to20676__delegate = function(url, content) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, url)], null), content], null);
  };
  var link_to20676 = function(url, var_args) {
    var content = null;
    if (arguments.length > 1) {
      var G__20677__i = 0, G__20677__a = new Array(arguments.length - 1);
      while (G__20677__i < G__20677__a.length) {
        G__20677__a[G__20677__i] = arguments[G__20677__i + 1];
        ++G__20677__i;
      }
      content = new cljs.core.IndexedSeq(G__20677__a, 0);
    }
    return link_to20676__delegate.call(this, url, content);
  };
  link_to20676.cljs$lang$maxFixedArity = 1;
  link_to20676.cljs$lang$applyTo = function(arglist__20678) {
    var url = cljs.core.first(arglist__20678);
    var content = cljs.core.rest(arglist__20678);
    return link_to20676__delegate(url, content);
  };
  link_to20676.cljs$core$IFn$_invoke$arity$variadic = link_to20676__delegate;
  return link_to20676;
}();
sablono.core.link_to = sablono.core.wrap_attrs.call(null, sablono.core.link_to20676);
sablono.core.mail_to20679 = function() {
  var mail_to20679__delegate = function(e_mail, p__20680) {
    var vec__20682 = p__20680;
    var content = cljs.core.nth.call(null, vec__20682, 0, null);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), [cljs.core.str("mailto:"), cljs.core.str(e_mail)].join("")], null), function() {
      var or__3768__auto__ = content;
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        return e_mail;
      }
    }()], null);
  };
  var mail_to20679 = function(e_mail, var_args) {
    var p__20680 = null;
    if (arguments.length > 1) {
      var G__20683__i = 0, G__20683__a = new Array(arguments.length - 1);
      while (G__20683__i < G__20683__a.length) {
        G__20683__a[G__20683__i] = arguments[G__20683__i + 1];
        ++G__20683__i;
      }
      p__20680 = new cljs.core.IndexedSeq(G__20683__a, 0);
    }
    return mail_to20679__delegate.call(this, e_mail, p__20680);
  };
  mail_to20679.cljs$lang$maxFixedArity = 1;
  mail_to20679.cljs$lang$applyTo = function(arglist__20684) {
    var e_mail = cljs.core.first(arglist__20684);
    var p__20680 = cljs.core.rest(arglist__20684);
    return mail_to20679__delegate(e_mail, p__20680);
  };
  mail_to20679.cljs$core$IFn$_invoke$arity$variadic = mail_to20679__delegate;
  return mail_to20679;
}();
sablono.core.mail_to = sablono.core.wrap_attrs.call(null, sablono.core.mail_to20679);
sablono.core.unordered_list20685 = function unordered_list20685(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", -1349521403), function() {
    var iter__4524__auto__ = function iter__20690(s__20691) {
      return new cljs.core.LazySeq(null, function() {
        var s__20691__$1 = s__20691;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__20691__$1);
          if (temp__4126__auto__) {
            var s__20691__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__20691__$2)) {
              var c__4522__auto__ = cljs.core.chunk_first.call(null, s__20691__$2);
              var size__4523__auto__ = cljs.core.count.call(null, c__4522__auto__);
              var b__20693 = cljs.core.chunk_buffer.call(null, size__4523__auto__);
              if (function() {
                var i__20692 = 0;
                while (true) {
                  if (i__20692 < size__4523__auto__) {
                    var x = cljs.core._nth.call(null, c__4522__auto__, i__20692);
                    cljs.core.chunk_append.call(null, b__20693, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null));
                    var G__20694 = i__20692 + 1;
                    i__20692 = G__20694;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20693), iter__20690.call(null, cljs.core.chunk_rest.call(null, s__20691__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20693), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__20691__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null), iter__20690.call(null, cljs.core.rest.call(null, s__20691__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4524__auto__.call(null, coll);
  }()], null);
};
sablono.core.unordered_list = sablono.core.wrap_attrs.call(null, sablono.core.unordered_list20685);
sablono.core.ordered_list20695 = function ordered_list20695(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ol", "ol", 932524051), function() {
    var iter__4524__auto__ = function iter__20700(s__20701) {
      return new cljs.core.LazySeq(null, function() {
        var s__20701__$1 = s__20701;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__20701__$1);
          if (temp__4126__auto__) {
            var s__20701__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__20701__$2)) {
              var c__4522__auto__ = cljs.core.chunk_first.call(null, s__20701__$2);
              var size__4523__auto__ = cljs.core.count.call(null, c__4522__auto__);
              var b__20703 = cljs.core.chunk_buffer.call(null, size__4523__auto__);
              if (function() {
                var i__20702 = 0;
                while (true) {
                  if (i__20702 < size__4523__auto__) {
                    var x = cljs.core._nth.call(null, c__4522__auto__, i__20702);
                    cljs.core.chunk_append.call(null, b__20703, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null));
                    var G__20704 = i__20702 + 1;
                    i__20702 = G__20704;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20703), iter__20700.call(null, cljs.core.chunk_rest.call(null, s__20701__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20703), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__20701__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null), iter__20700.call(null, cljs.core.rest.call(null, s__20701__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4524__auto__.call(null, coll);
  }()], null);
};
sablono.core.ordered_list = sablono.core.wrap_attrs.call(null, sablono.core.ordered_list20695);
sablono.core.image20705 = function() {
  var image20705 = null;
  var image20705__1 = function(src) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "src", "src", -1651076051), sablono.util.as_str.call(null, src)], null)], null);
  };
  var image20705__2 = function(src, alt) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "src", "src", -1651076051), sablono.util.as_str.call(null, src), new cljs.core.Keyword(null, "alt", "alt", -3214426), alt], null)], null);
  };
  image20705 = function(src, alt) {
    switch(arguments.length) {
      case 1:
        return image20705__1.call(this, src);
      case 2:
        return image20705__2.call(this, src, alt);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  image20705.cljs$core$IFn$_invoke$arity$1 = image20705__1;
  image20705.cljs$core$IFn$_invoke$arity$2 = image20705__2;
  return image20705;
}();
sablono.core.image = sablono.core.wrap_attrs.call(null, sablono.core.image20705);
sablono.core._STAR_group_STAR_ = cljs.core.PersistentVector.EMPTY;
sablono.core.make_name = function make_name(name) {
  return cljs.core.reduce.call(null, function(p1__20706_SHARP_, p2__20707_SHARP_) {
    return[cljs.core.str(p1__20706_SHARP_), cljs.core.str("["), cljs.core.str(p2__20707_SHARP_), cljs.core.str("]")].join("");
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.make_id = function make_id(name) {
  return cljs.core.reduce.call(null, function(p1__20708_SHARP_, p2__20709_SHARP_) {
    return[cljs.core.str(p1__20708_SHARP_), cljs.core.str("-"), cljs.core.str(p2__20709_SHARP_)].join("");
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.input_field_STAR_ = function input_field_STAR_(type, name, value) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), type, new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 305978217), 
  value], null)], null);
};
sablono.core.color_field20710 = function() {
  var color_field20710 = null;
  var color_field20710__1 = function(name__9900__auto__) {
    return color_field20710.call(null, name__9900__auto__, null);
  };
  var color_field20710__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "color", "color", -1642760596, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  color_field20710 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return color_field20710__1.call(this, name__9900__auto__);
      case 2:
        return color_field20710__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  color_field20710.cljs$core$IFn$_invoke$arity$1 = color_field20710__1;
  color_field20710.cljs$core$IFn$_invoke$arity$2 = color_field20710__2;
  return color_field20710;
}();
sablono.core.color_field = sablono.core.wrap_attrs.call(null, sablono.core.color_field20710);
sablono.core.date_field20711 = function() {
  var date_field20711 = null;
  var date_field20711__1 = function(name__9900__auto__) {
    return date_field20711.call(null, name__9900__auto__, null);
  };
  var date_field20711__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "date", "date", 177097065, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  date_field20711 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return date_field20711__1.call(this, name__9900__auto__);
      case 2:
        return date_field20711__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  date_field20711.cljs$core$IFn$_invoke$arity$1 = date_field20711__1;
  date_field20711.cljs$core$IFn$_invoke$arity$2 = date_field20711__2;
  return date_field20711;
}();
sablono.core.date_field = sablono.core.wrap_attrs.call(null, sablono.core.date_field20711);
sablono.core.datetime_field20712 = function() {
  var datetime_field20712 = null;
  var datetime_field20712__1 = function(name__9900__auto__) {
    return datetime_field20712.call(null, name__9900__auto__, null);
  };
  var datetime_field20712__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "datetime", "datetime", 2135207229, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  datetime_field20712 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return datetime_field20712__1.call(this, name__9900__auto__);
      case 2:
        return datetime_field20712__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  datetime_field20712.cljs$core$IFn$_invoke$arity$1 = datetime_field20712__1;
  datetime_field20712.cljs$core$IFn$_invoke$arity$2 = datetime_field20712__2;
  return datetime_field20712;
}();
sablono.core.datetime_field = sablono.core.wrap_attrs.call(null, sablono.core.datetime_field20712);
sablono.core.datetime_local_field20713 = function() {
  var datetime_local_field20713 = null;
  var datetime_local_field20713__1 = function(name__9900__auto__) {
    return datetime_local_field20713.call(null, name__9900__auto__, null);
  };
  var datetime_local_field20713__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "datetime-local", "datetime-local", -507312697, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  datetime_local_field20713 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return datetime_local_field20713__1.call(this, name__9900__auto__);
      case 2:
        return datetime_local_field20713__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  datetime_local_field20713.cljs$core$IFn$_invoke$arity$1 = datetime_local_field20713__1;
  datetime_local_field20713.cljs$core$IFn$_invoke$arity$2 = datetime_local_field20713__2;
  return datetime_local_field20713;
}();
sablono.core.datetime_local_field = sablono.core.wrap_attrs.call(null, sablono.core.datetime_local_field20713);
sablono.core.email_field20714 = function() {
  var email_field20714 = null;
  var email_field20714__1 = function(name__9900__auto__) {
    return email_field20714.call(null, name__9900__auto__, null);
  };
  var email_field20714__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "email", "email", -1238619063, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  email_field20714 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return email_field20714__1.call(this, name__9900__auto__);
      case 2:
        return email_field20714__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  email_field20714.cljs$core$IFn$_invoke$arity$1 = email_field20714__1;
  email_field20714.cljs$core$IFn$_invoke$arity$2 = email_field20714__2;
  return email_field20714;
}();
sablono.core.email_field = sablono.core.wrap_attrs.call(null, sablono.core.email_field20714);
sablono.core.file_field20715 = function() {
  var file_field20715 = null;
  var file_field20715__1 = function(name__9900__auto__) {
    return file_field20715.call(null, name__9900__auto__, null);
  };
  var file_field20715__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "file", "file", 370885649, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  file_field20715 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return file_field20715__1.call(this, name__9900__auto__);
      case 2:
        return file_field20715__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  file_field20715.cljs$core$IFn$_invoke$arity$1 = file_field20715__1;
  file_field20715.cljs$core$IFn$_invoke$arity$2 = file_field20715__2;
  return file_field20715;
}();
sablono.core.file_field = sablono.core.wrap_attrs.call(null, sablono.core.file_field20715);
sablono.core.hidden_field20716 = function() {
  var hidden_field20716 = null;
  var hidden_field20716__1 = function(name__9900__auto__) {
    return hidden_field20716.call(null, name__9900__auto__, null);
  };
  var hidden_field20716__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "hidden", "hidden", 1328025435, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  hidden_field20716 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return hidden_field20716__1.call(this, name__9900__auto__);
      case 2:
        return hidden_field20716__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hidden_field20716.cljs$core$IFn$_invoke$arity$1 = hidden_field20716__1;
  hidden_field20716.cljs$core$IFn$_invoke$arity$2 = hidden_field20716__2;
  return hidden_field20716;
}();
sablono.core.hidden_field = sablono.core.wrap_attrs.call(null, sablono.core.hidden_field20716);
sablono.core.month_field20717 = function() {
  var month_field20717 = null;
  var month_field20717__1 = function(name__9900__auto__) {
    return month_field20717.call(null, name__9900__auto__, null);
  };
  var month_field20717__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "month", "month", -319717006, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  month_field20717 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return month_field20717__1.call(this, name__9900__auto__);
      case 2:
        return month_field20717__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  month_field20717.cljs$core$IFn$_invoke$arity$1 = month_field20717__1;
  month_field20717.cljs$core$IFn$_invoke$arity$2 = month_field20717__2;
  return month_field20717;
}();
sablono.core.month_field = sablono.core.wrap_attrs.call(null, sablono.core.month_field20717);
sablono.core.number_field20718 = function() {
  var number_field20718 = null;
  var number_field20718__1 = function(name__9900__auto__) {
    return number_field20718.call(null, name__9900__auto__, null);
  };
  var number_field20718__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "number", "number", -1084057331, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  number_field20718 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return number_field20718__1.call(this, name__9900__auto__);
      case 2:
        return number_field20718__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  number_field20718.cljs$core$IFn$_invoke$arity$1 = number_field20718__1;
  number_field20718.cljs$core$IFn$_invoke$arity$2 = number_field20718__2;
  return number_field20718;
}();
sablono.core.number_field = sablono.core.wrap_attrs.call(null, sablono.core.number_field20718);
sablono.core.password_field20719 = function() {
  var password_field20719 = null;
  var password_field20719__1 = function(name__9900__auto__) {
    return password_field20719.call(null, name__9900__auto__, null);
  };
  var password_field20719__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "password", "password", 2057553998, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  password_field20719 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return password_field20719__1.call(this, name__9900__auto__);
      case 2:
        return password_field20719__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  password_field20719.cljs$core$IFn$_invoke$arity$1 = password_field20719__1;
  password_field20719.cljs$core$IFn$_invoke$arity$2 = password_field20719__2;
  return password_field20719;
}();
sablono.core.password_field = sablono.core.wrap_attrs.call(null, sablono.core.password_field20719);
sablono.core.range_field20720 = function() {
  var range_field20720 = null;
  var range_field20720__1 = function(name__9900__auto__) {
    return range_field20720.call(null, name__9900__auto__, null);
  };
  var range_field20720__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "range", "range", -1014743483, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  range_field20720 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return range_field20720__1.call(this, name__9900__auto__);
      case 2:
        return range_field20720__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range_field20720.cljs$core$IFn$_invoke$arity$1 = range_field20720__1;
  range_field20720.cljs$core$IFn$_invoke$arity$2 = range_field20720__2;
  return range_field20720;
}();
sablono.core.range_field = sablono.core.wrap_attrs.call(null, sablono.core.range_field20720);
sablono.core.search_field20721 = function() {
  var search_field20721 = null;
  var search_field20721__1 = function(name__9900__auto__) {
    return search_field20721.call(null, name__9900__auto__, null);
  };
  var search_field20721__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "search", "search", -1089495947, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  search_field20721 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return search_field20721__1.call(this, name__9900__auto__);
      case 2:
        return search_field20721__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  search_field20721.cljs$core$IFn$_invoke$arity$1 = search_field20721__1;
  search_field20721.cljs$core$IFn$_invoke$arity$2 = search_field20721__2;
  return search_field20721;
}();
sablono.core.search_field = sablono.core.wrap_attrs.call(null, sablono.core.search_field20721);
sablono.core.tel_field20722 = function() {
  var tel_field20722 = null;
  var tel_field20722__1 = function(name__9900__auto__) {
    return tel_field20722.call(null, name__9900__auto__, null);
  };
  var tel_field20722__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "tel", "tel", 1864669686, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  tel_field20722 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return tel_field20722__1.call(this, name__9900__auto__);
      case 2:
        return tel_field20722__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tel_field20722.cljs$core$IFn$_invoke$arity$1 = tel_field20722__1;
  tel_field20722.cljs$core$IFn$_invoke$arity$2 = tel_field20722__2;
  return tel_field20722;
}();
sablono.core.tel_field = sablono.core.wrap_attrs.call(null, sablono.core.tel_field20722);
sablono.core.text_field20723 = function() {
  var text_field20723 = null;
  var text_field20723__1 = function(name__9900__auto__) {
    return text_field20723.call(null, name__9900__auto__, null);
  };
  var text_field20723__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "text", "text", -150030170, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  text_field20723 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return text_field20723__1.call(this, name__9900__auto__);
      case 2:
        return text_field20723__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text_field20723.cljs$core$IFn$_invoke$arity$1 = text_field20723__1;
  text_field20723.cljs$core$IFn$_invoke$arity$2 = text_field20723__2;
  return text_field20723;
}();
sablono.core.text_field = sablono.core.wrap_attrs.call(null, sablono.core.text_field20723);
sablono.core.time_field20724 = function() {
  var time_field20724 = null;
  var time_field20724__1 = function(name__9900__auto__) {
    return time_field20724.call(null, name__9900__auto__, null);
  };
  var time_field20724__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "time", "time", -1268547887, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  time_field20724 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return time_field20724__1.call(this, name__9900__auto__);
      case 2:
        return time_field20724__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  time_field20724.cljs$core$IFn$_invoke$arity$1 = time_field20724__1;
  time_field20724.cljs$core$IFn$_invoke$arity$2 = time_field20724__2;
  return time_field20724;
}();
sablono.core.time_field = sablono.core.wrap_attrs.call(null, sablono.core.time_field20724);
sablono.core.url_field20725 = function() {
  var url_field20725 = null;
  var url_field20725__1 = function(name__9900__auto__) {
    return url_field20725.call(null, name__9900__auto__, null);
  };
  var url_field20725__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "url", "url", 1916828573, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  url_field20725 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return url_field20725__1.call(this, name__9900__auto__);
      case 2:
        return url_field20725__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  url_field20725.cljs$core$IFn$_invoke$arity$1 = url_field20725__1;
  url_field20725.cljs$core$IFn$_invoke$arity$2 = url_field20725__2;
  return url_field20725;
}();
sablono.core.url_field = sablono.core.wrap_attrs.call(null, sablono.core.url_field20725);
sablono.core.week_field20726 = function() {
  var week_field20726 = null;
  var week_field20726__1 = function(name__9900__auto__) {
    return week_field20726.call(null, name__9900__auto__, null);
  };
  var week_field20726__2 = function(name__9900__auto__, value__9901__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "week", "week", 314058249, null))].join(""), name__9900__auto__, value__9901__auto__);
  };
  week_field20726 = function(name__9900__auto__, value__9901__auto__) {
    switch(arguments.length) {
      case 1:
        return week_field20726__1.call(this, name__9900__auto__);
      case 2:
        return week_field20726__2.call(this, name__9900__auto__, value__9901__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  week_field20726.cljs$core$IFn$_invoke$arity$1 = week_field20726__1;
  week_field20726.cljs$core$IFn$_invoke$arity$2 = week_field20726__2;
  return week_field20726;
}();
sablono.core.week_field = sablono.core.wrap_attrs.call(null, sablono.core.week_field20726);
sablono.core.file_upload = sablono.core.file_field;
sablono.core.check_box20727 = function() {
  var check_box20727 = null;
  var check_box20727__1 = function(name) {
    return check_box20727.call(null, name, null);
  };
  var check_box20727__2 = function(name, checked_QMARK_) {
    return check_box20727.call(null, name, checked_QMARK_, "true");
  };
  var check_box20727__3 = function(name, checked_QMARK_, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 
    305978217), value, new cljs.core.Keyword(null, "checked", "checked", -50955819), checked_QMARK_], null)], null);
  };
  check_box20727 = function(name, checked_QMARK_, value) {
    switch(arguments.length) {
      case 1:
        return check_box20727__1.call(this, name);
      case 2:
        return check_box20727__2.call(this, name, checked_QMARK_);
      case 3:
        return check_box20727__3.call(this, name, checked_QMARK_, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  check_box20727.cljs$core$IFn$_invoke$arity$1 = check_box20727__1;
  check_box20727.cljs$core$IFn$_invoke$arity$2 = check_box20727__2;
  check_box20727.cljs$core$IFn$_invoke$arity$3 = check_box20727__3;
  return check_box20727;
}();
sablono.core.check_box = sablono.core.wrap_attrs.call(null, sablono.core.check_box20727);
sablono.core.radio_button20728 = function() {
  var radio_button20728 = null;
  var radio_button20728__1 = function(group) {
    return radio_button20728.call(null, group, null);
  };
  var radio_button20728__2 = function(group, checked_QMARK_) {
    return radio_button20728.call(null, group, checked_QMARK_, "true");
  };
  var radio_button20728__3 = function(group, checked_QMARK_, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), "radio", new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, group), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, [cljs.core.str(sablono.util.as_str.call(null, group)), 
    cljs.core.str("-"), cljs.core.str(sablono.util.as_str.call(null, value))].join("")), new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "checked", "checked", -50955819), checked_QMARK_], null)], null);
  };
  radio_button20728 = function(group, checked_QMARK_, value) {
    switch(arguments.length) {
      case 1:
        return radio_button20728__1.call(this, group);
      case 2:
        return radio_button20728__2.call(this, group, checked_QMARK_);
      case 3:
        return radio_button20728__3.call(this, group, checked_QMARK_, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  radio_button20728.cljs$core$IFn$_invoke$arity$1 = radio_button20728__1;
  radio_button20728.cljs$core$IFn$_invoke$arity$2 = radio_button20728__2;
  radio_button20728.cljs$core$IFn$_invoke$arity$3 = radio_button20728__3;
  return radio_button20728;
}();
sablono.core.radio_button = sablono.core.wrap_attrs.call(null, sablono.core.radio_button20728);
sablono.core.select_options20729 = function() {
  var select_options20729 = null;
  var select_options20729__1 = function(coll) {
    return select_options20729.call(null, coll, null);
  };
  var select_options20729__2 = function(coll, selected) {
    var iter__4524__auto__ = function iter__20738(s__20739) {
      return new cljs.core.LazySeq(null, function() {
        var s__20739__$1 = s__20739;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__20739__$1);
          if (temp__4126__auto__) {
            var s__20739__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__20739__$2)) {
              var c__4522__auto__ = cljs.core.chunk_first.call(null, s__20739__$2);
              var size__4523__auto__ = cljs.core.count.call(null, c__4522__auto__);
              var b__20741 = cljs.core.chunk_buffer.call(null, size__4523__auto__);
              if (function() {
                var i__20740 = 0;
                while (true) {
                  if (i__20740 < size__4523__auto__) {
                    var x = cljs.core._nth.call(null, c__4522__auto__, i__20740);
                    cljs.core.chunk_append.call(null, b__20741, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                      var vec__20744 = x;
                      var text = cljs.core.nth.call(null, vec__20744, 0, null);
                      var val = cljs.core.nth.call(null, vec__20744, 1, null);
                      var disabled_QMARK_ = cljs.core.nth.call(null, vec__20744, 2, null);
                      var disabled_QMARK___$1 = cljs.core.boolean$.call(null, disabled_QMARK_);
                      if (cljs.core.sequential_QMARK_.call(null, val)) {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 1738282218), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "label", "label", 1718410804), text], null), select_options20729.call(null, val, selected)], null);
                      } else {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 305978217), val, new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, val, selected), new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), disabled_QMARK___$1], null), text], null);
                      }
                    }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, x, selected)], null), x], null));
                    var G__20746 = i__20740 + 1;
                    i__20740 = G__20746;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20741), iter__20738.call(null, cljs.core.chunk_rest.call(null, s__20739__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20741), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__20739__$2);
              return cljs.core.cons.call(null, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                var vec__20745 = x;
                var text = cljs.core.nth.call(null, vec__20745, 0, null);
                var val = cljs.core.nth.call(null, vec__20745, 1, null);
                var disabled_QMARK_ = cljs.core.nth.call(null, vec__20745, 2, null);
                var disabled_QMARK___$1 = cljs.core.boolean$.call(null, disabled_QMARK_);
                if (cljs.core.sequential_QMARK_.call(null, val)) {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 1738282218), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "label", "label", 1718410804), text], null), select_options20729.call(null, val, selected)], null);
                } else {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 305978217), val, new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, val, selected), new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), disabled_QMARK___$1], null), text], null);
                }
              }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, x, selected)], null), x], null), iter__20738.call(null, cljs.core.rest.call(null, s__20739__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4524__auto__.call(null, coll);
  };
  select_options20729 = function(coll, selected) {
    switch(arguments.length) {
      case 1:
        return select_options20729__1.call(this, coll);
      case 2:
        return select_options20729__2.call(this, coll, selected);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  select_options20729.cljs$core$IFn$_invoke$arity$1 = select_options20729__1;
  select_options20729.cljs$core$IFn$_invoke$arity$2 = select_options20729__2;
  return select_options20729;
}();
sablono.core.select_options = sablono.core.wrap_attrs.call(null, sablono.core.select_options20729);
sablono.core.drop_down20747 = function() {
  var drop_down20747 = null;
  var drop_down20747__2 = function(name, options) {
    return drop_down20747.call(null, name, options, null);
  };
  var drop_down20747__3 = function(name, options, selected) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 1147833503), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name)], null), sablono.core.select_options.call(null, options, selected)], null);
  };
  drop_down20747 = function(name, options, selected) {
    switch(arguments.length) {
      case 2:
        return drop_down20747__2.call(this, name, options);
      case 3:
        return drop_down20747__3.call(this, name, options, selected);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_down20747.cljs$core$IFn$_invoke$arity$2 = drop_down20747__2;
  drop_down20747.cljs$core$IFn$_invoke$arity$3 = drop_down20747__3;
  return drop_down20747;
}();
sablono.core.drop_down = sablono.core.wrap_attrs.call(null, sablono.core.drop_down20747);
sablono.core.text_area20748 = function() {
  var text_area20748 = null;
  var text_area20748__1 = function(name) {
    return text_area20748.call(null, name, null);
  };
  var text_area20748__2 = function(name, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "textarea", "textarea", -650375824), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 305978217), value], null)], null);
  };
  text_area20748 = function(name, value) {
    switch(arguments.length) {
      case 1:
        return text_area20748__1.call(this, name);
      case 2:
        return text_area20748__2.call(this, name, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text_area20748.cljs$core$IFn$_invoke$arity$1 = text_area20748__1;
  text_area20748.cljs$core$IFn$_invoke$arity$2 = text_area20748__2;
  return text_area20748;
}();
sablono.core.text_area = sablono.core.wrap_attrs.call(null, sablono.core.text_area20748);
sablono.core.label20749 = function label20749(name, text) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "htmlFor", "htmlFor", -1050291720), sablono.core.make_id.call(null, name)], null), text], null);
};
sablono.core.label = sablono.core.wrap_attrs.call(null, sablono.core.label20749);
sablono.core.submit_button20750 = function submit_button20750(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "submit", new cljs.core.Keyword(null, "value", "value", 305978217), text], null)], null);
};
sablono.core.submit_button = sablono.core.wrap_attrs.call(null, sablono.core.submit_button20750);
sablono.core.reset_button20751 = function reset_button20751(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "reset", new cljs.core.Keyword(null, "value", "value", 305978217), text], null)], null);
};
sablono.core.reset_button = sablono.core.wrap_attrs.call(null, sablono.core.reset_button20751);
sablono.core.form_to20752 = function() {
  var form_to20752__delegate = function(p__20753, body) {
    var vec__20755 = p__20753;
    var method = cljs.core.nth.call(null, vec__20755, 0, null);
    var action = cljs.core.nth.call(null, vec__20755, 1, null);
    var method_str = clojure.string.upper_case.call(null, cljs.core.name.call(null, method));
    var action_uri = sablono.util.to_uri.call(null, action);
    return cljs.core.vec.call(null, cljs.core.concat.call(null, cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "get", "get", 1683182755), null, new cljs.core.Keyword(null, "post", "post", 269697687), null], null), null), method) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.PersistentArrayMap(null, 
    2, [new cljs.core.Keyword(null, "method", "method", 55703592), method_str, new cljs.core.Keyword(null, "action", "action", -811238024), action_uri], null)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), "POST", new cljs.core.Keyword(null, "action", "action", -811238024), action_uri], null), 
    sablono.core.hidden_field.call(null, "_method", method_str)], null), body));
  };
  var form_to20752 = function(p__20753, var_args) {
    var body = null;
    if (arguments.length > 1) {
      var G__20756__i = 0, G__20756__a = new Array(arguments.length - 1);
      while (G__20756__i < G__20756__a.length) {
        G__20756__a[G__20756__i] = arguments[G__20756__i + 1];
        ++G__20756__i;
      }
      body = new cljs.core.IndexedSeq(G__20756__a, 0);
    }
    return form_to20752__delegate.call(this, p__20753, body);
  };
  form_to20752.cljs$lang$maxFixedArity = 1;
  form_to20752.cljs$lang$applyTo = function(arglist__20757) {
    var p__20753 = cljs.core.first(arglist__20757);
    var body = cljs.core.rest(arglist__20757);
    return form_to20752__delegate(p__20753, body);
  };
  form_to20752.cljs$core$IFn$_invoke$arity$variadic = form_to20752__delegate;
  return form_to20752;
}();
sablono.core.form_to = sablono.core.wrap_attrs.call(null, sablono.core.form_to20752);
goog.provide("om.core");
goog.require("cljs.core");
goog.require("goog.ui.IdGenerator");
goog.require("goog.dom");
goog.require("om.dom");
om.core._STAR_parent_STAR_ = null;
om.core._STAR_instrument_STAR_ = null;
om.core._STAR_descriptor_STAR_ = null;
om.core._STAR_state_STAR_ = null;
om.core._STAR_root_key_STAR_ = null;
om.core.IDisplayName = function() {
  var obj20862 = {};
  return obj20862;
}();
om.core.display_name = function display_name(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IDisplayName$display_name$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IDisplayName$display_name$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core.display_name[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core.display_name["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisplayName.display-name", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IInitState = function() {
  var obj20864 = {};
  return obj20864;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core.init_state[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core.init_state["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj20866 = {};
  return obj20866;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core.should_update[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core.should_update["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj20868 = {};
  return obj20868;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core.will_mount[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core.will_mount["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj20870 = {};
  return obj20870;
}();
om.core.did_mount = function did_mount(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core.did_mount[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core.did_mount["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj20872 = {};
  return obj20872;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core.will_unmount[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core.will_unmount["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj20874 = {};
  return obj20874;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core.will_update[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core.will_update["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj20876 = {};
  return obj20876;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core.did_update[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core.did_update["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IWillReceiveProps = function() {
  var obj20878 = {};
  return obj20878;
}();
om.core.will_receive_props = function will_receive_props(this$, next_props) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IWillReceiveProps$will_receive_props$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IWillReceiveProps$will_receive_props$arity$2(this$, next_props);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core.will_receive_props[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core.will_receive_props["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillReceiveProps.will-receive-props", this$);
        }
      }
    }().call(null, this$, next_props);
  }
};
om.core.IRender = function() {
  var obj20880 = {};
  return obj20880;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core.render[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core.render["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderProps = function() {
  var obj20882 = {};
  return obj20882;
}();
om.core.render_props = function render_props(this$, props, state) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IRenderProps$render_props$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IRenderProps$render_props$arity$3(this$, props, state);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core.render_props[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core.render_props["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderProps.render-props", this$);
        }
      }
    }().call(null, this$, props, state);
  }
};
om.core.IRenderState = function() {
  var obj20884 = {};
  return obj20884;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core.render_state[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core.render_state["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.ICheckState = function() {
  var obj20886 = {};
  return obj20886;
}();
om.core.IOmSwap = function() {
  var obj20888 = {};
  return obj20888;
}();
om.core._om_swap_BANG_ = function _om_swap_BANG_(this$, cursor, korks, f, tag) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5(this$, cursor, korks, f, tag);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._om_swap_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._om_swap_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmSwap.-om-swap!", this$);
        }
      }
    }().call(null, this$, cursor, korks, f, tag);
  }
};
om.core.IGetState = function() {
  var obj20890 = {};
  return obj20890;
}();
om.core._get_state = function() {
  var _get_state = null;
  var _get_state__1 = function(this$) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.om$core$IGetState$_get_state$arity$1;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$1(this$);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = om.core._get_state[goog.typeOf(x__4412__auto__)];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = om.core._get_state["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_state__2 = function(this$, ks) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.om$core$IGetState$_get_state$arity$2;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$2(this$, ks);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = om.core._get_state[goog.typeOf(x__4412__auto__)];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = om.core._get_state["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_state__1.call(this, this$);
      case 2:
        return _get_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_state.cljs$core$IFn$_invoke$arity$1 = _get_state__1;
  _get_state.cljs$core$IFn$_invoke$arity$2 = _get_state__2;
  return _get_state;
}();
om.core.IGetRenderState = function() {
  var obj20892 = {};
  return obj20892;
}();
om.core._get_render_state = function() {
  var _get_render_state = null;
  var _get_render_state__1 = function(this$) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$1;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$1(this$);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = om.core._get_render_state[goog.typeOf(x__4412__auto__)];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = om.core._get_render_state["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_render_state__2 = function(this$, ks) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$2;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$2(this$, ks);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = om.core._get_render_state[goog.typeOf(x__4412__auto__)];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = om.core._get_render_state["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_render_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_render_state__1.call(this, this$);
      case 2:
        return _get_render_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_render_state.cljs$core$IFn$_invoke$arity$1 = _get_render_state__1;
  _get_render_state.cljs$core$IFn$_invoke$arity$2 = _get_render_state__2;
  return _get_render_state;
}();
om.core.ISetState = function() {
  var obj20894 = {};
  return obj20894;
}();
om.core._set_state_BANG_ = function() {
  var _set_state_BANG_ = null;
  var _set_state_BANG___3 = function(this$, val, render) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$3;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$3(this$, val, render);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4412__auto__)];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, val, render);
    }
  };
  var _set_state_BANG___4 = function(this$, ks, val, render) {
    if (function() {
      var and__3756__auto__ = this$;
      if (and__3756__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$4;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$4(this$, ks, val, render);
    } else {
      var x__4412__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3768__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4412__auto__)];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, ks, val, render);
    }
  };
  _set_state_BANG_ = function(this$, ks, val, render) {
    switch(arguments.length) {
      case 3:
        return _set_state_BANG___3.call(this, this$, ks, val);
      case 4:
        return _set_state_BANG___4.call(this, this$, ks, val, render);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = _set_state_BANG___3;
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$4 = _set_state_BANG___4;
  return _set_state_BANG_;
}();
om.core.IRenderQueue = function() {
  var obj20896 = {};
  return obj20896;
}();
om.core._get_queue = function _get_queue(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IRenderQueue$_get_queue$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_get_queue$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._get_queue[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._get_queue["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-get-queue", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._queue_render_BANG_ = function _queue_render_BANG_(this$, c) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2(this$, c);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._queue_render_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._queue_render_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-queue-render!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._empty_queue_BANG_ = function _empty_queue_BANG_(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._empty_queue_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._empty_queue_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-empty-queue!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IValue = function() {
  var obj20898 = {};
  return obj20898;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3756__auto__ = x;
    if (and__3756__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4412__auto__ = x == null ? null : x;
    return function() {
      var or__3768__auto__ = om.core._value[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._value["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj20900 = {};
  return obj20900;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3756__auto__ = cursor;
    if (and__3756__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4412__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3768__auto__ = om.core._path[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._path["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3756__auto__ = cursor;
    if (and__3756__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4412__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3768__auto__ = om.core._state[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._state["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj20902 = {};
  return obj20902;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3756__auto__ = value;
      if (and__3756__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4412__auto__ = value == null ? null : value;
      return function() {
        var or__3768__auto__ = om.core._to_cursor[goog.typeOf(x__4412__auto__)];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = om.core._to_cursor["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3756__auto__ = value;
      if (and__3756__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3756__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4412__auto__ = value == null ? null : value;
      return function() {
        var or__3768__auto__ = om.core._to_cursor[goog.typeOf(x__4412__auto__)];
        if (or__3768__auto__) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = om.core._to_cursor["_"];
          if (or__3768__auto____$1) {
            return or__3768__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  _to_cursor = function(value, state, path) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  return _to_cursor;
}();
om.core.ICursorDerive = function() {
  var obj20904 = {};
  return obj20904;
}();
om.core._derive = function _derive(cursor, derived, state, path) {
  if (function() {
    var and__3756__auto__ = cursor;
    if (and__3756__auto__) {
      return cursor.om$core$ICursorDerive$_derive$arity$4;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return cursor.om$core$ICursorDerive$_derive$arity$4(cursor, derived, state, path);
  } else {
    var x__4412__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3768__auto__ = om.core._derive[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._derive["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursorDerive.-derive", cursor);
        }
      }
    }().call(null, cursor, derived, state, path);
  }
};
om.core.ICursorDerive["_"] = true;
om.core._derive["_"] = function(this$, derived, state, path) {
  return om.core.to_cursor.call(null, derived, state, path);
};
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.state = function state(cursor) {
  return om.core._state.call(null, cursor);
};
om.core.ITransact = function() {
  var obj20906 = {};
  return obj20906;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, korks, f, tag) {
  if (function() {
    var and__3756__auto__ = cursor;
    if (and__3756__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$4;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$4(cursor, korks, f, tag);
  } else {
    var x__4412__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3768__auto__ = om.core._transact_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f, tag);
  }
};
om.core.INotify = function() {
  var obj20908 = {};
  return obj20908;
}();
om.core._listen_BANG_ = function _listen_BANG_(x, key, tx_listen) {
  if (function() {
    var and__3756__auto__ = x;
    if (and__3756__auto__) {
      return x.om$core$INotify$_listen_BANG_$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return x.om$core$INotify$_listen_BANG_$arity$3(x, key, tx_listen);
  } else {
    var x__4412__auto__ = x == null ? null : x;
    return function() {
      var or__3768__auto__ = om.core._listen_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._listen_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-listen!", x);
        }
      }
    }().call(null, x, key, tx_listen);
  }
};
om.core._unlisten_BANG_ = function _unlisten_BANG_(x, key) {
  if (function() {
    var and__3756__auto__ = x;
    if (and__3756__auto__) {
      return x.om$core$INotify$_unlisten_BANG_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return x.om$core$INotify$_unlisten_BANG_$arity$2(x, key);
  } else {
    var x__4412__auto__ = x == null ? null : x;
    return function() {
      var or__3768__auto__ = om.core._unlisten_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._unlisten_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-unlisten!", x);
        }
      }
    }().call(null, x, key);
  }
};
om.core._notify_BANG_ = function _notify_BANG_(x, tx_data, root_cursor) {
  if (function() {
    var and__3756__auto__ = x;
    if (and__3756__auto__) {
      return x.om$core$INotify$_notify_BANG_$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify_BANG_$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4412__auto__ = x == null ? null : x;
    return function() {
      var or__3768__auto__ = om.core._notify_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._notify_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify!", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.IRootProperties = function() {
  var obj20910 = {};
  return obj20910;
}();
om.core._set_property_BANG_ = function _set_property_BANG_(this$, id, p, val) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IRootProperties$_set_property_BANG_$arity$4;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IRootProperties$_set_property_BANG_$arity$4(this$, id, p, val);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._set_property_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._set_property_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootProperties.-set-property!", this$);
        }
      }
    }().call(null, this$, id, p, val);
  }
};
om.core._remove_property_BANG_ = function _remove_property_BANG_(this$, id, p) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IRootProperties$_remove_property_BANG_$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IRootProperties$_remove_property_BANG_$arity$3(this$, id, p);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._remove_property_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._remove_property_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootProperties.-remove-property!", this$);
        }
      }
    }().call(null, this$, id, p);
  }
};
om.core._remove_properties_BANG_ = function _remove_properties_BANG_(this$, id) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IRootProperties$_remove_properties_BANG_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IRootProperties$_remove_properties_BANG_$arity$2(this$, id);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._remove_properties_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._remove_properties_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootProperties.-remove-properties!", this$);
        }
      }
    }().call(null, this$, id);
  }
};
om.core._get_property = function _get_property(this$, id, p) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IRootProperties$_get_property$arity$3;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IRootProperties$_get_property$arity$3(this$, id, p);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._get_property[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._get_property["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootProperties.-get-property", this$);
        }
      }
    }().call(null, this$, id, p);
  }
};
om.core.IRootKey = function() {
  var obj20912 = {};
  return obj20912;
}();
om.core._root_key = function _root_key(cursor) {
  if (function() {
    var and__3756__auto__ = cursor;
    if (and__3756__auto__) {
      return cursor.om$core$IRootKey$_root_key$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return cursor.om$core$IRootKey$_root_key$arity$1(cursor);
  } else {
    var x__4412__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3768__auto__ = om.core._root_key[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._root_key["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootKey.-root-key", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IAdapt = function() {
  var obj20914 = {};
  return obj20914;
}();
om.core._adapt = function _adapt(this$, other) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IAdapt$_adapt$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IAdapt$_adapt$arity$2(this$, other);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._adapt[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._adapt["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAdapt.-adapt", this$);
        }
      }
    }().call(null, this$, other);
  }
};
om.core.IAdapt["_"] = true;
om.core._adapt["_"] = function(_, other) {
  return other;
};
om.core.adapt = function adapt(x, other) {
  return om.core._adapt.call(null, x, other);
};
om.core.IOmRef = function() {
  var obj20916 = {};
  return obj20916;
}();
om.core._add_dep_BANG_ = function _add_dep_BANG_(this$, c) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IOmRef$_add_dep_BANG_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IOmRef$_add_dep_BANG_$arity$2(this$, c);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._add_dep_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._add_dep_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmRef.-add-dep!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._remove_dep_BANG_ = function _remove_dep_BANG_(this$, c) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IOmRef$_remove_dep_BANG_$arity$2;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IOmRef$_remove_dep_BANG_$arity$2(this$, c);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._remove_dep_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._remove_dep_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmRef.-remove-dep!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._refresh_deps_BANG_ = function _refresh_deps_BANG_(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IOmRef$_refresh_deps_BANG_$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IOmRef$_refresh_deps_BANG_$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._refresh_deps_BANG_[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._refresh_deps_BANG_["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmRef.-refresh-deps!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._get_deps = function _get_deps(this$) {
  if (function() {
    var and__3756__auto__ = this$;
    if (and__3756__auto__) {
      return this$.om$core$IOmRef$_get_deps$arity$1;
    } else {
      return and__3756__auto__;
    }
  }()) {
    return this$.om$core$IOmRef$_get_deps$arity$1(this$);
  } else {
    var x__4412__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3768__auto__ = om.core._get_deps[goog.typeOf(x__4412__auto__)];
      if (or__3768__auto__) {
        return or__3768__auto__;
      } else {
        var or__3768__auto____$1 = om.core._get_deps["_"];
        if (or__3768__auto____$1) {
          return or__3768__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmRef.-get-deps", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.transact_STAR_ = function transact_STAR_(state, cursor, korks, f, tag) {
  var old_state = cljs.core.deref.call(null, state);
  var path = cljs.core.into.call(null, om.core.path.call(null, cursor), korks);
  var ret = function() {
    var G__20918 = state;
    if (G__20918) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20918.om$core$IOmSwap$;
        }
      }())) {
        return true;
      } else {
        if (!G__20918.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__20918);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__20918);
    }
  }() ? om.core._om_swap_BANG_.call(null, state, cursor, korks, f, tag) : cljs.core.empty_QMARK_.call(null, path) ? cljs.core.swap_BANG_.call(null, state, f) : cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f);
  if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "defer", "om.core/defer", -1038866178))) {
    return null;
  } else {
    var tx_data = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "old-value", "old-value", 862546795), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 1087038368), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1039580704), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 
    -490349212), cljs.core.deref.call(null, state)], null);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  }
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__20920 = x;
  if (G__20920) {
    var bit__4449__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3768__auto__ = bit__4449__auto__;
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        return G__20920.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__20920.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__20920);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__20920);
  }
};
om.core.component_QMARK_ = function component_QMARK_(x) {
  return x["isOmComponent"];
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.ifn_QMARK_.call(null, c)) {
    return node.props.children = c.call(null, node);
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, x))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))))].join(""));
  }
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    return om.core._get_state.call(null, owner);
  };
  var get_state__2 = function(owner, korks) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_state.call(null, owner, ks);
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    if (owner == null) {
      return null;
    } else {
      return owner.props["__om_shared"];
    }
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4126__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var pending_state = temp__4126__auto__;
    var G__20922 = state;
    G__20922["__om_prev_state"] = state["__om_state"];
    G__20922["__om_state"] = pending_state;
    G__20922["__om_pending_state"] = null;
    return G__20922;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3768__auto__ = props;
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4126__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4126__auto__)) {
      var props_state = temp__4126__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3768__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.ref_changed_QMARK_ = function ref_changed_QMARK_(ref) {
  var val = om.core.value.call(null, ref);
  var val_SINGLEQUOTE_ = cljs.core.get_in.call(null, cljs.core.deref.call(null, om.core.state.call(null, ref)), om.core.path.call(null, ref), new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275));
  return cljs.core.not_EQ_.call(null, val, val_SINGLEQUOTE_);
};
om.core.update_refs = function update_refs(c) {
  var cstate = c.state;
  var refs = cstate["__om_refs"];
  if (cljs.core.count.call(null, refs) === 0) {
    return null;
  } else {
    return cstate["__om_refs"] = cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.filter.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, function(cstate, refs) {
      return function(ref) {
        var ref_val = om.core.value.call(null, ref);
        var ref_state = om.core.state.call(null, ref);
        var ref_path = om.core.path.call(null, ref);
        var ref_val_SINGLEQUOTE_ = cljs.core.get_in.call(null, cljs.core.deref.call(null, ref_state), ref_path, new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275));
        if (cljs.core.not_EQ_.call(null, ref_val, new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275))) {
          if (cljs.core.not_EQ_.call(null, ref_val, ref_val_SINGLEQUOTE_)) {
            return om.core.adapt.call(null, ref, om.core.to_cursor.call(null, ref_val_SINGLEQUOTE_, ref_state, ref_path));
          } else {
            return ref;
          }
        } else {
          return null;
        }
      };
    }(cstate, refs), refs)));
  }
};
om.core.pure_methods = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", -1983477981), new cljs.core.Keyword(null, "isOmComponent", "isOmComponent", -2070015162), new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), new cljs.core.Keyword(null, "componentWillReceiveProps", "componentWillReceiveProps", 559988974), new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), 
new cljs.core.Keyword(null, "render", "render", -1408033454), new cljs.core.Keyword(null, "componentWillUpdate", "componentWillUpdate", 657390932), new cljs.core.Keyword(null, "getInitialState", "getInitialState", 1541760916), new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 955710936), new cljs.core.Keyword(null, "getDisplayName", "getDisplayName", 1324429466), new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619)], [function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__20924 = c;
    if (G__20924) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20924.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__20924.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__20924);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__20924);
    }
  }()) {
    var state_20945 = this$.state;
    om.core.did_update.call(null, c, om.core.get_props.call(null, {"isOmComponent":true, "props":prev_props}), function() {
      var or__3768__auto__ = state_20945["__om_prev_state"];
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        return state_20945["__om_state"];
      }
    }());
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, true, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var cursor = this$.props["__om_cursor"];
  if (function() {
    var G__20925 = c;
    if (G__20925) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20925.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__20925.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__20925);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__20925);
    }
  }()) {
    om.core.will_unmount.call(null, c);
  } else {
  }
  var temp__4126__auto__ = cljs.core.seq.call(null, this$.state["__om_refs"]);
  if (temp__4126__auto__) {
    var refs = temp__4126__auto__;
    var seq__20926 = cljs.core.seq.call(null, refs);
    var chunk__20927 = null;
    var count__20928 = 0;
    var i__20929 = 0;
    while (true) {
      if (i__20929 < count__20928) {
        var ref = cljs.core._nth.call(null, chunk__20927, i__20929);
        om.core.unobserve.call(null, this$, ref);
        var G__20946 = seq__20926;
        var G__20947 = chunk__20927;
        var G__20948 = count__20928;
        var G__20949 = i__20929 + 1;
        seq__20926 = G__20946;
        chunk__20927 = G__20947;
        count__20928 = G__20948;
        i__20929 = G__20949;
        continue;
      } else {
        var temp__4126__auto____$1 = cljs.core.seq.call(null, seq__20926);
        if (temp__4126__auto____$1) {
          var seq__20926__$1 = temp__4126__auto____$1;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__20926__$1)) {
            var c__4555__auto__ = cljs.core.chunk_first.call(null, seq__20926__$1);
            var G__20950 = cljs.core.chunk_rest.call(null, seq__20926__$1);
            var G__20951 = c__4555__auto__;
            var G__20952 = cljs.core.count.call(null, c__4555__auto__);
            var G__20953 = 0;
            seq__20926 = G__20950;
            chunk__20927 = G__20951;
            count__20928 = G__20952;
            i__20929 = G__20953;
            continue;
          } else {
            var ref = cljs.core.first.call(null, seq__20926__$1);
            om.core.unobserve.call(null, this$, ref);
            var G__20954 = cljs.core.next.call(null, seq__20926__$1);
            var G__20955 = null;
            var G__20956 = 0;
            var G__20957 = 0;
            seq__20926 = G__20954;
            chunk__20927 = G__20955;
            count__20928 = G__20956;
            i__20929 = G__20957;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  } else {
    return null;
  }
}, function(next_props) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__20930 = c;
    if (G__20930) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20930.om$core$IWillReceiveProps$;
        }
      }())) {
        return true;
      } else {
        if (!G__20930.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__20930);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__20930);
    }
  }()) {
    return om.core.will_receive_props.call(null, c, om.core.get_props.call(null, {"isOmComponent":true, "props":next_props}));
  } else {
    return null;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var props = this$.props;
  var state = this$.state;
  var c = om.core.children.call(null, this$);
  om.core.merge_props_state.call(null, this$, next_props);
  if (function() {
    var G__20931 = c;
    if (G__20931) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20931.om$core$IShouldUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__20931.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__20931);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__20931);
    }
  }()) {
    return om.core.should_update.call(null, c, om.core.get_props.call(null, {"isOmComponent":true, "props":next_props}), om.core._get_state.call(null, this$));
  } else {
    var cursor = props["__om_cursor"];
    var next_cursor = next_props["__om_cursor"];
    if (cljs.core.not_EQ_.call(null, om.core._value.call(null, cursor), om.core._value.call(null, next_cursor))) {
      return true;
    } else {
      if (om.core.cursor_QMARK_.call(null, cursor) && om.core.cursor_QMARK_.call(null, next_cursor) && cljs.core.not_EQ_.call(null, om.core._path.call(null, cursor), om.core._path.call(null, next_cursor))) {
        return true;
      } else {
        if (cljs.core.not_EQ_.call(null, om.core._get_state.call(null, this$), om.core._get_render_state.call(null, this$))) {
          return true;
        } else {
          if (cljs.core.truth_(function() {
            var and__3756__auto__ = !(cljs.core.count.call(null, state["__om_refs"]) === 0);
            if (and__3756__auto__) {
              return cljs.core.some.call(null, function(and__3756__auto__, cursor, next_cursor, props, state, c, this$) {
                return function(p1__20923_SHARP_) {
                  return om.core.ref_changed_QMARK_.call(null, p1__20923_SHARP_);
                };
              }(and__3756__auto__, cursor, next_cursor, props, state, c, this$), state["__om_refs"]);
            } else {
              return and__3756__auto__;
            }
          }())) {
            return true;
          } else {
            if (!(props["__om_index"] === next_props["__om_index"])) {
              return true;
            } else {
              return false;
            }
          }
        }
      }
    }
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var _STAR_parent_STAR_20932 = om.core._STAR_parent_STAR_;
  var _STAR_state_STAR_20933 = om.core._STAR_state_STAR_;
  var _STAR_instrument_STAR_20934 = om.core._STAR_instrument_STAR_;
  var _STAR_descriptor_STAR_20935 = om.core._STAR_descriptor_STAR_;
  var _STAR_root_key_STAR_20936 = om.core._STAR_root_key_STAR_;
  om.core._STAR_parent_STAR_ = this$;
  om.core._STAR_state_STAR_ = props["__om_app_state"];
  om.core._STAR_instrument_STAR_ = props["__om_instrument"];
  om.core._STAR_descriptor_STAR_ = props["__om_descriptor"];
  om.core._STAR_root_key_STAR_ = props["__om_root_key"];
  try {
    if (function() {
      var G__20937 = c;
      if (G__20937) {
        var bit__4449__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3768__auto__ = bit__4449__auto__;
          if (cljs.core.truth_(or__3768__auto__)) {
            return or__3768__auto__;
          } else {
            return G__20937.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__20937.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__20937);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__20937);
      }
    }()) {
      return om.core.render.call(null, c);
    } else {
      if (function() {
        var G__20938 = c;
        if (G__20938) {
          var bit__4449__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3768__auto__ = bit__4449__auto__;
            if (cljs.core.truth_(or__3768__auto__)) {
              return or__3768__auto__;
            } else {
              return G__20938.om$core$IRenderProps$;
            }
          }())) {
            return true;
          } else {
            if (!G__20938.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderProps, G__20938);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderProps, G__20938);
        }
      }()) {
        return om.core.render_props.call(null, c, props["__om_cursor"], om.core.get_state.call(null, this$));
      } else {
        if (function() {
          var G__20939 = c;
          if (G__20939) {
            var bit__4449__auto__ = null;
            if (cljs.core.truth_(function() {
              var or__3768__auto__ = bit__4449__auto__;
              if (cljs.core.truth_(or__3768__auto__)) {
                return or__3768__auto__;
              } else {
                return G__20939.om$core$IRenderState$;
              }
            }())) {
              return true;
            } else {
              if (!G__20939.cljs$lang$protocol_mask$partition$) {
                return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__20939);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__20939);
          }
        }()) {
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } else {
          return c;
        }
      }
    }
  } finally {
    om.core._STAR_root_key_STAR_ = _STAR_root_key_STAR_20936;
    om.core._STAR_descriptor_STAR_ = _STAR_descriptor_STAR_20935;
    om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_20934;
    om.core._STAR_state_STAR_ = _STAR_state_STAR_20933;
    om.core._STAR_parent_STAR_ = _STAR_parent_STAR_20932;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var c_20958 = om.core.children.call(null, this$);
  if (function() {
    var G__20940 = c_20958;
    if (G__20940) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20940.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__20940.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__20940);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__20940);
    }
  }()) {
    var state_20959 = this$.state;
    om.core.will_update.call(null, c_20958, om.core.get_props.call(null, {"isOmComponent":true, "props":next_props}), om.core._get_state.call(null, this$));
  } else {
  }
  om.core.merge_pending_state.call(null, this$);
  return om.core.update_refs.call(null, this$);
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3768__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3768__auto__)) {
      return or__3768__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var id = (new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)).cljs$core$IFn$_invoke$arity$1(istate);
  var ret = {"__om_state":cljs.core.merge.call(null, function() {
    var G__20941 = c;
    if (G__20941) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20941.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__20941.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__20941);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__20941);
    }
  }() ? om.core.init_state.call(null, c) : null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693))), "__om_id":function() {
    var or__3768__auto__ = id;
    if (cljs.core.truth_(or__3768__auto__)) {
      return or__3768__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }()};
  props["__om_init_state"] = null;
  return ret;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var cursor = this$.props["__om_cursor"];
  if (function() {
    var G__20942 = c;
    if (G__20942) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20942.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__20942.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__20942);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__20942);
    }
  }()) {
    return om.core.did_mount.call(null, c);
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__20943 = c;
    if (G__20943) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20943.om$core$IDisplayName$;
        }
      }())) {
        return true;
      } else {
        if (!G__20943.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__20943);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__20943);
    }
  }()) {
    return om.core.display_name.call(null, c);
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_20960 = om.core.children.call(null, this$);
  if (function() {
    var G__20944 = c_20960;
    if (G__20944) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20944.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__20944.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__20944);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__20944);
    }
  }()) {
    om.core.will_mount.call(null, c_20960);
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}]);
om.core.specify_state_methods_BANG_ = function specify_state_methods_BANG_(obj) {
  var x20962 = obj;
  x20962.om$core$IGetState$ = true;
  x20962.om$core$IGetState$_get_state$arity$1 = function(x20962) {
    return function(this$) {
      var this$__$1 = this;
      var state = this$__$1.state;
      var or__3768__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        return state["__om_state"];
      }
    };
  }(x20962);
  x20962.om$core$IGetState$_get_state$arity$2 = function(x20962) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x20962);
  x20962.om$core$IGetRenderState$ = true;
  x20962.om$core$IGetRenderState$_get_render_state$arity$1 = function(x20962) {
    return function(this$) {
      var this$__$1 = this;
      return this$__$1.state["__om_state"];
    };
  }(x20962);
  x20962.om$core$IGetRenderState$_get_render_state$arity$2 = function(x20962) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x20962);
  x20962.om$core$ISetState$ = true;
  x20962.om$core$ISetState$_set_state_BANG_$arity$3 = function(x20962) {
    return function(this$, val, render) {
      var this$__$1 = this;
      var props = this$__$1.props;
      var app_state = props["__om_app_state"];
      this$__$1.state["__om_pending_state"] = val;
      if (cljs.core.truth_(function() {
        var and__3756__auto__ = !(app_state == null);
        if (and__3756__auto__) {
          return render;
        } else {
          return and__3756__auto__;
        }
      }())) {
        return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
      } else {
        return null;
      }
    };
  }(x20962);
  x20962.om$core$ISetState$_set_state_BANG_$arity$4 = function(x20962) {
    return function(this$, ks, val, render) {
      var this$__$1 = this;
      var props = this$__$1.props;
      var state = this$__$1.state;
      var pstate = om.core._get_state.call(null, this$__$1);
      var app_state = props["__om_app_state"];
      state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, ks, val);
      if (cljs.core.truth_(function() {
        var and__3756__auto__ = !(app_state == null);
        if (and__3756__auto__) {
          return render;
        } else {
          return and__3756__auto__;
        }
      }())) {
        return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
      } else {
        return null;
      }
    };
  }(x20962);
  return x20962;
};
om.core.pure_descriptor = om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods));
om.core.react_id = function react_id(x) {
  var id = x["_rootNodeID"];
  if (cljs.core.truth_(id)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "id", "id", 252129435, null)))].join(""));
  }
  return id;
};
om.core.get_gstate = function get_gstate(owner) {
  return owner.props["__om_app_state"];
};
om.core.no_local_merge_pending_state = function no_local_merge_pending_state(owner) {
  var gstate = om.core.get_gstate.call(null, owner);
  var spath = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, owner)], null);
  var states = cljs.core.get_in.call(null, cljs.core.deref.call(null, gstate), spath);
  if (cljs.core.truth_((new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973)).cljs$core$IFn$_invoke$arity$1(states))) {
    return cljs.core.swap_BANG_.call(null, gstate, cljs.core.update_in, spath, function(gstate, spath, states) {
      return function(states__$1) {
        return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, cljs.core.assoc.call(null, states__$1, new cljs.core.Keyword(null, "previous-state", "previous-state", 1888227923), (new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)).cljs$core$IFn$_invoke$arity$1(states__$1)), new cljs.core.Keyword(null, "render-state", "render-state", 2053902270), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)).cljs$core$IFn$_invoke$arity$1(states__$1), 
        (new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973)).cljs$core$IFn$_invoke$arity$1(states__$1))), new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973));
      };
    }(gstate, spath, states));
  } else {
    return null;
  }
};
om.core.no_local_state_methods = cljs.core.assoc.call(null, om.core.pure_methods, new cljs.core.Keyword(null, "getInitialState", "getInitialState", 1541760916), function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3768__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3768__auto__)) {
      return or__3768__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var om_id = function() {
    var or__3768__auto__ = (new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)).cljs$core$IFn$_invoke$arity$1(istate);
    if (cljs.core.truth_(or__3768__auto__)) {
      return or__3768__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }();
  var state = cljs.core.merge.call(null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)), function() {
    var G__20963 = c;
    if (G__20963) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20963.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__20963.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__20963);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__20963);
    }
  }() ? om.core.init_state.call(null, c) : null);
  var spath = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$), new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)], null);
  props["__om_init_state"] = null;
  cljs.core.swap_BANG_.call(null, om.core.get_gstate.call(null, this$), cljs.core.assoc_in, spath, state);
  return{"__om_id":om_id};
}, new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619), function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_20972 = om.core.children.call(null, this$);
  if (function() {
    var G__20964 = c_20972;
    if (G__20964) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20964.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__20964.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__20964);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__20964);
    }
  }()) {
    om.core.will_mount.call(null, c_20972);
  } else {
  }
  return om.core.no_local_merge_pending_state.call(null, this$);
}, new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__20965 = c;
    if (G__20965) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20965.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__20965.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__20965);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__20965);
    }
  }()) {
    om.core.will_unmount.call(null, c);
  } else {
  }
  cljs.core.swap_BANG_.call(null, om.core.get_gstate.call(null, this$), cljs.core.dissoc, new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$));
  var temp__4126__auto__ = cljs.core.seq.call(null, this$.state["__om_refs"]);
  if (temp__4126__auto__) {
    var refs = temp__4126__auto__;
    var seq__20966 = cljs.core.seq.call(null, refs);
    var chunk__20967 = null;
    var count__20968 = 0;
    var i__20969 = 0;
    while (true) {
      if (i__20969 < count__20968) {
        var ref = cljs.core._nth.call(null, chunk__20967, i__20969);
        om.core.unobserve.call(null, this$, ref);
        var G__20973 = seq__20966;
        var G__20974 = chunk__20967;
        var G__20975 = count__20968;
        var G__20976 = i__20969 + 1;
        seq__20966 = G__20973;
        chunk__20967 = G__20974;
        count__20968 = G__20975;
        i__20969 = G__20976;
        continue;
      } else {
        var temp__4126__auto____$1 = cljs.core.seq.call(null, seq__20966);
        if (temp__4126__auto____$1) {
          var seq__20966__$1 = temp__4126__auto____$1;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__20966__$1)) {
            var c__4555__auto__ = cljs.core.chunk_first.call(null, seq__20966__$1);
            var G__20977 = cljs.core.chunk_rest.call(null, seq__20966__$1);
            var G__20978 = c__4555__auto__;
            var G__20979 = cljs.core.count.call(null, c__4555__auto__);
            var G__20980 = 0;
            seq__20966 = G__20977;
            chunk__20967 = G__20978;
            count__20968 = G__20979;
            i__20969 = G__20980;
            continue;
          } else {
            var ref = cljs.core.first.call(null, seq__20966__$1);
            om.core.unobserve.call(null, this$, ref);
            var G__20981 = cljs.core.next.call(null, seq__20966__$1);
            var G__20982 = null;
            var G__20983 = 0;
            var G__20984 = 0;
            seq__20966 = G__20981;
            chunk__20967 = G__20982;
            count__20968 = G__20983;
            i__20969 = G__20984;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  } else {
    return null;
  }
}, new cljs.core.Keyword(null, "componentWillUpdate", "componentWillUpdate", 657390932), function(next_props, next_state) {
  var this$ = this;
  var props_20985 = this$.props;
  var c_20986 = om.core.children.call(null, this$);
  if (function() {
    var G__20970 = c_20986;
    if (G__20970) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20970.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__20970.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__20970);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__20970);
    }
  }()) {
    var state_20987 = this$.state;
    om.core.will_update.call(null, c_20986, om.core.get_props.call(null, {"isOmComponent":true, "props":next_props}), om.core._get_state.call(null, this$));
  } else {
  }
  om.core.no_local_merge_pending_state.call(null, this$);
  return om.core.update_refs.call(null, this$);
}, new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", -1983477981), function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var gstate = om.core.get_gstate.call(null, this$);
  var states = cljs.core.get_in.call(null, cljs.core.deref.call(null, gstate), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$)], null));
  var spath = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$)], null);
  if (function() {
    var G__20971 = c;
    if (G__20971) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20971.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__20971.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__20971);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__20971);
    }
  }()) {
    var state_20988 = this$.state;
    om.core.did_update.call(null, c, om.core.get_props.call(null, {"isOmComponent":true, "props":prev_props}), function() {
      var or__3768__auto__ = (new cljs.core.Keyword(null, "previous-state", "previous-state", 1888227923)).cljs$core$IFn$_invoke$arity$1(states);
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        return(new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)).cljs$core$IFn$_invoke$arity$1(states);
      }
    }());
  } else {
  }
  if (cljs.core.truth_((new cljs.core.Keyword(null, "previous-state", "previous-state", 1888227923)).cljs$core$IFn$_invoke$arity$1(states))) {
    return cljs.core.swap_BANG_.call(null, gstate, cljs.core.update_in, spath, cljs.core.dissoc, new cljs.core.Keyword(null, "previous-state", "previous-state", 1888227923));
  } else {
    return null;
  }
});
om.core.no_local_descriptor = function no_local_descriptor(methods$) {
  var x20990 = cljs.core.clj__GT_js.call(null, methods$);
  x20990.om$core$IGetState$ = true;
  x20990.om$core$IGetState$_get_state$arity$1 = function(x20990) {
    return function(this$) {
      var this$__$1 = this;
      var spath = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$__$1)], null);
      var states = cljs.core.get_in.call(null, cljs.core.deref.call(null, om.core.get_gstate.call(null, this$__$1)), spath);
      var or__3768__auto__ = (new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973)).cljs$core$IFn$_invoke$arity$1(states);
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        return(new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)).cljs$core$IFn$_invoke$arity$1(states);
      }
    };
  }(x20990);
  x20990.om$core$IGetState$_get_state$arity$2 = function(x20990) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x20990);
  x20990.om$core$IGetRenderState$ = true;
  x20990.om$core$IGetRenderState$_get_render_state$arity$1 = function(x20990) {
    return function(this$) {
      var this$__$1 = this;
      var spath = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$__$1), new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)], null);
      return cljs.core.get_in.call(null, cljs.core.deref.call(null, om.core.get_gstate.call(null, this$__$1)), spath);
    };
  }(x20990);
  x20990.om$core$IGetRenderState$_get_render_state$arity$2 = function(x20990) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x20990);
  x20990.om$core$ISetState$ = true;
  x20990.om$core$ISetState$_set_state_BANG_$arity$3 = function(x20990) {
    return function(this$, val, render) {
      var this$__$1 = this;
      var gstate = om.core.get_gstate.call(null, this$__$1);
      var spath = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$__$1), new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973)], null);
      cljs.core.swap_BANG_.call(null, om.core.get_gstate.call(null, this$__$1), cljs.core.assoc_in, spath, val);
      if (cljs.core.truth_(function() {
        var and__3756__auto__ = !(gstate == null);
        if (and__3756__auto__) {
          return render;
        } else {
          return and__3756__auto__;
        }
      }())) {
        return om.core._queue_render_BANG_.call(null, gstate, this$__$1);
      } else {
        return null;
      }
    };
  }(x20990);
  x20990.om$core$ISetState$_set_state_BANG_$arity$4 = function(x20990) {
    return function(this$, ks, val, render) {
      var this$__$1 = this;
      return om.core._set_state_BANG_.call(null, this$__$1, cljs.core.assoc_in.call(null, om.core._get_state.call(null, this$__$1), ks, val), render);
    };
  }(x20990);
  return x20990;
};
om.core.valid_QMARK_ = function valid_QMARK_(x) {
  if (function() {
    var G__20992 = x;
    if (G__20992) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__20992.om$core$ICursor$;
        }
      }())) {
        return true;
      } else {
        if (!G__20992.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__20992);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__20992);
    }
  }()) {
    return!cljs.core.keyword_identical_QMARK_.call(null, cljs.core.deref.call(null, x), new cljs.core.Keyword("om.core", "invalid", "om.core/invalid", 1948827993));
  } else {
    return true;
  }
};
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2163640079;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var v = cljs.core._lookup.call(null, self__.value, k, new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275));
  if (!cljs.core._EQ_.call(null, v, new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275))) {
    return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k));
  } else {
    return not_found;
  }
};
om.core.MapCursor.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._kv_reduce.call(null, self__.value, f, init);
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._pr_writer.call(null, self__.value, writer, opts);
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.meta.call(null, self__.value);
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._count.call(null, self__.value);
};
om.core.MapCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash.call(null, self__.value);
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core.cursor_QMARK_.call(null, other)) {
    return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
  } else {
    return cljs.core._EQ_.call(null, self__.value, other);
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.MapCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.count.call(null, self__.value) > 0) {
    return cljs.core.map.call(null, function(this$__$1) {
      return function(p__20994) {
        var vec__20995 = p__20994;
        var k = cljs.core.nth.call(null, vec__20995, 0, null);
        var v = cljs.core.nth.call(null, vec__20995, 1, null);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
      };
    }(this$__$1), self__.value);
  } else {
    return null;
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
};
om.core.MapCursor.prototype.call = function() {
  var G__20996 = null;
  var G__20996__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k);
  };
  var G__20996__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k, not_found);
  };
  G__20996 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20996__2.call(this, self__, k);
      case 3:
        return G__20996__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20996.cljs$core$IFn$_invoke$arity$2 = G__20996__2;
  G__20996.cljs$core$IFn$_invoke$arity$3 = G__20996__3;
  return G__20996;
}();
om.core.MapCursor.prototype.apply = function(self__, args20993) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args20993)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k, not_found);
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path, new cljs.core.Keyword("om.core", "invalid", "om.core/invalid", 1948827993));
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write.call(null, writer__4356__auto__, "om.core/MapCursor");
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2180424479;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._nth.call(null, this$__$1, n, null);
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._nth.call(null, this$__$1, n, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._kv_reduce.call(null, self__.value, f, init);
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (n < cljs.core._count.call(null, self__.value)) {
    return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n, not_found), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    return not_found;
  }
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._pr_writer.call(null, self__.value, writer, opts);
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.meta.call(null, self__.value);
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._count.call(null, self__.value);
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return om.core._derive.call(null, this$__$1, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return om.core._derive.call(null, this$__$1, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash.call(null, self__.value);
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core.cursor_QMARK_.call(null, other)) {
    return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
  } else {
    return cljs.core._EQ_.call(null, self__.value, other);
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.IndexedCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, n, v) {
  var self__ = this;
  var this$__$1 = this;
  return om.core._derive.call(null, this$__$1, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.count.call(null, self__.value) > 0) {
    return cljs.core.map.call(null, function(this$__$1) {
      return function(v, i) {
        return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, i));
      };
    }(this$__$1), self__.value, cljs.core.range.call(null));
  } else {
    return null;
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.call = function() {
  var G__20998 = null;
  var G__20998__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k);
  };
  var G__20998__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k, not_found);
  };
  G__20998 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20998__2.call(this, self__, k);
      case 3:
        return G__20998__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20998.cljs$core$IFn$_invoke$arity$2 = G__20998__2;
  G__20998.cljs$core$IFn$_invoke$arity$3 = G__20998__3;
  return G__20998;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args20997) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args20997)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path, new cljs.core.Keyword("om.core", "invalid", "om.core/invalid", 1948827993));
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
  return cljs.core._write.call(null, writer__4356__auto__, "om.core/IndexedCursor");
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path) {
  var x21000 = cljs.core.clone.call(null, val);
  x21000.cljs$core$IEquiv$ = true;
  x21000.cljs$core$IEquiv$_equiv$arity$2 = function(x21000) {
    return function(_, other) {
      var ___$1 = this;
      if (om.core.cursor_QMARK_.call(null, other)) {
        return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
      } else {
        return cljs.core._EQ_.call(null, val, other);
      }
    };
  }(x21000);
  x21000.om$core$ITransact$ = true;
  x21000.om$core$ITransact$_transact_BANG_$arity$4 = function(x21000) {
    return function(this$, korks, f, tag) {
      var this$__$1 = this;
      return om.core.transact_STAR_.call(null, state, this$__$1, korks, f, tag);
    };
  }(x21000);
  x21000.om$core$ICursor$ = true;
  x21000.om$core$ICursor$_path$arity$1 = function(x21000) {
    return function(_) {
      var ___$1 = this;
      return path;
    };
  }(x21000);
  x21000.om$core$ICursor$_state$arity$1 = function(x21000) {
    return function(_) {
      var ___$1 = this;
      return state;
    };
  }(x21000);
  x21000.cljs$core$IDeref$ = true;
  x21000.cljs$core$IDeref$_deref$arity$1 = function(x21000) {
    return function(this$) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path, new cljs.core.Keyword("om.core", "invalid", "om.core/invalid", 1948827993));
    };
  }(x21000);
  return x21000;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__3 = function(val, state, path) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__21003 = val;
        if (G__21003) {
          var bit__4449__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3768__auto__ = bit__4449__auto__;
            if (cljs.core.truth_(or__3768__auto__)) {
              return or__3768__auto__;
            } else {
              return G__21003.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__21003.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__21003);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__21003);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path);
          } else {
            if (function() {
              var G__21004 = val;
              if (G__21004) {
                var bit__4449__auto__ = G__21004.cljs$lang$protocol_mask$partition1$ & 8192;
                if (bit__4449__auto__ || G__21004.cljs$core$ICloneable$) {
                  return true;
                } else {
                  if (!G__21004.cljs$lang$protocol_mask$partition1$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__21004);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__21004);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path);
            } else {
              return val;
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  return to_cursor;
}();
om.core.notify_STAR_ = function notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify_BANG_.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.root_cursor = function root_cursor(atom) {
  if (function() {
    var G__21006 = atom;
    if (G__21006) {
      var bit__4449__auto__ = G__21006.cljs$lang$protocol_mask$partition0$ & 32768;
      if (bit__4449__auto__ || G__21006.cljs$core$IDeref$) {
        return true;
      } else {
        if (!G__21006.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__21006);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__21006);
    }
  }()) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IDeref", "IDeref", 1738423197, null), new cljs.core.Symbol(null, "atom", "atom", 1243487874, null))))].join(""));
  }
  return om.core.to_cursor.call(null, cljs.core.deref.call(null, atom), atom, cljs.core.PersistentVector.EMPTY);
};
om.core._refs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.ref_sub_cursor = function ref_sub_cursor(x, parent) {
  var x21008 = cljs.core.clone.call(null, x);
  x21008.om$core$ITransact$ = true;
  x21008.om$core$ITransact$_transact_BANG_$arity$4 = function(x21008) {
    return function(cursor, korks, f, tag) {
      var cursor__$1 = this;
      om.core.commit_BANG_.call(null, cursor__$1, korks, f);
      return om.core._refresh_deps_BANG_.call(null, parent);
    };
  }(x21008);
  x21008.om$core$ICursorDerive$ = true;
  x21008.om$core$ICursorDerive$_derive$arity$4 = function(x21008) {
    return function(this$, derived, state, path) {
      var this$__$1 = this;
      var cursor_SINGLEQUOTE_ = om.core.to_cursor.call(null, derived, state, path);
      if (om.core.cursor_QMARK_.call(null, cursor_SINGLEQUOTE_)) {
        return om.core.adapt.call(null, this$__$1, cursor_SINGLEQUOTE_);
      } else {
        return cursor_SINGLEQUOTE_;
      }
    };
  }(x21008);
  x21008.om$core$IAdapt$ = true;
  x21008.om$core$IAdapt$_adapt$arity$2 = function(x21008) {
    return function(this$, other) {
      var this$__$1 = this;
      return ref_sub_cursor.call(null, om.core.adapt.call(null, x, other), parent);
    };
  }(x21008);
  x21008.cljs$core$ICloneable$ = true;
  x21008.cljs$core$ICloneable$_clone$arity$1 = function(x21008) {
    return function(this$) {
      var this$__$1 = this;
      return ref_sub_cursor.call(null, cljs.core.clone.call(null, x), parent);
    };
  }(x21008);
  return x21008;
};
om.core.ref_cursor = function ref_cursor(cursor) {
  if (om.core.cursor_QMARK_.call(null, cursor)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
  }
  if (function() {
    var G__21015 = cursor;
    if (G__21015) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__21015.om$core$IOmRef$;
        }
      }())) {
        return true;
      } else {
        if (!G__21015.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmRef, G__21015);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmRef, G__21015);
    }
  }()) {
    return cursor;
  } else {
    var path = om.core.path.call(null, cursor);
    var storage = cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, om.core._refs, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null), cljs.core.fnil.call(null, cljs.core.identity, cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY))), path);
    var x21016 = cljs.core.clone.call(null, cursor);
    x21016.om$core$ITransact$ = true;
    x21016.om$core$ITransact$_transact_BANG_$arity$4 = function(x21016, path, storage) {
      return function(cursor__$1, korks, f, tag) {
        var cursor__$2 = this;
        om.core.commit_BANG_.call(null, cursor__$2, korks, f);
        return om.core._refresh_deps_BANG_.call(null, cursor__$2);
      };
    }(x21016, path, storage);
    x21016.om$core$IOmRef$ = true;
    x21016.om$core$IOmRef$_add_dep_BANG_$arity$2 = function(x21016, path, storage) {
      return function(_, c) {
        var ___$1 = this;
        return cljs.core.swap_BANG_.call(null, storage, cljs.core.assoc, om.core.id.call(null, c), c);
      };
    }(x21016, path, storage);
    x21016.om$core$IOmRef$_remove_dep_BANG_$arity$2 = function(x21016, path, storage) {
      return function(_, c) {
        var ___$1 = this;
        var m = cljs.core.swap_BANG_.call(null, storage, cljs.core.dissoc, om.core.id.call(null, c));
        if (cljs.core.count.call(null, m) === 0) {
          return cljs.core.swap_BANG_.call(null, om.core._refs, cljs.core.dissoc, path);
        } else {
          return null;
        }
      };
    }(x21016, path, storage);
    x21016.om$core$IOmRef$_refresh_deps_BANG_$arity$1 = function(x21016, path, storage) {
      return function(_) {
        var ___$1 = this;
        var seq__21017 = cljs.core.seq.call(null, cljs.core.vals.call(null, cljs.core.deref.call(null, storage)));
        var chunk__21018 = null;
        var count__21019 = 0;
        var i__21020 = 0;
        while (true) {
          if (i__21020 < count__21019) {
            var c = cljs.core._nth.call(null, chunk__21018, i__21020);
            om.core._queue_render_BANG_.call(null, om.core.state.call(null, cursor), c);
            var G__21021 = seq__21017;
            var G__21022 = chunk__21018;
            var G__21023 = count__21019;
            var G__21024 = i__21020 + 1;
            seq__21017 = G__21021;
            chunk__21018 = G__21022;
            count__21019 = G__21023;
            i__21020 = G__21024;
            continue;
          } else {
            var temp__4126__auto__ = cljs.core.seq.call(null, seq__21017);
            if (temp__4126__auto__) {
              var seq__21017__$1 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__21017__$1)) {
                var c__4555__auto__ = cljs.core.chunk_first.call(null, seq__21017__$1);
                var G__21025 = cljs.core.chunk_rest.call(null, seq__21017__$1);
                var G__21026 = c__4555__auto__;
                var G__21027 = cljs.core.count.call(null, c__4555__auto__);
                var G__21028 = 0;
                seq__21017 = G__21025;
                chunk__21018 = G__21026;
                count__21019 = G__21027;
                i__21020 = G__21028;
                continue;
              } else {
                var c = cljs.core.first.call(null, seq__21017__$1);
                om.core._queue_render_BANG_.call(null, om.core.state.call(null, cursor), c);
                var G__21029 = cljs.core.next.call(null, seq__21017__$1);
                var G__21030 = null;
                var G__21031 = 0;
                var G__21032 = 0;
                seq__21017 = G__21029;
                chunk__21018 = G__21030;
                count__21019 = G__21031;
                i__21020 = G__21032;
                continue;
              }
            } else {
              return null;
            }
          }
          break;
        }
      };
    }(x21016, path, storage);
    x21016.om$core$IOmRef$_get_deps$arity$1 = function(x21016, path, storage) {
      return function(_) {
        var ___$1 = this;
        return cljs.core.deref.call(null, storage);
      };
    }(x21016, path, storage);
    x21016.om$core$ICursorDerive$ = true;
    x21016.om$core$ICursorDerive$_derive$arity$4 = function(x21016, path, storage) {
      return function(this$, derived, state, path__$1) {
        var this$__$1 = this;
        var cursor_SINGLEQUOTE_ = om.core.to_cursor.call(null, derived, state, path__$1);
        if (om.core.cursor_QMARK_.call(null, cursor_SINGLEQUOTE_)) {
          return om.core.ref_sub_cursor.call(null, cursor_SINGLEQUOTE_, this$__$1);
        } else {
          return cursor_SINGLEQUOTE_;
        }
      };
    }(x21016, path, storage);
    return x21016;
  }
};
om.core.add_ref_to_component_BANG_ = function add_ref_to_component_BANG_(c, ref) {
  var state = c.state;
  var refs = function() {
    var or__3768__auto__ = state["__om_refs"];
    if (cljs.core.truth_(or__3768__auto__)) {
      return or__3768__auto__;
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  }();
  if (cljs.core.contains_QMARK_.call(null, refs, ref)) {
    return null;
  } else {
    return state["__om_refs"] = cljs.core.conj.call(null, refs, ref);
  }
};
om.core.remove_ref_from_component_BANG_ = function remove_ref_from_component_BANG_(c, ref) {
  var state = c.state;
  var refs = state["__om_refs"];
  if (cljs.core.contains_QMARK_.call(null, refs, ref)) {
    return state["__om_refs"] = cljs.core.disj.call(null, refs, ref);
  } else {
    return null;
  }
};
om.core.observe = function observe(c, ref) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  if (om.core.cursor_QMARK_.call(null, ref)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))].join(""));
  }
  om.core.add_ref_to_component_BANG_.call(null, c, ref);
  om.core._add_dep_BANG_.call(null, ref, c);
  return ref;
};
om.core.unobserve = function unobserve(c, ref) {
  om.core.remove_ref_from_component_BANG_.call(null, c, ref);
  om.core._remove_dep_BANG_.call(null, ref, c);
  return ref;
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.get_renderT = function get_renderT(state) {
  var or__3768__auto__ = state.om$render$T;
  if (cljs.core.truth_(or__3768__auto__)) {
    return or__3768__auto__;
  } else {
    return 0;
  }
};
om.core.render_all = function() {
  var render_all = null;
  var render_all__0 = function() {
    return render_all.call(null, null);
  };
  var render_all__1 = function(state) {
    om.core.refresh_queued = false;
    var seq__21037_21041 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
    var chunk__21038_21042 = null;
    var count__21039_21043 = 0;
    var i__21040_21044 = 0;
    while (true) {
      if (i__21040_21044 < count__21039_21043) {
        var f_21045 = cljs.core._nth.call(null, chunk__21038_21042, i__21040_21044);
        f_21045.call(null);
        var G__21046 = seq__21037_21041;
        var G__21047 = chunk__21038_21042;
        var G__21048 = count__21039_21043;
        var G__21049 = i__21040_21044 + 1;
        seq__21037_21041 = G__21046;
        chunk__21038_21042 = G__21047;
        count__21039_21043 = G__21048;
        i__21040_21044 = G__21049;
        continue;
      } else {
        var temp__4126__auto___21050 = cljs.core.seq.call(null, seq__21037_21041);
        if (temp__4126__auto___21050) {
          var seq__21037_21051__$1 = temp__4126__auto___21050;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__21037_21051__$1)) {
            var c__4555__auto___21052 = cljs.core.chunk_first.call(null, seq__21037_21051__$1);
            var G__21053 = cljs.core.chunk_rest.call(null, seq__21037_21051__$1);
            var G__21054 = c__4555__auto___21052;
            var G__21055 = cljs.core.count.call(null, c__4555__auto___21052);
            var G__21056 = 0;
            seq__21037_21041 = G__21053;
            chunk__21038_21042 = G__21054;
            count__21039_21043 = G__21055;
            i__21040_21044 = G__21056;
            continue;
          } else {
            var f_21057 = cljs.core.first.call(null, seq__21037_21051__$1);
            f_21057.call(null);
            var G__21058 = cljs.core.next.call(null, seq__21037_21051__$1);
            var G__21059 = null;
            var G__21060 = 0;
            var G__21061 = 0;
            seq__21037_21041 = G__21058;
            chunk__21038_21042 = G__21059;
            count__21039_21043 = G__21060;
            i__21040_21044 = G__21061;
            continue;
          }
        } else {
        }
      }
      break;
    }
    if (state == null) {
      return null;
    } else {
      return state.om$render$T = om.core.get_renderT.call(null, state) + 1;
    }
  };
  render_all = function(state) {
    switch(arguments.length) {
      case 0:
        return render_all__0.call(this);
      case 1:
        return render_all__1.call(this, state);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  render_all.cljs$core$IFn$_invoke$arity$0 = render_all__0;
  render_all.cljs$core$IFn$_invoke$arity$1 = render_all__1;
  return render_all;
}();
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_component_QMARK_ = function valid_component_QMARK_(x, f) {
  if (function() {
    var or__3768__auto__ = function() {
      var G__21068 = x;
      if (G__21068) {
        var bit__4449__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3768__auto__ = bit__4449__auto__;
          if (cljs.core.truth_(or__3768__auto__)) {
            return or__3768__auto__;
          } else {
            return G__21068.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__21068.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__21068);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__21068);
      }
    }();
    if (or__3768__auto__) {
      return or__3768__auto__;
    } else {
      var or__3768__auto____$1 = function() {
        var G__21070 = x;
        if (G__21070) {
          var bit__4449__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3768__auto____$1 = bit__4449__auto__;
            if (cljs.core.truth_(or__3768__auto____$1)) {
              return or__3768__auto____$1;
            } else {
              return G__21070.om$core$IRenderProps$;
            }
          }())) {
            return true;
          } else {
            if (!G__21070.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderProps, G__21070);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderProps, G__21070);
        }
      }();
      if (or__3768__auto____$1) {
        return or__3768__auto____$1;
      } else {
        var G__21071 = x;
        if (G__21071) {
          var bit__4449__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3768__auto____$2 = bit__4449__auto__;
            if (cljs.core.truth_(or__3768__auto____$2)) {
              return or__3768__auto____$2;
            } else {
              return G__21071.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__21071.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__21071);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__21071);
        }
      }
    }
  }()) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Invalid Om component fn, "), cljs.core.str(f.name), cljs.core.str(" does not return valid instance")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRender", "IRender", 590822196, null), new cljs.core.Symbol(null, 
    "x", "x", -555367584, null)), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRenderProps", "IRenderProps", 2115139472, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRenderState", "IRenderState", -897673898, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))))].join(""));
  }
};
om.core.valid_opts_QMARK_ = function valid_opts_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "instrument", "instrument", -960698844), null, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), null, new cljs.core.Keyword(null, "key", "key", -1516042587), null, new cljs.core.Keyword(null, "init-state", 
  "init-state", 1450863212), null, new cljs.core.Keyword(null, "state", "state", -1988618099), null, new cljs.core.Keyword(null, "key-fn", "key-fn", -636154479), null, new cljs.core.Keyword(null, "opts", "opts", 155075701), null, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), null, new cljs.core.Keyword(null, "shared", "shared", -384145993), null], null), null), cljs.core.keys.call(null, m));
};
om.core.id = function id(owner) {
  return owner.state["__om_id"];
};
om.core.get_descriptor = function() {
  var get_descriptor = null;
  var get_descriptor__1 = function(f) {
    return get_descriptor.call(null, f, null);
  };
  var get_descriptor__2 = function(f, descriptor) {
    if (f["om$descriptor"] == null) {
      f["om$descriptor"] = React.createFactory(React.createClass(function() {
        var or__3768__auto__ = descriptor;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          var or__3768__auto____$1 = om.core._STAR_descriptor_STAR_;
          if (cljs.core.truth_(or__3768__auto____$1)) {
            return or__3768__auto____$1;
          } else {
            return om.core.pure_descriptor;
          }
        }
      }()));
    } else {
    }
    return f["om$descriptor"];
  };
  get_descriptor = function(f, descriptor) {
    switch(arguments.length) {
      case 1:
        return get_descriptor__1.call(this, f);
      case 2:
        return get_descriptor__2.call(this, f, descriptor);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_descriptor.cljs$core$IFn$_invoke$arity$1 = get_descriptor__1;
  get_descriptor.cljs$core$IFn$_invoke$arity$2 = get_descriptor__2;
  return get_descriptor;
}();
om.core.getf = function() {
  var getf = null;
  var getf__2 = function(f, cursor) {
    if (f instanceof cljs.core.MultiFn) {
      var dv = f.dispatch_fn.call(null, cursor, null);
      return cljs.core.get_method.call(null, f, dv);
    } else {
      return f;
    }
  };
  var getf__3 = function(f, cursor, opts) {
    if (f instanceof cljs.core.MultiFn) {
      var dv = f.dispatch_fn.call(null, cursor, null, opts);
      return cljs.core.get_method.call(null, f, dv);
    } else {
      return f;
    }
  };
  getf = function(f, cursor, opts) {
    switch(arguments.length) {
      case 2:
        return getf__2.call(this, f, cursor);
      case 3:
        return getf__3.call(this, f, cursor, opts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  getf.cljs$core$IFn$_invoke$arity$2 = getf__2;
  getf.cljs$core$IFn$_invoke$arity$3 = getf__3;
  return getf;
}();
om.core.build_STAR_ = function() {
  var build_STAR_ = null;
  var build_STAR___2 = function(f, cursor) {
    return build_STAR_.call(null, f, cursor, null);
  };
  var build_STAR___3 = function(f, cursor, m) {
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    if (m == null || cljs.core.map_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)))))].join(""));
    }
    if (om.core.valid_opts_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :key-fn :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid-opts?", "valid-opts?", 1000038576, null), new cljs.core.Symbol(null, "m", "m", 
      -1021758608, null))))].join(""));
    }
    if (m == null) {
      var shared = om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
      var ctor = om.core.get_descriptor.call(null, om.core.getf.call(null, f, cursor));
      return ctor.call(null, {"children":function(shared, ctor) {
        return function(this$) {
          var ret = f.call(null, cursor, this$);
          om.core.valid_component_QMARK_.call(null, ret, f);
          return ret;
        };
      }(shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_descriptor":om.core._STAR_descriptor_STAR_, "__om_app_state":om.core._STAR_state_STAR_, "__om_root_key":om.core._STAR_root_key_STAR_, "__om_shared":shared, "__om_cursor":cursor});
    } else {
      var map__21073 = m;
      var map__21073__$1 = cljs.core.seq_QMARK_.call(null, map__21073) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21073) : map__21073;
      var opts = cljs.core.get.call(null, map__21073__$1, new cljs.core.Keyword(null, "opts", "opts", 155075701));
      var init_state = cljs.core.get.call(null, map__21073__$1, new cljs.core.Keyword(null, "init-state", "init-state", 1450863212));
      var state = cljs.core.get.call(null, map__21073__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
      var key_fn = cljs.core.get.call(null, map__21073__$1, new cljs.core.Keyword(null, "key-fn", "key-fn", -636154479));
      var key = cljs.core.get.call(null, map__21073__$1, new cljs.core.Keyword(null, "key", "key", -1516042587));
      var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", -1175266204));
      var cursor_SINGLEQUOTE_ = !(dataf == null) ? function() {
        var temp__4124__auto__ = (new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var i = temp__4124__auto__;
          return dataf.call(null, cursor, i);
        } else {
          return dataf.call(null, cursor);
        }
      }() : cursor;
      var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : !(key_fn == null) ? key_fn.call(null, cursor_SINGLEQUOTE_) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348));
      var shared = function() {
        var or__3768__auto__ = (new cljs.core.Keyword(null, "shared", "shared", -384145993)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = om.core.get_descriptor.call(null, om.core.getf.call(null, f, cursor_SINGLEQUOTE_, opts), (new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018)).cljs$core$IFn$_invoke$arity$1(m));
      return ctor.call(null, {"__om_state":state, "__om_instrument":om.core._STAR_instrument_STAR_, "children":opts == null ? function(map__21073, map__21073__$1, opts, init_state, state, key_fn, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var ret = f.call(null, cursor_SINGLEQUOTE_, this$);
          om.core.valid_component_QMARK_.call(null, ret, f);
          return ret;
        };
      }(map__21073, map__21073__$1, opts, init_state, state, key_fn, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) : function(map__21073, map__21073__$1, opts, init_state, state, key_fn, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var ret = f.call(null, cursor_SINGLEQUOTE_, this$, opts);
          om.core.valid_component_QMARK_.call(null, ret, f);
          return ret;
        };
      }(map__21073, map__21073__$1, opts, init_state, state, key_fn, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor), "__om_init_state":init_state, "key":function() {
        var or__3768__auto__ = rkey;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return undefined;
        }
      }(), "__om_app_state":om.core._STAR_state_STAR_, "__om_cursor":cursor_SINGLEQUOTE_, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m), "__om_shared":shared, "__om_descriptor":om.core._STAR_descriptor_STAR_, "__om_root_key":om.core._STAR_root_key_STAR_});
    }
  };
  build_STAR_ = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build_STAR___2.call(this, f, cursor);
      case 3:
        return build_STAR___3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_STAR_.cljs$core$IFn$_invoke$arity$2 = build_STAR___2;
  build_STAR_.cljs$core$IFn$_invoke$arity$3 = build_STAR___3;
  return build_STAR_;
}();
om.core.build = function() {
  var build = null;
  var build__2 = function(f, x) {
    return build.call(null, f, x, null);
  };
  var build__3 = function(f, x, m) {
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    if (m == null || cljs.core.map_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)))))].join(""));
    }
    if (!(om.core._STAR_instrument_STAR_ == null)) {
      var ret = om.core._STAR_instrument_STAR_.call(null, f, x, m);
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "pass", "om.core/pass", -1453289268))) {
        return om.core.build_STAR_.call(null, f, x, m);
      } else {
        return ret;
      }
    } else {
      return om.core.build_STAR_.call(null, f, x, m);
    }
  };
  build = function(f, x, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, x);
      case 3:
        return build__3.call(this, f, x, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    if (m == null || cljs.core.map_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)))))].join(""));
    }
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.setup = function setup(state, key, tx_listen) {
  if (function() {
    var G__21082 = state;
    if (G__21082) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__21082.om$core$INotify$;
        }
      }())) {
        return true;
      } else {
        if (!G__21082.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__21082);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__21082);
    }
  }()) {
  } else {
    var properties_21090 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var listeners_21091 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var render_queue_21092 = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
    var x21083_21093 = state;
    x21083_21093.om$core$IRenderQueue$ = true;
    x21083_21093.om$core$IRenderQueue$_get_queue$arity$1 = function(x21083_21093, properties_21090, listeners_21091, render_queue_21092) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.deref.call(null, render_queue_21092);
      };
    }(x21083_21093, properties_21090, listeners_21091, render_queue_21092);
    x21083_21093.om$core$IRenderQueue$_queue_render_BANG_$arity$2 = function(x21083_21093, properties_21090, listeners_21091, render_queue_21092) {
      return function(this$, c) {
        var this$__$1 = this;
        if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, render_queue_21092), c)) {
          return null;
        } else {
          cljs.core.swap_BANG_.call(null, render_queue_21092, cljs.core.conj, c);
          return cljs.core.swap_BANG_.call(null, this$__$1, cljs.core.identity);
        }
      };
    }(x21083_21093, properties_21090, listeners_21091, render_queue_21092);
    x21083_21093.om$core$IRenderQueue$_empty_queue_BANG_$arity$1 = function(x21083_21093, properties_21090, listeners_21091, render_queue_21092) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.swap_BANG_.call(null, render_queue_21092, cljs.core.empty);
      };
    }(x21083_21093, properties_21090, listeners_21091, render_queue_21092);
    x21083_21093.om$core$INotify$ = true;
    x21083_21093.om$core$INotify$_listen_BANG_$arity$3 = function(x21083_21093, properties_21090, listeners_21091, render_queue_21092) {
      return function(this$, key__$1, tx_listen__$1) {
        var this$__$1 = this;
        if (tx_listen__$1 == null) {
        } else {
          cljs.core.swap_BANG_.call(null, listeners_21091, cljs.core.assoc, key__$1, tx_listen__$1);
        }
        return this$__$1;
      };
    }(x21083_21093, properties_21090, listeners_21091, render_queue_21092);
    x21083_21093.om$core$INotify$_unlisten_BANG_$arity$2 = function(x21083_21093, properties_21090, listeners_21091, render_queue_21092) {
      return function(this$, key__$1) {
        var this$__$1 = this;
        cljs.core.swap_BANG_.call(null, listeners_21091, cljs.core.dissoc, key__$1);
        return this$__$1;
      };
    }(x21083_21093, properties_21090, listeners_21091, render_queue_21092);
    x21083_21093.om$core$INotify$_notify_BANG_$arity$3 = function(x21083_21093, properties_21090, listeners_21091, render_queue_21092) {
      return function(this$, tx_data, root_cursor) {
        var this$__$1 = this;
        var seq__21084_21094 = cljs.core.seq.call(null, cljs.core.deref.call(null, listeners_21091));
        var chunk__21085_21095 = null;
        var count__21086_21096 = 0;
        var i__21087_21097 = 0;
        while (true) {
          if (i__21087_21097 < count__21086_21096) {
            var vec__21088_21098 = cljs.core._nth.call(null, chunk__21085_21095, i__21087_21097);
            var __21099 = cljs.core.nth.call(null, vec__21088_21098, 0, null);
            var f_21100 = cljs.core.nth.call(null, vec__21088_21098, 1, null);
            f_21100.call(null, tx_data, root_cursor);
            var G__21101 = seq__21084_21094;
            var G__21102 = chunk__21085_21095;
            var G__21103 = count__21086_21096;
            var G__21104 = i__21087_21097 + 1;
            seq__21084_21094 = G__21101;
            chunk__21085_21095 = G__21102;
            count__21086_21096 = G__21103;
            i__21087_21097 = G__21104;
            continue;
          } else {
            var temp__4126__auto___21105 = cljs.core.seq.call(null, seq__21084_21094);
            if (temp__4126__auto___21105) {
              var seq__21084_21106__$1 = temp__4126__auto___21105;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__21084_21106__$1)) {
                var c__4555__auto___21107 = cljs.core.chunk_first.call(null, seq__21084_21106__$1);
                var G__21108 = cljs.core.chunk_rest.call(null, seq__21084_21106__$1);
                var G__21109 = c__4555__auto___21107;
                var G__21110 = cljs.core.count.call(null, c__4555__auto___21107);
                var G__21111 = 0;
                seq__21084_21094 = G__21108;
                chunk__21085_21095 = G__21109;
                count__21086_21096 = G__21110;
                i__21087_21097 = G__21111;
                continue;
              } else {
                var vec__21089_21112 = cljs.core.first.call(null, seq__21084_21106__$1);
                var __21113 = cljs.core.nth.call(null, vec__21089_21112, 0, null);
                var f_21114 = cljs.core.nth.call(null, vec__21089_21112, 1, null);
                f_21114.call(null, tx_data, root_cursor);
                var G__21115 = cljs.core.next.call(null, seq__21084_21106__$1);
                var G__21116 = null;
                var G__21117 = 0;
                var G__21118 = 0;
                seq__21084_21094 = G__21115;
                chunk__21085_21095 = G__21116;
                count__21086_21096 = G__21117;
                i__21087_21097 = G__21118;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return this$__$1;
      };
    }(x21083_21093, properties_21090, listeners_21091, render_queue_21092);
    x21083_21093.om$core$IRootProperties$ = true;
    x21083_21093.om$core$IRootProperties$_set_property_BANG_$arity$4 = function(x21083_21093, properties_21090, listeners_21091, render_queue_21092) {
      return function(_, id, k, v) {
        var ___$1 = this;
        return cljs.core.swap_BANG_.call(null, properties_21090, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [id, k], null), v);
      };
    }(x21083_21093, properties_21090, listeners_21091, render_queue_21092);
    x21083_21093.om$core$IRootProperties$_remove_property_BANG_$arity$3 = function(x21083_21093, properties_21090, listeners_21091, render_queue_21092) {
      return function(_, id, k) {
        var ___$1 = this;
        return cljs.core.swap_BANG_.call(null, properties_21090, cljs.core.dissoc, id, k);
      };
    }(x21083_21093, properties_21090, listeners_21091, render_queue_21092);
    x21083_21093.om$core$IRootProperties$_remove_properties_BANG_$arity$2 = function(x21083_21093, properties_21090, listeners_21091, render_queue_21092) {
      return function(_, id) {
        var ___$1 = this;
        return cljs.core.swap_BANG_.call(null, properties_21090, cljs.core.dissoc, id);
      };
    }(x21083_21093, properties_21090, listeners_21091, render_queue_21092);
    x21083_21093.om$core$IRootProperties$_get_property$arity$3 = function(x21083_21093, properties_21090, listeners_21091, render_queue_21092) {
      return function(_, id, k) {
        var ___$1 = this;
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, properties_21090), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [id, k], null));
      };
    }(x21083_21093, properties_21090, listeners_21091, render_queue_21092);
  }
  return om.core._listen_BANG_.call(null, state, key, tx_listen);
};
om.core.tear_down = function tear_down(state, key) {
  return om.core._unlisten_BANG_.call(null, state, key);
};
om.core.tag_root_key = function tag_root_key(cursor, root_key) {
  if (om.core.cursor_QMARK_.call(null, cursor)) {
    var x21120 = cljs.core.clone.call(null, cursor);
    x21120.om$core$IRootKey$ = true;
    x21120.om$core$IRootKey$_root_key$arity$1 = function(x21120) {
      return function(this$) {
        var this$__$1 = this;
        return root_key;
      };
    }(x21120);
    x21120.om$core$IAdapt$ = true;
    x21120.om$core$IAdapt$_adapt$arity$2 = function(x21120) {
      return function(this$, other) {
        var this$__$1 = this;
        return tag_root_key.call(null, om.core.adapt.call(null, cursor, other), root_key);
      };
    }(x21120);
    x21120.cljs$core$ICloneable$ = true;
    x21120.cljs$core$ICloneable$_clone$arity$1 = function(x21120) {
      return function(this$) {
        var this$__$1 = this;
        return tag_root_key.call(null, cljs.core.clone.call(null, cursor), root_key);
      };
    }(x21120);
    return x21120;
  } else {
    return cursor;
  }
};
om.core.root = function root(f, value, p__21121) {
  var map__21184 = p__21121;
  var map__21184__$1 = cljs.core.seq_QMARK_.call(null, map__21184) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21184) : map__21184;
  var options = map__21184__$1;
  var raf = cljs.core.get.call(null, map__21184__$1, new cljs.core.Keyword(null, "raf", "raf", -1295410152));
  var adapt = cljs.core.get.call(null, map__21184__$1, new cljs.core.Keyword(null, "adapt", "adapt", -1817022327));
  var descriptor = cljs.core.get.call(null, map__21184__$1, new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018));
  var instrument = cljs.core.get.call(null, map__21184__$1, new cljs.core.Keyword(null, "instrument", "instrument", -960698844));
  var path = cljs.core.get.call(null, map__21184__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
  var tx_listen = cljs.core.get.call(null, map__21184__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367));
  var target = cljs.core.get.call(null, map__21184__$1, new cljs.core.Keyword(null, "target", "target", 253001721));
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("First argument must be a function"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  if (!(target == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("No target specified to om.core/root"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "target", "target", 1893533248, null)))))].join(""));
  }
  var roots_SINGLEQUOTE__21246 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__21246, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__21246, target).call(null);
  } else {
  }
  var watch_key = cljs.core.gensym.call(null);
  var state = function() {
    var G__21185 = value;
    if (G__21185) {
      var bit__4449__auto__ = G__21185.cljs$lang$protocol_mask$partition1$ & 16384;
      if (bit__4449__auto__ || G__21185.cljs$core$IAtom$) {
        return true;
      } else {
        if (!G__21185.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__21185);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__21185);
    }
  }() ? value : cljs.core.atom.call(null, value);
  var state__$1 = om.core.setup.call(null, state, watch_key, tx_listen);
  var adapt__$1 = function() {
    var or__3768__auto__ = adapt;
    if (cljs.core.truth_(or__3768__auto__)) {
      return or__3768__auto__;
    } else {
      return cljs.core.identity;
    }
  }();
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 253001721), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367), new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, "adapt", "adapt", -1817022327));
  var ret = cljs.core.atom.call(null, null);
  var rootf = function(watch_key, state, state__$1, adapt__$1, m, ret, map__21184, map__21184__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target) {
    return function rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = adapt__$1.call(null, om.core.tag_root_key.call(null, path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path), watch_key));
      if (cljs.core.truth_(om.core._get_property.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "skip-render-root", "skip-render-root", -5219643)))) {
      } else {
        var c_21247 = om.dom.render.call(null, function() {
          var _STAR_descriptor_STAR_21216 = om.core._STAR_descriptor_STAR_;
          var _STAR_instrument_STAR_21217 = om.core._STAR_instrument_STAR_;
          var _STAR_state_STAR_21218 = om.core._STAR_state_STAR_;
          var _STAR_root_key_STAR_21219 = om.core._STAR_root_key_STAR_;
          om.core._STAR_descriptor_STAR_ = descriptor;
          om.core._STAR_instrument_STAR_ = instrument;
          om.core._STAR_state_STAR_ = state__$1;
          om.core._STAR_root_key_STAR_ = watch_key;
          try {
            return om.core.build.call(null, f, cursor, m);
          } finally {
            om.core._STAR_root_key_STAR_ = _STAR_root_key_STAR_21219;
            om.core._STAR_state_STAR_ = _STAR_state_STAR_21218;
            om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_21217;
            om.core._STAR_descriptor_STAR_ = _STAR_descriptor_STAR_21216;
          }
        }(), target);
        if (cljs.core.deref.call(null, ret) == null) {
          cljs.core.reset_BANG_.call(null, ret, c_21247);
        } else {
        }
      }
      var queue_21248 = om.core._get_queue.call(null, state__$1);
      if (cljs.core.empty_QMARK_.call(null, queue_21248)) {
      } else {
        var seq__21220_21249 = cljs.core.seq.call(null, queue_21248);
        var chunk__21221_21250 = null;
        var count__21222_21251 = 0;
        var i__21223_21252 = 0;
        while (true) {
          if (i__21223_21252 < count__21222_21251) {
            var c_21253 = cljs.core._nth.call(null, chunk__21221_21250, i__21223_21252);
            if (cljs.core.truth_(c_21253.isMounted())) {
              var temp__4126__auto___21254 = c_21253.state["__om_next_cursor"];
              if (cljs.core.truth_(temp__4126__auto___21254)) {
                var next_props_21255 = temp__4126__auto___21254;
                c_21253.props["__om_cursor"] = next_props_21255;
                c_21253.state["__om_next_cursor"] = null;
              } else {
              }
              if (cljs.core.truth_(function() {
                var or__3768__auto__ = !function() {
                  var G__21225 = om.core.children.call(null, c_21253);
                  if (G__21225) {
                    var bit__4449__auto__ = null;
                    if (cljs.core.truth_(function() {
                      var or__3768__auto__ = bit__4449__auto__;
                      if (cljs.core.truth_(or__3768__auto__)) {
                        return or__3768__auto__;
                      } else {
                        return G__21225.om$core$ICheckState$;
                      }
                    }())) {
                      return true;
                    } else {
                      if (!G__21225.cljs$lang$protocol_mask$partition$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICheckState, G__21225);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICheckState, G__21225);
                  }
                }();
                if (or__3768__auto__) {
                  return or__3768__auto__;
                } else {
                  return c_21253.shouldComponentUpdate(c_21253.props, c_21253.state);
                }
              }())) {
                c_21253.forceUpdate();
              } else {
              }
            } else {
            }
            var G__21256 = seq__21220_21249;
            var G__21257 = chunk__21221_21250;
            var G__21258 = count__21222_21251;
            var G__21259 = i__21223_21252 + 1;
            seq__21220_21249 = G__21256;
            chunk__21221_21250 = G__21257;
            count__21222_21251 = G__21258;
            i__21223_21252 = G__21259;
            continue;
          } else {
            var temp__4126__auto___21260 = cljs.core.seq.call(null, seq__21220_21249);
            if (temp__4126__auto___21260) {
              var seq__21220_21261__$1 = temp__4126__auto___21260;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__21220_21261__$1)) {
                var c__4555__auto___21262 = cljs.core.chunk_first.call(null, seq__21220_21261__$1);
                var G__21263 = cljs.core.chunk_rest.call(null, seq__21220_21261__$1);
                var G__21264 = c__4555__auto___21262;
                var G__21265 = cljs.core.count.call(null, c__4555__auto___21262);
                var G__21266 = 0;
                seq__21220_21249 = G__21263;
                chunk__21221_21250 = G__21264;
                count__21222_21251 = G__21265;
                i__21223_21252 = G__21266;
                continue;
              } else {
                var c_21267 = cljs.core.first.call(null, seq__21220_21261__$1);
                if (cljs.core.truth_(c_21267.isMounted())) {
                  var temp__4126__auto___21268__$1 = c_21267.state["__om_next_cursor"];
                  if (cljs.core.truth_(temp__4126__auto___21268__$1)) {
                    var next_props_21269 = temp__4126__auto___21268__$1;
                    c_21267.props["__om_cursor"] = next_props_21269;
                    c_21267.state["__om_next_cursor"] = null;
                  } else {
                  }
                  if (cljs.core.truth_(function() {
                    var or__3768__auto__ = !function() {
                      var G__21227 = om.core.children.call(null, c_21267);
                      if (G__21227) {
                        var bit__4449__auto__ = null;
                        if (cljs.core.truth_(function() {
                          var or__3768__auto__ = bit__4449__auto__;
                          if (cljs.core.truth_(or__3768__auto__)) {
                            return or__3768__auto__;
                          } else {
                            return G__21227.om$core$ICheckState$;
                          }
                        }())) {
                          return true;
                        } else {
                          if (!G__21227.cljs$lang$protocol_mask$partition$) {
                            return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICheckState, G__21227);
                          } else {
                            return false;
                          }
                        }
                      } else {
                        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICheckState, G__21227);
                      }
                    }();
                    if (or__3768__auto__) {
                      return or__3768__auto__;
                    } else {
                      return c_21267.shouldComponentUpdate(c_21267.props, c_21267.state);
                    }
                  }())) {
                    c_21267.forceUpdate();
                  } else {
                  }
                } else {
                }
                var G__21270 = cljs.core.next.call(null, seq__21220_21261__$1);
                var G__21271 = null;
                var G__21272 = 0;
                var G__21273 = 0;
                seq__21220_21249 = G__21270;
                chunk__21221_21250 = G__21271;
                count__21222_21251 = G__21272;
                i__21223_21252 = G__21273;
                continue;
              }
            } else {
            }
          }
          break;
        }
        om.core._empty_queue_BANG_.call(null, state__$1);
      }
      var _refs_21274 = cljs.core.deref.call(null, om.core._refs);
      if (cljs.core.empty_QMARK_.call(null, _refs_21274)) {
      } else {
        var seq__21228_21275 = cljs.core.seq.call(null, _refs_21274);
        var chunk__21229_21276 = null;
        var count__21230_21277 = 0;
        var i__21231_21278 = 0;
        while (true) {
          if (i__21231_21278 < count__21230_21277) {
            var vec__21232_21279 = cljs.core._nth.call(null, chunk__21229_21276, i__21231_21278);
            var path_21280__$1 = cljs.core.nth.call(null, vec__21232_21279, 0, null);
            var cs_21281 = cljs.core.nth.call(null, vec__21232_21279, 1, null);
            var cs_21282__$1 = cljs.core.deref.call(null, cs_21281);
            var seq__21233_21283 = cljs.core.seq.call(null, cs_21282__$1);
            var chunk__21234_21284 = null;
            var count__21235_21285 = 0;
            var i__21236_21286 = 0;
            while (true) {
              if (i__21236_21286 < count__21235_21285) {
                var vec__21237_21287 = cljs.core._nth.call(null, chunk__21234_21284, i__21236_21286);
                var id_21288 = cljs.core.nth.call(null, vec__21237_21287, 0, null);
                var c_21289 = cljs.core.nth.call(null, vec__21237_21287, 1, null);
                if (cljs.core.truth_(c_21289.shouldComponentUpdate(c_21289.props, c_21289.state))) {
                  c_21289.forceUpdate();
                } else {
                }
                var G__21290 = seq__21233_21283;
                var G__21291 = chunk__21234_21284;
                var G__21292 = count__21235_21285;
                var G__21293 = i__21236_21286 + 1;
                seq__21233_21283 = G__21290;
                chunk__21234_21284 = G__21291;
                count__21235_21285 = G__21292;
                i__21236_21286 = G__21293;
                continue;
              } else {
                var temp__4126__auto___21294 = cljs.core.seq.call(null, seq__21233_21283);
                if (temp__4126__auto___21294) {
                  var seq__21233_21295__$1 = temp__4126__auto___21294;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__21233_21295__$1)) {
                    var c__4555__auto___21296 = cljs.core.chunk_first.call(null, seq__21233_21295__$1);
                    var G__21297 = cljs.core.chunk_rest.call(null, seq__21233_21295__$1);
                    var G__21298 = c__4555__auto___21296;
                    var G__21299 = cljs.core.count.call(null, c__4555__auto___21296);
                    var G__21300 = 0;
                    seq__21233_21283 = G__21297;
                    chunk__21234_21284 = G__21298;
                    count__21235_21285 = G__21299;
                    i__21236_21286 = G__21300;
                    continue;
                  } else {
                    var vec__21238_21301 = cljs.core.first.call(null, seq__21233_21295__$1);
                    var id_21302 = cljs.core.nth.call(null, vec__21238_21301, 0, null);
                    var c_21303 = cljs.core.nth.call(null, vec__21238_21301, 1, null);
                    if (cljs.core.truth_(c_21303.shouldComponentUpdate(c_21303.props, c_21303.state))) {
                      c_21303.forceUpdate();
                    } else {
                    }
                    var G__21304 = cljs.core.next.call(null, seq__21233_21295__$1);
                    var G__21305 = null;
                    var G__21306 = 0;
                    var G__21307 = 0;
                    seq__21233_21283 = G__21304;
                    chunk__21234_21284 = G__21305;
                    count__21235_21285 = G__21306;
                    i__21236_21286 = G__21307;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            var G__21308 = seq__21228_21275;
            var G__21309 = chunk__21229_21276;
            var G__21310 = count__21230_21277;
            var G__21311 = i__21231_21278 + 1;
            seq__21228_21275 = G__21308;
            chunk__21229_21276 = G__21309;
            count__21230_21277 = G__21310;
            i__21231_21278 = G__21311;
            continue;
          } else {
            var temp__4126__auto___21312 = cljs.core.seq.call(null, seq__21228_21275);
            if (temp__4126__auto___21312) {
              var seq__21228_21313__$1 = temp__4126__auto___21312;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__21228_21313__$1)) {
                var c__4555__auto___21314 = cljs.core.chunk_first.call(null, seq__21228_21313__$1);
                var G__21315 = cljs.core.chunk_rest.call(null, seq__21228_21313__$1);
                var G__21316 = c__4555__auto___21314;
                var G__21317 = cljs.core.count.call(null, c__4555__auto___21314);
                var G__21318 = 0;
                seq__21228_21275 = G__21315;
                chunk__21229_21276 = G__21316;
                count__21230_21277 = G__21317;
                i__21231_21278 = G__21318;
                continue;
              } else {
                var vec__21239_21319 = cljs.core.first.call(null, seq__21228_21313__$1);
                var path_21320__$1 = cljs.core.nth.call(null, vec__21239_21319, 0, null);
                var cs_21321 = cljs.core.nth.call(null, vec__21239_21319, 1, null);
                var cs_21322__$1 = cljs.core.deref.call(null, cs_21321);
                var seq__21240_21323 = cljs.core.seq.call(null, cs_21322__$1);
                var chunk__21241_21324 = null;
                var count__21242_21325 = 0;
                var i__21243_21326 = 0;
                while (true) {
                  if (i__21243_21326 < count__21242_21325) {
                    var vec__21244_21327 = cljs.core._nth.call(null, chunk__21241_21324, i__21243_21326);
                    var id_21328 = cljs.core.nth.call(null, vec__21244_21327, 0, null);
                    var c_21329 = cljs.core.nth.call(null, vec__21244_21327, 1, null);
                    if (cljs.core.truth_(c_21329.shouldComponentUpdate(c_21329.props, c_21329.state))) {
                      c_21329.forceUpdate();
                    } else {
                    }
                    var G__21330 = seq__21240_21323;
                    var G__21331 = chunk__21241_21324;
                    var G__21332 = count__21242_21325;
                    var G__21333 = i__21243_21326 + 1;
                    seq__21240_21323 = G__21330;
                    chunk__21241_21324 = G__21331;
                    count__21242_21325 = G__21332;
                    i__21243_21326 = G__21333;
                    continue;
                  } else {
                    var temp__4126__auto___21334__$1 = cljs.core.seq.call(null, seq__21240_21323);
                    if (temp__4126__auto___21334__$1) {
                      var seq__21240_21335__$1 = temp__4126__auto___21334__$1;
                      if (cljs.core.chunked_seq_QMARK_.call(null, seq__21240_21335__$1)) {
                        var c__4555__auto___21336 = cljs.core.chunk_first.call(null, seq__21240_21335__$1);
                        var G__21337 = cljs.core.chunk_rest.call(null, seq__21240_21335__$1);
                        var G__21338 = c__4555__auto___21336;
                        var G__21339 = cljs.core.count.call(null, c__4555__auto___21336);
                        var G__21340 = 0;
                        seq__21240_21323 = G__21337;
                        chunk__21241_21324 = G__21338;
                        count__21242_21325 = G__21339;
                        i__21243_21326 = G__21340;
                        continue;
                      } else {
                        var vec__21245_21341 = cljs.core.first.call(null, seq__21240_21335__$1);
                        var id_21342 = cljs.core.nth.call(null, vec__21245_21341, 0, null);
                        var c_21343 = cljs.core.nth.call(null, vec__21245_21341, 1, null);
                        if (cljs.core.truth_(c_21343.shouldComponentUpdate(c_21343.props, c_21343.state))) {
                          c_21343.forceUpdate();
                        } else {
                        }
                        var G__21344 = cljs.core.next.call(null, seq__21240_21335__$1);
                        var G__21345 = null;
                        var G__21346 = 0;
                        var G__21347 = 0;
                        seq__21240_21323 = G__21344;
                        chunk__21241_21324 = G__21345;
                        count__21242_21325 = G__21346;
                        i__21243_21326 = G__21347;
                        continue;
                      }
                    } else {
                    }
                  }
                  break;
                }
                var G__21348 = cljs.core.next.call(null, seq__21228_21313__$1);
                var G__21349 = null;
                var G__21350 = 0;
                var G__21351 = 0;
                seq__21228_21275 = G__21348;
                chunk__21229_21276 = G__21349;
                count__21230_21277 = G__21350;
                i__21231_21278 = G__21351;
                continue;
              }
            } else {
            }
          }
          break;
        }
      }
      om.core._set_property_BANG_.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "skip-render-root", "skip-render-root", -5219643), true);
      return cljs.core.deref.call(null, ret);
    };
  }(watch_key, state, state__$1, adapt__$1, m, ret, map__21184, map__21184__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__21184, map__21184__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target) {
    return function(_, ___$1, o, n) {
      if (cljs.core.not.call(null, om.core._get_property.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "ignore", "ignore", -1631542033))) && !(o === n)) {
        om.core._set_property_BANG_.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "skip-render-root", "skip-render-root", -5219643), false);
      } else {
      }
      om.core._set_property_BANG_.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "ignore", "ignore", -1631542033), false);
      if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
      } else {
        cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
      }
      if (cljs.core.truth_(om.core.refresh_queued)) {
        return null;
      } else {
        om.core.refresh_queued = true;
        if (raf === false || !(typeof requestAnimationFrame !== "undefined")) {
          return setTimeout(function(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__21184, map__21184__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target) {
            return function() {
              return om.core.render_all.call(null, state__$1);
            };
          }(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__21184, map__21184__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target), 16);
        } else {
          if (cljs.core.fn_QMARK_.call(null, raf)) {
            return raf.call(null);
          } else {
            return requestAnimationFrame(function(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__21184, map__21184__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target) {
              return function() {
                return om.core.render_all.call(null, state__$1);
              };
            }(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__21184, map__21184__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target));
          }
        }
      }
    };
  }(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__21184, map__21184__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target));
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__21184, map__21184__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target) {
    return function() {
      om.core._remove_properties_BANG_.call(null, state__$1, watch_key);
      cljs.core.remove_watch.call(null, state__$1, watch_key);
      om.core.tear_down.call(null, state__$1, watch_key);
      cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
      return React.unmountComponentAtNode(target);
    };
  }(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__21184, map__21184__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target));
  return rootf.call(null);
};
om.core.detach_root = function detach_root(target) {
  if (cljs.core.truth_(goog.dom.isElement(target))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("gdom", "isElement", "gdom/isElement", 465934354, null), new cljs.core.Symbol(null, "target", "target", 1893533248, null))))].join(""));
  }
  var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, om.core.roots), target);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    return f.call(null);
  } else {
    return null;
  }
};
om.core.transactable_QMARK_ = function transactable_QMARK_(x) {
  var G__21353 = x;
  if (G__21353) {
    var bit__4449__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3768__auto__ = bit__4449__auto__;
      if (cljs.core.truth_(or__3768__auto__)) {
        return or__3768__auto__;
      } else {
        return G__21353.om$core$ITransact$;
      }
    }())) {
      return true;
    } else {
      if (!G__21353.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ITransact, G__21353);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ITransact, G__21353);
  }
};
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return transact_BANG_.call(null, cursor, korks, f, null);
  };
  var transact_BANG___4 = function(cursor, korks, f, tag) {
    if (om.core.transactable_QMARK_.call(null, cursor)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "transactable?", "transactable?", 780536292, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
    }
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._transact_BANG_.call(null, cursor, korks__$1, f, tag);
  };
  transact_BANG_ = function(cursor, korks, f, tag) {
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, v) {
    if (om.core.cursor_QMARK_.call(null, cursor)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
    }
    return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
      return v;
    }, null);
  };
  var update_BANG___3 = function(cursor, korks, v) {
    if (om.core.cursor_QMARK_.call(null, cursor)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
    }
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, null);
  };
  var update_BANG___4 = function(cursor, korks, v, tag) {
    if (om.core.cursor_QMARK_.call(null, cursor)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
    }
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, tag);
  };
  update_BANG_ = function(cursor, korks, v, tag) {
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, korks);
      case 3:
        return update_BANG___3.call(this, cursor, korks, v);
      case 4:
        return update_BANG___4.call(this, cursor, korks, v, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  return update_BANG_;
}();
om.core.commit_BANG_ = function commit_BANG_(cursor, korks, f) {
  if (om.core.cursor_QMARK_.call(null, cursor)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
  }
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  var key = function() {
    var G__21355 = cursor;
    if (G__21355) {
      var bit__4449__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3768__auto__ = bit__4449__auto__;
        if (cljs.core.truth_(or__3768__auto__)) {
          return or__3768__auto__;
        } else {
          return G__21355.om$core$IRootKey$;
        }
      }())) {
        return true;
      } else {
        if (!G__21355.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRootKey, G__21355);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRootKey, G__21355);
    }
  }() ? om.core._root_key.call(null, cursor) : null;
  var app_state = om.core.state.call(null, cursor);
  var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
  var cpath = om.core.path.call(null, cursor);
  var rpath = cljs.core.into.call(null, cpath, korks__$1);
  if (cljs.core.truth_(key)) {
    om.core._set_property_BANG_.call(null, app_state, key, new cljs.core.Keyword(null, "ignore", "ignore", -1631542033), true);
  } else {
  }
  if (cljs.core.empty_QMARK_.call(null, rpath)) {
    return cljs.core.swap_BANG_.call(null, app_state, f);
  } else {
    return cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, rpath, f);
  }
};
om.core.get_node = function() {
  var get_node = null;
  var get_node__1 = function(owner) {
    return owner.getDOMNode();
  };
  var get_node__2 = function(owner, name) {
    if (typeof name === "string") {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "string?", "string?", -1129175764, null), new cljs.core.Symbol(null, "name", "name", -810760592, null))))].join(""));
    }
    var temp__4126__auto__ = owner.refs;
    if (cljs.core.truth_(temp__4126__auto__)) {
      var refs = temp__4126__auto__;
      return refs[name].getDOMNode();
    } else {
      return null;
    }
  };
  get_node = function(owner, name) {
    switch(arguments.length) {
      case 1:
        return get_node__1.call(this, owner);
      case 2:
        return get_node__2.call(this, owner, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_node.cljs$core$IFn$_invoke$arity$1 = get_node__1;
  get_node.cljs$core$IFn$_invoke$arity$2 = get_node__2;
  return get_node;
}();
om.core.mounted_QMARK_ = function mounted_QMARK_(owner) {
  return owner.isMounted();
};
om.core.set_state_BANG_ = function() {
  var set_state_BANG_ = null;
  var set_state_BANG___2 = function(owner, v) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    return om.core._set_state_BANG_.call(null, owner, v, true);
  };
  var set_state_BANG___3 = function(owner, korks, v) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, true);
  };
  set_state_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_BANG___2;
  set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_BANG___3;
  return set_state_BANG_;
}();
om.core.set_state_nr_BANG_ = function() {
  var set_state_nr_BANG_ = null;
  var set_state_nr_BANG___2 = function(owner, v) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    return om.core._set_state_BANG_.call(null, owner, v, false);
  };
  var set_state_nr_BANG___3 = function(owner, korks, v) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, false);
  };
  set_state_nr_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_nr_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_nr_BANG___2;
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_nr_BANG___3;
  return set_state_nr_BANG_;
}();
om.core.update_state_BANG_ = function() {
  var update_state_BANG_ = null;
  var update_state_BANG___2 = function(owner, f) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    return om.core.set_state_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_BANG___3 = function(owner, korks, f) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    return om.core.set_state_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_BANG___2;
  update_state_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_BANG___3;
  return update_state_BANG_;
}();
om.core.update_state_nr_BANG_ = function() {
  var update_state_nr_BANG_ = null;
  var update_state_nr_BANG___2 = function(owner, f) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    return om.core.set_state_nr_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_nr_BANG___3 = function(owner, korks, f) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    return om.core.set_state_nr_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_nr_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_nr_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_nr_BANG___2;
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_nr_BANG___3;
  return update_state_nr_BANG_;
}();
om.core.refresh_BANG_ = function refresh_BANG_(owner) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  return om.core.update_state_BANG_.call(null, owner, cljs.core.identity);
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    return om.core._get_render_state.call(null, owner);
  };
  var get_render_state__2 = function(owner, korks) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_render_state.call(null, owner, ks);
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
goog.provide("gridlife.langton");
goog.require("cljs.core");
goog.require("gridlife.gamemodel");
goog.require("gridlife.gridmodel");
gridlife.langton.LangtonAnt = function(location, heading, __meta, __extmap, __hash) {
  this.location = location;
  this.heading = heading;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
gridlife.langton.LangtonAnt.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4371__auto__, k__4372__auto__) {
  var self__ = this;
  var this__4371__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4371__auto____$1, k__4372__auto__, null);
};
gridlife.langton.LangtonAnt.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4373__auto__, k11296, else__4374__auto__) {
  var self__ = this;
  var this__4373__auto____$1 = this;
  var G__11298 = k11296 instanceof cljs.core.Keyword ? k11296.fqn : null;
  switch(G__11298) {
    case "heading":
      return self__.heading;
      break;
    case "location":
      return self__.location;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k11296, else__4374__auto__);
  }
};
gridlife.langton.LangtonAnt.prototype.gridlife$gamemodel$game$ = true;
gridlife.langton.LangtonAnt.prototype.gridlife$gamemodel$game$game_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return "Langton's Ant";
};
gridlife.langton.LangtonAnt.prototype.gridlife$gamemodel$game$to_str$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  [cljs.core.str("Langton's Ant: ")].join("");
  return self__.heading;
};
gridlife.langton.LangtonAnt.prototype.gridlife$gamemodel$game$tick$arity$2 = function(_, gridmodel) {
  var self__ = this;
  var ___$1 = this;
  var model = (new cljs.core.Keyword(null, "model", "model", 331153215)).cljs$core$IFn$_invoke$arity$1(gridmodel);
  var cells_wide = (new cljs.core.Keyword(null, "cells-wide", "cells-wide", -1579921448)).cljs$core$IFn$_invoke$arity$1(gridmodel);
  var cells_high = (new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465)).cljs$core$IFn$_invoke$arity$1(gridmodel);
  var current_cell_contents = cljs.core.get.call(null, model, self__.location);
  var new_cell_contents = gridlife.gridmodel.toggle_color.call(null, current_cell_contents);
  var new_heading_f = gridlife.gridmodel.white_QMARK_.call(null, current_cell_contents) ? gridlife.gridmodel.turn_left : gridlife.gridmodel.turn_right;
  var new_heading = new_heading_f.call(null, self__.heading);
  var new_model = cljs.core.assoc.call(null, model, self__.location, new_cell_contents);
  var new_location = gridlife.gridmodel.new_location.call(null, cells_wide, cells_high, self__.location, new_heading, 1);
  var new_ant = new gridlife.langton.LangtonAnt(new_location, new_heading, null, null, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, gridmodel, new cljs.core.Keyword(null, "model", "model", 331153215), new_model), new_ant, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new_location, "red"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.location, 
  cljs.core.name.call(null, new_cell_contents)], null)], null)], null);
};
gridlife.langton.LangtonAnt.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4385__auto__, writer__4386__auto__, opts__4387__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  var pr_pair__4388__auto__ = function(this__4385__auto____$1) {
    return function(keyval__4389__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4386__auto__, cljs.core.pr_writer, "", " ", "", opts__4387__auto__, keyval__4389__auto__);
    };
  }(this__4385__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4386__auto__, pr_pair__4388__auto__, "#gridlife.langton.LangtonAnt{", ", ", "}", opts__4387__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "location", "location", 1815599388), self__.location], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "heading", "heading", -1312171873), self__.heading], null)], null), self__.__extmap));
};
gridlife.langton.LangtonAnt.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4369__auto__) {
  var self__ = this;
  var this__4369__auto____$1 = this;
  return self__.__meta;
};
gridlife.langton.LangtonAnt.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4365__auto__) {
  var self__ = this;
  var this__4365__auto____$1 = this;
  return new gridlife.langton.LangtonAnt(self__.location, self__.heading, self__.__meta, self__.__extmap, self__.__hash);
};
gridlife.langton.LangtonAnt.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
gridlife.langton.LangtonAnt.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4366__auto__) {
  var self__ = this;
  var this__4366__auto____$1 = this;
  var h__4189__auto__ = self__.__hash;
  if (!(h__4189__auto__ == null)) {
    return h__4189__auto__;
  } else {
    var h__4189__auto____$1 = cljs.core.hash_imap.call(null, this__4366__auto____$1);
    self__.__hash = h__4189__auto____$1;
    return h__4189__auto____$1;
  }
};
gridlife.langton.LangtonAnt.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4367__auto__, other__4368__auto__) {
  var self__ = this;
  var this__4367__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3756__auto__ = other__4368__auto__;
    if (cljs.core.truth_(and__3756__auto__)) {
      return this__4367__auto____$1.constructor === other__4368__auto__.constructor && cljs.core.equiv_map.call(null, this__4367__auto____$1, other__4368__auto__);
    } else {
      return and__3756__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
gridlife.langton.LangtonAnt.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "location", "location", 1815599388), null, new cljs.core.Keyword(null, "heading", "heading", -1312171873), null], null), null), k__4381__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4380__auto____$1), self__.__meta), k__4381__auto__);
  } else {
    return new gridlife.langton.LangtonAnt(self__.location, self__.heading, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4381__auto__)), null);
  }
};
gridlife.langton.LangtonAnt.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4378__auto__, k__4379__auto__, G__11295) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  var pred__11299 = cljs.core.keyword_identical_QMARK_;
  var expr__11300 = k__4379__auto__;
  if (cljs.core.truth_(pred__11299.call(null, new cljs.core.Keyword(null, "location", "location", 1815599388), expr__11300))) {
    return new gridlife.langton.LangtonAnt(G__11295, self__.heading, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__11299.call(null, new cljs.core.Keyword(null, "heading", "heading", -1312171873), expr__11300))) {
      return new gridlife.langton.LangtonAnt(self__.location, G__11295, self__.__meta, self__.__extmap, null);
    } else {
      return new gridlife.langton.LangtonAnt(self__.location, self__.heading, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4379__auto__, G__11295), null);
    }
  }
};
gridlife.langton.LangtonAnt.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4383__auto__) {
  var self__ = this;
  var this__4383__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "location", "location", 1815599388), self__.location], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "heading", "heading", -1312171873), self__.heading], null)], null), self__.__extmap));
};
gridlife.langton.LangtonAnt.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4370__auto__, G__11295) {
  var self__ = this;
  var this__4370__auto____$1 = this;
  return new gridlife.langton.LangtonAnt(self__.location, self__.heading, G__11295, self__.__extmap, self__.__hash);
};
gridlife.langton.LangtonAnt.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4376__auto__, entry__4377__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4377__auto__)) {
    return cljs.core._assoc.call(null, this__4376__auto____$1, cljs.core._nth.call(null, entry__4377__auto__, 0), cljs.core._nth.call(null, entry__4377__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4376__auto____$1, entry__4377__auto__);
  }
};
gridlife.langton.LangtonAnt.cljs$lang$type = true;
gridlife.langton.LangtonAnt.cljs$lang$ctorPrSeq = function(this__4405__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "gridlife.langton/LangtonAnt");
};
gridlife.langton.LangtonAnt.cljs$lang$ctorPrWriter = function(this__4405__auto__, writer__4406__auto__) {
  return cljs.core._write.call(null, writer__4406__auto__, "gridlife.langton/LangtonAnt");
};
gridlife.langton.__GT_LangtonAnt = function __GT_LangtonAnt(location, heading) {
  return new gridlife.langton.LangtonAnt(location, heading, null, null, null);
};
gridlife.langton.map__GT_LangtonAnt = function map__GT_LangtonAnt(G__11297) {
  return new gridlife.langton.LangtonAnt((new cljs.core.Keyword(null, "location", "location", 1815599388)).cljs$core$IFn$_invoke$arity$1(G__11297), (new cljs.core.Keyword(null, "heading", "heading", -1312171873)).cljs$core$IFn$_invoke$arity$1(G__11297), null, cljs.core.dissoc.call(null, G__11297, new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Keyword(null, "heading", "heading", -1312171873)), null);
};
gridlife.langton.new_ant = function new_ant(start_location) {
  return new gridlife.langton.LangtonAnt(start_location, new cljs.core.Keyword(null, "north", "north", 651323902), null, null, null);
};
goog.provide("gridlife.gridui");
goog.require("cljs.core");
goog.require("gridlife.gamemodel");
goog.require("gridlife.gridmodel");
goog.require("cljs.core.async");
goog.require("gridlife.langton");
goog.require("sablono.core");
goog.require("gridlife.random");
goog.require("om.core");
cljs.core.enable_console_print_BANG_.call(null);
gridlife.gridui.empty_model = function empty_model(cells_wide, cells_high) {
  var keys = function() {
    var iter__4524__auto__ = function iter__11030(s__11031) {
      return new cljs.core.LazySeq(null, function() {
        var s__11031__$1 = s__11031;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__11031__$1);
          if (temp__4126__auto__) {
            var xs__4624__auto__ = temp__4126__auto__;
            var x = cljs.core.first.call(null, xs__4624__auto__);
            var iterys__4520__auto__ = function(s__11031__$1, x, xs__4624__auto__, temp__4126__auto__) {
              return function iter__11032(s__11033) {
                return new cljs.core.LazySeq(null, function(s__11031__$1, x, xs__4624__auto__, temp__4126__auto__) {
                  return function() {
                    var s__11033__$1 = s__11033;
                    while (true) {
                      var temp__4126__auto____$1 = cljs.core.seq.call(null, s__11033__$1);
                      if (temp__4126__auto____$1) {
                        var s__11033__$2 = temp__4126__auto____$1;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__11033__$2)) {
                          var c__4522__auto__ = cljs.core.chunk_first.call(null, s__11033__$2);
                          var size__4523__auto__ = cljs.core.count.call(null, c__4522__auto__);
                          var b__11035 = cljs.core.chunk_buffer.call(null, size__4523__auto__);
                          if (function() {
                            var i__11034 = 0;
                            while (true) {
                              if (i__11034 < size__4523__auto__) {
                                var y = cljs.core._nth.call(null, c__4522__auto__, i__11034);
                                cljs.core.chunk_append.call(null, b__11035, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), x, new cljs.core.Keyword(null, "y", "y", -1757859776), y], null));
                                var G__11036 = i__11034 + 1;
                                i__11034 = G__11036;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11035), iter__11032.call(null, cljs.core.chunk_rest.call(null, s__11033__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11035), null);
                          }
                        } else {
                          var y = cljs.core.first.call(null, s__11033__$2);
                          return cljs.core.cons.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), x, new cljs.core.Keyword(null, "y", "y", -1757859776), y], null), iter__11032.call(null, cljs.core.rest.call(null, s__11033__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(s__11031__$1, x, xs__4624__auto__, temp__4126__auto__), null, null);
              };
            }(s__11031__$1, x, xs__4624__auto__, temp__4126__auto__);
            var fs__4521__auto__ = cljs.core.seq.call(null, iterys__4520__auto__.call(null, cljs.core.range.call(null, 0, cells_high)));
            if (fs__4521__auto__) {
              return cljs.core.concat.call(null, fs__4521__auto__, iter__11030.call(null, cljs.core.rest.call(null, s__11031__$1)));
            } else {
              var G__11037 = cljs.core.rest.call(null, s__11031__$1);
              s__11031__$1 = G__11037;
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4524__auto__.call(null, cljs.core.range.call(null, 0, cells_wide));
  }();
  return cljs.core.zipmap.call(null, keys, cljs.core.repeat.call(null, new cljs.core.Keyword(null, "white", "white", -483998618)));
};
gridlife.gridui.cells_wide = 50;
gridlife.gridui.cells_high = 50;
gridlife.gridui.cell_size = 12;
gridlife.gridui.default_ant = function default_ant() {
  return gridlife.langton.new_ant.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), Math.floor(gridlife.gridui.cells_wide / 2), new cljs.core.Keyword(null, "y", "y", -1757859776), Math.floor(gridlife.gridui.cells_high / 2)], null));
};
gridlife.gridui.default_games = function default_games() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [gridlife.random.new_random_noise.call(null), gridlife.gridui.default_ant.call(null)], null);
};
gridlife.gridui.empty_gridmodel = function empty_gridmodel() {
  return new gridlife.gridmodel.GridModel(gridlife.gridui.empty_model.call(null, gridlife.gridui.cells_wide, gridlife.gridui.cells_high), gridlife.gridui.cells_wide, gridlife.gridui.cells_high, null, null, null);
};
gridlife.gridui.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "gridmodel", "gridmodel", 2082730461), gridlife.gridui.empty_gridmodel.call(null), new cljs.core.Keyword(null, "games", "games", 1927565374), gridlife.gridui.default_games.call(null), new cljs.core.Keyword(null, "enabled-games", "enabled-games", 18345606), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "run", "run", -1821166653), false], null));
gridlife.gridui.render_chan = cljs.core.async.chan.call(null);
gridlife.gridui.paint_cell = function paint_cell(x, y, color) {
  var x_px_pos = x * gridlife.gridui.cell_size;
  var y_px_pos = y * gridlife.gridui.cell_size;
  var canvas = document.getElementById("canvas");
  var context = canvas.getContext("2d");
  context.fillStyle = color;
  context.fillRect(x_px_pos, y_px_pos, gridlife.gridui.cell_size, gridlife.gridui.cell_size);
  return context.stroke();
};
gridlife.gridui.reset_grid = function reset_grid(app) {
  om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "gridmodel", "gridmodel", 2082730461), gridlife.gridui.empty_gridmodel.call(null));
  om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "games", "games", 1927565374), gridlife.gridui.default_games.call(null));
  var seq__11042 = cljs.core.seq.call(null, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "model", "model", 331153215)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "gridmodel", "gridmodel", 2082730461)).cljs$core$IFn$_invoke$arity$1(app))));
  var chunk__11043 = null;
  var count__11044 = 0;
  var i__11045 = 0;
  while (true) {
    if (i__11045 < count__11044) {
      var location = cljs.core._nth.call(null, chunk__11043, i__11045);
      gridlife.gridui.paint_cell.call(null, (new cljs.core.Keyword(null, "x", "x", 2099068185)).cljs$core$IFn$_invoke$arity$1(location), (new cljs.core.Keyword(null, "y", "y", -1757859776)).cljs$core$IFn$_invoke$arity$1(location), "white");
      var G__11046 = seq__11042;
      var G__11047 = chunk__11043;
      var G__11048 = count__11044;
      var G__11049 = i__11045 + 1;
      seq__11042 = G__11046;
      chunk__11043 = G__11047;
      count__11044 = G__11048;
      i__11045 = G__11049;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11042);
      if (temp__4126__auto__) {
        var seq__11042__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11042__$1)) {
          var c__4555__auto__ = cljs.core.chunk_first.call(null, seq__11042__$1);
          var G__11050 = cljs.core.chunk_rest.call(null, seq__11042__$1);
          var G__11051 = c__4555__auto__;
          var G__11052 = cljs.core.count.call(null, c__4555__auto__);
          var G__11053 = 0;
          seq__11042 = G__11050;
          chunk__11043 = G__11051;
          count__11044 = G__11052;
          i__11045 = G__11053;
          continue;
        } else {
          var location = cljs.core.first.call(null, seq__11042__$1);
          gridlife.gridui.paint_cell.call(null, (new cljs.core.Keyword(null, "x", "x", 2099068185)).cljs$core$IFn$_invoke$arity$1(location), (new cljs.core.Keyword(null, "y", "y", -1757859776)).cljs$core$IFn$_invoke$arity$1(location), "white");
          var G__11054 = cljs.core.next.call(null, seq__11042__$1);
          var G__11055 = null;
          var G__11056 = 0;
          var G__11057 = 0;
          seq__11042 = G__11054;
          chunk__11043 = G__11055;
          count__11044 = G__11056;
          i__11045 = G__11057;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
gridlife.gridui.handle_render_cell = function handle_render_cell() {
  var c__6555__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6555__auto__) {
    return function() {
      var f__6556__auto__ = function() {
        var switch__6499__auto__ = function(c__6555__auto__) {
          return function(state_11096) {
            var state_val_11097 = state_11096[1];
            if (state_val_11097 === 4) {
              var inst_11086 = state_11096[2];
              var inst_11087 = cljs.core.nth.call(null, inst_11086, 0, null);
              var inst_11088 = cljs.core.nth.call(null, inst_11086, 1, null);
              var inst_11089 = (new cljs.core.Keyword(null, "x", "x", 2099068185)).cljs$core$IFn$_invoke$arity$1(inst_11087);
              var inst_11090 = (new cljs.core.Keyword(null, "y", "y", -1757859776)).cljs$core$IFn$_invoke$arity$1(inst_11087);
              var inst_11091 = gridlife.gridui.paint_cell.call(null, inst_11089, inst_11090, inst_11088);
              var state_11096__$1 = function() {
                var statearr_11098 = state_11096;
                statearr_11098[7] = inst_11091;
                return statearr_11098;
              }();
              var statearr_11099_11108 = state_11096__$1;
              statearr_11099_11108[2] = null;
              statearr_11099_11108[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_11097 === 3) {
                var inst_11094 = state_11096[2];
                var state_11096__$1 = state_11096;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11096__$1, inst_11094);
              } else {
                if (state_val_11097 === 2) {
                  var state_11096__$1 = state_11096;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11096__$1, 4, gridlife.gridui.render_chan);
                } else {
                  if (state_val_11097 === 1) {
                    var state_11096__$1 = state_11096;
                    var statearr_11100_11109 = state_11096__$1;
                    statearr_11100_11109[2] = null;
                    statearr_11100_11109[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    return null;
                  }
                }
              }
            }
          };
        }(c__6555__auto__);
        return function(switch__6499__auto__, c__6555__auto__) {
          return function() {
            var state_machine__6500__auto__ = null;
            var state_machine__6500__auto____0 = function() {
              var statearr_11104 = [null, null, null, null, null, null, null, null];
              statearr_11104[0] = state_machine__6500__auto__;
              statearr_11104[1] = 1;
              return statearr_11104;
            };
            var state_machine__6500__auto____1 = function(state_11096) {
              while (true) {
                var ret_value__6501__auto__ = function() {
                  try {
                    while (true) {
                      var result__6502__auto__ = switch__6499__auto__.call(null, state_11096);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6502__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6502__auto__;
                      }
                      break;
                    }
                  } catch (e11105) {
                    if (e11105 instanceof Object) {
                      var ex__6503__auto__ = e11105;
                      var statearr_11106_11110 = state_11096;
                      statearr_11106_11110[5] = ex__6503__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11096);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e11105;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6501__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__11111 = state_11096;
                  state_11096 = G__11111;
                  continue;
                } else {
                  return ret_value__6501__auto__;
                }
                break;
              }
            };
            state_machine__6500__auto__ = function(state_11096) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6500__auto____0.call(this);
                case 1:
                  return state_machine__6500__auto____1.call(this, state_11096);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6500__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6500__auto____0;
            state_machine__6500__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6500__auto____1;
            return state_machine__6500__auto__;
          }();
        }(switch__6499__auto__, c__6555__auto__);
      }();
      var state__6557__auto__ = function() {
        var statearr_11107 = f__6556__auto__.call(null);
        statearr_11107[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6555__auto__;
        return statearr_11107;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6557__auto__);
    };
  }(c__6555__auto__));
  return c__6555__auto__;
};
gridlife.gridui.set_request_anim_frame_function = function set_request_anim_frame_function() {
  var std_function = window.requestAnimationFrame;
  var webkit_function = window.webkitRequestAnimationFrame;
  var moz_function = window.mozRequestAnimationFrame;
  var fallback_function = function(std_function, webkit_function, moz_function) {
    return function(callback) {
      return window.setTimeout(callback, 1E3 / 30);
    };
  }(std_function, webkit_function, moz_function);
  var use = function() {
    var or__3768__auto__ = std_function;
    if (cljs.core.truth_(or__3768__auto__)) {
      return or__3768__auto__;
    } else {
      var or__3768__auto____$1 = webkit_function;
      if (cljs.core.truth_(or__3768__auto____$1)) {
        return or__3768__auto____$1;
      } else {
        var or__3768__auto____$2 = moz_function;
        if (cljs.core.truth_(or__3768__auto____$2)) {
          return or__3768__auto____$2;
        } else {
          return fallback_function;
        }
      }
    }
  }();
  return window.requestAnimFrame = use;
};
gridlife.gridui.reduce_games = function reduce_games(result, game) {
  var vec__11114 = result;
  var gridmodel = cljs.core.nth.call(null, vec__11114, 0, null);
  var games = cljs.core.nth.call(null, vec__11114, 1, null);
  var repaint_instructions = cljs.core.nth.call(null, vec__11114, 2, null);
  var name = gridlife.gamemodel.game_name.call(null, game);
  var enabled_games = (new cljs.core.Keyword(null, "enabled-games", "enabled-games", 18345606)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, gridlife.gridui.app_state));
  var enabled_QMARK_ = cljs.core.get.call(null, enabled_games, name);
  var vec__11115 = cljs.core.truth_(enabled_QMARK_) ? gridlife.gamemodel.tick.call(null, game, gridmodel) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [gridmodel, game, repaint_instructions], null);
  var next_gridmodel = cljs.core.nth.call(null, vec__11115, 0, null);
  var new_game = cljs.core.nth.call(null, vec__11115, 1, null);
  var new_repaint_instructions = cljs.core.nth.call(null, vec__11115, 2, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [next_gridmodel, cljs.core.cons.call(null, new_game, games), cljs.core.into.call(null, repaint_instructions, new_repaint_instructions)], null);
};
gridlife.gridui.repaint = function repaint(repaint_instructions) {
  var seq__11120 = cljs.core.seq.call(null, repaint_instructions);
  var chunk__11121 = null;
  var count__11122 = 0;
  var i__11123 = 0;
  while (true) {
    if (i__11123 < count__11122) {
      var location_color = cljs.core._nth.call(null, chunk__11121, i__11123);
      cljs.core.async.put_BANG_.call(null, gridlife.gridui.render_chan, location_color);
      var G__11124 = seq__11120;
      var G__11125 = chunk__11121;
      var G__11126 = count__11122;
      var G__11127 = i__11123 + 1;
      seq__11120 = G__11124;
      chunk__11121 = G__11125;
      count__11122 = G__11126;
      i__11123 = G__11127;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11120);
      if (temp__4126__auto__) {
        var seq__11120__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11120__$1)) {
          var c__4555__auto__ = cljs.core.chunk_first.call(null, seq__11120__$1);
          var G__11128 = cljs.core.chunk_rest.call(null, seq__11120__$1);
          var G__11129 = c__4555__auto__;
          var G__11130 = cljs.core.count.call(null, c__4555__auto__);
          var G__11131 = 0;
          seq__11120 = G__11128;
          chunk__11121 = G__11129;
          count__11122 = G__11130;
          i__11123 = G__11131;
          continue;
        } else {
          var location_color = cljs.core.first.call(null, seq__11120__$1);
          cljs.core.async.put_BANG_.call(null, gridlife.gridui.render_chan, location_color);
          var G__11132 = cljs.core.next.call(null, seq__11120__$1);
          var G__11133 = null;
          var G__11134 = 0;
          var G__11135 = 0;
          seq__11120 = G__11132;
          chunk__11121 = G__11133;
          count__11122 = G__11134;
          i__11123 = G__11135;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
gridlife.gridui.run_frame = function run_frame(app, last_time) {
  var current_time = (new Date).getTime();
  var difference = current_time - last_time;
  var max_moves_per_second = 15;
  var frame_rate_millis = 1E3 / max_moves_per_second;
  var gridmodel = (new cljs.core.Keyword(null, "gridmodel", "gridmodel", 2082730461)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app));
  if (cljs.core.truth_(function() {
    var and__3756__auto__ = difference > frame_rate_millis;
    if (and__3756__auto__) {
      return(new cljs.core.Keyword(null, "run", "run", -1821166653)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app));
    } else {
      return and__3756__auto__;
    }
  }())) {
    var vec__11137 = cljs.core.reduce.call(null, gridlife.gridui.reduce_games, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [gridmodel, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY], null), (new cljs.core.Keyword(null, "games", "games", 1927565374)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app)));
    var new_gridmodel = cljs.core.nth.call(null, vec__11137, 0, null);
    var new_games = cljs.core.nth.call(null, vec__11137, 1, null);
    var repaint_instructions = cljs.core.nth.call(null, vec__11137, 2, null);
    om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "gridmodel", "gridmodel", 2082730461), new_gridmodel);
    om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "games", "games", 1927565374), new_games);
    gridlife.gridui.repaint.call(null, repaint_instructions);
    return window.requestAnimFrame(function(vec__11137, new_gridmodel, new_games, repaint_instructions, current_time, difference, max_moves_per_second, frame_rate_millis, gridmodel) {
      return function() {
        return run_frame.call(null, app, current_time);
      };
    }(vec__11137, new_gridmodel, new_games, repaint_instructions, current_time, difference, max_moves_per_second, frame_rate_millis, gridmodel));
  } else {
    return window.requestAnimFrame(function(current_time, difference, max_moves_per_second, frame_rate_millis, gridmodel) {
      return function() {
        return run_frame.call(null, app, last_time);
      };
    }(current_time, difference, max_moves_per_second, frame_rate_millis, gridmodel));
  }
};
gridlife.gridui.init_grid_rendering = function init_grid_rendering(app) {
  gridlife.gridui.set_request_anim_frame_function.call(null);
  return window.requestAnimFrame(function() {
    return gridlife.gridui.run_frame.call(null, app, (new Date).getTime());
  });
};
gridlife.gridui.game_checkbox = function game_checkbox(enabled_game, owner) {
  if (typeof gridlife.gridui.t11144 !== "undefined") {
  } else {
    gridlife.gridui.t11144 = function(owner, enabled_game, game_checkbox, meta11145) {
      this.owner = owner;
      this.enabled_game = enabled_game;
      this.game_checkbox = game_checkbox;
      this.meta11145 = meta11145;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    gridlife.gridui.t11144.prototype.om$core$IRenderState$ = true;
    gridlife.gridui.t11144.prototype.om$core$IRenderState$render_state$arity$2 = function(this$, p__11147) {
      var self__ = this;
      var map__11148 = p__11147;
      var map__11148__$1 = cljs.core.seq_QMARK_.call(null, map__11148) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11148) : map__11148;
      var game_control_chan = cljs.core.get.call(null, map__11148__$1, new cljs.core.Keyword(null, "game-control-chan", "game-control-chan", 1678988770));
      var this$__$1 = this;
      var vec__11149 = self__.enabled_game;
      var name = cljs.core.nth.call(null, vec__11149, 0, null);
      var enabled_QMARK_ = cljs.core.nth.call(null, vec__11149, 1, null);
      return React.DOM.div({"className":"checkbox-div"}, sablono.interpreter.input.call(null, {"type":"checkbox", "checked":enabled_QMARK_, "onClick":function(vec__11149, name, enabled_QMARK_, this$__$1, map__11148, map__11148__$1, game_control_chan) {
        return function() {
          return cljs.core.async.put_BANG_.call(null, game_control_chan, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, cljs.core.not.call(null, enabled_QMARK_)], null));
        };
      }(vec__11149, name, enabled_QMARK_, this$__$1, map__11148, map__11148__$1, game_control_chan)}), React.DOM.label({"className":"checkbox-label"}, sablono.interpreter.interpret.call(null, name)));
    };
    gridlife.gridui.t11144.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11146) {
      var self__ = this;
      var _11146__$1 = this;
      return self__.meta11145;
    };
    gridlife.gridui.t11144.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11146, meta11145__$1) {
      var self__ = this;
      var _11146__$1 = this;
      return new gridlife.gridui.t11144(self__.owner, self__.enabled_game, self__.game_checkbox, meta11145__$1);
    };
    gridlife.gridui.t11144.cljs$lang$type = true;
    gridlife.gridui.t11144.cljs$lang$ctorStr = "gridlife.gridui/t11144";
    gridlife.gridui.t11144.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
      return cljs.core._write.call(null, writer__4356__auto__, "gridlife.gridui/t11144");
    };
    gridlife.gridui.__GT_t11144 = function __GT_t11144(owner__$1, enabled_game__$1, game_checkbox__$1, meta11145) {
      return new gridlife.gridui.t11144(owner__$1, enabled_game__$1, game_checkbox__$1, meta11145);
    };
  }
  return new gridlife.gridui.t11144(owner, enabled_game, game_checkbox, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 15, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 173, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 162, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/mhurd/development/workspace/gridlife/src/gridlife/gridui.cljs"], 
  null));
};
gridlife.gridui.controls_component = function controls_component(app, owner) {
  if (typeof gridlife.gridui.t11180 !== "undefined") {
  } else {
    gridlife.gridui.t11180 = function(owner, app, controls_component, meta11181) {
      this.owner = owner;
      this.app = app;
      this.controls_component = controls_component;
      this.meta11181 = meta11181;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    gridlife.gridui.t11180.prototype.om$core$IRenderState$ = true;
    gridlife.gridui.t11180.prototype.om$core$IRenderState$render_state$arity$2 = function(owner__$1, p__11183) {
      var self__ = this;
      var map__11184 = p__11183;
      var map__11184__$1 = cljs.core.seq_QMARK_.call(null, map__11184) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11184) : map__11184;
      var game_control_chan = cljs.core.get.call(null, map__11184__$1, new cljs.core.Keyword(null, "game-control-chan", "game-control-chan", 1678988770));
      var owner__$2 = this;
      return React.DOM.div(null, React.DOM.div({"className":"btn-group btn-group-sm", "id":"buttons", "role":"group"}, React.DOM.button({"className":"btn btn-default", "type":"button", "onClick":function(owner__$2, map__11184, map__11184__$1, game_control_chan) {
        return function() {
          return om.core.transact_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "run", "run", -1821166653), cljs.core.not);
        };
      }(owner__$2, map__11184, map__11184__$1, game_control_chan)}, cljs.core.truth_((new cljs.core.Keyword(null, "run", "run", -1821166653)).cljs$core$IFn$_invoke$arity$1(self__.app)) ? "Stop" : "Start"), React.DOM.button({"className":"btn btn-default", "type":"button", "onClick":function(owner__$2, map__11184, map__11184__$1, game_control_chan) {
        return function() {
          return gridlife.gridui.reset_grid.call(null, self__.app);
        };
      }(owner__$2, map__11184, map__11184__$1, game_control_chan)}, "Reset")), React.DOM.div({"className":"games-div"}, sablono.interpreter.interpret.call(null, om.core.build_all.call(null, gridlife.gridui.game_checkbox, (new cljs.core.Keyword(null, "enabled-games", "enabled-games", 18345606)).cljs$core$IFn$_invoke$arity$1(self__.app), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "init-state", "init-state", 1450863212), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
      "game-control-chan", "game-control-chan", 1678988770), game_control_chan], null)], null)))));
    };
    gridlife.gridui.t11180.prototype.om$core$IWillMount$ = true;
    gridlife.gridui.t11180.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var games = (new cljs.core.Keyword(null, "games", "games", 1927565374)).cljs$core$IFn$_invoke$arity$1(self__.app);
      var enabled_games = (new cljs.core.Keyword(null, "enabled-games", "enabled-games", 18345606)).cljs$core$IFn$_invoke$arity$1(self__.app);
      var control = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "game-control-chan", "game-control-chan", 1678988770));
      var initial_state = cljs.core.reduce.call(null, function(games, enabled_games, control, ___$1) {
        return function(acc, game) {
          return cljs.core.assoc.call(null, acc, gridlife.gamemodel.game_name.call(null, cljs.core.deref.call(null, game)), false);
        };
      }(games, enabled_games, control, ___$1), cljs.core.PersistentArrayMap.EMPTY, games);
      om.core.update_BANG_.call(null, enabled_games, initial_state);
      var c__6555__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6555__auto__, games, enabled_games, control, initial_state, ___$1) {
        return function() {
          var f__6556__auto__ = function() {
            var switch__6499__auto__ = function(c__6555__auto__, games, enabled_games, control, initial_state, ___$1) {
              return function(state_11198) {
                var state_val_11199 = state_11198[1];
                if (state_val_11199 === 4) {
                  var inst_11188 = state_11198[2];
                  var inst_11189 = cljs.core.nth.call(null, inst_11188, 0, null);
                  var inst_11190 = cljs.core.nth.call(null, inst_11188, 1, null);
                  var inst_11191 = cljs.core.deref.call(null, enabled_games);
                  var inst_11192 = cljs.core.assoc.call(null, inst_11191, inst_11189, inst_11190);
                  var inst_11193 = om.core.update_BANG_.call(null, enabled_games, inst_11192);
                  var state_11198__$1 = function() {
                    var statearr_11200 = state_11198;
                    statearr_11200[7] = inst_11193;
                    return statearr_11200;
                  }();
                  var statearr_11201_11210 = state_11198__$1;
                  statearr_11201_11210[2] = null;
                  statearr_11201_11210[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_11199 === 3) {
                    var inst_11196 = state_11198[2];
                    var state_11198__$1 = state_11198;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11198__$1, inst_11196);
                  } else {
                    if (state_val_11199 === 2) {
                      var state_11198__$1 = state_11198;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11198__$1, 4, control);
                    } else {
                      if (state_val_11199 === 1) {
                        var state_11198__$1 = state_11198;
                        var statearr_11202_11211 = state_11198__$1;
                        statearr_11202_11211[2] = null;
                        statearr_11202_11211[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              };
            }(c__6555__auto__, games, enabled_games, control, initial_state, ___$1);
            return function(switch__6499__auto__, c__6555__auto__, games, enabled_games, control, initial_state, ___$1) {
              return function() {
                var state_machine__6500__auto__ = null;
                var state_machine__6500__auto____0 = function() {
                  var statearr_11206 = [null, null, null, null, null, null, null, null];
                  statearr_11206[0] = state_machine__6500__auto__;
                  statearr_11206[1] = 1;
                  return statearr_11206;
                };
                var state_machine__6500__auto____1 = function(state_11198) {
                  while (true) {
                    var ret_value__6501__auto__ = function() {
                      try {
                        while (true) {
                          var result__6502__auto__ = switch__6499__auto__.call(null, state_11198);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6502__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6502__auto__;
                          }
                          break;
                        }
                      } catch (e11207) {
                        if (e11207 instanceof Object) {
                          var ex__6503__auto__ = e11207;
                          var statearr_11208_11212 = state_11198;
                          statearr_11208_11212[5] = ex__6503__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11198);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e11207;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6501__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__11213 = state_11198;
                      state_11198 = G__11213;
                      continue;
                    } else {
                      return ret_value__6501__auto__;
                    }
                    break;
                  }
                };
                state_machine__6500__auto__ = function(state_11198) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6500__auto____0.call(this);
                    case 1:
                      return state_machine__6500__auto____1.call(this, state_11198);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6500__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6500__auto____0;
                state_machine__6500__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6500__auto____1;
                return state_machine__6500__auto__;
              }();
            }(switch__6499__auto__, c__6555__auto__, games, enabled_games, control, initial_state, ___$1);
          }();
          var state__6557__auto__ = function() {
            var statearr_11209 = f__6556__auto__.call(null);
            statearr_11209[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6555__auto__;
            return statearr_11209;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6557__auto__);
        };
      }(c__6555__auto__, games, enabled_games, control, initial_state, ___$1));
      return c__6555__auto__;
    };
    gridlife.gridui.t11180.prototype.om$core$IInitState$ = true;
    gridlife.gridui.t11180.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "game-control-chan", "game-control-chan", 1678988770), cljs.core.async.chan.call(null)], null);
    };
    gridlife.gridui.t11180.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11182) {
      var self__ = this;
      var _11182__$1 = this;
      return self__.meta11181;
    };
    gridlife.gridui.t11180.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11182, meta11181__$1) {
      var self__ = this;
      var _11182__$1 = this;
      return new gridlife.gridui.t11180(self__.owner, self__.app, self__.controls_component, meta11181__$1);
    };
    gridlife.gridui.t11180.cljs$lang$type = true;
    gridlife.gridui.t11180.cljs$lang$ctorStr = "gridlife.gridui/t11180";
    gridlife.gridui.t11180.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
      return cljs.core._write.call(null, writer__4356__auto__, "gridlife.gridui/t11180");
    };
    gridlife.gridui.__GT_t11180 = function __GT_t11180(owner__$1, app__$1, controls_component__$1, meta11181) {
      return new gridlife.gridui.t11180(owner__$1, app__$1, controls_component__$1, meta11181);
    };
  }
  return new gridlife.gridui.t11180(owner, app, controls_component, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 14, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 205, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 179, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/mhurd/development/workspace/gridlife/src/gridlife/gridui.cljs"], 
  null));
};
gridlife.gridui.grid_component = function grid_component(app, _) {
  if (typeof gridlife.gridui.t11217 !== "undefined") {
  } else {
    gridlife.gridui.t11217 = function(_, app, grid_component, meta11218) {
      this._ = _;
      this.app = app;
      this.grid_component = grid_component;
      this.meta11218 = meta11218;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    gridlife.gridui.t11217.prototype.om$core$IRender$ = true;
    gridlife.gridui.t11217.prototype.om$core$IRender$render$arity$1 = function(___$1) {
      var self__ = this;
      var ___$2 = this;
      var cells_wide = (new cljs.core.Keyword(null, "cells-wide", "cells-wide", -1579921448)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "gridmodel", "gridmodel", 2082730461)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.app)));
      var cells_high = (new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "gridmodel", "gridmodel", 2082730461)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.app)));
      var pxwidth = gridlife.gridui.cell_size * cells_wide;
      var pxheight = gridlife.gridui.cell_size * cells_high;
      return React.DOM.div(null, React.DOM.canvas({"className":"canvas", "id":"canvas", "width":pxwidth, "height":pxheight}));
    };
    gridlife.gridui.t11217.prototype.om$core$IDidMount$ = true;
    gridlife.gridui.t11217.prototype.om$core$IDidMount$did_mount$arity$1 = function(___$1) {
      var self__ = this;
      var ___$2 = this;
      gridlife.gridui.reset_grid.call(null, self__.app);
      gridlife.gridui.handle_render_cell.call(null);
      return gridlife.gridui.init_grid_rendering.call(null, self__.app);
    };
    gridlife.gridui.t11217.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11219) {
      var self__ = this;
      var _11219__$1 = this;
      return self__.meta11218;
    };
    gridlife.gridui.t11217.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11219, meta11218__$1) {
      var self__ = this;
      var _11219__$1 = this;
      return new gridlife.gridui.t11217(self__._, self__.app, self__.grid_component, meta11218__$1);
    };
    gridlife.gridui.t11217.cljs$lang$type = true;
    gridlife.gridui.t11217.cljs$lang$ctorStr = "gridlife.gridui/t11217";
    gridlife.gridui.t11217.cljs$lang$ctorPrWriter = function(this__4355__auto__, writer__4356__auto__, opt__4357__auto__) {
      return cljs.core._write.call(null, writer__4356__auto__, "gridlife.gridui/t11217");
    };
    gridlife.gridui.__GT_t11217 = function __GT_t11217(___$1, app__$1, grid_component__$1, meta11218) {
      return new gridlife.gridui.t11217(___$1, app__$1, grid_component__$1, meta11218);
    };
  }
  return new gridlife.gridui.t11217(_, app, grid_component, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 15, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 224, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 209, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/mhurd/development/workspace/gridlife/src/gridlife/gridui.cljs"], 
  null));
};
om.core.root.call(null, gridlife.gridui.controls_component, gridlife.gridui.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById("controls")], null));
om.core.root.call(null, gridlife.gridui.grid_component, gridlife.gridui.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById("content")], null));

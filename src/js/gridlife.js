if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2511";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__11025__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__11025 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__11025__delegate.call(this, args);
    };
    G__11025.cljs$lang$maxFixedArity = 0;
    G__11025.cljs$lang$applyTo = function(arglist__11026) {
      var args = cljs.core.seq(arglist__11026);
      return G__11025__delegate(args);
    };
    G__11025.cljs$core$IFn$_invoke$arity$variadic = G__11025__delegate;
    return G__11025;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3618__auto__ = ty;
    if (cljs.core.truth_(and__3618__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3618__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4517__auto___11027 = len;
  var i_11028 = 0;
  while (true) {
    if (i_11028 < n__4517__auto___11027) {
      new_arr[i_11028] = arr[i_11028];
      var G__11029 = i_11028 + 1;
      i_11028 = G__11029;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__11030__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__11030 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11030__delegate.call(this, array, i, idxs);
    };
    G__11030.cljs$lang$maxFixedArity = 2;
    G__11030.cljs$lang$applyTo = function(arglist__11031) {
      var array = cljs.core.first(arglist__11031);
      arglist__11031 = cljs.core.next(arglist__11031);
      var i = cljs.core.first(arglist__11031);
      var idxs = cljs.core.rest(arglist__11031);
      return G__11030__delegate(array, i, idxs);
    };
    G__11030.cljs$core$IFn$_invoke$arity$variadic = G__11030__delegate;
    return G__11030;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__11032__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__11032 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11032__delegate.call(this, array, idx, idx2, idxv);
    };
    G__11032.cljs$lang$maxFixedArity = 3;
    G__11032.cljs$lang$applyTo = function(arglist__11033) {
      var array = cljs.core.first(arglist__11033);
      arglist__11033 = cljs.core.next(arglist__11033);
      var idx = cljs.core.first(arglist__11033);
      arglist__11033 = cljs.core.next(arglist__11033);
      var idx2 = cljs.core.first(arglist__11033);
      var idxv = cljs.core.rest(arglist__11033);
      return G__11032__delegate(array, idx, idx2, idxv);
    };
    G__11032.cljs$core$IFn$_invoke$arity$variadic = G__11032__delegate;
    return G__11032;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.js_invoke = function() {
  var js_invoke__delegate = function(obj, s, args) {
    return obj[s].apply(obj, cljs.core.into_array.call(null, args));
  };
  var js_invoke = function(obj, s, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return js_invoke__delegate.call(this, obj, s, args);
  };
  js_invoke.cljs$lang$maxFixedArity = 2;
  js_invoke.cljs$lang$applyTo = function(arglist__11034) {
    var obj = cljs.core.first(arglist__11034);
    arglist__11034 = cljs.core.next(arglist__11034);
    var s = cljs.core.first(arglist__11034);
    var args = cljs.core.rest(arglist__11034);
    return js_invoke__delegate(obj, s, args);
  };
  js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
  return js_invoke;
}();
cljs.core.Fn = function() {
  var obj11036 = {};
  return obj11036;
}();
cljs.core.IFn = function() {
  var obj11038 = {};
  return obj11038;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = cljs.core._invoke[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._invoke["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = cljs.core._invoke[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._invoke["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = cljs.core._invoke[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._invoke["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = cljs.core._invoke[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._invoke["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = cljs.core._invoke[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._invoke["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = cljs.core._invoke[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._invoke["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = cljs.core._invoke[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._invoke["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = cljs.core._invoke[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._invoke["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = cljs.core._invoke[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._invoke["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = cljs.core._invoke[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._invoke["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = cljs.core._invoke[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._invoke["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = cljs.core._invoke[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._invoke["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = cljs.core._invoke[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._invoke["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = cljs.core._invoke[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._invoke["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = cljs.core._invoke[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._invoke["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = cljs.core._invoke[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._invoke["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = cljs.core._invoke[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._invoke["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = cljs.core._invoke[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._invoke["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = cljs.core._invoke[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._invoke["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = cljs.core._invoke[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._invoke["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = cljs.core._invoke[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._invoke["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var _invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = cljs.core._invoke[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._invoke["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return _invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  _invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj11040 = {};
  return obj11040;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3618__auto__ = value;
    if (and__3618__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4274__auto__ = value == null ? null : value;
    return function() {
      var or__3630__auto__ = cljs.core._clone[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._clone["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj11042 = {};
  return obj11042;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._count[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._count["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj11044 = {};
  return obj11044;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._empty[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._empty["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj11046 = {};
  return obj11046;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._conj[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._conj["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj11048 = {};
  return obj11048;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3618__auto__ = coll;
      if (and__3618__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4274__auto__ = coll == null ? null : coll;
      return function() {
        var or__3630__auto__ = cljs.core._nth[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._nth["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3618__auto__ = coll;
      if (and__3618__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4274__auto__ = coll == null ? null : coll;
      return function() {
        var or__3630__auto__ = cljs.core._nth[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._nth["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj11050 = {};
  return obj11050;
}();
cljs.core.ISeq = function() {
  var obj11052 = {};
  return obj11052;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._first[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._first["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._rest[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._rest["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj11054 = {};
  return obj11054;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._next[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._next["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj11056 = {};
  return obj11056;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3618__auto__ = o;
      if (and__3618__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4274__auto__ = o == null ? null : o;
      return function() {
        var or__3630__auto__ = cljs.core._lookup[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._lookup["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3618__auto__ = o;
      if (and__3618__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4274__auto__ = o == null ? null : o;
      return function() {
        var or__3630__auto__ = cljs.core._lookup[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._lookup["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj11058 = {};
  return obj11058;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._assoc[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._assoc["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj11060 = {};
  return obj11060;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._dissoc[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._dissoc["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj11062 = {};
  return obj11062;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._key[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._key["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._val[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._val["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj11064 = {};
  return obj11064;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._disjoin[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._disjoin["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj11066 = {};
  return obj11066;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._peek[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._peek["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._pop[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._pop["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj11068 = {};
  return obj11068;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._assoc_n[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj11070 = {};
  return obj11070;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3618__auto__ = o;
    if (and__3618__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4274__auto__ = o == null ? null : o;
    return function() {
      var or__3630__auto__ = cljs.core._deref[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._deref["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj11072 = {};
  return obj11072;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3618__auto__ = o;
    if (and__3618__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4274__auto__ = o == null ? null : o;
    return function() {
      var or__3630__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj11074 = {};
  return obj11074;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3618__auto__ = o;
    if (and__3618__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4274__auto__ = o == null ? null : o;
    return function() {
      var or__3630__auto__ = cljs.core._meta[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._meta["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj11076 = {};
  return obj11076;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3618__auto__ = o;
    if (and__3618__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4274__auto__ = o == null ? null : o;
    return function() {
      var or__3630__auto__ = cljs.core._with_meta[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._with_meta["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj11078 = {};
  return obj11078;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3618__auto__ = coll;
      if (and__3618__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4274__auto__ = coll == null ? null : coll;
      return function() {
        var or__3630__auto__ = cljs.core._reduce[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._reduce["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3618__auto__ = coll;
      if (and__3618__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4274__auto__ = coll == null ? null : coll;
      return function() {
        var or__3630__auto__ = cljs.core._reduce[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._reduce["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj11080 = {};
  return obj11080;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj11082 = {};
  return obj11082;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3618__auto__ = o;
    if (and__3618__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4274__auto__ = o == null ? null : o;
    return function() {
      var or__3630__auto__ = cljs.core._equiv[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._equiv["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj11084 = {};
  return obj11084;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3618__auto__ = o;
    if (and__3618__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4274__auto__ = o == null ? null : o;
    return function() {
      var or__3630__auto__ = cljs.core._hash[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._hash["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj11086 = {};
  return obj11086;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3618__auto__ = o;
    if (and__3618__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4274__auto__ = o == null ? null : o;
    return function() {
      var or__3630__auto__ = cljs.core._seq[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._seq["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj11088 = {};
  return obj11088;
}();
cljs.core.IList = function() {
  var obj11090 = {};
  return obj11090;
}();
cljs.core.IRecord = function() {
  var obj11092 = {};
  return obj11092;
}();
cljs.core.IReversible = function() {
  var obj11094 = {};
  return obj11094;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._rseq[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._rseq["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj11096 = {};
  return obj11096;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._entry_key[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._entry_key["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._comparator[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._comparator["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj11098 = {};
  return obj11098;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3618__auto__ = writer;
    if (and__3618__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4274__auto__ = writer == null ? null : writer;
    return function() {
      var or__3630__auto__ = cljs.core._write[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._write["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3618__auto__ = writer;
    if (and__3618__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4274__auto__ = writer == null ? null : writer;
    return function() {
      var or__3630__auto__ = cljs.core._flush[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._flush["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj11100 = {};
  return obj11100;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3618__auto__ = o;
    if (and__3618__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4274__auto__ = o == null ? null : o;
    return function() {
      var or__3630__auto__ = cljs.core._pr_writer[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj11102 = {};
  return obj11102;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3618__auto__ = d;
    if (and__3618__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4274__auto__ = d == null ? null : d;
    return function() {
      var or__3630__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj11104 = {};
  return obj11104;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = cljs.core._notify_watches[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = cljs.core._add_watch[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._add_watch["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = cljs.core._remove_watch[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj11106 = {};
  return obj11106;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._as_transient[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._as_transient["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj11108 = {};
  return obj11108;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3618__auto__ = tcoll;
    if (and__3618__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4274__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3630__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3618__auto__ = tcoll;
    if (and__3618__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4274__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3630__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj11110 = {};
  return obj11110;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3618__auto__ = tcoll;
    if (and__3618__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4274__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3630__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj11112 = {};
  return obj11112;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3618__auto__ = tcoll;
    if (and__3618__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4274__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3630__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj11114 = {};
  return obj11114;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3618__auto__ = tcoll;
    if (and__3618__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4274__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3630__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3618__auto__ = tcoll;
    if (and__3618__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4274__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3630__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj11116 = {};
  return obj11116;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3618__auto__ = tcoll;
    if (and__3618__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4274__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3630__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj11118 = {};
  return obj11118;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3618__auto__ = x;
    if (and__3618__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4274__auto__ = x == null ? null : x;
    return function() {
      var or__3630__auto__ = cljs.core._compare[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._compare["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj11120 = {};
  return obj11120;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._drop_first[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._drop_first["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj11122 = {};
  return obj11122;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._chunked_first[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj11124 = {};
  return obj11124;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._chunked_next[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj11126 = {};
  return obj11126;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3618__auto__ = x;
    if (and__3618__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4274__auto__ = x == null ? null : x;
    return function() {
      var or__3630__auto__ = cljs.core._name[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._name["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3618__auto__ = x;
    if (and__3618__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4274__auto__ = x == null ? null : x;
    return function() {
      var or__3630__auto__ = cljs.core._namespace[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._namespace["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj11128 = {};
  return obj11128;
}();
cljs.core.IReset = function() {
  var obj11130 = {};
  return obj11130;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3618__auto__ = o;
    if (and__3618__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4274__auto__ = o == null ? null : o;
    return function() {
      var or__3630__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj11132 = {};
  return obj11132;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3618__auto__ = o;
      if (and__3618__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4274__auto__ = o == null ? null : o;
      return function() {
        var or__3630__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3618__auto__ = o;
      if (and__3618__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4274__auto__ = o == null ? null : o;
      return function() {
        var or__3630__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3618__auto__ = o;
      if (and__3618__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4274__auto__ = o == null ? null : o;
      return function() {
        var or__3630__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3618__auto__ = o;
      if (and__3618__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4274__auto__ = o == null ? null : o;
      return function() {
        var or__3630__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.IVolatile = function() {
  var obj11134 = {};
  return obj11134;
}();
cljs.core._vreset_BANG_ = function _vreset_BANG_(o, new_value) {
  if (function() {
    var and__3618__auto__ = o;
    if (and__3618__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4274__auto__ = o == null ? null : o;
    return function() {
      var or__3630__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj11136 = {};
  return obj11136;
}();
cljs.core._iterator = function _iterator(coll) {
  if (function() {
    var and__3618__auto__ = coll;
    if (and__3618__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4274__auto__ = coll == null ? null : coll;
    return function() {
      var or__3630__auto__ = cljs.core._iterator[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._iterator["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul.call(null, 4294967295, 5) === 0)) {
  cljs.core.imul = function imul(a, b) {
    return Math.imul.call(null, a, b);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, cljs.core.imul.call(null, k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul.call(null, h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul.call(null, h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1.call(null, in$);
    var h1 = cljs.core.m3_mix_H1.call(null, cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix.call(null, h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__11137 = i + 2;
        var G__11138 = cljs.core.m3_mix_H1.call(null, h1, cljs.core.m3_mix_K1.call(null, in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__11137;
        h1 = G__11138;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1.call(null, in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix.call(null, h1__$1, cljs.core.imul.call(null, 2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj11140 = {};
  return obj11140;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__11141 = i + 1;
          var G__11142 = cljs.core.imul.call(null, 31, hash) + s.charCodeAt(i);
          i = G__11141;
          hash = G__11142;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_.call(null, k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj11146 = {};
      return obj11146;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__11148 = o;
    if (G__11148) {
      var bit__4304__auto__ = G__11148.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4304__auto__ || G__11148.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor.call(null, o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int.call(null, cljs.core.hash_string.call(null, o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash.call(null, o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.m3_hash_unencoded_chars.call(null, sym.name), cljs.core.hash_string.call(null, sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3618__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3618__auto__) {
        return b.ns;
      } else {
        return and__3618__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = goog.array.defaultCompare(a.ns, b.ns);
          if (0 === nsc) {
            return goog.array.defaultCompare(a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return goog.array.defaultCompare(a.name, b.name);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4051__auto__ = self__._hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__11150 = null;
  var G__11150__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__11150__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__11150 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11150__2.call(this, self__, coll);
      case 3:
        return G__11150__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11150.cljs$core$IFn$_invoke$arity$2 = G__11150__2;
  G__11150.cljs$core$IFn$_invoke$arity$3 = G__11150__3;
  return G__11150;
}();
cljs.core.Symbol.prototype.apply = function(self__, args11149) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11149)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 163840;
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val;
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function __GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function iterable_QMARK_(x) {
  var G__11152 = x;
  if (G__11152) {
    var bit__4311__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3630__auto__ = bit__4311__auto__;
      if (cljs.core.truth_(or__3630__auto__)) {
        return or__3630__auto__;
      } else {
        return G__11152.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__11152.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIterable, G__11152);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIterable, G__11152);
  }
};
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__11154 = value;
  if (G__11154) {
    var bit__4311__auto__ = G__11154.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4311__auto__ || G__11154.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__11154.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__11154);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__11154);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__11156 = coll;
      if (G__11156) {
        var bit__4304__auto__ = G__11156.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4304__auto__ || G__11156.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__11158 = coll;
      if (G__11158) {
        var bit__4304__auto__ = G__11158.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4304__auto__ || G__11158.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__11160 = coll;
      if (G__11160) {
        var bit__4304__auto__ = G__11160.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4304__auto__ || G__11160.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__11162 = coll;
      if (G__11162) {
        var bit__4304__auto__ = G__11162.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4304__auto__ || G__11162.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__11163__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__11164 = y;
            var G__11165 = cljs.core.first.call(null, more);
            var G__11166 = cljs.core.next.call(null, more);
            x = G__11164;
            y = G__11165;
            more = G__11166;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11163 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11163__delegate.call(this, x, y, more);
    };
    G__11163.cljs$lang$maxFixedArity = 2;
    G__11163.cljs$lang$applyTo = function(arglist__11167) {
      var x = cljs.core.first(arglist__11167);
      arglist__11167 = cljs.core.next(arglist__11167);
      var y = cljs.core.first(arglist__11167);
      var more = cljs.core.rest(arglist__11167);
      return G__11163__delegate(x, y, more);
    };
    G__11163.cljs$core$IFn$_invoke$arity$variadic = G__11163__delegate;
    return G__11163;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function __GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq.call(null, coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function __GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1.call(null, hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1.call(null, h1, k1);
  return cljs.core.m3_fmix.call(null, h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__11168 = n + 1;
      var G__11169 = cljs.core.imul.call(null, 31, hash_code) + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__11170 = cljs.core.next.call(null, coll__$1);
      n = G__11168;
      hash_code = G__11169;
      coll__$1 = G__11170;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__11171 = n + 1;
      var G__11172 = hash_code + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__11173 = cljs.core.next.call(null, coll__$1);
      n = G__11171;
      hash_code = G__11172;
      coll__$1 = G__11173;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_.call(null, x)) {
    return x;
  } else {
    return cljs.core.reduced.call(null, x);
  }
};
cljs.core.unreduced = function unreduced(x) {
  if (cljs.core.reduced_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__11174 = nval;
            var G__11175 = n + 1;
            val = G__11174;
            n = G__11175;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__11176 = nval;
          var G__11177 = n + 1;
          val__$1 = G__11176;
          n = G__11177;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__11178 = nval;
          var G__11179 = n + 1;
          val__$1 = G__11178;
          n = G__11179;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__11180 = nval;
            var G__11181 = n + 1;
            val = G__11180;
            n = G__11181;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__11182 = nval;
          var G__11183 = n + 1;
          val__$1 = G__11182;
          n = G__11183;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__11184 = nval;
          var G__11185 = n + 1;
          val__$1 = G__11184;
          n = G__11185;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__11187 = x;
  if (G__11187) {
    var bit__4311__auto__ = G__11187.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4311__auto__ || G__11187.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__11187.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__11187);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__11187);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__11189 = x;
  if (G__11189) {
    var bit__4311__auto__ = G__11189.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4311__auto__ || G__11189.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__11189.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__11189);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__11189);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function __GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__11190 = sn;
      s = G__11190;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__11191__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__11192 = conj.call(null, coll, x);
          var G__11193 = cljs.core.first.call(null, xs);
          var G__11194 = cljs.core.next.call(null, xs);
          coll = G__11192;
          x = G__11193;
          xs = G__11194;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__11191 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11191__delegate.call(this, coll, x, xs);
    };
    G__11191.cljs$lang$maxFixedArity = 2;
    G__11191.cljs$lang$applyTo = function(arglist__11195) {
      var coll = cljs.core.first(arglist__11195);
      arglist__11195 = cljs.core.next(arglist__11195);
      var x = cljs.core.first(arglist__11195);
      var xs = cljs.core.rest(arglist__11195);
      return G__11191__delegate(coll, x, xs);
    };
    G__11191.cljs$core$IFn$_invoke$arity$variadic = G__11191__delegate;
    return G__11191;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__11196 = cljs.core.next.call(null, s);
      var G__11197 = acc + 1;
      s = G__11196;
      acc = G__11197;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__11199 = coll;
      if (G__11199) {
        var bit__4304__auto__ = G__11199.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4304__auto__ || G__11199.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            return cljs.core.accumulating_seq_count.call(null, coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__11200 = cljs.core.next.call(null, coll);
              var G__11201 = n - 1;
              coll = G__11200;
              n = G__11201;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__11202 = cljs.core.next.call(null, coll);
              var G__11203 = n - 1;
              var G__11204 = not_found;
              coll = G__11202;
              n = G__11203;
              not_found = G__11204;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__11209 = coll;
          if (G__11209) {
            var bit__4304__auto__ = G__11209.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4304__auto__ || G__11209.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__11210 = coll;
                  if (G__11210) {
                    var bit__4311__auto__ = G__11210.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4311__auto__ || G__11210.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__11210.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__11210);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__11210);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__11211 = coll;
          if (G__11211) {
            var bit__4304__auto__ = G__11211.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4304__auto__ || G__11211.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__11212 = coll;
                  if (G__11212) {
                    var bit__4311__auto__ = G__11212.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4311__auto__ || G__11212.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__11212.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__11212);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__11212);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.nthrest = function nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq.call(null, xs)) {
      var G__11213 = n__$1 - 1;
      var G__11214 = cljs.core.rest.call(null, xs);
      n__$1 = G__11213;
      xs = G__11214;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__11217 = o;
        if (G__11217) {
          var bit__4304__auto__ = G__11217.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4304__auto__ || G__11217.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__11218 = o;
        if (G__11218) {
          var bit__4304__auto__ = G__11218.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4304__auto__ || G__11218.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__11219__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__11220 = ret;
          var G__11221 = cljs.core.first.call(null, kvs);
          var G__11222 = cljs.core.second.call(null, kvs);
          var G__11223 = cljs.core.nnext.call(null, kvs);
          coll = G__11220;
          k = G__11221;
          v = G__11222;
          kvs = G__11223;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__11219 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11219__delegate.call(this, coll, k, v, kvs);
    };
    G__11219.cljs$lang$maxFixedArity = 3;
    G__11219.cljs$lang$applyTo = function(arglist__11224) {
      var coll = cljs.core.first(arglist__11224);
      arglist__11224 = cljs.core.next(arglist__11224);
      var k = cljs.core.first(arglist__11224);
      arglist__11224 = cljs.core.next(arglist__11224);
      var v = cljs.core.first(arglist__11224);
      var kvs = cljs.core.rest(arglist__11224);
      return G__11219__delegate(coll, k, v, kvs);
    };
    G__11219.cljs$core$IFn$_invoke$arity$variadic = G__11219__delegate;
    return G__11219;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__11225__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__11226 = ret;
            var G__11227 = cljs.core.first.call(null, ks);
            var G__11228 = cljs.core.next.call(null, ks);
            coll = G__11226;
            k = G__11227;
            ks = G__11228;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__11225 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11225__delegate.call(this, coll, k, ks);
    };
    G__11225.cljs$lang$maxFixedArity = 2;
    G__11225.cljs$lang$applyTo = function(arglist__11229) {
      var coll = cljs.core.first(arglist__11229);
      arglist__11229 = cljs.core.next(arglist__11229);
      var k = cljs.core.first(arglist__11229);
      var ks = cljs.core.rest(arglist__11229);
      return G__11225__delegate(coll, k, ks);
    };
    G__11225.cljs$core$IFn$_invoke$arity$variadic = G__11225__delegate;
    return G__11225;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3630__auto__ = goog.isFunction(f);
  if (or__3630__auto__) {
    return or__3630__auto__;
  } else {
    var G__11233 = f;
    if (G__11233) {
      var bit__4311__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3630__auto____$1 = bit__4311__auto__;
        if (cljs.core.truth_(or__3630__auto____$1)) {
          return or__3630__auto____$1;
        } else {
          return G__11233.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__11233.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__11233);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__11233);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__11235 = null;
  var G__11235__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null);
  };
  var G__11235__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a);
  };
  var G__11235__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b);
  };
  var G__11235__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c);
  };
  var G__11235__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d);
  };
  var G__11235__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e);
  };
  var G__11235__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__11235__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__11235__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__11235__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__11235__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__11235__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__11235__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__11235__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__11235__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__11235__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__11235__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__11235__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__11235__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__11235__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__11235__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__11235__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__11235 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__11235__1.call(this, self__);
      case 2:
        return G__11235__2.call(this, self__, a);
      case 3:
        return G__11235__3.call(this, self__, a, b);
      case 4:
        return G__11235__4.call(this, self__, a, b, c);
      case 5:
        return G__11235__5.call(this, self__, a, b, c, d);
      case 6:
        return G__11235__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__11235__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__11235__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__11235__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__11235__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__11235__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__11235__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__11235__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__11235__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__11235__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__11235__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__11235__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__11235__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__11235__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__11235__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__11235__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__11235__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11235.cljs$core$IFn$_invoke$arity$1 = G__11235__1;
  G__11235.cljs$core$IFn$_invoke$arity$2 = G__11235__2;
  G__11235.cljs$core$IFn$_invoke$arity$3 = G__11235__3;
  G__11235.cljs$core$IFn$_invoke$arity$4 = G__11235__4;
  G__11235.cljs$core$IFn$_invoke$arity$5 = G__11235__5;
  G__11235.cljs$core$IFn$_invoke$arity$6 = G__11235__6;
  G__11235.cljs$core$IFn$_invoke$arity$7 = G__11235__7;
  G__11235.cljs$core$IFn$_invoke$arity$8 = G__11235__8;
  G__11235.cljs$core$IFn$_invoke$arity$9 = G__11235__9;
  G__11235.cljs$core$IFn$_invoke$arity$10 = G__11235__10;
  G__11235.cljs$core$IFn$_invoke$arity$11 = G__11235__11;
  G__11235.cljs$core$IFn$_invoke$arity$12 = G__11235__12;
  G__11235.cljs$core$IFn$_invoke$arity$13 = G__11235__13;
  G__11235.cljs$core$IFn$_invoke$arity$14 = G__11235__14;
  G__11235.cljs$core$IFn$_invoke$arity$15 = G__11235__15;
  G__11235.cljs$core$IFn$_invoke$arity$16 = G__11235__16;
  G__11235.cljs$core$IFn$_invoke$arity$17 = G__11235__17;
  G__11235.cljs$core$IFn$_invoke$arity$18 = G__11235__18;
  G__11235.cljs$core$IFn$_invoke$arity$19 = G__11235__19;
  G__11235.cljs$core$IFn$_invoke$arity$20 = G__11235__20;
  G__11235.cljs$core$IFn$_invoke$arity$21 = G__11235__21;
  G__11235.cljs$core$IFn$_invoke$arity$22 = G__11235__22;
  return G__11235;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args11234) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11234)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__11239 = o;
    if (G__11239) {
      var bit__4311__auto__ = G__11239.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4311__auto__ || G__11239.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__11239.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__11239);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__11239);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3618__auto__ = !(o == null);
    if (and__3618__auto__) {
      var G__11243 = o;
      if (G__11243) {
        var bit__4311__auto__ = G__11243.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4311__auto__ || G__11243.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__11243.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__11243);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__11243);
      }
    } else {
      return and__3618__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__11244__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__11245 = ret;
            var G__11246 = cljs.core.first.call(null, ks);
            var G__11247 = cljs.core.next.call(null, ks);
            coll = G__11245;
            k = G__11246;
            ks = G__11247;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__11244 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11244__delegate.call(this, coll, k, ks);
    };
    G__11244.cljs$lang$maxFixedArity = 2;
    G__11244.cljs$lang$applyTo = function(arglist__11248) {
      var coll = cljs.core.first(arglist__11248);
      arglist__11248 = cljs.core.next(arglist__11248);
      var k = cljs.core.first(arglist__11248);
      var ks = cljs.core.rest(arglist__11248);
      return G__11244__delegate(coll, k, ks);
    };
    G__11244.cljs$core$IFn$_invoke$arity$variadic = G__11244__delegate;
    return G__11244;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__11250 = x;
    if (G__11250) {
      var bit__4311__auto__ = G__11250.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4311__auto__ || G__11250.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__11250.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__11250);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__11250);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__11252 = x;
    if (G__11252) {
      var bit__4311__auto__ = G__11252.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4311__auto__ || G__11252.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__11252.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__11252);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__11252);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__11254 = x;
  if (G__11254) {
    var bit__4311__auto__ = G__11254.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4311__auto__ || G__11254.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__11254.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__11254);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__11254);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__11256 = x;
  if (G__11256) {
    var bit__4311__auto__ = G__11256.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4311__auto__ || G__11256.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__11256.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__11256);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__11256);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__11258 = x;
  if (G__11258) {
    var bit__4311__auto__ = G__11258.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4311__auto__ || G__11258.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__11258.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__11258);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__11258);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__11260 = x;
  if (G__11260) {
    var bit__4311__auto__ = G__11260.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4311__auto__ || G__11260.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__11260.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__11260);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__11260);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__11262 = x;
    if (G__11262) {
      var bit__4311__auto__ = G__11262.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4311__auto__ || G__11262.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__11262.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__11262);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__11262);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__11264 = x;
  if (G__11264) {
    var bit__4311__auto__ = G__11264.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4311__auto__ || G__11264.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__11264.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__11264);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__11264);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__11266 = x;
  if (G__11266) {
    var bit__4304__auto__ = G__11266.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4304__auto__ || G__11266.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj11270 = {};
    return obj11270;
  };
  var js_obj__1 = function() {
    var G__11271__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__11271 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__11271__delegate.call(this, keyvals);
    };
    G__11271.cljs$lang$maxFixedArity = 0;
    G__11271.cljs$lang$applyTo = function(arglist__11272) {
      var keyvals = cljs.core.seq(arglist__11272);
      return G__11271__delegate(keyvals);
    };
    G__11271.cljs$core$IFn$_invoke$arity$variadic = G__11271__delegate;
    return G__11271;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(keys));
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__11273 = i__$1 + 1;
      var G__11274 = j__$1 + 1;
      var G__11275 = len__$1 - 1;
      i__$1 = G__11273;
      j__$1 = G__11274;
      len__$1 = G__11275;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__11276 = i__$1 - 1;
      var G__11277 = j__$1 - 1;
      var G__11278 = len__$1 - 1;
      i__$1 = G__11276;
      j__$1 = G__11277;
      len__$1 = G__11278;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj11280 = {};
  return obj11280;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__11282 = s;
    if (G__11282) {
      var bit__4311__auto__ = G__11282.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4311__auto__ || G__11282.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__11282.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__11282);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__11282);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__11284 = s;
  if (G__11284) {
    var bit__4311__auto__ = G__11284.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4311__auto__ || G__11284.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__11284.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__11284);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__11284);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3630__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3630__auto__) {
    return or__3630__auto__;
  } else {
    var G__11288 = f;
    if (G__11288) {
      var bit__4311__auto__ = G__11288.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4311__auto__ || G__11288.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__11288.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__11288);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__11288);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__11289__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__11290 = cljs.core.conj.call(null, s, x__$1);
              var G__11291 = etc;
              s = G__11290;
              xs = G__11291;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__11289 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11289__delegate.call(this, x, y, more);
    };
    G__11289.cljs$lang$maxFixedArity = 2;
    G__11289.cljs$lang$applyTo = function(arglist__11292) {
      var x = cljs.core.first(arglist__11292);
      arglist__11292 = cljs.core.next(arglist__11292);
      var y = cljs.core.first(arglist__11292);
      var more = cljs.core.rest(arglist__11292);
      return G__11289__delegate(x, y, more);
    };
    G__11289.cljs$core$IFn$_invoke$arity$variadic = G__11289__delegate;
    return G__11289;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3630__auto__ = cljs.core.seq.call(null, coll);
    if (or__3630__auto__) {
      return or__3630__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__11294 = x;
            if (G__11294) {
              var bit__4304__auto__ = G__11294.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4304__auto__ || G__11294.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.call(null, xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__11295 = xs;
        var G__11296 = ys;
        var G__11297 = len;
        var G__11298 = n + 1;
        xs = G__11295;
        ys = G__11296;
        len = G__11297;
        n = G__11298;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__11299 = nval;
          var G__11300 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__11299;
          coll__$1 = G__11300;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__11303 = coll;
      if (G__11303) {
        var bit__4304__auto__ = G__11303.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4304__auto__ || G__11303.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            return cljs.core.seq_reduce.call(null, f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__11304 = coll;
      if (G__11304) {
        var bit__4304__auto__ = G__11304.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4304__auto__ || G__11304.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            return cljs.core.seq_reduce.call(null, f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.completing = function() {
  var completing = null;
  var completing__1 = function(f) {
    return completing.call(null, f, cljs.core.identity);
  };
  var completing__2 = function(f, cf) {
    return function() {
      var G__11305 = null;
      var G__11305__0 = function() {
        return f.call(null);
      };
      var G__11305__1 = function(x) {
        return cf.call(null, x);
      };
      var G__11305__2 = function(x, y) {
        return f.call(null, x, y);
      };
      G__11305 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__11305__0.call(this);
          case 1:
            return G__11305__1.call(this, x);
          case 2:
            return G__11305__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11305.cljs$core$IFn$_invoke$arity$0 = G__11305__0;
      G__11305.cljs$core$IFn$_invoke$arity$1 = G__11305__1;
      G__11305.cljs$core$IFn$_invoke$arity$2 = G__11305__2;
      return G__11305;
    }();
  };
  completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return completing__1.call(this, f);
      case 2:
        return completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
  completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
  return completing;
}();
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.call(null, xform, f, f.call(null), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = xform.call(null, f);
    var ret = cljs.core.reduce.call(null, f__$1, init, coll);
    return f__$1.call(null, ret);
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__11306__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__11306 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11306__delegate.call(this, x, y, more);
    };
    G__11306.cljs$lang$maxFixedArity = 2;
    G__11306.cljs$lang$applyTo = function(arglist__11307) {
      var x = cljs.core.first(arglist__11307);
      arglist__11307 = cljs.core.next(arglist__11307);
      var y = cljs.core.first(arglist__11307);
      var more = cljs.core.rest(arglist__11307);
      return G__11306__delegate(x, y, more);
    };
    G__11306.cljs$core$IFn$_invoke$arity$variadic = G__11306__delegate;
    return G__11306;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__11308__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__11308 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11308__delegate.call(this, x, y, more);
    };
    G__11308.cljs$lang$maxFixedArity = 2;
    G__11308.cljs$lang$applyTo = function(arglist__11309) {
      var x = cljs.core.first(arglist__11309);
      arglist__11309 = cljs.core.next(arglist__11309);
      var y = cljs.core.first(arglist__11309);
      var more = cljs.core.rest(arglist__11309);
      return G__11308__delegate(x, y, more);
    };
    G__11308.cljs$core$IFn$_invoke$arity$variadic = G__11308__delegate;
    return G__11308;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__11310__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__11310 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11310__delegate.call(this, x, y, more);
    };
    G__11310.cljs$lang$maxFixedArity = 2;
    G__11310.cljs$lang$applyTo = function(arglist__11311) {
      var x = cljs.core.first(arglist__11311);
      arglist__11311 = cljs.core.next(arglist__11311);
      var y = cljs.core.first(arglist__11311);
      var more = cljs.core.rest(arglist__11311);
      return G__11310__delegate(x, y, more);
    };
    G__11310.cljs$core$IFn$_invoke$arity$variadic = G__11310__delegate;
    return G__11310;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__11312__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__11312 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11312__delegate.call(this, x, y, more);
    };
    G__11312.cljs$lang$maxFixedArity = 2;
    G__11312.cljs$lang$applyTo = function(arglist__11313) {
      var x = cljs.core.first(arglist__11313);
      arglist__11313 = cljs.core.next(arglist__11313);
      var y = cljs.core.first(arglist__11313);
      var more = cljs.core.rest(arglist__11313);
      return G__11312__delegate(x, y, more);
    };
    G__11312.cljs$core$IFn$_invoke$arity$variadic = G__11312__delegate;
    return G__11312;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__11314__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__11315 = y;
            var G__11316 = cljs.core.first.call(null, more);
            var G__11317 = cljs.core.next.call(null, more);
            x = G__11315;
            y = G__11316;
            more = G__11317;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11314 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11314__delegate.call(this, x, y, more);
    };
    G__11314.cljs$lang$maxFixedArity = 2;
    G__11314.cljs$lang$applyTo = function(arglist__11318) {
      var x = cljs.core.first(arglist__11318);
      arglist__11318 = cljs.core.next(arglist__11318);
      var y = cljs.core.first(arglist__11318);
      var more = cljs.core.rest(arglist__11318);
      return G__11314__delegate(x, y, more);
    };
    G__11314.cljs$core$IFn$_invoke$arity$variadic = G__11314__delegate;
    return G__11314;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__11319__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__11320 = y;
            var G__11321 = cljs.core.first.call(null, more);
            var G__11322 = cljs.core.next.call(null, more);
            x = G__11320;
            y = G__11321;
            more = G__11322;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11319 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11319__delegate.call(this, x, y, more);
    };
    G__11319.cljs$lang$maxFixedArity = 2;
    G__11319.cljs$lang$applyTo = function(arglist__11323) {
      var x = cljs.core.first(arglist__11323);
      arglist__11323 = cljs.core.next(arglist__11323);
      var y = cljs.core.first(arglist__11323);
      var more = cljs.core.rest(arglist__11323);
      return G__11319__delegate(x, y, more);
    };
    G__11319.cljs$core$IFn$_invoke$arity$variadic = G__11319__delegate;
    return G__11319;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__11324__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__11325 = y;
            var G__11326 = cljs.core.first.call(null, more);
            var G__11327 = cljs.core.next.call(null, more);
            x = G__11325;
            y = G__11326;
            more = G__11327;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11324 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11324__delegate.call(this, x, y, more);
    };
    G__11324.cljs$lang$maxFixedArity = 2;
    G__11324.cljs$lang$applyTo = function(arglist__11328) {
      var x = cljs.core.first(arglist__11328);
      arglist__11328 = cljs.core.next(arglist__11328);
      var y = cljs.core.first(arglist__11328);
      var more = cljs.core.rest(arglist__11328);
      return G__11324__delegate(x, y, more);
    };
    G__11324.cljs$core$IFn$_invoke$arity$variadic = G__11324__delegate;
    return G__11324;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__11329__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__11330 = y;
            var G__11331 = cljs.core.first.call(null, more);
            var G__11332 = cljs.core.next.call(null, more);
            x = G__11330;
            y = G__11331;
            more = G__11332;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11329 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11329__delegate.call(this, x, y, more);
    };
    G__11329.cljs$lang$maxFixedArity = 2;
    G__11329.cljs$lang$applyTo = function(arglist__11333) {
      var x = cljs.core.first(arglist__11333);
      arglist__11333 = cljs.core.next(arglist__11333);
      var y = cljs.core.first(arglist__11333);
      var more = cljs.core.rest(arglist__11333);
      return G__11329__delegate(x, y, more);
    };
    G__11329.cljs$core$IFn$_invoke$arity$variadic = G__11329__delegate;
    return G__11329;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3947__auto__ = x;
    var y__3948__auto__ = y;
    return x__3947__auto__ > y__3948__auto__ ? x__3947__auto__ : y__3948__auto__;
  };
  var max__3 = function() {
    var G__11334__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3947__auto__ = x;
        var y__3948__auto__ = y;
        return x__3947__auto__ > y__3948__auto__ ? x__3947__auto__ : y__3948__auto__;
      }(), more);
    };
    var G__11334 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11334__delegate.call(this, x, y, more);
    };
    G__11334.cljs$lang$maxFixedArity = 2;
    G__11334.cljs$lang$applyTo = function(arglist__11335) {
      var x = cljs.core.first(arglist__11335);
      arglist__11335 = cljs.core.next(arglist__11335);
      var y = cljs.core.first(arglist__11335);
      var more = cljs.core.rest(arglist__11335);
      return G__11334__delegate(x, y, more);
    };
    G__11334.cljs$core$IFn$_invoke$arity$variadic = G__11334__delegate;
    return G__11334;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3954__auto__ = x;
    var y__3955__auto__ = y;
    return x__3954__auto__ < y__3955__auto__ ? x__3954__auto__ : y__3955__auto__;
  };
  var min__3 = function() {
    var G__11336__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3954__auto__ = x;
        var y__3955__auto__ = y;
        return x__3954__auto__ < y__3955__auto__ ? x__3954__auto__ : y__3955__auto__;
      }(), more);
    };
    var G__11336 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11336__delegate.call(this, x, y, more);
    };
    G__11336.cljs$lang$maxFixedArity = 2;
    G__11336.cljs$lang$applyTo = function(arglist__11337) {
      var x = cljs.core.first(arglist__11337);
      arglist__11337 = cljs.core.next(arglist__11337);
      var y = cljs.core.first(arglist__11337);
      var more = cljs.core.rest(arglist__11337);
      return G__11336__delegate(x, y, more);
    };
    G__11336.cljs$core$IFn$_invoke$arity$variadic = G__11336__delegate;
    return G__11336;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__11338__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__11338 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11338__delegate.call(this, x, y, more);
    };
    G__11338.cljs$lang$maxFixedArity = 2;
    G__11338.cljs$lang$applyTo = function(arglist__11339) {
      var x = cljs.core.first(arglist__11339);
      arglist__11339 = cljs.core.next(arglist__11339);
      var y = cljs.core.first(arglist__11339);
      var more = cljs.core.rest(arglist__11339);
      return G__11338__delegate(x, y, more);
    };
    G__11338.cljs$core$IFn$_invoke$arity$variadic = G__11338__delegate;
    return G__11338;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__11340__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__11340 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11340__delegate.call(this, x, y, more);
    };
    G__11340.cljs$lang$maxFixedArity = 2;
    G__11340.cljs$lang$applyTo = function(arglist__11341) {
      var x = cljs.core.first(arglist__11341);
      arglist__11341 = cljs.core.next(arglist__11341);
      var y = cljs.core.first(arglist__11341);
      var more = cljs.core.rest(arglist__11341);
      return G__11340__delegate(x, y, more);
    };
    G__11340.cljs$core$IFn$_invoke$arity$variadic = G__11340__delegate;
    return G__11340;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__11342__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__11342 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11342__delegate.call(this, x, y, more);
    };
    G__11342.cljs$lang$maxFixedArity = 2;
    G__11342.cljs$lang$applyTo = function(arglist__11343) {
      var x = cljs.core.first(arglist__11343);
      arglist__11343 = cljs.core.next(arglist__11343);
      var y = cljs.core.first(arglist__11343);
      var more = cljs.core.rest(arglist__11343);
      return G__11342__delegate(x, y, more);
    };
    G__11342.cljs$core$IFn$_invoke$arity$variadic = G__11342__delegate;
    return G__11342;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__11344__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__11344 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11344__delegate.call(this, x, y, more);
    };
    G__11344.cljs$lang$maxFixedArity = 2;
    G__11344.cljs$lang$applyTo = function(arglist__11345) {
      var x = cljs.core.first(arglist__11345);
      arglist__11345 = cljs.core.next(arglist__11345);
      var y = cljs.core.first(arglist__11345);
      var more = cljs.core.rest(arglist__11345);
      return G__11344__delegate(x, y, more);
    };
    G__11344.cljs$core$IFn$_invoke$arity$variadic = G__11344__delegate;
    return G__11344;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__11346__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__11346 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11346__delegate.call(this, x, y, more);
    };
    G__11346.cljs$lang$maxFixedArity = 2;
    G__11346.cljs$lang$applyTo = function(arglist__11347) {
      var x = cljs.core.first(arglist__11347);
      arglist__11347 = cljs.core.next(arglist__11347);
      var y = cljs.core.first(arglist__11347);
      var more = cljs.core.rest(arglist__11347);
      return G__11346__delegate(x, y, more);
    };
    G__11346.cljs$core$IFn$_invoke$arity$variadic = G__11346__delegate;
    return G__11346;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__11348__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract, x - y, more);
    };
    var G__11348 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11348__delegate.call(this, x, y, more);
    };
    G__11348.cljs$lang$maxFixedArity = 2;
    G__11348.cljs$lang$applyTo = function(arglist__11349) {
      var x = cljs.core.first(arglist__11349);
      arglist__11349 = cljs.core.next(arglist__11349);
      var y = cljs.core.first(arglist__11349);
      var more = cljs.core.rest(arglist__11349);
      return G__11348__delegate(x, y, more);
    };
    G__11348.cljs$core$IFn$_invoke$arity$variadic = G__11348__delegate;
    return G__11348;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__11350__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract_int, x - y, more);
    };
    var G__11350 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11350__delegate.call(this, x, y, more);
    };
    G__11350.cljs$lang$maxFixedArity = 2;
    G__11350.cljs$lang$applyTo = function(arglist__11351) {
      var x = cljs.core.first(arglist__11351);
      arglist__11351 = cljs.core.next(arglist__11351);
      var y = cljs.core.first(arglist__11351);
      var more = cljs.core.rest(arglist__11351);
      return G__11350__delegate(x, y, more);
    };
    G__11350.cljs$core$IFn$_invoke$arity$variadic = G__11350__delegate;
    return G__11350;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__11352__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__11353 = y;
            var G__11354 = cljs.core.first.call(null, more);
            var G__11355 = cljs.core.next.call(null, more);
            x = G__11353;
            y = G__11354;
            more = G__11355;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11352 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11352__delegate.call(this, x, y, more);
    };
    G__11352.cljs$lang$maxFixedArity = 2;
    G__11352.cljs$lang$applyTo = function(arglist__11356) {
      var x = cljs.core.first(arglist__11356);
      arglist__11356 = cljs.core.next(arglist__11356);
      var y = cljs.core.first(arglist__11356);
      var more = cljs.core.rest(arglist__11356);
      return G__11352__delegate(x, y, more);
    };
    G__11352.cljs$core$IFn$_invoke$arity$variadic = G__11352__delegate;
    return G__11352;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__11357 = n__$1 - 1;
      var G__11358 = cljs.core.next.call(null, xs);
      n__$1 = G__11357;
      xs = G__11358;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return goog.string.buildString(x);
    }
  };
  var str__2 = function() {
    var G__11359__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__11360 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__11361 = cljs.core.next.call(null, more);
          sb = G__11360;
          more = G__11361;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__11359 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__11359__delegate.call(this, x, ys);
    };
    G__11359.cljs$lang$maxFixedArity = 1;
    G__11359.cljs$lang$applyTo = function(arglist__11362) {
      var x = cljs.core.first(arglist__11362);
      var ys = cljs.core.rest(arglist__11362);
      return G__11359__delegate(x, ys);
    };
    G__11359.cljs$core$IFn$_invoke$arity$variadic = G__11359__delegate;
    return G__11359;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? cljs.core.counted_QMARK_.call(null, x) && cljs.core.counted_QMARK_.call(null, y) && !(cljs.core.count.call(null, x) === cljs.core.count.call(null, y)) ? false : function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__11363 = cljs.core.next.call(null, xs);
            var G__11364 = cljs.core.next.call(null, ys);
            xs = G__11363;
            ys = G__11364;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__11365 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__11366 = cljs.core.next.call(null, s);
        res = G__11365;
        s = G__11366;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__11367 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__11368 = cljs.core.next.call(null, s);
      h = G__11367;
      s = G__11368;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__11369 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__11370 = cljs.core.next.call(null, s__$1);
      h = G__11369;
      s__$1 = G__11370;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__11377_11383 = cljs.core.seq.call(null, fn_map);
  var chunk__11378_11384 = null;
  var count__11379_11385 = 0;
  var i__11380_11386 = 0;
  while (true) {
    if (i__11380_11386 < count__11379_11385) {
      var vec__11381_11387 = cljs.core._nth.call(null, chunk__11378_11384, i__11380_11386);
      var key_name_11388 = cljs.core.nth.call(null, vec__11381_11387, 0, null);
      var f_11389 = cljs.core.nth.call(null, vec__11381_11387, 1, null);
      var str_name_11390 = cljs.core.name.call(null, key_name_11388);
      obj[str_name_11390] = f_11389;
      var G__11391 = seq__11377_11383;
      var G__11392 = chunk__11378_11384;
      var G__11393 = count__11379_11385;
      var G__11394 = i__11380_11386 + 1;
      seq__11377_11383 = G__11391;
      chunk__11378_11384 = G__11392;
      count__11379_11385 = G__11393;
      i__11380_11386 = G__11394;
      continue;
    } else {
      var temp__4126__auto___11395 = cljs.core.seq.call(null, seq__11377_11383);
      if (temp__4126__auto___11395) {
        var seq__11377_11396__$1 = temp__4126__auto___11395;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11377_11396__$1)) {
          var c__4417__auto___11397 = cljs.core.chunk_first.call(null, seq__11377_11396__$1);
          var G__11398 = cljs.core.chunk_rest.call(null, seq__11377_11396__$1);
          var G__11399 = c__4417__auto___11397;
          var G__11400 = cljs.core.count.call(null, c__4417__auto___11397);
          var G__11401 = 0;
          seq__11377_11383 = G__11398;
          chunk__11378_11384 = G__11399;
          count__11379_11385 = G__11400;
          i__11380_11386 = G__11401;
          continue;
        } else {
          var vec__11382_11402 = cljs.core.first.call(null, seq__11377_11396__$1);
          var key_name_11403 = cljs.core.nth.call(null, vec__11382_11402, 0, null);
          var f_11404 = cljs.core.nth.call(null, vec__11382_11402, 1, null);
          var str_name_11405 = cljs.core.name.call(null, key_name_11403);
          obj[str_name_11405] = f_11404;
          var G__11406 = cljs.core.next.call(null, seq__11377_11396__$1);
          var G__11407 = null;
          var G__11408 = 0;
          var G__11409 = 0;
          seq__11377_11383 = G__11406;
          chunk__11378_11384 = G__11407;
          count__11379_11385 = G__11408;
          i__11380_11386 = G__11409;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__11411 = coll;
  if (G__11411) {
    var bit__4311__auto__ = G__11411.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4311__auto__ || G__11411.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__11411.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__11411);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__11411);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__11412 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__11412;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__11413 = i - 1;
        var G__11414 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__11413;
        r = G__11414;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__11415) {
    var xs = cljs.core.seq(arglist__11415);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3630__auto__ = coll == null;
    if (or__3630__auto__) {
      return or__3630__auto__;
    } else {
      var G__11419 = coll;
      if (G__11419) {
        var bit__4304__auto__ = G__11419.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4304__auto__ || G__11419.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__11421 = x;
  if (G__11421) {
    var bit__4311__auto__ = G__11421.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4311__auto__ || G__11421.cljs$core$IList$) {
      return true;
    } else {
      if (!G__11421.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__11421);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__11421);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol.call(null, k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3618__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3618__auto__) {
        return b.ns;
      } else {
        return and__3618__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = goog.array.defaultCompare(a.ns, b.ns);
          if (0 === nsc) {
            return goog.array.defaultCompare(a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return goog.array.defaultCompare(a.name, b.name);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4051__auto__ = self__._hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_keyword.call(null, this$__$1);
    self__._hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__11423 = null;
  var G__11423__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__11423__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__11423 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11423__2.call(this, self__, coll);
      case 3:
        return G__11423__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11423.cljs$core$IFn$_invoke$arity$2 = G__11423__2;
  G__11423.cljs$core$IFn$_invoke$arity$3 = G__11423__3;
  return G__11423;
}();
cljs.core.Keyword.prototype.apply = function(self__, args11422) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11422)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__11425 = x;
    if (G__11425) {
      var bit__4304__auto__ = G__11425.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4304__auto__ || G__11425.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__11426 = ls.sval();
        ls = G__11426;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__11428 = s;
    if (G__11428) {
      var bit__4304__auto__ = G__11428.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4304__auto__ || G__11428.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__11429 = cljs.core.next.call(null, s__$1);
      s__$1 = G__11429;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_11430 = 0;
  var xs_11431 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_11431) {
      ret[i_11430] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_11431));
      var G__11432 = i_11430 + 1;
      var G__11433 = cljs.core.next.call(null, xs_11431);
      i_11430 = G__11432;
      xs_11431 = G__11433;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__11434 = i + 1;
          var G__11435 = cljs.core.next.call(null, s__$1);
          i = G__11434;
          s__$1 = G__11435;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4517__auto___11436 = size;
      var i_11437 = 0;
      while (true) {
        if (i_11437 < n__4517__auto___11436) {
          a[i_11437] = init_val_or_seq;
          var G__11438 = i_11437 + 1;
          i_11437 = G__11438;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__11439 = i + 1;
          var G__11440 = cljs.core.next.call(null, s__$1);
          i = G__11439;
          s__$1 = G__11440;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4517__auto___11441 = size;
      var i_11442 = 0;
      while (true) {
        if (i_11442 < n__4517__auto___11441) {
          a[i_11442] = init_val_or_seq;
          var G__11443 = i_11442 + 1;
          i_11442 = G__11443;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__11444 = i + 1;
          var G__11445 = cljs.core.next.call(null, s__$1);
          i = G__11444;
          s__$1 = G__11445;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4517__auto___11446 = size;
      var i_11447 = 0;
      while (true) {
        if (i_11447 < n__4517__auto___11446) {
          a[i_11447] = init_val_or_seq;
          var G__11448 = i_11447 + 1;
          i_11447 = G__11448;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__11449 = i + 1;
          var G__11450 = cljs.core.next.call(null, s__$1);
          i = G__11449;
          s__$1 = G__11450;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4517__auto___11451 = size;
      var i_11452 = 0;
      while (true) {
        if (i_11452 < n__4517__auto___11451) {
          a[i_11452] = init_val_or_seq;
          var G__11453 = i_11452 + 1;
          i_11452 = G__11453;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__11454 = cljs.core.next.call(null, s__$1);
        var G__11455 = i - 1;
        var G__11456 = sum + 1;
        s__$1 = G__11454;
        i = G__11455;
        sum = G__11456;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__11457__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__11457 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11457__delegate.call(this, x, y, zs);
    };
    G__11457.cljs$lang$maxFixedArity = 2;
    G__11457.cljs$lang$applyTo = function(arglist__11458) {
      var x = cljs.core.first(arglist__11458);
      arglist__11458 = cljs.core.next(arglist__11458);
      var y = cljs.core.first(arglist__11458);
      var zs = cljs.core.rest(arglist__11458);
      return G__11457__delegate(x, y, zs);
    };
    G__11457.cljs$core$IFn$_invoke$arity$variadic = G__11457__delegate;
    return G__11457;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__11459__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__11459 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__11459__delegate.call(this, a, b, c, d, more);
    };
    G__11459.cljs$lang$maxFixedArity = 4;
    G__11459.cljs$lang$applyTo = function(arglist__11460) {
      var a = cljs.core.first(arglist__11460);
      arglist__11460 = cljs.core.next(arglist__11460);
      var b = cljs.core.first(arglist__11460);
      arglist__11460 = cljs.core.next(arglist__11460);
      var c = cljs.core.first(arglist__11460);
      arglist__11460 = cljs.core.next(arglist__11460);
      var d = cljs.core.first(arglist__11460);
      var more = cljs.core.rest(arglist__11460);
      return G__11459__delegate(a, b, c, d, more);
    };
    G__11459.cljs$core$IFn$_invoke$arity$variadic = G__11459__delegate;
    return G__11459;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__11461__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__11462 = ntcoll;
          var G__11463 = cljs.core.first.call(null, vals);
          var G__11464 = cljs.core.next.call(null, vals);
          tcoll = G__11462;
          val = G__11463;
          vals = G__11464;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11461 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11461__delegate.call(this, tcoll, val, vals);
    };
    G__11461.cljs$lang$maxFixedArity = 2;
    G__11461.cljs$lang$applyTo = function(arglist__11465) {
      var tcoll = cljs.core.first(arglist__11465);
      arglist__11465 = cljs.core.next(arglist__11465);
      var val = cljs.core.first(arglist__11465);
      var vals = cljs.core.rest(arglist__11465);
      return G__11461__delegate(tcoll, val, vals);
    };
    G__11461.cljs$core$IFn$_invoke$arity$variadic = G__11461__delegate;
    return G__11461;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__11466__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__11467 = ntcoll;
          var G__11468 = cljs.core.first.call(null, kvs);
          var G__11469 = cljs.core.second.call(null, kvs);
          var G__11470 = cljs.core.nnext.call(null, kvs);
          tcoll = G__11467;
          key = G__11468;
          val = G__11469;
          kvs = G__11470;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11466 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11466__delegate.call(this, tcoll, key, val, kvs);
    };
    G__11466.cljs$lang$maxFixedArity = 3;
    G__11466.cljs$lang$applyTo = function(arglist__11471) {
      var tcoll = cljs.core.first(arglist__11471);
      arglist__11471 = cljs.core.next(arglist__11471);
      var key = cljs.core.first(arglist__11471);
      arglist__11471 = cljs.core.next(arglist__11471);
      var val = cljs.core.first(arglist__11471);
      var kvs = cljs.core.rest(arglist__11471);
      return G__11466__delegate(tcoll, key, val, kvs);
    };
    G__11466.cljs$core$IFn$_invoke$arity$variadic = G__11466__delegate;
    return G__11466;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__11472__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__11473 = ntcoll;
          var G__11474 = cljs.core.first.call(null, ks);
          var G__11475 = cljs.core.next.call(null, ks);
          tcoll = G__11473;
          key = G__11474;
          ks = G__11475;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11472 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11472__delegate.call(this, tcoll, key, ks);
    };
    G__11472.cljs$lang$maxFixedArity = 2;
    G__11472.cljs$lang$applyTo = function(arglist__11476) {
      var tcoll = cljs.core.first(arglist__11476);
      arglist__11476 = cljs.core.next(arglist__11476);
      var key = cljs.core.first(arglist__11476);
      var ks = cljs.core.rest(arglist__11476);
      return G__11472__delegate(tcoll, key, ks);
    };
    G__11472.cljs$core$IFn$_invoke$arity$variadic = G__11472__delegate;
    return G__11472;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__11477__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__11478 = ntcoll;
          var G__11479 = cljs.core.first.call(null, vals);
          var G__11480 = cljs.core.next.call(null, vals);
          tcoll = G__11478;
          val = G__11479;
          vals = G__11480;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11477 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11477__delegate.call(this, tcoll, val, vals);
    };
    G__11477.cljs$lang$maxFixedArity = 2;
    G__11477.cljs$lang$applyTo = function(arglist__11481) {
      var tcoll = cljs.core.first(arglist__11481);
      arglist__11481 = cljs.core.next(arglist__11481);
      var val = cljs.core.first(arglist__11481);
      var vals = cljs.core.rest(arglist__11481);
      return G__11477__delegate(tcoll, val, vals);
    };
    G__11477.cljs$core$IFn$_invoke$arity$variadic = G__11477__delegate;
    return G__11477;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a4561 = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4561);
      } else {
        return f.call(null, a4561);
      }
    } else {
      var b4562 = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4561, b4562);
        } else {
          return f.call(null, a4561, b4562);
        }
      } else {
        var c4563 = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4561, b4562, c4563);
          } else {
            return f.call(null, a4561, b4562, c4563);
          }
        } else {
          var d4564 = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4561, b4562, c4563, d4564);
            } else {
              return f.call(null, a4561, b4562, c4563, d4564);
            }
          } else {
            var e4565 = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4561, b4562, c4563, d4564, e4565);
              } else {
                return f.call(null, a4561, b4562, c4563, d4564, e4565);
              }
            } else {
              var f4566 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4561, b4562, c4563, d4564, e4565, f4566);
                } else {
                  return f.call(null, a4561, b4562, c4563, d4564, e4565, f4566);
                }
              } else {
                var g4567 = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4561, b4562, c4563, d4564, e4565, f4566, g4567);
                  } else {
                    return f.call(null, a4561, b4562, c4563, d4564, e4565, f4566, g4567);
                  }
                } else {
                  var h4568 = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568);
                    } else {
                      return f.call(null, a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568);
                    }
                  } else {
                    var i4569 = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568, i4569);
                      } else {
                        return f.call(null, a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568, i4569);
                      }
                    } else {
                      var j4570 = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568, i4569, j4570);
                        } else {
                          return f.call(null, a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568, i4569, j4570);
                        }
                      } else {
                        var k4571 = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568, i4569, j4570, k4571);
                          } else {
                            return f.call(null, a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568, i4569, j4570, k4571);
                          }
                        } else {
                          var l4572 = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568, i4569, j4570, k4571, l4572);
                            } else {
                              return f.call(null, a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568, i4569, j4570, k4571, l4572);
                            }
                          } else {
                            var m4573 = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568, i4569, j4570, k4571, l4572, m4573);
                              } else {
                                return f.call(null, a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568, i4569, j4570, k4571, l4572, m4573);
                              }
                            } else {
                              var n4574 = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568, i4569, j4570, k4571, l4572, m4573, n4574);
                                } else {
                                  return f.call(null, a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568, i4569, j4570, k4571, l4572, m4573, n4574);
                                }
                              } else {
                                var o4575 = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568, i4569, j4570, k4571, l4572, m4573, n4574, o4575);
                                  } else {
                                    return f.call(null, a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568, i4569, j4570, k4571, l4572, m4573, n4574, o4575);
                                  }
                                } else {
                                  var p4576 = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568, i4569, j4570, k4571, l4572, m4573, n4574, o4575, p4576);
                                    } else {
                                      return f.call(null, a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568, i4569, j4570, k4571, l4572, m4573, n4574, o4575, p4576);
                                    }
                                  } else {
                                    var q4577 = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568, i4569, j4570, k4571, l4572, m4573, n4574, o4575, p4576, q4577);
                                      } else {
                                        return f.call(null, a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568, i4569, j4570, k4571, l4572, m4573, n4574, o4575, p4576, q4577);
                                      }
                                    } else {
                                      var r4578 = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568, i4569, j4570, k4571, l4572, m4573, n4574, o4575, p4576, q4577, r4578);
                                        } else {
                                          return f.call(null, a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568, i4569, j4570, k4571, l4572, m4573, n4574, o4575, p4576, q4577, r4578);
                                        }
                                      } else {
                                        var s4579 = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568, i4569, j4570, k4571, l4572, m4573, n4574, o4575, p4576, q4577, r4578, s4579);
                                          } else {
                                            return f.call(null, a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568, i4569, j4570, k4571, l4572, m4573, n4574, o4575, p4576, q4577, r4578, s4579);
                                          }
                                        } else {
                                          var t4580 = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568, i4569, j4570, k4571, l4572, m4573, n4574, o4575, p4576, q4577, r4578, s4579, t4580);
                                            } else {
                                              return f.call(null, a4561, b4562, c4563, d4564, e4565, f4566, g4567, h4568, i4569, j4570, k4571, l4572, m4573, n4574, o4575, p4576, q4577, r4578, s4579, t4580);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__11482__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__11482 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__11482__delegate.call(this, f, a, b, c, d, args);
    };
    G__11482.cljs$lang$maxFixedArity = 5;
    G__11482.cljs$lang$applyTo = function(arglist__11483) {
      var f = cljs.core.first(arglist__11483);
      arglist__11483 = cljs.core.next(arglist__11483);
      var a = cljs.core.first(arglist__11483);
      arglist__11483 = cljs.core.next(arglist__11483);
      var b = cljs.core.first(arglist__11483);
      arglist__11483 = cljs.core.next(arglist__11483);
      var c = cljs.core.first(arglist__11483);
      arglist__11483 = cljs.core.next(arglist__11483);
      var d = cljs.core.first(arglist__11483);
      var args = cljs.core.rest(arglist__11483);
      return G__11482__delegate(f, a, b, c, d, args);
    };
    G__11482.cljs$core$IFn$_invoke$arity$variadic = G__11482__delegate;
    return G__11482;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__11484__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__11484 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__11484__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__11484.cljs$lang$maxFixedArity = 6;
    G__11484.cljs$lang$applyTo = function(arglist__11485) {
      var obj = cljs.core.first(arglist__11485);
      arglist__11485 = cljs.core.next(arglist__11485);
      var f = cljs.core.first(arglist__11485);
      arglist__11485 = cljs.core.next(arglist__11485);
      var a = cljs.core.first(arglist__11485);
      arglist__11485 = cljs.core.next(arglist__11485);
      var b = cljs.core.first(arglist__11485);
      arglist__11485 = cljs.core.next(arglist__11485);
      var c = cljs.core.first(arglist__11485);
      arglist__11485 = cljs.core.next(arglist__11485);
      var d = cljs.core.first(arglist__11485);
      var args = cljs.core.rest(arglist__11485);
      return G__11484__delegate(obj, f, a, b, c, d, args);
    };
    G__11484.cljs$core$IFn$_invoke$arity$variadic = G__11484__delegate;
    return G__11484;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__11486__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__11486 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11486__delegate.call(this, x, y, more);
    };
    G__11486.cljs$lang$maxFixedArity = 2;
    G__11486.cljs$lang$applyTo = function(arglist__11487) {
      var x = cljs.core.first(arglist__11487);
      arglist__11487 = cljs.core.next(arglist__11487);
      var y = cljs.core.first(arglist__11487);
      var more = cljs.core.rest(arglist__11487);
      return G__11486__delegate(x, y, more);
    };
    G__11486.cljs$core$IFn$_invoke$arity$variadic = G__11486__delegate;
    return G__11486;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t11491 !== "undefined") {
  } else {
    cljs.core.t11491 = function(nil_iter, meta11492) {
      this.nil_iter = nil_iter;
      this.meta11492 = meta11492;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t11491.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t11491.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t11491.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t11491.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11493) {
      var self__ = this;
      var _11493__$1 = this;
      return self__.meta11492;
    };
    cljs.core.t11491.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11493, meta11492__$1) {
      var self__ = this;
      var _11493__$1 = this;
      return new cljs.core.t11491(self__.nil_iter, meta11492__$1);
    };
    cljs.core.t11491.cljs$lang$type = true;
    cljs.core.t11491.cljs$lang$ctorStr = "cljs.core/t11491";
    cljs.core.t11491.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
      return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/t11491");
    };
    cljs.core.__GT_t11491 = function __GT_t11491(nil_iter__$1, meta11492) {
      return new cljs.core.t11491(nil_iter__$1, meta11492);
    };
  }
  return new cljs.core.t11491(nil_iter, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 54, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 3007, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 3003, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core.cljs"], 
  null));
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq.call(null, self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next.call(null, self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not.call(null, this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first.call(null, self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter.call(null);
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter.call(null, coll);
      } else {
        if (cljs.core.iterable_QMARK_.call(null, coll)) {
          return cljs.core._iterator.call(null, coll);
        } else {
          if (cljs.core.seqable_QMARK_.call(null, coll)) {
            return cljs.core.seq_iter.call(null, coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3618__auto__ = !(lt.stepper == null);
      if (and__3618__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3618__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, self__.xform.call(null, lt, self__.iter.next()))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq.call(null, self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first.call(null, iters__$1);
      if (cljs.core.not.call(null, iter.hasNext())) {
        return false;
      } else {
        var G__11494 = cljs.core.next.call(null, iters__$1);
        iters__$1 = G__11494;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4517__auto___11495 = self__.iters.length;
  var i_11496 = 0;
  while (true) {
    if (i_11496 < n__4517__auto___11495) {
      self__.nexts[i_11496] = self__.iters[i_11496].next();
      var G__11497 = i_11496 + 1;
      i_11496 = G__11497;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.call(null, self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3618__auto__ = !(lt.stepper == null);
      if (and__3618__auto__) {
        return this$.hasNext();
      } else {
        return and__3618__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, cljs.core.apply.call(null, self__.xform, cljs.core.cons.call(null, lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.call(null, xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(xform.call(null, stepfn), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq.call(null, self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq.call(null, this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential.call(null, this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_.call(null, other) && cljs.core.seq.call(null, other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, cljs.core._seq.call(null, this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper.call(null, xform, cljs.core.iter.call(null, coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__11498_11502 = cljs.core.seq.call(null, colls);
  var chunk__11499_11503 = null;
  var count__11500_11504 = 0;
  var i__11501_11505 = 0;
  while (true) {
    if (i__11501_11505 < count__11500_11504) {
      var coll_11506 = cljs.core._nth.call(null, chunk__11499_11503, i__11501_11505);
      iters.push(cljs.core.iter.call(null, coll_11506));
      var G__11507 = seq__11498_11502;
      var G__11508 = chunk__11499_11503;
      var G__11509 = count__11500_11504;
      var G__11510 = i__11501_11505 + 1;
      seq__11498_11502 = G__11507;
      chunk__11499_11503 = G__11508;
      count__11500_11504 = G__11509;
      i__11501_11505 = G__11510;
      continue;
    } else {
      var temp__4126__auto___11511 = cljs.core.seq.call(null, seq__11498_11502);
      if (temp__4126__auto___11511) {
        var seq__11498_11512__$1 = temp__4126__auto___11511;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11498_11512__$1)) {
          var c__4417__auto___11513 = cljs.core.chunk_first.call(null, seq__11498_11512__$1);
          var G__11514 = cljs.core.chunk_rest.call(null, seq__11498_11512__$1);
          var G__11515 = c__4417__auto___11513;
          var G__11516 = cljs.core.count.call(null, c__4417__auto___11513);
          var G__11517 = 0;
          seq__11498_11502 = G__11514;
          chunk__11499_11503 = G__11515;
          count__11500_11504 = G__11516;
          i__11501_11505 = G__11517;
          continue;
        } else {
          var coll_11518 = cljs.core.first.call(null, seq__11498_11512__$1);
          iters.push(cljs.core.iter.call(null, coll_11518));
          var G__11519 = cljs.core.next.call(null, seq__11498_11512__$1);
          var G__11520 = null;
          var G__11521 = 0;
          var G__11522 = 0;
          seq__11498_11502 = G__11519;
          chunk__11499_11503 = G__11520;
          count__11500_11504 = G__11521;
          i__11501_11505 = G__11522;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.call(null, xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_.call(null, coll)) {
      return coll;
    } else {
      var or__3630__auto__ = cljs.core.seq.call(null, coll);
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__11523__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array.call(null, cljs.core.cons.call(null, coll, colls)));
    };
    var G__11523 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11523__delegate.call(this, xform, coll, colls);
    };
    G__11523.cljs$lang$maxFixedArity = 2;
    G__11523.cljs$lang$applyTo = function(arglist__11524) {
      var xform = cljs.core.first(arglist__11524);
      arglist__11524 = cljs.core.next(arglist__11524);
      var coll = cljs.core.first(arglist__11524);
      var colls = cljs.core.rest(arglist__11524);
      return G__11523__delegate(xform, coll, colls);
    };
    G__11523.cljs$core$IFn$_invoke$arity$variadic = G__11523__delegate;
    return G__11523;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__11525 = pred;
        var G__11526 = cljs.core.next.call(null, coll);
        pred = G__11525;
        coll = G__11526;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3630__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3630__auto__)) {
        return or__3630__auto__;
      } else {
        var G__11527 = pred;
        var G__11528 = cljs.core.next.call(null, coll);
        pred = G__11527;
        coll = G__11528;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__11529 = null;
    var G__11529__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__11529__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__11529__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__11529__3 = function() {
      var G__11530__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__11530 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__11530__delegate.call(this, x, y, zs);
      };
      G__11530.cljs$lang$maxFixedArity = 2;
      G__11530.cljs$lang$applyTo = function(arglist__11531) {
        var x = cljs.core.first(arglist__11531);
        arglist__11531 = cljs.core.next(arglist__11531);
        var y = cljs.core.first(arglist__11531);
        var zs = cljs.core.rest(arglist__11531);
        return G__11530__delegate(x, y, zs);
      };
      G__11530.cljs$core$IFn$_invoke$arity$variadic = G__11530__delegate;
      return G__11530;
    }();
    G__11529 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__11529__0.call(this);
        case 1:
          return G__11529__1.call(this, x);
        case 2:
          return G__11529__2.call(this, x, y);
        default:
          return G__11529__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11529.cljs$lang$maxFixedArity = 2;
    G__11529.cljs$lang$applyTo = G__11529__3.cljs$lang$applyTo;
    G__11529.cljs$core$IFn$_invoke$arity$0 = G__11529__0;
    G__11529.cljs$core$IFn$_invoke$arity$1 = G__11529__1;
    G__11529.cljs$core$IFn$_invoke$arity$2 = G__11529__2;
    G__11529.cljs$core$IFn$_invoke$arity$variadic = G__11529__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__11529;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__11532__delegate = function(args) {
      return x;
    };
    var G__11532 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__11532__delegate.call(this, args);
    };
    G__11532.cljs$lang$maxFixedArity = 0;
    G__11532.cljs$lang$applyTo = function(arglist__11533) {
      var args = cljs.core.seq(arglist__11533);
      return G__11532__delegate(args);
    };
    G__11532.cljs$core$IFn$_invoke$arity$variadic = G__11532__delegate;
    return G__11532;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__11534 = null;
      var G__11534__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__11534__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__11534__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__11534__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__11534__4 = function() {
        var G__11535__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__11535 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11535__delegate.call(this, x, y, z, args);
        };
        G__11535.cljs$lang$maxFixedArity = 3;
        G__11535.cljs$lang$applyTo = function(arglist__11536) {
          var x = cljs.core.first(arglist__11536);
          arglist__11536 = cljs.core.next(arglist__11536);
          var y = cljs.core.first(arglist__11536);
          arglist__11536 = cljs.core.next(arglist__11536);
          var z = cljs.core.first(arglist__11536);
          var args = cljs.core.rest(arglist__11536);
          return G__11535__delegate(x, y, z, args);
        };
        G__11535.cljs$core$IFn$_invoke$arity$variadic = G__11535__delegate;
        return G__11535;
      }();
      G__11534 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11534__0.call(this);
          case 1:
            return G__11534__1.call(this, x);
          case 2:
            return G__11534__2.call(this, x, y);
          case 3:
            return G__11534__3.call(this, x, y, z);
          default:
            return G__11534__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11534.cljs$lang$maxFixedArity = 3;
      G__11534.cljs$lang$applyTo = G__11534__4.cljs$lang$applyTo;
      G__11534.cljs$core$IFn$_invoke$arity$0 = G__11534__0;
      G__11534.cljs$core$IFn$_invoke$arity$1 = G__11534__1;
      G__11534.cljs$core$IFn$_invoke$arity$2 = G__11534__2;
      G__11534.cljs$core$IFn$_invoke$arity$3 = G__11534__3;
      G__11534.cljs$core$IFn$_invoke$arity$variadic = G__11534__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11534;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__11537 = null;
      var G__11537__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__11537__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__11537__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__11537__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__11537__4 = function() {
        var G__11538__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__11538 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11538__delegate.call(this, x, y, z, args);
        };
        G__11538.cljs$lang$maxFixedArity = 3;
        G__11538.cljs$lang$applyTo = function(arglist__11539) {
          var x = cljs.core.first(arglist__11539);
          arglist__11539 = cljs.core.next(arglist__11539);
          var y = cljs.core.first(arglist__11539);
          arglist__11539 = cljs.core.next(arglist__11539);
          var z = cljs.core.first(arglist__11539);
          var args = cljs.core.rest(arglist__11539);
          return G__11538__delegate(x, y, z, args);
        };
        G__11538.cljs$core$IFn$_invoke$arity$variadic = G__11538__delegate;
        return G__11538;
      }();
      G__11537 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11537__0.call(this);
          case 1:
            return G__11537__1.call(this, x);
          case 2:
            return G__11537__2.call(this, x, y);
          case 3:
            return G__11537__3.call(this, x, y, z);
          default:
            return G__11537__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11537.cljs$lang$maxFixedArity = 3;
      G__11537.cljs$lang$applyTo = G__11537__4.cljs$lang$applyTo;
      G__11537.cljs$core$IFn$_invoke$arity$0 = G__11537__0;
      G__11537.cljs$core$IFn$_invoke$arity$1 = G__11537__1;
      G__11537.cljs$core$IFn$_invoke$arity$2 = G__11537__2;
      G__11537.cljs$core$IFn$_invoke$arity$3 = G__11537__3;
      G__11537.cljs$core$IFn$_invoke$arity$variadic = G__11537__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11537;
    }();
  };
  var comp__4 = function() {
    var G__11540__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__11541__delegate = function(args) {
            var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
            var fs__$2 = cljs.core.next.call(null, fs__$1);
            while (true) {
              if (fs__$2) {
                var G__11542 = cljs.core.first.call(null, fs__$2).call(null, ret);
                var G__11543 = cljs.core.next.call(null, fs__$2);
                ret = G__11542;
                fs__$2 = G__11543;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__11541 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__11541__delegate.call(this, args);
          };
          G__11541.cljs$lang$maxFixedArity = 0;
          G__11541.cljs$lang$applyTo = function(arglist__11544) {
            var args = cljs.core.seq(arglist__11544);
            return G__11541__delegate(args);
          };
          G__11541.cljs$core$IFn$_invoke$arity$variadic = G__11541__delegate;
          return G__11541;
        }();
      }(fs__$1);
    };
    var G__11540 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11540__delegate.call(this, f1, f2, f3, fs);
    };
    G__11540.cljs$lang$maxFixedArity = 3;
    G__11540.cljs$lang$applyTo = function(arglist__11545) {
      var f1 = cljs.core.first(arglist__11545);
      arglist__11545 = cljs.core.next(arglist__11545);
      var f2 = cljs.core.first(arglist__11545);
      arglist__11545 = cljs.core.next(arglist__11545);
      var f3 = cljs.core.first(arglist__11545);
      var fs = cljs.core.rest(arglist__11545);
      return G__11540__delegate(f1, f2, f3, fs);
    };
    G__11540.cljs$core$IFn$_invoke$arity$variadic = G__11540__delegate;
    return G__11540;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__11546 = null;
      var G__11546__0 = function() {
        return f.call(null, arg1);
      };
      var G__11546__1 = function(x) {
        return f.call(null, arg1, x);
      };
      var G__11546__2 = function(x, y) {
        return f.call(null, arg1, x, y);
      };
      var G__11546__3 = function(x, y, z) {
        return f.call(null, arg1, x, y, z);
      };
      var G__11546__4 = function() {
        var G__11547__delegate = function(x, y, z, args) {
          return cljs.core.apply.call(null, f, arg1, x, y, z, args);
        };
        var G__11547 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11547__delegate.call(this, x, y, z, args);
        };
        G__11547.cljs$lang$maxFixedArity = 3;
        G__11547.cljs$lang$applyTo = function(arglist__11548) {
          var x = cljs.core.first(arglist__11548);
          arglist__11548 = cljs.core.next(arglist__11548);
          var y = cljs.core.first(arglist__11548);
          arglist__11548 = cljs.core.next(arglist__11548);
          var z = cljs.core.first(arglist__11548);
          var args = cljs.core.rest(arglist__11548);
          return G__11547__delegate(x, y, z, args);
        };
        G__11547.cljs$core$IFn$_invoke$arity$variadic = G__11547__delegate;
        return G__11547;
      }();
      G__11546 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11546__0.call(this);
          case 1:
            return G__11546__1.call(this, x);
          case 2:
            return G__11546__2.call(this, x, y);
          case 3:
            return G__11546__3.call(this, x, y, z);
          default:
            return G__11546__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11546.cljs$lang$maxFixedArity = 3;
      G__11546.cljs$lang$applyTo = G__11546__4.cljs$lang$applyTo;
      G__11546.cljs$core$IFn$_invoke$arity$0 = G__11546__0;
      G__11546.cljs$core$IFn$_invoke$arity$1 = G__11546__1;
      G__11546.cljs$core$IFn$_invoke$arity$2 = G__11546__2;
      G__11546.cljs$core$IFn$_invoke$arity$3 = G__11546__3;
      G__11546.cljs$core$IFn$_invoke$arity$variadic = G__11546__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11546;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__11549 = null;
      var G__11549__0 = function() {
        return f.call(null, arg1, arg2);
      };
      var G__11549__1 = function(x) {
        return f.call(null, arg1, arg2, x);
      };
      var G__11549__2 = function(x, y) {
        return f.call(null, arg1, arg2, x, y);
      };
      var G__11549__3 = function(x, y, z) {
        return f.call(null, arg1, arg2, x, y, z);
      };
      var G__11549__4 = function() {
        var G__11550__delegate = function(x, y, z, args) {
          return cljs.core.apply.call(null, f, arg1, arg2, x, y, z, args);
        };
        var G__11550 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11550__delegate.call(this, x, y, z, args);
        };
        G__11550.cljs$lang$maxFixedArity = 3;
        G__11550.cljs$lang$applyTo = function(arglist__11551) {
          var x = cljs.core.first(arglist__11551);
          arglist__11551 = cljs.core.next(arglist__11551);
          var y = cljs.core.first(arglist__11551);
          arglist__11551 = cljs.core.next(arglist__11551);
          var z = cljs.core.first(arglist__11551);
          var args = cljs.core.rest(arglist__11551);
          return G__11550__delegate(x, y, z, args);
        };
        G__11550.cljs$core$IFn$_invoke$arity$variadic = G__11550__delegate;
        return G__11550;
      }();
      G__11549 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11549__0.call(this);
          case 1:
            return G__11549__1.call(this, x);
          case 2:
            return G__11549__2.call(this, x, y);
          case 3:
            return G__11549__3.call(this, x, y, z);
          default:
            return G__11549__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11549.cljs$lang$maxFixedArity = 3;
      G__11549.cljs$lang$applyTo = G__11549__4.cljs$lang$applyTo;
      G__11549.cljs$core$IFn$_invoke$arity$0 = G__11549__0;
      G__11549.cljs$core$IFn$_invoke$arity$1 = G__11549__1;
      G__11549.cljs$core$IFn$_invoke$arity$2 = G__11549__2;
      G__11549.cljs$core$IFn$_invoke$arity$3 = G__11549__3;
      G__11549.cljs$core$IFn$_invoke$arity$variadic = G__11549__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11549;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__11552 = null;
      var G__11552__0 = function() {
        return f.call(null, arg1, arg2, arg3);
      };
      var G__11552__1 = function(x) {
        return f.call(null, arg1, arg2, arg3, x);
      };
      var G__11552__2 = function(x, y) {
        return f.call(null, arg1, arg2, arg3, x, y);
      };
      var G__11552__3 = function(x, y, z) {
        return f.call(null, arg1, arg2, arg3, x, y, z);
      };
      var G__11552__4 = function() {
        var G__11553__delegate = function(x, y, z, args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, x, y, z, args);
        };
        var G__11553 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11553__delegate.call(this, x, y, z, args);
        };
        G__11553.cljs$lang$maxFixedArity = 3;
        G__11553.cljs$lang$applyTo = function(arglist__11554) {
          var x = cljs.core.first(arglist__11554);
          arglist__11554 = cljs.core.next(arglist__11554);
          var y = cljs.core.first(arglist__11554);
          arglist__11554 = cljs.core.next(arglist__11554);
          var z = cljs.core.first(arglist__11554);
          var args = cljs.core.rest(arglist__11554);
          return G__11553__delegate(x, y, z, args);
        };
        G__11553.cljs$core$IFn$_invoke$arity$variadic = G__11553__delegate;
        return G__11553;
      }();
      G__11552 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11552__0.call(this);
          case 1:
            return G__11552__1.call(this, x);
          case 2:
            return G__11552__2.call(this, x, y);
          case 3:
            return G__11552__3.call(this, x, y, z);
          default:
            return G__11552__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11552.cljs$lang$maxFixedArity = 3;
      G__11552.cljs$lang$applyTo = G__11552__4.cljs$lang$applyTo;
      G__11552.cljs$core$IFn$_invoke$arity$0 = G__11552__0;
      G__11552.cljs$core$IFn$_invoke$arity$1 = G__11552__1;
      G__11552.cljs$core$IFn$_invoke$arity$2 = G__11552__2;
      G__11552.cljs$core$IFn$_invoke$arity$3 = G__11552__3;
      G__11552.cljs$core$IFn$_invoke$arity$variadic = G__11552__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11552;
    }();
  };
  var partial__5 = function() {
    var G__11555__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__11556__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__11556 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__11556__delegate.call(this, args);
        };
        G__11556.cljs$lang$maxFixedArity = 0;
        G__11556.cljs$lang$applyTo = function(arglist__11557) {
          var args = cljs.core.seq(arglist__11557);
          return G__11556__delegate(args);
        };
        G__11556.cljs$core$IFn$_invoke$arity$variadic = G__11556__delegate;
        return G__11556;
      }();
    };
    var G__11555 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__11555__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__11555.cljs$lang$maxFixedArity = 4;
    G__11555.cljs$lang$applyTo = function(arglist__11558) {
      var f = cljs.core.first(arglist__11558);
      arglist__11558 = cljs.core.next(arglist__11558);
      var arg1 = cljs.core.first(arglist__11558);
      arglist__11558 = cljs.core.next(arglist__11558);
      var arg2 = cljs.core.first(arglist__11558);
      arglist__11558 = cljs.core.next(arglist__11558);
      var arg3 = cljs.core.first(arglist__11558);
      var more = cljs.core.rest(arglist__11558);
      return G__11555__delegate(f, arg1, arg2, arg3, more);
    };
    G__11555.cljs$core$IFn$_invoke$arity$variadic = G__11555__delegate;
    return G__11555;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__11559 = null;
      var G__11559__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__11559__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__11559__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__11559__4 = function() {
        var G__11560__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__11560 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11560__delegate.call(this, a, b, c, ds);
        };
        G__11560.cljs$lang$maxFixedArity = 3;
        G__11560.cljs$lang$applyTo = function(arglist__11561) {
          var a = cljs.core.first(arglist__11561);
          arglist__11561 = cljs.core.next(arglist__11561);
          var b = cljs.core.first(arglist__11561);
          arglist__11561 = cljs.core.next(arglist__11561);
          var c = cljs.core.first(arglist__11561);
          var ds = cljs.core.rest(arglist__11561);
          return G__11560__delegate(a, b, c, ds);
        };
        G__11560.cljs$core$IFn$_invoke$arity$variadic = G__11560__delegate;
        return G__11560;
      }();
      G__11559 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__11559__1.call(this, a);
          case 2:
            return G__11559__2.call(this, a, b);
          case 3:
            return G__11559__3.call(this, a, b, c);
          default:
            return G__11559__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11559.cljs$lang$maxFixedArity = 3;
      G__11559.cljs$lang$applyTo = G__11559__4.cljs$lang$applyTo;
      G__11559.cljs$core$IFn$_invoke$arity$1 = G__11559__1;
      G__11559.cljs$core$IFn$_invoke$arity$2 = G__11559__2;
      G__11559.cljs$core$IFn$_invoke$arity$3 = G__11559__3;
      G__11559.cljs$core$IFn$_invoke$arity$variadic = G__11559__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11559;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__11562 = null;
      var G__11562__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__11562__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__11562__4 = function() {
        var G__11563__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__11563 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11563__delegate.call(this, a, b, c, ds);
        };
        G__11563.cljs$lang$maxFixedArity = 3;
        G__11563.cljs$lang$applyTo = function(arglist__11564) {
          var a = cljs.core.first(arglist__11564);
          arglist__11564 = cljs.core.next(arglist__11564);
          var b = cljs.core.first(arglist__11564);
          arglist__11564 = cljs.core.next(arglist__11564);
          var c = cljs.core.first(arglist__11564);
          var ds = cljs.core.rest(arglist__11564);
          return G__11563__delegate(a, b, c, ds);
        };
        G__11563.cljs$core$IFn$_invoke$arity$variadic = G__11563__delegate;
        return G__11563;
      }();
      G__11562 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__11562__2.call(this, a, b);
          case 3:
            return G__11562__3.call(this, a, b, c);
          default:
            return G__11562__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11562.cljs$lang$maxFixedArity = 3;
      G__11562.cljs$lang$applyTo = G__11562__4.cljs$lang$applyTo;
      G__11562.cljs$core$IFn$_invoke$arity$2 = G__11562__2;
      G__11562.cljs$core$IFn$_invoke$arity$3 = G__11562__3;
      G__11562.cljs$core$IFn$_invoke$arity$variadic = G__11562__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11562;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__11565 = null;
      var G__11565__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__11565__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__11565__4 = function() {
        var G__11566__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__11566 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11566__delegate.call(this, a, b, c, ds);
        };
        G__11566.cljs$lang$maxFixedArity = 3;
        G__11566.cljs$lang$applyTo = function(arglist__11567) {
          var a = cljs.core.first(arglist__11567);
          arglist__11567 = cljs.core.next(arglist__11567);
          var b = cljs.core.first(arglist__11567);
          arglist__11567 = cljs.core.next(arglist__11567);
          var c = cljs.core.first(arglist__11567);
          var ds = cljs.core.rest(arglist__11567);
          return G__11566__delegate(a, b, c, ds);
        };
        G__11566.cljs$core$IFn$_invoke$arity$variadic = G__11566__delegate;
        return G__11566;
      }();
      G__11565 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__11565__2.call(this, a, b);
          case 3:
            return G__11565__3.call(this, a, b, c);
          default:
            return G__11565__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11565.cljs$lang$maxFixedArity = 3;
      G__11565.cljs$lang$applyTo = G__11565__4.cljs$lang$applyTo;
      G__11565.cljs$core$IFn$_invoke$arity$2 = G__11565__2;
      G__11565.cljs$core$IFn$_invoke$arity$3 = G__11565__3;
      G__11565.cljs$core$IFn$_invoke$arity$variadic = G__11565__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11565;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4517__auto___11568 = size;
          var i_11569 = 0;
          while (true) {
            if (i_11569 < n__4517__auto___11568) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_11569, cljs.core._nth.call(null, c, i_11569)));
              var G__11570 = i_11569 + 1;
              i_11569 = G__11570;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(rf) {
      return function() {
        var G__11571 = null;
        var G__11571__0 = function() {
          return rf.call(null);
        };
        var G__11571__1 = function(result) {
          return rf.call(null, result);
        };
        var G__11571__2 = function(result, input) {
          var v = f.call(null, input);
          if (v == null) {
            return result;
          } else {
            return rf.call(null, result, v);
          }
        };
        G__11571 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11571__0.call(this);
            case 1:
              return G__11571__1.call(this, result);
            case 2:
              return G__11571__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11571.cljs$core$IFn$_invoke$arity$0 = G__11571__0;
        G__11571.cljs$core$IFn$_invoke$arity$1 = G__11571__1;
        G__11571.cljs$core$IFn$_invoke$arity$2 = G__11571__2;
        return G__11571;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4517__auto___11572 = size;
          var i_11573 = 0;
          while (true) {
            if (i_11573 < n__4517__auto___11572) {
              var x_11574 = f.call(null, cljs.core._nth.call(null, c, i_11573));
              if (x_11574 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_11574);
              }
              var G__11575 = i_11573 + 1;
              i_11573 = G__11575;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, cljs.core.first.call(null, s));
          if (x == null) {
            return keep.call(null, f, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__11576 = cljs.core.seq.call(null, self__.watches);
  var chunk__11577 = null;
  var count__11578 = 0;
  var i__11579 = 0;
  while (true) {
    if (i__11579 < count__11578) {
      var vec__11580 = cljs.core._nth.call(null, chunk__11577, i__11579);
      var key = cljs.core.nth.call(null, vec__11580, 0, null);
      var f = cljs.core.nth.call(null, vec__11580, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__11582 = seq__11576;
      var G__11583 = chunk__11577;
      var G__11584 = count__11578;
      var G__11585 = i__11579 + 1;
      seq__11576 = G__11582;
      chunk__11577 = G__11583;
      count__11578 = G__11584;
      i__11579 = G__11585;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11576);
      if (temp__4126__auto__) {
        var seq__11576__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11576__$1)) {
          var c__4417__auto__ = cljs.core.chunk_first.call(null, seq__11576__$1);
          var G__11586 = cljs.core.chunk_rest.call(null, seq__11576__$1);
          var G__11587 = c__4417__auto__;
          var G__11588 = cljs.core.count.call(null, c__4417__auto__);
          var G__11589 = 0;
          seq__11576 = G__11586;
          chunk__11577 = G__11587;
          count__11578 = G__11588;
          i__11579 = G__11589;
          continue;
        } else {
          var vec__11581 = cljs.core.first.call(null, seq__11576__$1);
          var key = cljs.core.nth.call(null, vec__11581, 0, null);
          var f = cljs.core.nth.call(null, vec__11581, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__11590 = cljs.core.next.call(null, seq__11576__$1);
          var G__11591 = null;
          var G__11592 = 0;
          var G__11593 = 0;
          seq__11576 = G__11590;
          chunk__11577 = G__11591;
          count__11578 = G__11592;
          i__11579 = G__11593;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__11597__delegate = function(x, p__11594) {
      var map__11596 = p__11594;
      var map__11596__$1 = cljs.core.seq_QMARK_.call(null, map__11596) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11596) : map__11596;
      var validator = cljs.core.get.call(null, map__11596__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.call(null, map__11596__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__11597 = function(x, var_args) {
      var p__11594 = null;
      if (arguments.length > 1) {
        p__11594 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__11597__delegate.call(this, x, p__11594);
    };
    G__11597.cljs$lang$maxFixedArity = 1;
    G__11597.cljs$lang$applyTo = function(arglist__11598) {
      var x = cljs.core.first(arglist__11598);
      var p__11594 = cljs.core.rest(arglist__11598);
      return G__11597__delegate(x, p__11594);
    };
    G__11597.cljs$core$IFn$_invoke$arity$variadic = G__11597__delegate;
    return G__11597;
  }();
  atom = function(x, var_args) {
    var p__11594 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null))))].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__11599__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__11599 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__11599__delegate.call(this, a, f, x, y, more);
    };
    G__11599.cljs$lang$maxFixedArity = 4;
    G__11599.cljs$lang$applyTo = function(arglist__11600) {
      var a = cljs.core.first(arglist__11600);
      arglist__11600 = cljs.core.next(arglist__11600);
      var f = cljs.core.first(arglist__11600);
      arglist__11600 = cljs.core.next(arglist__11600);
      var x = cljs.core.first(arglist__11600);
      arglist__11600 = cljs.core.next(arglist__11600);
      var y = cljs.core.first(arglist__11600);
      var more = cljs.core.rest(arglist__11600);
      return G__11599__delegate(a, f, x, y, more);
    };
    G__11599.cljs$core$IFn$_invoke$arity$variadic = G__11599__delegate;
    return G__11599;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function __GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_.call(null, vol, newval);
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_.call(null, -1);
      return function(ia) {
        return function() {
          var G__11601 = null;
          var G__11601__0 = function() {
            return rf.call(null);
          };
          var G__11601__1 = function(result) {
            return rf.call(null, result);
          };
          var G__11601__2 = function(result, input) {
            var i = cljs.core._vreset_BANG_.call(null, ia, cljs.core._deref.call(null, ia) + 1);
            var v = f.call(null, i, input);
            if (v == null) {
              return result;
            } else {
              return rf.call(null, result, v);
            }
          };
          G__11601 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__11601__0.call(this);
              case 1:
                return G__11601__1.call(this, result);
              case 2:
                return G__11601__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11601.cljs$core$IFn$_invoke$arity$0 = G__11601__0;
          G__11601.cljs$core$IFn$_invoke$arity$1 = G__11601__1;
          G__11601.cljs$core$IFn$_invoke$arity$2 = G__11601__2;
          return G__11601;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
            var c = cljs.core.chunk_first.call(null, s);
            var size = cljs.core.count.call(null, c);
            var b = cljs.core.chunk_buffer.call(null, size);
            var n__4517__auto___11602 = size;
            var i_11603 = 0;
            while (true) {
              if (i_11603 < n__4517__auto___11602) {
                var x_11604 = f.call(null, idx + i_11603, cljs.core._nth.call(null, c, i_11603));
                if (x_11604 == null) {
                } else {
                  cljs.core.chunk_append.call(null, b, x_11604);
                }
                var G__11605 = i_11603 + 1;
                i_11603 = G__11605;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
          } else {
            var x = f.call(null, idx, cljs.core.first.call(null, s));
            if (x == null) {
              return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
            } else {
              return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi.call(null, 0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3618__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3618__auto__)) {
            return p.call(null, y);
          } else {
            return and__3618__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3618__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3618__auto__)) {
            var and__3618__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3618__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3618__auto____$1;
            }
          } else {
            return and__3618__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__11612__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__11612 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11612__delegate.call(this, x, y, z, args);
        };
        G__11612.cljs$lang$maxFixedArity = 3;
        G__11612.cljs$lang$applyTo = function(arglist__11613) {
          var x = cljs.core.first(arglist__11613);
          arglist__11613 = cljs.core.next(arglist__11613);
          var y = cljs.core.first(arglist__11613);
          arglist__11613 = cljs.core.next(arglist__11613);
          var z = cljs.core.first(arglist__11613);
          var args = cljs.core.rest(arglist__11613);
          return G__11612__delegate(x, y, z, args);
        };
        G__11612.cljs$core$IFn$_invoke$arity$variadic = G__11612__delegate;
        return G__11612;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3618__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3618__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3618__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3618__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3618__auto__)) {
            var and__3618__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3618__auto____$1)) {
              var and__3618__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3618__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3618__auto____$2;
              }
            } else {
              return and__3618__auto____$1;
            }
          } else {
            return and__3618__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3618__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3618__auto__)) {
            var and__3618__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3618__auto____$1)) {
              var and__3618__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3618__auto____$2)) {
                var and__3618__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3618__auto____$3)) {
                  var and__3618__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3618__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3618__auto____$4;
                  }
                } else {
                  return and__3618__auto____$3;
                }
              } else {
                return and__3618__auto____$2;
              }
            } else {
              return and__3618__auto____$1;
            }
          } else {
            return and__3618__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__11614__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__11606_SHARP_) {
            var and__3618__auto__ = p1.call(null, p1__11606_SHARP_);
            if (cljs.core.truth_(and__3618__auto__)) {
              return p2.call(null, p1__11606_SHARP_);
            } else {
              return and__3618__auto__;
            }
          }, args));
        };
        var G__11614 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11614__delegate.call(this, x, y, z, args);
        };
        G__11614.cljs$lang$maxFixedArity = 3;
        G__11614.cljs$lang$applyTo = function(arglist__11615) {
          var x = cljs.core.first(arglist__11615);
          arglist__11615 = cljs.core.next(arglist__11615);
          var y = cljs.core.first(arglist__11615);
          arglist__11615 = cljs.core.next(arglist__11615);
          var z = cljs.core.first(arglist__11615);
          var args = cljs.core.rest(arglist__11615);
          return G__11614__delegate(x, y, z, args);
        };
        G__11614.cljs$core$IFn$_invoke$arity$variadic = G__11614__delegate;
        return G__11614;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3618__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3618__auto__)) {
            var and__3618__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3618__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3618__auto____$1;
            }
          } else {
            return and__3618__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3618__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3618__auto__)) {
            var and__3618__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3618__auto____$1)) {
              var and__3618__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3618__auto____$2)) {
                var and__3618__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3618__auto____$3)) {
                  var and__3618__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3618__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3618__auto____$4;
                  }
                } else {
                  return and__3618__auto____$3;
                }
              } else {
                return and__3618__auto____$2;
              }
            } else {
              return and__3618__auto____$1;
            }
          } else {
            return and__3618__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3618__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3618__auto__)) {
            var and__3618__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3618__auto____$1)) {
              var and__3618__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3618__auto____$2)) {
                var and__3618__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3618__auto____$3)) {
                  var and__3618__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3618__auto____$4)) {
                    var and__3618__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3618__auto____$5)) {
                      var and__3618__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3618__auto____$6)) {
                        var and__3618__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3618__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3618__auto____$7;
                        }
                      } else {
                        return and__3618__auto____$6;
                      }
                    } else {
                      return and__3618__auto____$5;
                    }
                  } else {
                    return and__3618__auto____$4;
                  }
                } else {
                  return and__3618__auto____$3;
                }
              } else {
                return and__3618__auto____$2;
              }
            } else {
              return and__3618__auto____$1;
            }
          } else {
            return and__3618__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__11616__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__11607_SHARP_) {
            var and__3618__auto__ = p1.call(null, p1__11607_SHARP_);
            if (cljs.core.truth_(and__3618__auto__)) {
              var and__3618__auto____$1 = p2.call(null, p1__11607_SHARP_);
              if (cljs.core.truth_(and__3618__auto____$1)) {
                return p3.call(null, p1__11607_SHARP_);
              } else {
                return and__3618__auto____$1;
              }
            } else {
              return and__3618__auto__;
            }
          }, args));
        };
        var G__11616 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11616__delegate.call(this, x, y, z, args);
        };
        G__11616.cljs$lang$maxFixedArity = 3;
        G__11616.cljs$lang$applyTo = function(arglist__11617) {
          var x = cljs.core.first(arglist__11617);
          arglist__11617 = cljs.core.next(arglist__11617);
          var y = cljs.core.first(arglist__11617);
          arglist__11617 = cljs.core.next(arglist__11617);
          var z = cljs.core.first(arglist__11617);
          var args = cljs.core.rest(arglist__11617);
          return G__11616__delegate(x, y, z, args);
        };
        G__11616.cljs$core$IFn$_invoke$arity$variadic = G__11616__delegate;
        return G__11616;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__11618__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__11608_SHARP_) {
                return p1__11608_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__11609_SHARP_) {
                var and__3618__auto__ = p1__11609_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3618__auto__)) {
                  return p1__11609_SHARP_.call(null, y);
                } else {
                  return and__3618__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__11610_SHARP_) {
                var and__3618__auto__ = p1__11610_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3618__auto__)) {
                  var and__3618__auto____$1 = p1__11610_SHARP_.call(null, y);
                  if (cljs.core.truth_(and__3618__auto____$1)) {
                    return p1__11610_SHARP_.call(null, z);
                  } else {
                    return and__3618__auto____$1;
                  }
                } else {
                  return and__3618__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__11619__delegate = function(x, y, z, args) {
              return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(ps__$1) {
                return function(p1__11611_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__11611_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__11619 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__11619__delegate.call(this, x, y, z, args);
            };
            G__11619.cljs$lang$maxFixedArity = 3;
            G__11619.cljs$lang$applyTo = function(arglist__11620) {
              var x = cljs.core.first(arglist__11620);
              arglist__11620 = cljs.core.next(arglist__11620);
              var y = cljs.core.first(arglist__11620);
              arglist__11620 = cljs.core.next(arglist__11620);
              var z = cljs.core.first(arglist__11620);
              var args = cljs.core.rest(arglist__11620);
              return G__11619__delegate(x, y, z, args);
            };
            G__11619.cljs$core$IFn$_invoke$arity$variadic = G__11619__delegate;
            return G__11619;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__11618 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11618__delegate.call(this, p1, p2, p3, ps);
    };
    G__11618.cljs$lang$maxFixedArity = 3;
    G__11618.cljs$lang$applyTo = function(arglist__11621) {
      var p1 = cljs.core.first(arglist__11621);
      arglist__11621 = cljs.core.next(arglist__11621);
      var p2 = cljs.core.first(arglist__11621);
      arglist__11621 = cljs.core.next(arglist__11621);
      var p3 = cljs.core.first(arglist__11621);
      var ps = cljs.core.rest(arglist__11621);
      return G__11618__delegate(p1, p2, p3, ps);
    };
    G__11618.cljs$core$IFn$_invoke$arity$variadic = G__11618__delegate;
    return G__11618;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3630__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3630__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3630__auto____$1)) {
            return or__3630__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__11628__delegate = function(x, y, z, args) {
          var or__3630__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3630__auto__)) {
            return or__3630__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__11628 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11628__delegate.call(this, x, y, z, args);
        };
        G__11628.cljs$lang$maxFixedArity = 3;
        G__11628.cljs$lang$applyTo = function(arglist__11629) {
          var x = cljs.core.first(arglist__11629);
          arglist__11629 = cljs.core.next(arglist__11629);
          var y = cljs.core.first(arglist__11629);
          arglist__11629 = cljs.core.next(arglist__11629);
          var z = cljs.core.first(arglist__11629);
          var args = cljs.core.rest(arglist__11629);
          return G__11628__delegate(x, y, z, args);
        };
        G__11628.cljs$core$IFn$_invoke$arity$variadic = G__11628__delegate;
        return G__11628;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3630__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3630__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3630__auto____$1)) {
            return or__3630__auto____$1;
          } else {
            var or__3630__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3630__auto____$2)) {
              return or__3630__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3630__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3630__auto____$1)) {
            return or__3630__auto____$1;
          } else {
            var or__3630__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3630__auto____$2)) {
              return or__3630__auto____$2;
            } else {
              var or__3630__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3630__auto____$3)) {
                return or__3630__auto____$3;
              } else {
                var or__3630__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3630__auto____$4)) {
                  return or__3630__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__11630__delegate = function(x, y, z, args) {
          var or__3630__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3630__auto__)) {
            return or__3630__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3630__auto__) {
              return function(p1__11622_SHARP_) {
                var or__3630__auto____$1 = p1.call(null, p1__11622_SHARP_);
                if (cljs.core.truth_(or__3630__auto____$1)) {
                  return or__3630__auto____$1;
                } else {
                  return p2.call(null, p1__11622_SHARP_);
                }
              };
            }(or__3630__auto__), args);
          }
        };
        var G__11630 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11630__delegate.call(this, x, y, z, args);
        };
        G__11630.cljs$lang$maxFixedArity = 3;
        G__11630.cljs$lang$applyTo = function(arglist__11631) {
          var x = cljs.core.first(arglist__11631);
          arglist__11631 = cljs.core.next(arglist__11631);
          var y = cljs.core.first(arglist__11631);
          arglist__11631 = cljs.core.next(arglist__11631);
          var z = cljs.core.first(arglist__11631);
          var args = cljs.core.rest(arglist__11631);
          return G__11630__delegate(x, y, z, args);
        };
        G__11630.cljs$core$IFn$_invoke$arity$variadic = G__11630__delegate;
        return G__11630;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3630__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3630__auto____$1)) {
            return or__3630__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3630__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3630__auto____$1)) {
            return or__3630__auto____$1;
          } else {
            var or__3630__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3630__auto____$2)) {
              return or__3630__auto____$2;
            } else {
              var or__3630__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3630__auto____$3)) {
                return or__3630__auto____$3;
              } else {
                var or__3630__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3630__auto____$4)) {
                  return or__3630__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3630__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3630__auto____$1)) {
            return or__3630__auto____$1;
          } else {
            var or__3630__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3630__auto____$2)) {
              return or__3630__auto____$2;
            } else {
              var or__3630__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3630__auto____$3)) {
                return or__3630__auto____$3;
              } else {
                var or__3630__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3630__auto____$4)) {
                  return or__3630__auto____$4;
                } else {
                  var or__3630__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3630__auto____$5)) {
                    return or__3630__auto____$5;
                  } else {
                    var or__3630__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3630__auto____$6)) {
                      return or__3630__auto____$6;
                    } else {
                      var or__3630__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3630__auto____$7)) {
                        return or__3630__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__11632__delegate = function(x, y, z, args) {
          var or__3630__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3630__auto__)) {
            return or__3630__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3630__auto__) {
              return function(p1__11623_SHARP_) {
                var or__3630__auto____$1 = p1.call(null, p1__11623_SHARP_);
                if (cljs.core.truth_(or__3630__auto____$1)) {
                  return or__3630__auto____$1;
                } else {
                  var or__3630__auto____$2 = p2.call(null, p1__11623_SHARP_);
                  if (cljs.core.truth_(or__3630__auto____$2)) {
                    return or__3630__auto____$2;
                  } else {
                    return p3.call(null, p1__11623_SHARP_);
                  }
                }
              };
            }(or__3630__auto__), args);
          }
        };
        var G__11632 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11632__delegate.call(this, x, y, z, args);
        };
        G__11632.cljs$lang$maxFixedArity = 3;
        G__11632.cljs$lang$applyTo = function(arglist__11633) {
          var x = cljs.core.first(arglist__11633);
          arglist__11633 = cljs.core.next(arglist__11633);
          var y = cljs.core.first(arglist__11633);
          arglist__11633 = cljs.core.next(arglist__11633);
          var z = cljs.core.first(arglist__11633);
          var args = cljs.core.rest(arglist__11633);
          return G__11632__delegate(x, y, z, args);
        };
        G__11632.cljs$core$IFn$_invoke$arity$variadic = G__11632__delegate;
        return G__11632;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__11634__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__11624_SHARP_) {
                return p1__11624_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__11625_SHARP_) {
                var or__3630__auto__ = p1__11625_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3630__auto__)) {
                  return or__3630__auto__;
                } else {
                  return p1__11625_SHARP_.call(null, y);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__11626_SHARP_) {
                var or__3630__auto__ = p1__11626_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3630__auto__)) {
                  return or__3630__auto__;
                } else {
                  var or__3630__auto____$1 = p1__11626_SHARP_.call(null, y);
                  if (cljs.core.truth_(or__3630__auto____$1)) {
                    return or__3630__auto____$1;
                  } else {
                    return p1__11626_SHARP_.call(null, z);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__11635__delegate = function(x, y, z, args) {
              var or__3630__auto__ = spn.call(null, x, y, z);
              if (cljs.core.truth_(or__3630__auto__)) {
                return or__3630__auto__;
              } else {
                return cljs.core.some.call(null, function(or__3630__auto__, ps__$1) {
                  return function(p1__11627_SHARP_) {
                    return cljs.core.some.call(null, p1__11627_SHARP_, args);
                  };
                }(or__3630__auto__, ps__$1), ps__$1);
              }
            };
            var G__11635 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__11635__delegate.call(this, x, y, z, args);
            };
            G__11635.cljs$lang$maxFixedArity = 3;
            G__11635.cljs$lang$applyTo = function(arglist__11636) {
              var x = cljs.core.first(arglist__11636);
              arglist__11636 = cljs.core.next(arglist__11636);
              var y = cljs.core.first(arglist__11636);
              arglist__11636 = cljs.core.next(arglist__11636);
              var z = cljs.core.first(arglist__11636);
              var args = cljs.core.rest(arglist__11636);
              return G__11635__delegate(x, y, z, args);
            };
            G__11635.cljs$core$IFn$_invoke$arity$variadic = G__11635__delegate;
            return G__11635;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__11634 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11634__delegate.call(this, p1, p2, p3, ps);
    };
    G__11634.cljs$lang$maxFixedArity = 3;
    G__11634.cljs$lang$applyTo = function(arglist__11637) {
      var p1 = cljs.core.first(arglist__11637);
      arglist__11637 = cljs.core.next(arglist__11637);
      var p2 = cljs.core.first(arglist__11637);
      arglist__11637 = cljs.core.next(arglist__11637);
      var p3 = cljs.core.first(arglist__11637);
      var ps = cljs.core.rest(arglist__11637);
      return G__11634__delegate(p1, p2, p3, ps);
    };
    G__11634.cljs$core$IFn$_invoke$arity$variadic = G__11634__delegate;
    return G__11634;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(rf) {
      return function() {
        var G__11639 = null;
        var G__11639__0 = function() {
          return rf.call(null);
        };
        var G__11639__1 = function(result) {
          return rf.call(null, result);
        };
        var G__11639__2 = function(result, input) {
          return rf.call(null, result, f.call(null, input));
        };
        var G__11639__3 = function() {
          var G__11640__delegate = function(result, input, inputs) {
            return rf.call(null, result, cljs.core.apply.call(null, f, input, inputs));
          };
          var G__11640 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              inputs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
            }
            return G__11640__delegate.call(this, result, input, inputs);
          };
          G__11640.cljs$lang$maxFixedArity = 2;
          G__11640.cljs$lang$applyTo = function(arglist__11641) {
            var result = cljs.core.first(arglist__11641);
            arglist__11641 = cljs.core.next(arglist__11641);
            var input = cljs.core.first(arglist__11641);
            var inputs = cljs.core.rest(arglist__11641);
            return G__11640__delegate(result, input, inputs);
          };
          G__11640.cljs$core$IFn$_invoke$arity$variadic = G__11640__delegate;
          return G__11640;
        }();
        G__11639 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__11639__0.call(this);
            case 1:
              return G__11639__1.call(this, result);
            case 2:
              return G__11639__2.call(this, result, input);
            default:
              return G__11639__3.cljs$core$IFn$_invoke$arity$variadic(result, input, cljs.core.array_seq(arguments, 2));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11639.cljs$lang$maxFixedArity = 2;
        G__11639.cljs$lang$applyTo = G__11639__3.cljs$lang$applyTo;
        G__11639.cljs$core$IFn$_invoke$arity$0 = G__11639__0;
        G__11639.cljs$core$IFn$_invoke$arity$1 = G__11639__1;
        G__11639.cljs$core$IFn$_invoke$arity$2 = G__11639__2;
        G__11639.cljs$core$IFn$_invoke$arity$variadic = G__11639__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__11639;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4517__auto___11642 = size;
          var i_11643 = 0;
          while (true) {
            if (i_11643 < n__4517__auto___11642) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_11643)));
              var G__11644 = i_11643 + 1;
              i_11643 = G__11644;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__11645__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(step) {
        return function(p1__11638_SHARP_) {
          return cljs.core.apply.call(null, f, p1__11638_SHARP_);
        };
      }(step), step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__11645 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__11645__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__11645.cljs$lang$maxFixedArity = 4;
    G__11645.cljs$lang$applyTo = function(arglist__11646) {
      var f = cljs.core.first(arglist__11646);
      arglist__11646 = cljs.core.next(arglist__11646);
      var c1 = cljs.core.first(arglist__11646);
      arglist__11646 = cljs.core.next(arglist__11646);
      var c2 = cljs.core.first(arglist__11646);
      arglist__11646 = cljs.core.next(arglist__11646);
      var c3 = cljs.core.first(arglist__11646);
      var colls = cljs.core.rest(arglist__11646);
      return G__11645__delegate(f, c1, c2, c3, colls);
    };
    G__11645.cljs$core$IFn$_invoke$arity$variadic = G__11645__delegate;
    return G__11645;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_.call(null, n);
      return function(na) {
        return function() {
          var G__11647 = null;
          var G__11647__0 = function() {
            return rf.call(null);
          };
          var G__11647__1 = function(result) {
            return rf.call(null, result);
          };
          var G__11647__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            var nn = cljs.core._vreset_BANG_.call(null, na, cljs.core._deref.call(null, na) - 1);
            var result__$1 = n__$1 > 0 ? rf.call(null, result, input) : result;
            if (!(nn > 0)) {
              return cljs.core.ensure_reduced.call(null, result__$1);
            } else {
              return result__$1;
            }
          };
          G__11647 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__11647__0.call(this);
              case 1:
                return G__11647__1.call(this, result);
              case 2:
                return G__11647__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11647.cljs$core$IFn$_invoke$arity$0 = G__11647__0;
          G__11647.cljs$core$IFn$_invoke$arity$1 = G__11647__1;
          G__11647.cljs$core$IFn$_invoke$arity$2 = G__11647__2;
          return G__11647;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_.call(null, n);
      return function(na) {
        return function() {
          var G__11648 = null;
          var G__11648__0 = function() {
            return rf.call(null);
          };
          var G__11648__1 = function(result) {
            return rf.call(null, result);
          };
          var G__11648__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            cljs.core._vreset_BANG_.call(null, na, cljs.core._deref.call(null, na) - 1);
            if (n__$1 > 0) {
              return result;
            } else {
              return rf.call(null, result, input);
            }
          };
          G__11648 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__11648__0.call(this);
              case 1:
                return G__11648__1.call(this, result);
              case 2:
                return G__11648__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11648.cljs$core$IFn$_invoke$arity$0 = G__11648__0;
          G__11648.cljs$core$IFn$_invoke$arity$1 = G__11648__1;
          G__11648.cljs$core$IFn$_invoke$arity$2 = G__11648__2;
          return G__11648;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (n__$1 > 0 && s) {
          var G__11649 = n__$1 - 1;
          var G__11650 = cljs.core.rest.call(null, s);
          n__$1 = G__11649;
          coll__$1 = G__11650;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__11651 = cljs.core.next.call(null, s);
      var G__11652 = cljs.core.next.call(null, lead);
      s = G__11651;
      lead = G__11652;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(rf) {
      var da = cljs.core.volatile_BANG_.call(null, true);
      return function(da) {
        return function() {
          var G__11653 = null;
          var G__11653__0 = function() {
            return rf.call(null);
          };
          var G__11653__1 = function(result) {
            return rf.call(null, result);
          };
          var G__11653__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref.call(null, da);
            if (cljs.core.truth_(function() {
              var and__3618__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3618__auto__)) {
                return pred.call(null, input);
              } else {
                return and__3618__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.vreset_BANG_.call(null, da, null);
              return rf.call(null, result, input);
            }
          };
          G__11653 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__11653__0.call(this);
              case 1:
                return G__11653__1.call(this, result);
              case 2:
                return G__11653__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11653.cljs$core$IFn$_invoke$arity$0 = G__11653__0;
          G__11653.cljs$core$IFn$_invoke$arity$1 = G__11653__1;
          G__11653.cljs$core$IFn$_invoke$arity$2 = G__11653__2;
          return G__11653;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (cljs.core.truth_(function() {
          var and__3618__auto__ = s;
          if (and__3618__auto__) {
            return pred__$1.call(null, cljs.core.first.call(null, s));
          } else {
            return and__3618__auto__;
          }
        }())) {
          var G__11654 = pred__$1;
          var G__11655 = cljs.core.rest.call(null, s);
          pred__$1 = G__11654;
          coll__$1 = G__11655;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__11656__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__11656 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11656__delegate.call(this, c1, c2, colls);
    };
    G__11656.cljs$lang$maxFixedArity = 2;
    G__11656.cljs$lang$applyTo = function(arglist__11657) {
      var c1 = cljs.core.first(arglist__11657);
      arglist__11657 = cljs.core.next(arglist__11657);
      var c2 = cljs.core.first(arglist__11657);
      var colls = cljs.core.rest(arglist__11657);
      return G__11656__delegate(c1, c2, colls);
    };
    G__11656.cljs$core$IFn$_invoke$arity$variadic = G__11656__delegate;
    return G__11656;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return cljs.core.comp.call(null, cljs.core.map.call(null, f), cljs.core.cat);
  };
  var mapcat__2 = function() {
    var G__11658__delegate = function(f, colls) {
      return cljs.core.apply.call(null, cljs.core.concat, cljs.core.apply.call(null, cljs.core.map, f, colls));
    };
    var G__11658 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__11658__delegate.call(this, f, colls);
    };
    G__11658.cljs$lang$maxFixedArity = 1;
    G__11658.cljs$lang$applyTo = function(arglist__11659) {
      var f = cljs.core.first(arglist__11659);
      var colls = cljs.core.rest(arglist__11659);
      return G__11658__delegate(f, colls);
    };
    G__11658.cljs$core$IFn$_invoke$arity$variadic = G__11658__delegate;
    return G__11658;
  }();
  mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      default:
        return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 1;
  mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__11660 = null;
        var G__11660__0 = function() {
          return rf.call(null);
        };
        var G__11660__1 = function(result) {
          return rf.call(null, result);
        };
        var G__11660__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__11660 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11660__0.call(this);
            case 1:
              return G__11660__1.call(this, result);
            case 2:
              return G__11660__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11660.cljs$core$IFn$_invoke$arity$0 = G__11660__0;
        G__11660.cljs$core$IFn$_invoke$arity$1 = G__11660__1;
        G__11660.cljs$core$IFn$_invoke$arity$2 = G__11660__2;
        return G__11660;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4517__auto___11661 = size;
          var i_11662 = 0;
          while (true) {
            if (i_11662 < n__4517__auto___11661) {
              if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_11662)))) {
                cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_11662));
              } else {
              }
              var G__11663 = i_11662 + 1;
              i_11662 = G__11663;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
        } else {
          var f = cljs.core.first.call(null, s);
          var r = cljs.core.rest.call(null, s);
          if (cljs.core.truth_(pred.call(null, f))) {
            return cljs.core.cons.call(null, f, filter.call(null, pred, r));
          } else {
            return filter.call(null, pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__11664_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__11664_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__11667 = to;
        if (G__11667) {
          var bit__4304__auto__ = G__11667.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4304__auto__ || G__11667.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
      } else {
        return cljs.core.reduce.call(null, cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__11668 = to;
      if (G__11668) {
        var bit__4304__auto__ = G__11668.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4304__auto__ || G__11668.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.transduce.call(null, xform, cljs.core.conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
    } else {
      return cljs.core.transduce.call(null, xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__11669__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__11669 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__11669__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__11669.cljs$lang$maxFixedArity = 4;
    G__11669.cljs$lang$applyTo = function(arglist__11670) {
      var f = cljs.core.first(arglist__11670);
      arglist__11670 = cljs.core.next(arglist__11670);
      var c1 = cljs.core.first(arglist__11670);
      arglist__11670 = cljs.core.next(arglist__11670);
      var c2 = cljs.core.first(arglist__11670);
      arglist__11670 = cljs.core.next(arglist__11670);
      var c3 = cljs.core.first(arglist__11670);
      var colls = cljs.core.rest(arglist__11670);
      return G__11669__delegate(f, c1, c2, c3, colls);
    };
    G__11669.cljs$core$IFn$_invoke$arity$variadic = G__11669__delegate;
    return G__11669;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__11672 = m__$1;
          if (G__11672) {
            var bit__4311__auto__ = G__11672.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4311__auto__ || G__11672.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__11672.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__11672);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__11672);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__11673 = sentinel;
            var G__11674 = m__$2;
            var G__11675 = cljs.core.next.call(null, ks__$1);
            sentinel = G__11673;
            m__$1 = G__11674;
            ks__$1 = G__11675;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__11676, v) {
  var vec__11678 = p__11676;
  var k = cljs.core.nth.call(null, vec__11678, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__11678, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__11679, f) {
    var vec__11689 = p__11679;
    var k = cljs.core.nth.call(null, vec__11689, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__11689, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__11680, f, a) {
    var vec__11690 = p__11680;
    var k = cljs.core.nth.call(null, vec__11690, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__11690, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__11681, f, a, b) {
    var vec__11691 = p__11681;
    var k = cljs.core.nth.call(null, vec__11691, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__11691, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__11682, f, a, b, c) {
    var vec__11692 = p__11682;
    var k = cljs.core.nth.call(null, vec__11692, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__11692, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__11694__delegate = function(m, p__11683, f, a, b, c, args) {
      var vec__11693 = p__11683;
      var k = cljs.core.nth.call(null, vec__11693, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__11693, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__11694 = function(m, p__11683, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__11694__delegate.call(this, m, p__11683, f, a, b, c, args);
    };
    G__11694.cljs$lang$maxFixedArity = 6;
    G__11694.cljs$lang$applyTo = function(arglist__11695) {
      var m = cljs.core.first(arglist__11695);
      arglist__11695 = cljs.core.next(arglist__11695);
      var p__11683 = cljs.core.first(arglist__11695);
      arglist__11695 = cljs.core.next(arglist__11695);
      var f = cljs.core.first(arglist__11695);
      arglist__11695 = cljs.core.next(arglist__11695);
      var a = cljs.core.first(arglist__11695);
      arglist__11695 = cljs.core.next(arglist__11695);
      var b = cljs.core.first(arglist__11695);
      arglist__11695 = cljs.core.next(arglist__11695);
      var c = cljs.core.first(arglist__11695);
      var args = cljs.core.rest(arglist__11695);
      return G__11694__delegate(m, p__11683, f, a, b, c, args);
    };
    G__11694.cljs$core$IFn$_invoke$arity$variadic = G__11694__delegate;
    return G__11694;
  }();
  update_in = function(m, p__11683, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__11683, f);
      case 4:
        return update_in__4.call(this, m, p__11683, f, a);
      case 5:
        return update_in__5.call(this, m, p__11683, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__11683, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__11683, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
  };
  var update__4 = function(m, k, f, x) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x));
  };
  var update__5 = function(m, k, f, x, y) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x, y));
  };
  var update__6 = function(m, k, f, x, y, z) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x, y, z));
  };
  var update__7 = function() {
    var G__11696__delegate = function(m, k, f, x, y, z, more) {
      return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), x, y, z, more));
    };
    var G__11696 = function(m, k, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 6) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__11696__delegate.call(this, m, k, f, x, y, z, more);
    };
    G__11696.cljs$lang$maxFixedArity = 6;
    G__11696.cljs$lang$applyTo = function(arglist__11697) {
      var m = cljs.core.first(arglist__11697);
      arglist__11697 = cljs.core.next(arglist__11697);
      var k = cljs.core.first(arglist__11697);
      arglist__11697 = cljs.core.next(arglist__11697);
      var f = cljs.core.first(arglist__11697);
      arglist__11697 = cljs.core.next(arglist__11697);
      var x = cljs.core.first(arglist__11697);
      arglist__11697 = cljs.core.next(arglist__11697);
      var y = cljs.core.first(arglist__11697);
      arglist__11697 = cljs.core.next(arglist__11697);
      var z = cljs.core.first(arglist__11697);
      var more = cljs.core.rest(arglist__11697);
      return G__11696__delegate(m, k, f, x, y, z, more);
    };
    G__11696.cljs$core$IFn$_invoke$arity$variadic = G__11696__delegate;
    return G__11696;
  }();
  update = function(m, k, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x);
      case 5:
        return update__5.call(this, m, k, f, x, y);
      case 6:
        return update__6.call(this, m, k, f, x, y, z);
      default:
        return update__7.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x, y, z, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 6;
  update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$6 = update__6;
  update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__11698 = ll - 5;
      var G__11699 = r;
      ll = G__11698;
      ret = G__11699;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__11700 = cljs.core.pv_aget.call(null, node, 0);
      var G__11701 = level - 5;
      node = G__11700;
      level = G__11701;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off.call(null, pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__11702 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
        var G__11703 = level - 5;
        node = G__11702;
        level = G__11703;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for.call(null, pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for.call(null, self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function __GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count.call(null, v) ? cljs.core.unchecked_array_for.call(null, v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = f.call(null, init__$2, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
              return init__$3;
            } else {
              var G__11705 = j + 1;
              var G__11706 = init__$3;
              j = G__11705;
              init__$2 = G__11706;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__11707 = i + len;
        var G__11708 = init__$2;
        i = G__11707;
        init__$1 = G__11708;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for.call(null, coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator.call(null, this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for.call(null, coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count.call(null, other)) {
      var me_iter = cljs.core._iterator.call(null, coll__$1);
      var you_iter = cljs.core._iterator.call(null, other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.call(null, x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential.call(null, coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = f.call(null, init__$2, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
              return init__$3;
            } else {
              var G__11709 = j + 1;
              var G__11710 = init__$3;
              j = G__11709;
              init__$2 = G__11710;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__11711 = i + len;
        var G__11712 = init__$2;
        i = G__11711;
        init__$1 = G__11712;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      return cljs.core.chunked_seq.call(null, coll__$1, cljs.core.first_array_for_longvec.call(null, coll__$1), 0, 0);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4517__auto___11713 = len;
    var i_11714 = 0;
    while (true) {
      if (i_11714 < n__4517__auto___11713) {
        new_tail[i_11714] = self__.tail[i_11714];
        var G__11715 = i_11714 + 1;
        i_11714 = G__11715;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__11716 = null;
  var G__11716__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._nth.call(null, coll, k);
  };
  var G__11716__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._nth.call(null, coll, k, not_found);
  };
  G__11716 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11716__2.call(this, self__, k);
      case 3:
        return G__11716__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11716.cljs$core$IFn$_invoke$arity$2 = G__11716__2;
  G__11716.cljs$core$IFn$_invoke$arity$3 = G__11716__3;
  return G__11716;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args11704) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11704)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._nth.call(null, coll, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._nth.call(null, coll, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__11717 = i + 1;
        var G__11718 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__11717;
        out = G__11718;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__11719) {
    var args = cljs.core.seq(arglist__11719);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3947__auto__ = self__.end;
    var y__3948__auto__ = v_pos + 1;
    return x__3947__auto__ > y__3948__auto__ ? x__3947__auto__ : y__3948__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq.call(null, i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__11721 = null;
  var G__11721__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._nth.call(null, coll, k);
  };
  var G__11721__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._nth.call(null, coll, k, not_found);
  };
  G__11721 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11721__2.call(this, self__, k);
      case 3:
        return G__11721__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11721.cljs$core$IFn$_invoke$arity$2 = G__11721__2;
  G__11721.cljs$core$IFn$_invoke$arity$3 = G__11721__3;
  return G__11721;
}();
cljs.core.Subvec.prototype.apply = function(self__, args11720) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11720)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._nth.call(null, coll, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._nth.call(null, coll, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__11722 = meta;
      var G__11723 = v.v;
      var G__11724 = v.start + start;
      var G__11725 = v.start + end;
      var G__11726 = __hash;
      meta = G__11722;
      v = G__11723;
      start = G__11724;
      end = G__11725;
      __hash = G__11726;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj11730 = {};
    return obj11730;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off.call(null, tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__11731 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
        var G__11732 = level - 5;
        node = G__11731;
        level = G__11732;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__11734 = null;
  var G__11734__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__11734__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__11734 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11734__2.call(this, self__, k);
      case 3:
        return G__11734__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11734.cljs$core$IFn$_invoke$arity$2 = G__11734__2;
  G__11734.cljs$core$IFn$_invoke$arity$3 = G__11734__3;
  return G__11734;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args11733) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11733)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset.call(null, node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3630__auto__ = self__.front;
    if (cljs.core.truth_(or__3630__auto__)) {
      return or__3630__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3630__auto__ = self__.rear;
      if (cljs.core.truth_(or__3630__auto__)) {
        return or__3630__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__11735 = i + incr;
        i = G__11735;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__11736 = i + 1;
      var G__11737 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__11736;
      out = G__11737;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj11741 = {};
    return obj11741;
  }();
  var l = ks.length;
  var i_11742 = 0;
  while (true) {
    if (i_11742 < l) {
      var k_11743 = ks[i_11742];
      new_obj[k_11743] = obj[k_11743];
      var G__11744 = i_11742 + 1;
      i_11742 = G__11744;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__11747 = cljs.core.rest.call(null, keys__$1);
        var G__11748 = init__$2;
        keys__$1 = G__11747;
        init__$1 = G__11748;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(coll__$1) {
      return function(p1__11745_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__11745_SHARP_, self__.strobj[p1__11745_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__11749 = null;
  var G__11749__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__11749__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__11749 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11749__2.call(this, self__, k);
      case 3:
        return G__11749__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11749.cljs$core$IFn$_invoke$arity$2 = G__11749__2;
  G__11749.cljs$core$IFn$_invoke$arity$3 = G__11749__3;
  return G__11749;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args11746) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11746)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj11751 = {};
  return obj11751;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__11752 = cljs.core.first.call(null, self__.s);
    var k = cljs.core.nth.call(null, vec__11752, 0, null);
    var v = cljs.core.nth.call(null, vec__11752, 1, null);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function __GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function __GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__11753 = i + 2;
        i = G__11753;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__11754 = i + 2;
        i = G__11754;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__11755 = i + 2;
        i = G__11755;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__11756 = i + 2;
        i = G__11756;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        var G__11757 = i + 2;
        i = G__11757;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_11758 = 0;
  while (true) {
    if (i_11758 < l) {
      narr[i_11758] = arr[i_11758];
      var G__11759 = i_11758 + 1;
      i_11758 = G__11759;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function __GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11761 = cljs.core.seq.call(null, coll);
  var chunk__11762 = null;
  var count__11763 = 0;
  var i__11764 = 0;
  while (true) {
    if (i__11764 < count__11763) {
      var vec__11765 = cljs.core._nth.call(null, chunk__11762, i__11764);
      var k = cljs.core.nth.call(null, vec__11765, 0, null);
      var v = cljs.core.nth.call(null, vec__11765, 1, null);
      f.call(null, v, k);
      var G__11771 = seq__11761;
      var G__11772 = chunk__11762;
      var G__11773 = count__11763;
      var G__11774 = i__11764 + 1;
      seq__11761 = G__11771;
      chunk__11762 = G__11772;
      count__11763 = G__11773;
      i__11764 = G__11774;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11761);
      if (temp__4126__auto__) {
        var seq__11761__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11761__$1)) {
          var c__4417__auto__ = cljs.core.chunk_first.call(null, seq__11761__$1);
          var G__11775 = cljs.core.chunk_rest.call(null, seq__11761__$1);
          var G__11776 = c__4417__auto__;
          var G__11777 = cljs.core.count.call(null, c__4417__auto__);
          var G__11778 = 0;
          seq__11761 = G__11775;
          chunk__11762 = G__11776;
          count__11763 = G__11777;
          i__11764 = G__11778;
          continue;
        } else {
          var vec__11766 = cljs.core.first.call(null, seq__11761__$1);
          var k = cljs.core.nth.call(null, vec__11766, 0, null);
          var v = cljs.core.nth.call(null, vec__11766, 1, null);
          f.call(null, v, k);
          var G__11779 = cljs.core.next.call(null, seq__11761__$1);
          var G__11780 = null;
          var G__11781 = 0;
          var G__11782 = 0;
          seq__11761 = G__11779;
          chunk__11762 = G__11780;
          count__11763 = G__11781;
          i__11764 = G__11782;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__11783 = i + 2;
        var G__11784 = init__$2;
        i = G__11783;
        init__$1 = G__11784;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__11767 = other;
    if (G__11767) {
      var bit__4304__auto__ = G__11767.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4304__auto__ || G__11767.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === cljs.core._count.call(null, other__$1)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = cljs.core._lookup.call(null, other__$1, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.call(null, self__.arr[i + 1], v)) {
              var G__11785 = i + 2;
              i = G__11785;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map.call(null, coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj11769 = {};
    return obj11769;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__11786 = s + 2;
            var G__11787 = d;
            s = G__11786;
            d = G__11787;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__11788 = s + 2;
            var G__11789 = d + 2;
            s = G__11788;
            d = G__11789;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__11770 = cljs.core.aclone.call(null, self__.arr);
        G__11770[idx + 1] = v;
        return G__11770;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__11790 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__11791 = cljs.core.next.call(null, es);
          ret = G__11790;
          es = G__11791;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__11792 = null;
  var G__11792__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__11792__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__11792 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11792__2.call(this, self__, k);
      case 3:
        return G__11792__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11792.cljs$core$IFn$_invoke$arity$2 = G__11792__2;
  G__11792.cljs$core$IFn$_invoke$arity$3 = G__11792__3;
  return G__11792;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args11760) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11760)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__11793 = i + 2;
        var G__11794 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__11793;
        ret = G__11794;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__11795_11797 = self__.arr;
      G__11795_11797.pop();
      G__11795_11797.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__11796 = o;
      if (G__11796) {
        var bit__4311__auto__ = G__11796.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4311__auto__ || G__11796.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__11796.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__11796);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__11796);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__11798 = cljs.core.next.call(null, es);
          var G__11799 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__11798;
          tcoll__$2 = G__11799;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__11800 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__11801 = i + 2;
      out = G__11800;
      i = G__11801;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.call(null, key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__11804 = cljs.core.aclone.call(null, arr);
    G__11804[i] = a;
    return G__11804;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__11805 = cljs.core.aclone.call(null, arr);
    G__11805[i] = a;
    G__11805[j] = b;
    return G__11805;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__11806 = i + 2;
        var G__11807 = init__$2;
        i = G__11806;
        init__$1 = G__11807;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_11808 = 0;
        var j_11809 = 0;
        while (true) {
          if (i_11808 < 32) {
            if ((self__.bitmap >>> i_11808 & 1) === 0) {
              var G__11810 = i_11808 + 1;
              var G__11811 = j_11809;
              i_11808 = G__11810;
              j_11809 = G__11811;
              continue;
            } else {
              nodes[i_11808] = !(self__.arr[j_11809] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_11809]), self__.arr[j_11809], self__.arr[j_11809 + 1], added_leaf_QMARK_) : self__.arr[j_11809 + 1];
              var G__11812 = i_11808 + 1;
              var G__11813 = j_11809 + 2;
              i_11808 = G__11812;
              j_11809 = G__11813;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_11814 = 0;
      var j_11815 = 0;
      while (true) {
        if (i_11814 < 32) {
          if ((self__.bitmap >>> i_11814 & 1) === 0) {
            var G__11816 = i_11814 + 1;
            var G__11817 = j_11815;
            i_11814 = G__11816;
            j_11815 = G__11817;
            continue;
          } else {
            nodes[i_11814] = !(self__.arr[j_11815] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_11815]), self__.arr[j_11815], self__.arr[j_11815 + 1], added_leaf_QMARK_) : self__.arr[j_11815 + 1];
            var G__11818 = i_11814 + 1;
            var G__11819 = j_11815 + 2;
            i_11814 = G__11818;
            j_11815 = G__11819;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__11820 = i + 1;
        var G__11821 = j + 2;
        var G__11822 = bitmap | 1 << i;
        i = G__11820;
        j = G__11821;
        bitmap = G__11822;
        continue;
      } else {
        var G__11823 = i + 1;
        var G__11824 = j;
        var G__11825 = bitmap;
        i = G__11823;
        j = G__11824;
        bitmap = G__11825;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__11826 = i + 1;
          var G__11827 = init__$2;
          i = G__11826;
          init__$1 = G__11827;
          continue;
        }
      } else {
        var G__11828 = i + 1;
        var G__11829 = init__$1;
        i = G__11828;
        init__$1 = G__11829;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__11830 = i + 2;
        i = G__11830;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__11831 = j + 2;
                j = G__11831;
                continue;
              }
            } else {
              var G__11832 = j + 2;
              j = G__11832;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__11833 = j + 1;
              j = G__11833;
              continue;
            }
          } else {
            var G__11834 = j + 1;
            j = G__11834;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11836 = cljs.core.seq.call(null, coll);
  var chunk__11837 = null;
  var count__11838 = 0;
  var i__11839 = 0;
  while (true) {
    if (i__11839 < count__11838) {
      var vec__11840 = cljs.core._nth.call(null, chunk__11837, i__11839);
      var k = cljs.core.nth.call(null, vec__11840, 0, null);
      var v = cljs.core.nth.call(null, vec__11840, 1, null);
      f.call(null, v, k);
      var G__11844 = seq__11836;
      var G__11845 = chunk__11837;
      var G__11846 = count__11838;
      var G__11847 = i__11839 + 1;
      seq__11836 = G__11844;
      chunk__11837 = G__11845;
      count__11838 = G__11846;
      i__11839 = G__11847;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11836);
      if (temp__4126__auto__) {
        var seq__11836__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11836__$1)) {
          var c__4417__auto__ = cljs.core.chunk_first.call(null, seq__11836__$1);
          var G__11848 = cljs.core.chunk_rest.call(null, seq__11836__$1);
          var G__11849 = c__4417__auto__;
          var G__11850 = cljs.core.count.call(null, c__4417__auto__);
          var G__11851 = 0;
          seq__11836 = G__11848;
          chunk__11837 = G__11849;
          count__11838 = G__11850;
          i__11839 = G__11851;
          continue;
        } else {
          var vec__11841 = cljs.core.first.call(null, seq__11836__$1);
          var k = cljs.core.nth.call(null, vec__11841, 0, null);
          var v = cljs.core.nth.call(null, vec__11841, 1, null);
          f.call(null, v, k);
          var G__11852 = cljs.core.next.call(null, seq__11836__$1);
          var G__11853 = null;
          var G__11854 = 0;
          var G__11855 = 0;
          seq__11836 = G__11852;
          chunk__11837 = G__11853;
          count__11838 = G__11854;
          i__11839 = G__11855;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj11843 = {};
    return obj11843;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__11856 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__11857 = cljs.core.next.call(null, es);
          ret = G__11856;
          es = G__11857;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__11858 = null;
  var G__11858__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__11858__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__11858 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11858__2.call(this, self__, k);
      case 3:
        return G__11858__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11858.cljs$core$IFn$_invoke$arity$2 = G__11858__2;
  G__11858.cljs$core$IFn$_invoke$arity$3 = G__11858__3;
  return G__11858;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args11835) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11835)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__11859 = i + 1;
      var G__11860 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__11859;
      out = G__11860;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__11861 = o;
      if (G__11861) {
        var bit__4311__auto__ = G__11861.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4311__auto__ || G__11861.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__11861.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__11861);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__11861);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__11862 = cljs.core.next.call(null, es);
          var G__11863 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__11862;
          tcoll__$1 = G__11863;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__11864 = ascending_QMARK_ ? t.left : t.right;
      var G__11865 = cljs.core.conj.call(null, stack__$1, t);
      t = G__11864;
      stack__$1 = G__11865;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._assoc_n.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__11867 = null;
  var G__11867__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return cljs.core._lookup.call(null, node, k);
  };
  var G__11867__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return cljs.core._lookup.call(null, node, k, not_found);
  };
  G__11867 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11867__2.call(this, self__, k);
      case 3:
        return G__11867__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11867.cljs$core$IFn$_invoke$arity$2 = G__11867__2;
  G__11867.cljs$core$IFn$_invoke$arity$3 = G__11867__3;
  return G__11867;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args11866) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11866)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return cljs.core._lookup.call(null, node, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return cljs.core._lookup.call(null, node, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._assoc_n.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__11869 = null;
  var G__11869__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return cljs.core._lookup.call(null, node, k);
  };
  var G__11869__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return cljs.core._lookup.call(null, node, k, not_found);
  };
  G__11869 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11869__2.call(this, self__, k);
      case 3:
        return G__11869__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11869.cljs$core$IFn$_invoke$arity$2 = G__11869__2;
  G__11869.cljs$core$IFn$_invoke$arity$3 = G__11869__3;
  return G__11869;
}();
cljs.core.RedNode.prototype.apply = function(self__, args11868) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11868)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return cljs.core._lookup.call(null, node, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return cljs.core._lookup.call(null, node, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove.call(null, comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11871 = cljs.core.seq.call(null, coll);
  var chunk__11872 = null;
  var count__11873 = 0;
  var i__11874 = 0;
  while (true) {
    if (i__11874 < count__11873) {
      var vec__11875 = cljs.core._nth.call(null, chunk__11872, i__11874);
      var k = cljs.core.nth.call(null, vec__11875, 0, null);
      var v = cljs.core.nth.call(null, vec__11875, 1, null);
      f.call(null, v, k);
      var G__11877 = seq__11871;
      var G__11878 = chunk__11872;
      var G__11879 = count__11873;
      var G__11880 = i__11874 + 1;
      seq__11871 = G__11877;
      chunk__11872 = G__11878;
      count__11873 = G__11879;
      i__11874 = G__11880;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11871);
      if (temp__4126__auto__) {
        var seq__11871__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11871__$1)) {
          var c__4417__auto__ = cljs.core.chunk_first.call(null, seq__11871__$1);
          var G__11881 = cljs.core.chunk_rest.call(null, seq__11871__$1);
          var G__11882 = c__4417__auto__;
          var G__11883 = cljs.core.count.call(null, c__4417__auto__);
          var G__11884 = 0;
          seq__11871 = G__11881;
          chunk__11872 = G__11882;
          count__11873 = G__11883;
          i__11874 = G__11884;
          continue;
        } else {
          var vec__11876 = cljs.core.first.call(null, seq__11871__$1);
          var k = cljs.core.nth.call(null, vec__11876, 0, null);
          var v = cljs.core.nth.call(null, vec__11876, 1, null);
          f.call(null, v, k);
          var G__11885 = cljs.core.next.call(null, seq__11871__$1);
          var G__11886 = null;
          var G__11887 = 0;
          var G__11888 = 0;
          seq__11871 = G__11885;
          chunk__11872 = G__11886;
          count__11873 = G__11887;
          i__11874 = G__11888;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__11889 = t.left;
          t = G__11889;
          continue;
        } else {
          var G__11890 = t.right;
          t = G__11890;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__11891 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__11892 = cljs.core.next.call(null, es);
          ret = G__11891;
          es = G__11892;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__11893 = null;
  var G__11893__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__11893__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__11893 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11893__2.call(this, self__, k);
      case 3:
        return G__11893__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11893.cljs$core$IFn$_invoke$arity$2 = G__11893__2;
  G__11893.cljs$core$IFn$_invoke$arity$3 = G__11893__3;
  return G__11893;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args11870) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11870)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__11894 = cljs.core.conj.call(null, stack, t);
              var G__11895 = t.left;
              stack = G__11894;
              t = G__11895;
              continue;
            } else {
              var G__11896 = stack;
              var G__11897 = t.right;
              stack = G__11896;
              t = G__11897;
              continue;
            }
          } else {
            if (c > 0) {
              var G__11898 = cljs.core.conj.call(null, stack, t);
              var G__11899 = t.right;
              stack = G__11898;
              t = G__11899;
              continue;
            } else {
              var G__11900 = stack;
              var G__11901 = t.left;
              stack = G__11900;
              t = G__11901;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__11902 = cljs.core.nnext.call(null, in$);
        var G__11903 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__11902;
        out = G__11903;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__11904) {
    var keyvals = cljs.core.seq(arglist__11904);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.call(null, cljs.core.array, keyvals), true, false);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__11905) {
    var keyvals = cljs.core.seq(arglist__11905);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj11909 = {};
      return obj11909;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__11910 = cljs.core.nnext.call(null, kvs);
        kvs = G__11910;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__11911) {
    var keyvals = cljs.core.seq(arglist__11911);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__11912 = cljs.core.nnext.call(null, in$);
        var G__11913 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__11912;
        out = G__11913;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__11914) {
    var keyvals = cljs.core.seq(arglist__11914);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__11915 = cljs.core.nnext.call(null, in$);
        var G__11916 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__11915;
        out = G__11916;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__11917) {
    var comparator = cljs.core.first(arglist__11917);
    var keyvals = cljs.core.rest(arglist__11917);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__11918 = self__.mseq;
    if (G__11918) {
      var bit__4311__auto__ = G__11918.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4311__auto__ || G__11918.cljs$core$INext$) {
        return true;
      } else {
        if (!G__11918.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11918);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11918);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__11919 = self__.mseq;
    if (G__11919) {
      var bit__4311__auto__ = G__11919.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4311__auto__ || G__11919.cljs$core$INext$) {
        return true;
      } else {
        if (!G__11919.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11919);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11919);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__11920 = self__.mseq;
    if (G__11920) {
      var bit__4311__auto__ = G__11920.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4311__auto__ || G__11920.cljs$core$INext$) {
        return true;
      } else {
        if (!G__11920.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11920);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11920);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__11921 = self__.mseq;
    if (G__11921) {
      var bit__4311__auto__ = G__11921.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4311__auto__ || G__11921.cljs$core$INext$) {
        return true;
      } else {
        if (!G__11921.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11921);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11921);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__11922_SHARP_, p2__11923_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3630__auto__ = p1__11922_SHARP_;
          if (cljs.core.truth_(or__3630__auto__)) {
            return or__3630__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__11923_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__11924) {
    var maps = cljs.core.seq(arglist__11924);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3630__auto__ = m1;
            if (cljs.core.truth_(or__3630__auto__)) {
              return or__3630__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__11925) {
    var f = cljs.core.first(arglist__11925);
    var maps = cljs.core.rest(arglist__11925);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__11926 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__11927 = cljs.core.next.call(null, keys);
      ret = G__11926;
      keys = G__11927;
      continue;
    } else {
      return cljs.core.with_meta.call(null, ret, cljs.core.meta.call(null, map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11930 = cljs.core.seq.call(null, coll);
  var chunk__11931 = null;
  var count__11932 = 0;
  var i__11933 = 0;
  while (true) {
    if (i__11933 < count__11932) {
      var vec__11934 = cljs.core._nth.call(null, chunk__11931, i__11933);
      var k = cljs.core.nth.call(null, vec__11934, 0, null);
      var v = cljs.core.nth.call(null, vec__11934, 1, null);
      f.call(null, v, k);
      var G__11936 = seq__11930;
      var G__11937 = chunk__11931;
      var G__11938 = count__11932;
      var G__11939 = i__11933 + 1;
      seq__11930 = G__11936;
      chunk__11931 = G__11937;
      count__11932 = G__11938;
      i__11933 = G__11939;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11930);
      if (temp__4126__auto__) {
        var seq__11930__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11930__$1)) {
          var c__4417__auto__ = cljs.core.chunk_first.call(null, seq__11930__$1);
          var G__11940 = cljs.core.chunk_rest.call(null, seq__11930__$1);
          var G__11941 = c__4417__auto__;
          var G__11942 = cljs.core.count.call(null, c__4417__auto__);
          var G__11943 = 0;
          seq__11930 = G__11940;
          chunk__11931 = G__11941;
          count__11932 = G__11942;
          i__11933 = G__11943;
          continue;
        } else {
          var vec__11935 = cljs.core.first.call(null, seq__11930__$1);
          var k = cljs.core.nth.call(null, vec__11935, 0, null);
          var v = cljs.core.nth.call(null, vec__11935, 1, null);
          f.call(null, v, k);
          var G__11944 = cljs.core.next.call(null, seq__11930__$1);
          var G__11945 = null;
          var G__11946 = 0;
          var G__11947 = 0;
          seq__11930 = G__11944;
          chunk__11931 = G__11945;
          count__11932 = G__11946;
          i__11933 = G__11947;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__11928_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__11928_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__11948 = null;
  var G__11948__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__11948__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__11948 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11948__2.call(this, self__, k);
      case 3:
        return G__11948__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11948.cljs$core$IFn$_invoke$arity$2 = G__11948__2;
  G__11948.cljs$core$IFn$_invoke$arity$3 = G__11948__3;
  return G__11948;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args11929) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11929)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__11949 = i + 1;
        var G__11950 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__11949;
        out = G__11950;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__11951 = i + 1;
        var G__11952 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__11951;
        out = G__11952;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__11954 = null;
  var G__11954__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__11954__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__11954 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11954__2.call(this, self__, k);
      case 3:
        return G__11954__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11954.cljs$core$IFn$_invoke$arity$2 = G__11954__2;
  G__11954.cljs$core$IFn$_invoke$arity$3 = G__11954__3;
  return G__11954;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args11953) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11953)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11957 = cljs.core.seq.call(null, coll);
  var chunk__11958 = null;
  var count__11959 = 0;
  var i__11960 = 0;
  while (true) {
    if (i__11960 < count__11959) {
      var vec__11961 = cljs.core._nth.call(null, chunk__11958, i__11960);
      var k = cljs.core.nth.call(null, vec__11961, 0, null);
      var v = cljs.core.nth.call(null, vec__11961, 1, null);
      f.call(null, v, k);
      var G__11963 = seq__11957;
      var G__11964 = chunk__11958;
      var G__11965 = count__11959;
      var G__11966 = i__11960 + 1;
      seq__11957 = G__11963;
      chunk__11958 = G__11964;
      count__11959 = G__11965;
      i__11960 = G__11966;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11957);
      if (temp__4126__auto__) {
        var seq__11957__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11957__$1)) {
          var c__4417__auto__ = cljs.core.chunk_first.call(null, seq__11957__$1);
          var G__11967 = cljs.core.chunk_rest.call(null, seq__11957__$1);
          var G__11968 = c__4417__auto__;
          var G__11969 = cljs.core.count.call(null, c__4417__auto__);
          var G__11970 = 0;
          seq__11957 = G__11967;
          chunk__11958 = G__11968;
          count__11959 = G__11969;
          i__11960 = G__11970;
          continue;
        } else {
          var vec__11962 = cljs.core.first.call(null, seq__11957__$1);
          var k = cljs.core.nth.call(null, vec__11962, 0, null);
          var v = cljs.core.nth.call(null, vec__11962, 1, null);
          f.call(null, v, k);
          var G__11971 = cljs.core.next.call(null, seq__11957__$1);
          var G__11972 = null;
          var G__11973 = 0;
          var G__11974 = 0;
          seq__11957 = G__11971;
          chunk__11958 = G__11972;
          count__11959 = G__11973;
          i__11960 = G__11974;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__11955_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__11955_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty.call(null, self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__11975 = null;
  var G__11975__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__11975__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__11975 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11975__2.call(this, self__, k);
      case 3:
        return G__11975__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11975.cljs$core$IFn$_invoke$arity$2 = G__11975__2;
  G__11975.cljs$core$IFn$_invoke$arity$3 = G__11975__3;
  return G__11975;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args11956) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11956)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4511__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4511__auto__.length) {
        var G__11976 = i + 1;
        var G__11977 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__11976;
        res = G__11977;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__11978 = cljs.core._next.call(null, in$__$1);
          var G__11979 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
          in$__$1 = G__11978;
          out = G__11979;
          continue;
        } else {
          return cljs.core._persistent_BANG_.call(null, out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__11980__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__11980 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__11980__delegate.call(this, keys);
    };
    G__11980.cljs$lang$maxFixedArity = 0;
    G__11980.cljs$lang$applyTo = function(arglist__11981) {
      var keys = cljs.core.seq(arglist__11981);
      return G__11980__delegate(keys);
    };
    G__11980.cljs$core$IFn$_invoke$arity$variadic = G__11980__delegate;
    return G__11980;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__11982) {
    var keys = cljs.core.seq(arglist__11982);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__11983) {
    var comparator = cljs.core.first(arglist__11983);
    var keys = cljs.core.rest(arglist__11983);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.call(null, function(p1__11984_SHARP_) {
      var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__11984_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val.call(null, e);
      } else {
        return p1__11984_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_.call(null, coll)) {
      var n = cljs.core.count.call(null, coll);
      return cljs.core.reduce.call(null, function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
    } else {
      return cljs.core.map.call(null, function(p1__11985_SHARP_) {
        var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__11985_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second.call(null, e);
        } else {
          return p1__11985_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__11992, seen__$1) {
        while (true) {
          var vec__11993 = p__11992;
          var f = cljs.core.nth.call(null, vec__11993, 0, null);
          var xs__$1 = vec__11993;
          var temp__4126__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__11994 = cljs.core.rest.call(null, s);
              var G__11995 = seen__$1;
              p__11992 = G__11994;
              seen__$1 = G__11995;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__11996 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__11997 = cljs.core.next.call(null, s__$1);
      ret = G__11996;
      s__$1 = G__11997;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__11999 = x;
    if (G__11999) {
      var bit__4304__auto__ = G__11999.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4304__auto__ || G__11999.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__12000 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__12001 = cljs.core.next.call(null, ks);
      var G__12002 = cljs.core.next.call(null, vs);
      map = G__12000;
      ks = G__12001;
      vs = G__12002;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__12005__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__12003_SHARP_, p2__12004_SHARP_) {
        return max_key.call(null, k, p1__12003_SHARP_, p2__12004_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__12005 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__12005__delegate.call(this, k, x, y, more);
    };
    G__12005.cljs$lang$maxFixedArity = 3;
    G__12005.cljs$lang$applyTo = function(arglist__12006) {
      var k = cljs.core.first(arglist__12006);
      arglist__12006 = cljs.core.next(arglist__12006);
      var x = cljs.core.first(arglist__12006);
      arglist__12006 = cljs.core.next(arglist__12006);
      var y = cljs.core.first(arglist__12006);
      var more = cljs.core.rest(arglist__12006);
      return G__12005__delegate(k, x, y, more);
    };
    G__12005.cljs$core$IFn$_invoke$arity$variadic = G__12005__delegate;
    return G__12005;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__12009__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__12007_SHARP_, p2__12008_SHARP_) {
        return min_key.call(null, k, p1__12007_SHARP_, p2__12008_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__12009 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__12009__delegate.call(this, k, x, y, more);
    };
    G__12009.cljs$lang$maxFixedArity = 3;
    G__12009.cljs$lang$applyTo = function(arglist__12010) {
      var k = cljs.core.first(arglist__12010);
      arglist__12010 = cljs.core.next(arglist__12010);
      var x = cljs.core.first(arglist__12010);
      arglist__12010 = cljs.core.next(arglist__12010);
      var y = cljs.core.first(arglist__12010);
      var more = cljs.core.rest(arglist__12010);
      return G__12009__delegate(k, x, y, more);
    };
    G__12009.cljs$core$IFn$_invoke$arity$variadic = G__12009__delegate;
    return G__12009;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(rf) {
      var a = cljs.core.array_list.call(null);
      return function(a) {
        return function() {
          var G__12011 = null;
          var G__12011__0 = function() {
            return rf.call(null);
          };
          var G__12011__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return cljs.core.unreduced.call(null, rf.call(null, result, v));
            }();
            return rf.call(null, result__$1);
          };
          var G__12011__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return rf.call(null, result, v);
            } else {
              return result;
            }
          };
          G__12011 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__12011__0.call(this);
              case 1:
                return G__12011__1.call(this, result);
              case 2:
                return G__12011__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__12011.cljs$core$IFn$_invoke$arity$0 = G__12011__0;
          G__12011.cljs$core$IFn$_invoke$arity$1 = G__12011__1;
          G__12011.cljs$core$IFn$_invoke$arity$2 = G__12011__2;
          return G__12011;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__12012 = null;
        var G__12012__0 = function() {
          return rf.call(null);
        };
        var G__12012__1 = function(result) {
          return rf.call(null, result);
        };
        var G__12012__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return rf.call(null, result, input);
          } else {
            return cljs.core.reduced.call(null, result);
          }
        };
        G__12012 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__12012__0.call(this);
            case 1:
              return G__12012__1.call(this, result);
            case 2:
              return G__12012__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__12012.cljs$core$IFn$_invoke$arity$0 = G__12012__0;
        G__12012.cljs$core$IFn$_invoke$arity$1 = G__12012__1;
        G__12012.cljs$core$IFn$_invoke$arity$2 = G__12012__2;
        return G__12012;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__12015 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__12015, 0, null);
        var s = vec__12015;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__12016 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__12016, 0, null);
      var s = vec__12016;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__12019 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__12019, 0, null);
        var s = vec__12019;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__12020 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__12020, 0, null);
      var s = vec__12020;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function __GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil.call(null, (self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, rng__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_.call(null, ret__$1)) {
        return cljs.core.deref.call(null, ret__$1);
      } else {
        var G__12021 = i + self__.step;
        var G__12022 = ret__$1;
        i = G__12021;
        ret = G__12022;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_.call(null, -1);
      return function(ia) {
        return function() {
          var G__12023 = null;
          var G__12023__0 = function() {
            return rf.call(null);
          };
          var G__12023__1 = function(result) {
            return rf.call(null, result);
          };
          var G__12023__2 = function(result, input) {
            var i = cljs.core._vreset_BANG_.call(null, ia, cljs.core._deref.call(null, ia) + 1);
            if (cljs.core.rem.call(null, i, n) === 0) {
              return rf.call(null, result, input);
            } else {
              return result;
            }
          };
          G__12023 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__12023__0.call(this);
              case 1:
                return G__12023__1.call(this, result);
              case 2:
                return G__12023__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__12023.cljs$core$IFn$_invoke$arity$0 = G__12023__0;
          G__12023.cljs$core$IFn$_invoke$arity$1 = G__12023__1;
          G__12023.cljs$core$IFn$_invoke$arity$2 = G__12023__2;
          return G__12023;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(rf) {
      var a = cljs.core.array_list.call(null);
      var pa = cljs.core.volatile_BANG_.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__12025 = null;
          var G__12025__0 = function() {
            return rf.call(null);
          };
          var G__12025__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return cljs.core.unreduced.call(null, rf.call(null, result, v));
            }();
            return rf.call(null, result__$1);
          };
          var G__12025__2 = function(result, input) {
            var pval = cljs.core.deref.call(null, pa);
            var val = f.call(null, input);
            cljs.core.vreset_BANG_.call(null, pa, val);
            if (cljs.core.keyword_identical_QMARK_.call(null, pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.call(null, val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              var ret = rf.call(null, result, v);
              if (cljs.core.reduced_QMARK_.call(null, ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__12025 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__12025__0.call(this);
              case 1:
                return G__12025__1.call(this, result);
              case 2:
                return G__12025__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__12025.cljs$core$IFn$_invoke$arity$0 = G__12025__0;
          G__12025.cljs$core$IFn$_invoke$arity$1 = G__12025__1;
          G__12025.cljs$core$IFn$_invoke$arity$2 = G__12025__2;
          return G__12025;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first.call(null, s);
        var fv = f.call(null, fst);
        var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv, s, temp__4126__auto__) {
          return function(p1__12024_SHARP_) {
            return cljs.core._EQ_.call(null, fv, f.call(null, p1__12024_SHARP_));
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next.call(null, s)));
        return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__12036 = null;
      var G__12036__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__12036__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__12036__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__12036__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__12036__4 = function() {
        var G__12037__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__12037 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__12037__delegate.call(this, x, y, z, args);
        };
        G__12037.cljs$lang$maxFixedArity = 3;
        G__12037.cljs$lang$applyTo = function(arglist__12038) {
          var x = cljs.core.first(arglist__12038);
          arglist__12038 = cljs.core.next(arglist__12038);
          var y = cljs.core.first(arglist__12038);
          arglist__12038 = cljs.core.next(arglist__12038);
          var z = cljs.core.first(arglist__12038);
          var args = cljs.core.rest(arglist__12038);
          return G__12037__delegate(x, y, z, args);
        };
        G__12037.cljs$core$IFn$_invoke$arity$variadic = G__12037__delegate;
        return G__12037;
      }();
      G__12036 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12036__0.call(this);
          case 1:
            return G__12036__1.call(this, x);
          case 2:
            return G__12036__2.call(this, x, y);
          case 3:
            return G__12036__3.call(this, x, y, z);
          default:
            return G__12036__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12036.cljs$lang$maxFixedArity = 3;
      G__12036.cljs$lang$applyTo = G__12036__4.cljs$lang$applyTo;
      G__12036.cljs$core$IFn$_invoke$arity$0 = G__12036__0;
      G__12036.cljs$core$IFn$_invoke$arity$1 = G__12036__1;
      G__12036.cljs$core$IFn$_invoke$arity$2 = G__12036__2;
      G__12036.cljs$core$IFn$_invoke$arity$3 = G__12036__3;
      G__12036.cljs$core$IFn$_invoke$arity$variadic = G__12036__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12036;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__12039 = null;
      var G__12039__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__12039__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__12039__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__12039__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__12039__4 = function() {
        var G__12040__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__12040 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__12040__delegate.call(this, x, y, z, args);
        };
        G__12040.cljs$lang$maxFixedArity = 3;
        G__12040.cljs$lang$applyTo = function(arglist__12041) {
          var x = cljs.core.first(arglist__12041);
          arglist__12041 = cljs.core.next(arglist__12041);
          var y = cljs.core.first(arglist__12041);
          arglist__12041 = cljs.core.next(arglist__12041);
          var z = cljs.core.first(arglist__12041);
          var args = cljs.core.rest(arglist__12041);
          return G__12040__delegate(x, y, z, args);
        };
        G__12040.cljs$core$IFn$_invoke$arity$variadic = G__12040__delegate;
        return G__12040;
      }();
      G__12039 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12039__0.call(this);
          case 1:
            return G__12039__1.call(this, x);
          case 2:
            return G__12039__2.call(this, x, y);
          case 3:
            return G__12039__3.call(this, x, y, z);
          default:
            return G__12039__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12039.cljs$lang$maxFixedArity = 3;
      G__12039.cljs$lang$applyTo = G__12039__4.cljs$lang$applyTo;
      G__12039.cljs$core$IFn$_invoke$arity$0 = G__12039__0;
      G__12039.cljs$core$IFn$_invoke$arity$1 = G__12039__1;
      G__12039.cljs$core$IFn$_invoke$arity$2 = G__12039__2;
      G__12039.cljs$core$IFn$_invoke$arity$3 = G__12039__3;
      G__12039.cljs$core$IFn$_invoke$arity$variadic = G__12039__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12039;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__12042 = null;
      var G__12042__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__12042__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__12042__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__12042__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__12042__4 = function() {
        var G__12043__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__12043 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__12043__delegate.call(this, x, y, z, args);
        };
        G__12043.cljs$lang$maxFixedArity = 3;
        G__12043.cljs$lang$applyTo = function(arglist__12044) {
          var x = cljs.core.first(arglist__12044);
          arglist__12044 = cljs.core.next(arglist__12044);
          var y = cljs.core.first(arglist__12044);
          arglist__12044 = cljs.core.next(arglist__12044);
          var z = cljs.core.first(arglist__12044);
          var args = cljs.core.rest(arglist__12044);
          return G__12043__delegate(x, y, z, args);
        };
        G__12043.cljs$core$IFn$_invoke$arity$variadic = G__12043__delegate;
        return G__12043;
      }();
      G__12042 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12042__0.call(this);
          case 1:
            return G__12042__1.call(this, x);
          case 2:
            return G__12042__2.call(this, x, y);
          case 3:
            return G__12042__3.call(this, x, y, z);
          default:
            return G__12042__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12042.cljs$lang$maxFixedArity = 3;
      G__12042.cljs$lang$applyTo = G__12042__4.cljs$lang$applyTo;
      G__12042.cljs$core$IFn$_invoke$arity$0 = G__12042__0;
      G__12042.cljs$core$IFn$_invoke$arity$1 = G__12042__1;
      G__12042.cljs$core$IFn$_invoke$arity$2 = G__12042__2;
      G__12042.cljs$core$IFn$_invoke$arity$3 = G__12042__3;
      G__12042.cljs$core$IFn$_invoke$arity$variadic = G__12042__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12042;
    }();
  };
  var juxt__4 = function() {
    var G__12045__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__12046 = null;
          var G__12046__0 = function() {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__12026_SHARP_, p2__12027_SHARP_) {
                return cljs.core.conj.call(null, p1__12026_SHARP_, p2__12027_SHARP_.call(null));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__12046__1 = function(x) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__12028_SHARP_, p2__12029_SHARP_) {
                return cljs.core.conj.call(null, p1__12028_SHARP_, p2__12029_SHARP_.call(null, x));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__12046__2 = function(x, y) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__12030_SHARP_, p2__12031_SHARP_) {
                return cljs.core.conj.call(null, p1__12030_SHARP_, p2__12031_SHARP_.call(null, x, y));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__12046__3 = function(x, y, z) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__12032_SHARP_, p2__12033_SHARP_) {
                return cljs.core.conj.call(null, p1__12032_SHARP_, p2__12033_SHARP_.call(null, x, y, z));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__12046__4 = function() {
            var G__12047__delegate = function(x, y, z, args) {
              return cljs.core.reduce.call(null, function(fs__$1) {
                return function(p1__12034_SHARP_, p2__12035_SHARP_) {
                  return cljs.core.conj.call(null, p1__12034_SHARP_, cljs.core.apply.call(null, p2__12035_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__12047 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__12047__delegate.call(this, x, y, z, args);
            };
            G__12047.cljs$lang$maxFixedArity = 3;
            G__12047.cljs$lang$applyTo = function(arglist__12048) {
              var x = cljs.core.first(arglist__12048);
              arglist__12048 = cljs.core.next(arglist__12048);
              var y = cljs.core.first(arglist__12048);
              arglist__12048 = cljs.core.next(arglist__12048);
              var z = cljs.core.first(arglist__12048);
              var args = cljs.core.rest(arglist__12048);
              return G__12047__delegate(x, y, z, args);
            };
            G__12047.cljs$core$IFn$_invoke$arity$variadic = G__12047__delegate;
            return G__12047;
          }();
          G__12046 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__12046__0.call(this);
              case 1:
                return G__12046__1.call(this, x);
              case 2:
                return G__12046__2.call(this, x, y);
              case 3:
                return G__12046__3.call(this, x, y, z);
              default:
                return G__12046__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__12046.cljs$lang$maxFixedArity = 3;
          G__12046.cljs$lang$applyTo = G__12046__4.cljs$lang$applyTo;
          G__12046.cljs$core$IFn$_invoke$arity$0 = G__12046__0;
          G__12046.cljs$core$IFn$_invoke$arity$1 = G__12046__1;
          G__12046.cljs$core$IFn$_invoke$arity$2 = G__12046__2;
          G__12046.cljs$core$IFn$_invoke$arity$3 = G__12046__3;
          G__12046.cljs$core$IFn$_invoke$arity$variadic = G__12046__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__12046;
        }();
      }(fs__$1);
    };
    var G__12045 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__12045__delegate.call(this, f, g, h, fs);
    };
    G__12045.cljs$lang$maxFixedArity = 3;
    G__12045.cljs$lang$applyTo = function(arglist__12049) {
      var f = cljs.core.first(arglist__12049);
      arglist__12049 = cljs.core.next(arglist__12049);
      var g = cljs.core.first(arglist__12049);
      arglist__12049 = cljs.core.next(arglist__12049);
      var h = cljs.core.first(arglist__12049);
      var fs = cljs.core.rest(arglist__12049);
      return G__12045__delegate(f, g, h, fs);
    };
    G__12045.cljs$core$IFn$_invoke$arity$variadic = G__12045__delegate;
    return G__12045;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__12050 = cljs.core.next.call(null, coll);
        coll = G__12050;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__12051 = n - 1;
        var G__12052 = cljs.core.next.call(null, coll);
        n = G__12051;
        coll = G__12052;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__12054 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
    var _ = cljs.core.nth.call(null, vec__12054, 0, null);
    var flags = cljs.core.nth.call(null, vec__12054, 1, null);
    var pattern = cljs.core.nth.call(null, vec__12054, 2, null);
    return new RegExp(pattern, flags);
  }
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_12056 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_12057__$1 = cljs.core.next.call(null, coll);
      var n_12058 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_12057__$1 && (n_12058 == null || !(n_12058 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_12057__$1), writer, opts);
          var G__12059 = cljs.core.next.call(null, coll_12057__$1);
          var G__12060 = n_12058 - 1;
          coll_12057__$1 = G__12059;
          n_12058 = G__12060;
          continue;
        } else {
          if (cljs.core.seq.call(null, coll_12057__$1) && n_12058 === 0) {
            cljs.core._write.call(null, writer, sep);
            cljs.core._write.call(null, writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_12056;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__12065 = cljs.core.seq.call(null, ss);
    var chunk__12066 = null;
    var count__12067 = 0;
    var i__12068 = 0;
    while (true) {
      if (i__12068 < count__12067) {
        var s = cljs.core._nth.call(null, chunk__12066, i__12068);
        cljs.core._write.call(null, writer, s);
        var G__12069 = seq__12065;
        var G__12070 = chunk__12066;
        var G__12071 = count__12067;
        var G__12072 = i__12068 + 1;
        seq__12065 = G__12069;
        chunk__12066 = G__12070;
        count__12067 = G__12071;
        i__12068 = G__12072;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__12065);
        if (temp__4126__auto__) {
          var seq__12065__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__12065__$1)) {
            var c__4417__auto__ = cljs.core.chunk_first.call(null, seq__12065__$1);
            var G__12073 = cljs.core.chunk_rest.call(null, seq__12065__$1);
            var G__12074 = c__4417__auto__;
            var G__12075 = cljs.core.count.call(null, c__4417__auto__);
            var G__12076 = 0;
            seq__12065 = G__12073;
            chunk__12066 = G__12074;
            count__12067 = G__12075;
            i__12068 = G__12076;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__12065__$1);
            cljs.core._write.call(null, writer, s);
            var G__12077 = cljs.core.next.call(null, seq__12065__$1);
            var G__12078 = null;
            var G__12079 = 0;
            var G__12080 = 0;
            seq__12065 = G__12077;
            chunk__12066 = G__12078;
            count__12067 = G__12079;
            i__12068 = G__12080;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__12081) {
    var writer = cljs.core.first(arglist__12081);
    var ss = cljs.core.rest(arglist__12081);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj12083 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj12083;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3618__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3618__auto__)) {
          var and__3618__auto____$1 = function() {
            var G__12089 = obj;
            if (G__12089) {
              var bit__4311__auto__ = G__12089.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4311__auto__ || G__12089.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__12089.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__12089);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__12089);
            }
          }();
          if (and__3618__auto____$1) {
            return cljs.core.meta.call(null, obj);
          } else {
            return and__3618__auto____$1;
          }
        } else {
          return and__3618__auto__;
        }
      }())) {
        cljs.core._write.call(null, writer, "^");
        pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
        cljs.core._write.call(null, writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write.call(null, writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__12090 = obj;
            if (G__12090) {
              var bit__4304__auto__ = G__12090.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4304__auto__ || G__12090.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._pr_writer.call(null, obj, writer, opts);
          } else {
            if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
              return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_.call(null, obj)) {
                cljs.core._write.call(null, writer, "#js ");
                return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (goog.isString(obj)) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                    } else {
                      return cljs.core._write.call(null, writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count.call(null, ns) < len) {
                              var G__12092 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__12092;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                      } else {
                        if (cljs.core.regexp_QMARK_.call(null, obj)) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                        } else {
                          if (function() {
                            var G__12091 = obj;
                            if (G__12091) {
                              var bit__4311__auto__ = G__12091.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4311__auto__ || G__12091.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__12091.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__12091);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__12091);
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts);
                          } else {
                            return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__12097 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__12098 = null;
  var count__12099 = 0;
  var i__12100 = 0;
  while (true) {
    if (i__12100 < count__12099) {
      var obj = cljs.core._nth.call(null, chunk__12098, i__12100);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__12101 = seq__12097;
      var G__12102 = chunk__12098;
      var G__12103 = count__12099;
      var G__12104 = i__12100 + 1;
      seq__12097 = G__12101;
      chunk__12098 = G__12102;
      count__12099 = G__12103;
      i__12100 = G__12104;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__12097);
      if (temp__4126__auto__) {
        var seq__12097__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__12097__$1)) {
          var c__4417__auto__ = cljs.core.chunk_first.call(null, seq__12097__$1);
          var G__12105 = cljs.core.chunk_rest.call(null, seq__12097__$1);
          var G__12106 = c__4417__auto__;
          var G__12107 = cljs.core.count.call(null, c__4417__auto__);
          var G__12108 = 0;
          seq__12097 = G__12105;
          chunk__12098 = G__12106;
          count__12099 = G__12107;
          i__12100 = G__12108;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__12097__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__12109 = cljs.core.next.call(null, seq__12097__$1);
          var G__12110 = null;
          var G__12111 = 0;
          var G__12112 = 0;
          seq__12097 = G__12109;
          chunk__12098 = G__12110;
          count__12099 = G__12111;
          i__12100 = G__12112;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__12113) {
    var objs = cljs.core.seq(arglist__12113);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__12114) {
    var objs = cljs.core.seq(arglist__12114);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__12115) {
    var objs = cljs.core.seq(arglist__12115);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__12116) {
    var objs = cljs.core.seq(arglist__12116);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__12117) {
    var objs = cljs.core.seq(arglist__12117);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__12118) {
    var objs = cljs.core.seq(arglist__12118);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__12119) {
    var objs = cljs.core.seq(arglist__12119);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__12120) {
    var objs = cljs.core.seq(arglist__12120);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cVolatile: ");
  cljs.core.pr_writer.call(null, a__$1.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#'");
  return cljs.core.pr_writer.call(null, a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, a__$1.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__12121) {
    var iref = cljs.core.first(arglist__12121);
    arglist__12121 = cljs.core.next(arglist__12121);
    var f = cljs.core.first(arglist__12121);
    var args = cljs.core.rest(arglist__12121);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not.call(null, self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.preserving_reduced = function preserving_reduced(rf) {
  return function(p1__12122_SHARP_, p2__12123_SHARP_) {
    var ret = rf.call(null, p1__12122_SHARP_, p2__12123_SHARP_);
    if (cljs.core.reduced_QMARK_.call(null, ret)) {
      return cljs.core.reduced.call(null, ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cat(rf) {
  var rf1 = cljs.core.preserving_reduced.call(null, rf);
  return function(rf1) {
    return function() {
      var G__12124 = null;
      var G__12124__0 = function() {
        return rf.call(null);
      };
      var G__12124__1 = function(result) {
        return rf.call(null, result);
      };
      var G__12124__2 = function(result, input) {
        return cljs.core.reduce.call(null, rf1, result, input);
      };
      G__12124 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__12124__0.call(this);
          case 1:
            return G__12124__1.call(this, result);
          case 2:
            return G__12124__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12124.cljs$core$IFn$_invoke$arity$0 = G__12124__0;
      G__12124.cljs$core$IFn$_invoke$arity$1 = G__12124__1;
      G__12124.cljs$core$IFn$_invoke$arity$2 = G__12124__2;
      return G__12124;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(rf) {
      var pa = cljs.core.volatile_BANG_.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__12125 = null;
          var G__12125__0 = function() {
            return rf.call(null);
          };
          var G__12125__1 = function(result) {
            return rf.call(null, result);
          };
          var G__12125__2 = function(result, input) {
            var prior = cljs.core.deref.call(null, pa);
            cljs.core.vreset_BANG_.call(null, pa, input);
            if (cljs.core._EQ_.call(null, prior, input)) {
              return result;
            } else {
              return rf.call(null, result, input);
            }
          };
          G__12125 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__12125__0.call(this);
              case 1:
                return G__12125__1.call(this, result);
              case 2:
                return G__12125__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__12125.cljs$core$IFn$_invoke$arity$0 = G__12125__0;
          G__12125.cljs$core$IFn$_invoke$arity$1 = G__12125__1;
          G__12125.cljs$core$IFn$_invoke$arity$2 = G__12125__2;
          return G__12125;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.call(null, dedupe.call(null), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.call(null, self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq.call(null, cljs.core.sequence.call(null, self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function __GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4608__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4608__auto__);
};
cljs.core.eduction = function eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.call(null, function(p1__12127_SHARP_, p2__12126_SHARP_) {
    return proc.call(null, p2__12126_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj12129 = {};
  return obj12129;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3618__auto__ = x;
    if (and__3618__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4274__auto__ = x == null ? null : x;
    return function() {
      var or__3630__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3618__auto__ = x;
    if (and__3618__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4274__auto__ = x == null ? null : x;
    return function() {
      var or__3630__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__12131 = k;
    if (G__12131) {
      var bit__4311__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3630__auto__ = bit__4311__auto__;
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return G__12131.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__12131.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__12131);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__12131);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__12145 = x;
      if (G__12145) {
        var bit__4311__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3630__auto__ = bit__4311__auto__;
          if (cljs.core.truth_(or__3630__auto__)) {
            return or__3630__auto__;
          } else {
            return G__12145.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__12145.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__12145);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__12145);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj12147 = {};
              return obj12147;
            }();
            var seq__12148_12158 = cljs.core.seq.call(null, x);
            var chunk__12149_12159 = null;
            var count__12150_12160 = 0;
            var i__12151_12161 = 0;
            while (true) {
              if (i__12151_12161 < count__12150_12160) {
                var vec__12152_12162 = cljs.core._nth.call(null, chunk__12149_12159, i__12151_12161);
                var k_12163 = cljs.core.nth.call(null, vec__12152_12162, 0, null);
                var v_12164 = cljs.core.nth.call(null, vec__12152_12162, 1, null);
                m[cljs.core.key__GT_js.call(null, k_12163)] = clj__GT_js.call(null, v_12164);
                var G__12165 = seq__12148_12158;
                var G__12166 = chunk__12149_12159;
                var G__12167 = count__12150_12160;
                var G__12168 = i__12151_12161 + 1;
                seq__12148_12158 = G__12165;
                chunk__12149_12159 = G__12166;
                count__12150_12160 = G__12167;
                i__12151_12161 = G__12168;
                continue;
              } else {
                var temp__4126__auto___12169 = cljs.core.seq.call(null, seq__12148_12158);
                if (temp__4126__auto___12169) {
                  var seq__12148_12170__$1 = temp__4126__auto___12169;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__12148_12170__$1)) {
                    var c__4417__auto___12171 = cljs.core.chunk_first.call(null, seq__12148_12170__$1);
                    var G__12172 = cljs.core.chunk_rest.call(null, seq__12148_12170__$1);
                    var G__12173 = c__4417__auto___12171;
                    var G__12174 = cljs.core.count.call(null, c__4417__auto___12171);
                    var G__12175 = 0;
                    seq__12148_12158 = G__12172;
                    chunk__12149_12159 = G__12173;
                    count__12150_12160 = G__12174;
                    i__12151_12161 = G__12175;
                    continue;
                  } else {
                    var vec__12153_12176 = cljs.core.first.call(null, seq__12148_12170__$1);
                    var k_12177 = cljs.core.nth.call(null, vec__12153_12176, 0, null);
                    var v_12178 = cljs.core.nth.call(null, vec__12153_12176, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_12177)] = clj__GT_js.call(null, v_12178);
                    var G__12179 = cljs.core.next.call(null, seq__12148_12170__$1);
                    var G__12180 = null;
                    var G__12181 = 0;
                    var G__12182 = 0;
                    seq__12148_12158 = G__12179;
                    chunk__12149_12159 = G__12180;
                    count__12150_12160 = G__12181;
                    i__12151_12161 = G__12182;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__12154_12183 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__12155_12184 = null;
              var count__12156_12185 = 0;
              var i__12157_12186 = 0;
              while (true) {
                if (i__12157_12186 < count__12156_12185) {
                  var x_12187__$1 = cljs.core._nth.call(null, chunk__12155_12184, i__12157_12186);
                  arr.push(x_12187__$1);
                  var G__12188 = seq__12154_12183;
                  var G__12189 = chunk__12155_12184;
                  var G__12190 = count__12156_12185;
                  var G__12191 = i__12157_12186 + 1;
                  seq__12154_12183 = G__12188;
                  chunk__12155_12184 = G__12189;
                  count__12156_12185 = G__12190;
                  i__12157_12186 = G__12191;
                  continue;
                } else {
                  var temp__4126__auto___12192 = cljs.core.seq.call(null, seq__12154_12183);
                  if (temp__4126__auto___12192) {
                    var seq__12154_12193__$1 = temp__4126__auto___12192;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__12154_12193__$1)) {
                      var c__4417__auto___12194 = cljs.core.chunk_first.call(null, seq__12154_12193__$1);
                      var G__12195 = cljs.core.chunk_rest.call(null, seq__12154_12193__$1);
                      var G__12196 = c__4417__auto___12194;
                      var G__12197 = cljs.core.count.call(null, c__4417__auto___12194);
                      var G__12198 = 0;
                      seq__12154_12183 = G__12195;
                      chunk__12155_12184 = G__12196;
                      count__12156_12185 = G__12197;
                      i__12157_12186 = G__12198;
                      continue;
                    } else {
                      var x_12199__$1 = cljs.core.first.call(null, seq__12154_12193__$1);
                      arr.push(x_12199__$1);
                      var G__12200 = cljs.core.next.call(null, seq__12154_12193__$1);
                      var G__12201 = null;
                      var G__12202 = 0;
                      var G__12203 = 0;
                      seq__12154_12183 = G__12200;
                      chunk__12155_12184 = G__12201;
                      count__12156_12185 = G__12202;
                      i__12157_12186 = G__12203;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj12205 = {};
  return obj12205;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3618__auto__ = x;
    if (and__3618__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4274__auto__ = x == null ? null : x;
    return function() {
      var or__3630__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__12228__delegate = function(x, opts) {
      var map__12217 = opts;
      var map__12217__$1 = cljs.core.seq_QMARK_.call(null, map__12217) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12217) : map__12217;
      var keywordize_keys = cljs.core.get.call(null, map__12217__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
      var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
      var f = function(map__12217, map__12217__$1, keywordize_keys, keyfn) {
        return function thisfn(x__$1) {
          if (function() {
            var G__12223 = x__$1;
            if (G__12223) {
              var bit__4311__auto__ = null;
              if (cljs.core.truth_(function() {
                var or__3630__auto__ = bit__4311__auto__;
                if (cljs.core.truth_(or__3630__auto__)) {
                  return or__3630__auto__;
                } else {
                  return G__12223.cljs$core$IEncodeClojure$;
                }
              }())) {
                return true;
              } else {
                if (!G__12223.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__12223);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__12223);
            }
          }()) {
            return cljs.core._js__GT_clj.call(null, x__$1, cljs.core.apply.call(null, cljs.core.array_map, opts));
          } else {
            if (cljs.core.seq_QMARK_.call(null, x__$1)) {
              return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
            } else {
              if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (x__$1 instanceof Array) {
                  return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (cljs.core.type.call(null, x__$1) === Object) {
                    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                      var iter__4386__auto__ = function(map__12217, map__12217__$1, keywordize_keys, keyfn) {
                        return function iter__12224(s__12225) {
                          return new cljs.core.LazySeq(null, function(map__12217, map__12217__$1, keywordize_keys, keyfn) {
                            return function() {
                              var s__12225__$1 = s__12225;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq.call(null, s__12225__$1);
                                if (temp__4126__auto__) {
                                  var s__12225__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_.call(null, s__12225__$2)) {
                                    var c__4384__auto__ = cljs.core.chunk_first.call(null, s__12225__$2);
                                    var size__4385__auto__ = cljs.core.count.call(null, c__4384__auto__);
                                    var b__12227 = cljs.core.chunk_buffer.call(null, size__4385__auto__);
                                    if (function() {
                                      var i__12226 = 0;
                                      while (true) {
                                        if (i__12226 < size__4385__auto__) {
                                          var k = cljs.core._nth.call(null, c__4384__auto__, i__12226);
                                          cljs.core.chunk_append.call(null, b__12227, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                          var G__12229 = i__12226 + 1;
                                          i__12226 = G__12229;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12227), iter__12224.call(null, cljs.core.chunk_rest.call(null, s__12225__$2)));
                                    } else {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12227), null);
                                    }
                                  } else {
                                    var k = cljs.core.first.call(null, s__12225__$2);
                                    return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__12224.call(null, cljs.core.rest.call(null, s__12225__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(map__12217, map__12217__$1, keywordize_keys, keyfn), null, null);
                        };
                      }(map__12217, map__12217__$1, keywordize_keys, keyfn);
                      return iter__4386__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                    }());
                  } else {
                    return x__$1;
                  }
                }
              }
            }
          }
        };
      }(map__12217, map__12217__$1, keywordize_keys, keyfn);
      return f.call(null, x);
    };
    var G__12228 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__12228__delegate.call(this, x, opts);
    };
    G__12228.cljs$lang$maxFixedArity = 1;
    G__12228.cljs$lang$applyTo = function(arglist__12230) {
      var x = cljs.core.first(arglist__12230);
      var opts = cljs.core.rest(arglist__12230);
      return G__12228__delegate(x, opts);
    };
    G__12228.cljs$core$IFn$_invoke$arity$variadic = G__12228__delegate;
    return G__12228;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__12231__delegate = function(args) {
        var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.call(null, f, args);
          cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__12231 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__12231__delegate.call(this, args);
      };
      G__12231.cljs$lang$maxFixedArity = 0;
      G__12231.cljs$lang$applyTo = function(arglist__12232) {
        var args = cljs.core.seq(arglist__12232);
        return G__12231__delegate(args);
      };
      G__12231.cljs$core$IFn$_invoke$arity$variadic = G__12231__delegate;
      return G__12231;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__12233 = ret;
        f = G__12233;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__12234__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__12234 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__12234__delegate.call(this, f, args);
    };
    G__12234.cljs$lang$maxFixedArity = 1;
    G__12234.cljs$lang$applyTo = function(arglist__12235) {
      var f = cljs.core.first(arglist__12235);
      var args = cljs.core.rest(arglist__12235);
      return G__12234__delegate(f, args);
    };
    G__12234.cljs$core$IFn$_invoke$arity$variadic = G__12234__delegate;
    return G__12234;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc_BANG_.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__12236) {
    var f = cljs.core.first(arglist__12236);
    var args = cljs.core.rest(arglist__12236);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3630__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3630__auto__) {
      return or__3630__auto__;
    } else {
      var or__3630__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3630__auto____$1) {
        return or__3630__auto____$1;
      } else {
        var and__3618__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3618__auto__) {
          var and__3618__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3618__auto____$1) {
            var and__3618__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3618__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__12237 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__12238 = i + 1;
                  ret = G__12237;
                  i = G__12238;
                  continue;
                }
                break;
              }
            } else {
              return and__3618__auto____$2;
            }
          } else {
            return and__3618__auto____$1;
          }
        } else {
          return and__3618__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3630__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3630__auto__)) {
      return or__3630__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__12239_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__12239_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__12239_SHARP_), cljs.core.second.call(null, p1__12239_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__12240_SHARP_, p2__12241_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.derive, p1__12240_SHARP_, p2__12241_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3630__auto__ = cljs.core.truth_(function() {
    var and__3618__auto__ = xprefs;
    if (cljs.core.truth_(and__3618__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3618__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3630__auto__)) {
    return or__3630__auto__;
  } else {
    var or__3630__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__12242 = cljs.core.rest.call(null, ps);
          ps = G__12242;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3630__auto____$1)) {
      return or__3630__auto____$1;
    } else {
      var or__3630__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__12243 = cljs.core.rest.call(null, ps);
            ps = G__12243;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3630__auto____$2)) {
        return or__3630__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3630__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3630__auto__)) {
    return or__3630__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__12246) {
    var vec__12247 = p__12246;
    var k = cljs.core.nth.call(null, vec__12247, 0, null);
    var _ = cljs.core.nth.call(null, vec__12247, 1, null);
    var e = vec__12247;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3630__auto__ = be == null;
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj12249 = {};
  return obj12249;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3618__auto__ = mf;
    if (and__3618__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4274__auto__ = mf == null ? null : mf;
    return function() {
      var or__3630__auto__ = cljs.core._reset[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._reset["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3618__auto__ = mf;
    if (and__3618__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4274__auto__ = mf == null ? null : mf;
    return function() {
      var or__3630__auto__ = cljs.core._add_method[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._add_method["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3618__auto__ = mf;
    if (and__3618__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4274__auto__ = mf == null ? null : mf;
    return function() {
      var or__3630__auto__ = cljs.core._remove_method[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._remove_method["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3618__auto__ = mf;
    if (and__3618__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4274__auto__ = mf == null ? null : mf;
    return function() {
      var or__3630__auto__ = cljs.core._prefer_method[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3618__auto__ = mf;
    if (and__3618__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4274__auto__ = mf == null ? null : mf;
    return function() {
      var or__3630__auto__ = cljs.core._get_method[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._get_method["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3618__auto__ = mf;
    if (and__3618__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4274__auto__ = mf == null ? null : mf;
    return function() {
      var or__3630__auto__ = cljs.core._methods[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._methods["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3618__auto__ = mf;
    if (and__3618__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4274__auto__ = mf == null ? null : mf;
    return function() {
      var or__3630__auto__ = cljs.core._prefers[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core._prefers["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name.call(null, self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace.call(null, self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__12251 = null;
  var G__12251__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null);
  };
  var G__12251__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a);
  };
  var G__12251__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b);
  };
  var G__12251__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c);
  };
  var G__12251__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d);
  };
  var G__12251__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e);
  };
  var G__12251__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f);
  };
  var G__12251__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__12251__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__12251__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__12251__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__12251__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__12251__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__12251__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__12251__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__12251__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__12251__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__12251__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__12251__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__12251__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__12251__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__12251__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__12251 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__12251__1.call(this, self__);
      case 2:
        return G__12251__2.call(this, self__, a);
      case 3:
        return G__12251__3.call(this, self__, a, b);
      case 4:
        return G__12251__4.call(this, self__, a, b, c);
      case 5:
        return G__12251__5.call(this, self__, a, b, c, d);
      case 6:
        return G__12251__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__12251__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__12251__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__12251__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__12251__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__12251__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__12251__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__12251__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__12251__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__12251__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__12251__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__12251__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__12251__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__12251__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__12251__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__12251__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__12251__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12251.cljs$core$IFn$_invoke$arity$1 = G__12251__1;
  G__12251.cljs$core$IFn$_invoke$arity$2 = G__12251__2;
  G__12251.cljs$core$IFn$_invoke$arity$3 = G__12251__3;
  G__12251.cljs$core$IFn$_invoke$arity$4 = G__12251__4;
  G__12251.cljs$core$IFn$_invoke$arity$5 = G__12251__5;
  G__12251.cljs$core$IFn$_invoke$arity$6 = G__12251__6;
  G__12251.cljs$core$IFn$_invoke$arity$7 = G__12251__7;
  G__12251.cljs$core$IFn$_invoke$arity$8 = G__12251__8;
  G__12251.cljs$core$IFn$_invoke$arity$9 = G__12251__9;
  G__12251.cljs$core$IFn$_invoke$arity$10 = G__12251__10;
  G__12251.cljs$core$IFn$_invoke$arity$11 = G__12251__11;
  G__12251.cljs$core$IFn$_invoke$arity$12 = G__12251__12;
  G__12251.cljs$core$IFn$_invoke$arity$13 = G__12251__13;
  G__12251.cljs$core$IFn$_invoke$arity$14 = G__12251__14;
  G__12251.cljs$core$IFn$_invoke$arity$15 = G__12251__15;
  G__12251.cljs$core$IFn$_invoke$arity$16 = G__12251__16;
  G__12251.cljs$core$IFn$_invoke$arity$17 = G__12251__17;
  G__12251.cljs$core$IFn$_invoke$arity$18 = G__12251__18;
  G__12251.cljs$core$IFn$_invoke$arity$19 = G__12251__19;
  G__12251.cljs$core$IFn$_invoke$arity$20 = G__12251__20;
  G__12251.cljs$core$IFn$_invoke$arity$21 = G__12251__21;
  G__12251.cljs$core$IFn$_invoke$arity$22 = G__12251__22;
  return G__12251;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args12250) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args12250)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, 
  "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, 
  null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
goog.provide("gridlife.gamemodel");
goog.require("cljs.core");
gridlife.gamemodel.game = function() {
  var obj5118 = {};
  return obj5118;
}();
gridlife.gamemodel.game_name = function game_name(this$) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.gridlife$gamemodel$game$game_name$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.gridlife$gamemodel$game$game_name$arity$1(this$);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = gridlife.gamemodel.game_name[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = gridlife.gamemodel.game_name["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "game.game-name", this$);
        }
      }
    }().call(null, this$);
  }
};
gridlife.gamemodel.to_str = function to_str(this$) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.gridlife$gamemodel$game$to_str$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.gridlife$gamemodel$game$to_str$arity$1(this$);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = gridlife.gamemodel.to_str[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = gridlife.gamemodel.to_str["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "game.to-str", this$);
        }
      }
    }().call(null, this$);
  }
};
gridlife.gamemodel.tick = function tick(this$, gridmodel) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.gridlife$gamemodel$game$tick$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.gridlife$gamemodel$game$tick$arity$2(this$, gridmodel);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = gridlife.gamemodel.tick[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = gridlife.gamemodel.tick["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "game.tick", this$);
        }
      }
    }().call(null, this$, gridmodel);
  }
};
goog.provide("gridlife.gridmodel");
goog.require("cljs.core");
gridlife.gridmodel.GridModel = function(model, cells_wide, cells_high, __meta, __extmap, __hash) {
  this.model = model;
  this.cells_wide = cells_wide;
  this.cells_high = cells_high;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
gridlife.gridmodel.GridModel.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4233__auto__, k__4234__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4233__auto____$1, k__4234__auto__, null);
};
gridlife.gridmodel.GridModel.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4235__auto__, k5120, else__4236__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  var G__5122 = k5120 instanceof cljs.core.Keyword ? k5120.fqn : null;
  switch(G__5122) {
    case "cells-high":
      return self__.cells_high;
      break;
    case "cells-wide":
      return self__.cells_wide;
      break;
    case "model":
      return self__.model;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k5120, else__4236__auto__);
  }
};
gridlife.gridmodel.GridModel.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4247__auto__, writer__4248__auto__, opts__4249__auto__) {
  var self__ = this;
  var this__4247__auto____$1 = this;
  var pr_pair__4250__auto__ = function(this__4247__auto____$1) {
    return function(keyval__4251__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4248__auto__, cljs.core.pr_writer, "", " ", "", opts__4249__auto__, keyval__4251__auto__);
    };
  }(this__4247__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4248__auto__, pr_pair__4250__auto__, "#gridlife.gridmodel.GridModel{", ", ", "}", opts__4249__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "model", "model", 331153215), self__.model], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "cells-wide", "cells-wide", -1579921448), self__.cells_wide], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465), self__.cells_high], null)], null), self__.__extmap));
};
gridlife.gridmodel.GridModel.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4231__auto__) {
  var self__ = this;
  var this__4231__auto____$1 = this;
  return self__.__meta;
};
gridlife.gridmodel.GridModel.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4227__auto__) {
  var self__ = this;
  var this__4227__auto____$1 = this;
  return new gridlife.gridmodel.GridModel(self__.model, self__.cells_wide, self__.cells_high, self__.__meta, self__.__extmap, self__.__hash);
};
gridlife.gridmodel.GridModel.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4237__auto__) {
  var self__ = this;
  var this__4237__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
gridlife.gridmodel.GridModel.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4228__auto__) {
  var self__ = this;
  var this__4228__auto____$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_imap.call(null, this__4228__auto____$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
gridlife.gridmodel.GridModel.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4229__auto__, other__4230__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3618__auto__ = other__4230__auto__;
    if (cljs.core.truth_(and__3618__auto__)) {
      return this__4229__auto____$1.constructor === other__4230__auto__.constructor && cljs.core.equiv_map.call(null, this__4229__auto____$1, other__4230__auto__);
    } else {
      return and__3618__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
gridlife.gridmodel.GridModel.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4242__auto__, k__4243__auto__) {
  var self__ = this;
  var this__4242__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465), null, new cljs.core.Keyword(null, "cells-wide", "cells-wide", -1579921448), null, new cljs.core.Keyword(null, "model", "model", 331153215), null], null), null), k__4243__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4242__auto____$1), self__.__meta), k__4243__auto__);
  } else {
    return new gridlife.gridmodel.GridModel(self__.model, self__.cells_wide, self__.cells_high, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4243__auto__)), null);
  }
};
gridlife.gridmodel.GridModel.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4240__auto__, k__4241__auto__, G__5119) {
  var self__ = this;
  var this__4240__auto____$1 = this;
  var pred__5123 = cljs.core.keyword_identical_QMARK_;
  var expr__5124 = k__4241__auto__;
  if (cljs.core.truth_(pred__5123.call(null, new cljs.core.Keyword(null, "model", "model", 331153215), expr__5124))) {
    return new gridlife.gridmodel.GridModel(G__5119, self__.cells_wide, self__.cells_high, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__5123.call(null, new cljs.core.Keyword(null, "cells-wide", "cells-wide", -1579921448), expr__5124))) {
      return new gridlife.gridmodel.GridModel(self__.model, G__5119, self__.cells_high, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__5123.call(null, new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465), expr__5124))) {
        return new gridlife.gridmodel.GridModel(self__.model, self__.cells_wide, G__5119, self__.__meta, self__.__extmap, null);
      } else {
        return new gridlife.gridmodel.GridModel(self__.model, self__.cells_wide, self__.cells_high, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4241__auto__, G__5119), null);
      }
    }
  }
};
gridlife.gridmodel.GridModel.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4245__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "model", "model", 331153215), self__.model], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cells-wide", "cells-wide", -1579921448), self__.cells_wide], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465), self__.cells_high], null)], null), self__.__extmap));
};
gridlife.gridmodel.GridModel.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4232__auto__, G__5119) {
  var self__ = this;
  var this__4232__auto____$1 = this;
  return new gridlife.gridmodel.GridModel(self__.model, self__.cells_wide, self__.cells_high, G__5119, self__.__extmap, self__.__hash);
};
gridlife.gridmodel.GridModel.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4238__auto__, entry__4239__auto__) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4239__auto__)) {
    return cljs.core._assoc.call(null, this__4238__auto____$1, cljs.core._nth.call(null, entry__4239__auto__, 0), cljs.core._nth.call(null, entry__4239__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4238__auto____$1, entry__4239__auto__);
  }
};
gridlife.gridmodel.GridModel.cljs$lang$type = true;
gridlife.gridmodel.GridModel.cljs$lang$ctorPrSeq = function(this__4267__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "gridlife.gridmodel/GridModel");
};
gridlife.gridmodel.GridModel.cljs$lang$ctorPrWriter = function(this__4267__auto__, writer__4268__auto__) {
  return cljs.core._write.call(null, writer__4268__auto__, "gridlife.gridmodel/GridModel");
};
gridlife.gridmodel.__GT_GridModel = function __GT_GridModel(model, cells_wide, cells_high) {
  return new gridlife.gridmodel.GridModel(model, cells_wide, cells_high, null, null, null);
};
gridlife.gridmodel.map__GT_GridModel = function map__GT_GridModel(G__5121) {
  return new gridlife.gridmodel.GridModel((new cljs.core.Keyword(null, "model", "model", 331153215)).cljs$core$IFn$_invoke$arity$1(G__5121), (new cljs.core.Keyword(null, "cells-wide", "cells-wide", -1579921448)).cljs$core$IFn$_invoke$arity$1(G__5121), (new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465)).cljs$core$IFn$_invoke$arity$1(G__5121), null, cljs.core.dissoc.call(null, G__5121, new cljs.core.Keyword(null, "model", "model", 331153215), new cljs.core.Keyword(null, "cells-wide", 
  "cells-wide", -1579921448), new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465)), null);
};
gridlife.gridmodel.index__GT_headings = new cljs.core.PersistentArrayMap(null, 4, [0, new cljs.core.Keyword(null, "north", "north", 651323902), 1, new cljs.core.Keyword(null, "east", "east", 1189821678), 2, new cljs.core.Keyword(null, "south", "south", 1586796293), 3, new cljs.core.Keyword(null, "west", "west", 708776677)], null);
gridlife.gridmodel.headings__GT_index = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "north", "north", 651323902), 0, new cljs.core.Keyword(null, "east", "east", 1189821678), 1, new cljs.core.Keyword(null, "south", "south", 1586796293), 2, new cljs.core.Keyword(null, "west", "west", 708776677), 3], null);
gridlife.gridmodel.turn = function turn(heading, f) {
  var current_index = cljs.core.get.call(null, gridlife.gridmodel.headings__GT_index, heading);
  var index = f.call(null, current_index, 1);
  var new_index = cljs.core.mod.call(null, index, 4);
  var new_heading = cljs.core.get.call(null, gridlife.gridmodel.index__GT_headings, new_index);
  return new_heading;
};
gridlife.gridmodel.turn_right = function turn_right(heading) {
  return gridlife.gridmodel.turn.call(null, heading, cljs.core._PLUS_);
};
gridlife.gridmodel.turn_left = function turn_left(heading) {
  return gridlife.gridmodel.turn.call(null, heading, cljs.core._);
};
gridlife.gridmodel.random_int = function random_int(min, max) {
  return min + Math.floor(Math.random() * (1 + (max - min)));
};
gridlife.gridmodel.random = function random(size) {
  return gridlife.gridmodel.random_int.call(null, 0, size - 1);
};
gridlife.gridmodel.random_grid_coord = function random_grid_coord(xsize, ysize) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), gridlife.gridmodel.random.call(null, xsize), new cljs.core.Keyword(null, "y", "y", -1757859776), gridlife.gridmodel.random.call(null, ysize)], null);
};
gridlife.gridmodel.white_QMARK_ = function white_QMARK_(contents) {
  return cljs.core._EQ_.call(null, contents, new cljs.core.Keyword(null, "white", "white", -483998618));
};
gridlife.gridmodel.black_QMARK_ = function black_QMARK_(contents) {
  return cljs.core._EQ_.call(null, contents, new cljs.core.Keyword(null, "black", "black", 1294279647));
};
gridlife.gridmodel.toggle_color = function toggle_color(color) {
  if (gridlife.gridmodel.white_QMARK_.call(null, color)) {
    return new cljs.core.Keyword(null, "black", "black", 1294279647);
  } else {
    return new cljs.core.Keyword(null, "white", "white", -483998618);
  }
};
gridlife.gridmodel.color_QMARK_ = function color_QMARK_(contents) {
  return gridlife.gridmodel.white_QMARK_.call(null, contents) || gridlife.gridmodel.black_QMARK_.call(null, contents);
};
gridlife.gridmodel.toggle_if_color = function toggle_if_color(contents) {
  if (gridlife.gridmodel.color_QMARK_.call(null, contents)) {
    return gridlife.gridmodel.toggle_color.call(null, contents);
  } else {
    return contents;
  }
};
gridlife.gridmodel.compass = function compass(cells_wide, cells_high, location, distance) {
  var old_x = (new cljs.core.Keyword(null, "x", "x", 2099068185)).cljs$core$IFn$_invoke$arity$1(location);
  var old_y = (new cljs.core.Keyword(null, "y", "y", -1757859776)).cljs$core$IFn$_invoke$arity$1(location);
  return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "north", "north", 651323902), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), old_x, new cljs.core.Keyword(null, "y", "y", -1757859776), cljs.core.mod.call(null, old_y - distance, cells_high)], null), new cljs.core.Keyword(null, "south", "south", 1586796293), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), old_x, new cljs.core.Keyword(null, 
  "y", "y", -1757859776), cljs.core.mod.call(null, old_y + distance, cells_high)], null), new cljs.core.Keyword(null, "east", "east", 1189821678), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), cljs.core.mod.call(null, old_x + distance, cells_wide), new cljs.core.Keyword(null, "y", "y", -1757859776), old_y], null), new cljs.core.Keyword(null, "west", "west", 708776677), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 
  2099068185), cljs.core.mod.call(null, old_x - distance, cells_wide), new cljs.core.Keyword(null, "y", "y", -1757859776), old_y], null)], null);
};
gridlife.gridmodel.new_location = function new_location(cells_wide, cells_high, location, heading, distance) {
  return cljs.core.get.call(null, gridlife.gridmodel.compass.call(null, cells_wide, cells_high, location, distance), heading);
};
goog.provide("gridlife.random");
goog.require("cljs.core");
goog.require("gridlife.gamemodel");
goog.require("gridlife.gridmodel");
gridlife.random.RandomNoise = function(__meta, __extmap, __hash) {
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
gridlife.random.RandomNoise.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4233__auto__, k__4234__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4233__auto____$1, k__4234__auto__, null);
};
gridlife.random.RandomNoise.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4235__auto__, k11018, else__4236__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  var G__11020 = k11018;
  switch(G__11020) {
    default:
      return cljs.core.get.call(null, self__.__extmap, k11018, else__4236__auto__);
  }
};
gridlife.random.RandomNoise.prototype.gridlife$gamemodel$game$ = true;
gridlife.random.RandomNoise.prototype.gridlife$gamemodel$game$game_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return "Random Noise";
};
gridlife.random.RandomNoise.prototype.gridlife$gamemodel$game$to_str$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return "Random Noise";
};
gridlife.random.RandomNoise.prototype.gridlife$gamemodel$game$tick$arity$2 = function(this$, gridmodel) {
  var self__ = this;
  var this$__$1 = this;
  var model = (new cljs.core.Keyword(null, "model", "model", 331153215)).cljs$core$IFn$_invoke$arity$1(gridmodel);
  var cells_wide = (new cljs.core.Keyword(null, "cells-wide", "cells-wide", -1579921448)).cljs$core$IFn$_invoke$arity$1(gridmodel);
  var cells_high = (new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465)).cljs$core$IFn$_invoke$arity$1(gridmodel);
  var random_coord = gridlife.gridmodel.random_grid_coord.call(null, cells_wide, cells_high);
  var new_color = gridlife.gridmodel.toggle_if_color.call(null, cljs.core.get.call(null, model, random_coord));
  var new_model = cljs.core.assoc.call(null, model, random_coord, new_color);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, gridmodel, new cljs.core.Keyword(null, "model", "model", 331153215), new_model), this$__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [random_coord, new_color], null)], null)], null);
};
gridlife.random.RandomNoise.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4247__auto__, writer__4248__auto__, opts__4249__auto__) {
  var self__ = this;
  var this__4247__auto____$1 = this;
  var pr_pair__4250__auto__ = function(this__4247__auto____$1) {
    return function(keyval__4251__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4248__auto__, cljs.core.pr_writer, "", " ", "", opts__4249__auto__, keyval__4251__auto__);
    };
  }(this__4247__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4248__auto__, pr_pair__4250__auto__, "#gridlife.random.RandomNoise{", ", ", "}", opts__4249__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.EMPTY, self__.__extmap));
};
gridlife.random.RandomNoise.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4231__auto__) {
  var self__ = this;
  var this__4231__auto____$1 = this;
  return self__.__meta;
};
gridlife.random.RandomNoise.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4227__auto__) {
  var self__ = this;
  var this__4227__auto____$1 = this;
  return new gridlife.random.RandomNoise(self__.__meta, self__.__extmap, self__.__hash);
};
gridlife.random.RandomNoise.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4237__auto__) {
  var self__ = this;
  var this__4237__auto____$1 = this;
  return 0 + cljs.core.count.call(null, self__.__extmap);
};
gridlife.random.RandomNoise.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4228__auto__) {
  var self__ = this;
  var this__4228__auto____$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_imap.call(null, this__4228__auto____$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
gridlife.random.RandomNoise.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4229__auto__, other__4230__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3618__auto__ = other__4230__auto__;
    if (cljs.core.truth_(and__3618__auto__)) {
      return this__4229__auto____$1.constructor === other__4230__auto__.constructor && cljs.core.equiv_map.call(null, this__4229__auto____$1, other__4230__auto__);
    } else {
      return and__3618__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
gridlife.random.RandomNoise.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4242__auto__, k__4243__auto__) {
  var self__ = this;
  var this__4242__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.EMPTY, k__4243__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4242__auto____$1), self__.__meta), k__4243__auto__);
  } else {
    return new gridlife.random.RandomNoise(self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4243__auto__)), null);
  }
};
gridlife.random.RandomNoise.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4240__auto__, k__4241__auto__, G__11017) {
  var self__ = this;
  var this__4240__auto____$1 = this;
  var pred__11021 = cljs.core.keyword_identical_QMARK_;
  var expr__11022 = k__4241__auto__;
  return new gridlife.random.RandomNoise(self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4241__auto__, G__11017), null);
};
gridlife.random.RandomNoise.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4245__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.EMPTY, self__.__extmap));
};
gridlife.random.RandomNoise.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4232__auto__, G__11017) {
  var self__ = this;
  var this__4232__auto____$1 = this;
  return new gridlife.random.RandomNoise(G__11017, self__.__extmap, self__.__hash);
};
gridlife.random.RandomNoise.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4238__auto__, entry__4239__auto__) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4239__auto__)) {
    return cljs.core._assoc.call(null, this__4238__auto____$1, cljs.core._nth.call(null, entry__4239__auto__, 0), cljs.core._nth.call(null, entry__4239__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4238__auto____$1, entry__4239__auto__);
  }
};
gridlife.random.RandomNoise.cljs$lang$type = true;
gridlife.random.RandomNoise.cljs$lang$ctorPrSeq = function(this__4267__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "gridlife.random/RandomNoise");
};
gridlife.random.RandomNoise.cljs$lang$ctorPrWriter = function(this__4267__auto__, writer__4268__auto__) {
  return cljs.core._write.call(null, writer__4268__auto__, "gridlife.random/RandomNoise");
};
gridlife.random.__GT_RandomNoise = function __GT_RandomNoise() {
  return new gridlife.random.RandomNoise(null, null, null);
};
gridlife.random.map__GT_RandomNoise = function map__GT_RandomNoise(G__11019) {
  return new gridlife.random.RandomNoise(null, cljs.core.dissoc.call(null, G__11019), null);
};
gridlife.random.new_random_noise = function new_random_noise() {
  return new gridlife.random.RandomNoise(null, null, null);
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS") && !goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return goog.labs.userAgent.browser.getOperaVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.labs.userAgent.browser.getOperaVersion_ = function(userAgent) {
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgent);
  var lastTuple = goog.array.peek(versionTuples);
  if (lastTuple[0] == "OPR" && lastTuple[1]) {
    return lastTuple[1];
  }
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.getVersionFromTuples_ = function(versionTuples) {
  goog.asserts.assert(versionTuples.length > 2, "Couldn't extract version tuple from user agent string");
  return versionTuples[2] && versionTuples[2][1] ? versionTuples[2][1] : "";
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit");
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = tuples[1];
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && goog.string.contains(ua, "Android");
  goog.userAgent.detectedIPhone_ = !!ua && goog.string.contains(ua, "iPhone");
  goog.userAgent.detectedIPad_ = !!ua && goog.string.contains(ua, "iPad");
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  if (goog.userAgent.GECKO) {
    re = /rv\:([^\);]+)(\)|;)/;
  } else {
    if (goog.userAgent.IE) {
      re = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.WEBKIT) {
        re = /WebKit\/(\S+)/;
      }
    }
  }
  if (re) {
    var arr = re.exec(goog.userAgent.getUserAgentString());
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj15407 = {};
  return obj15407;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3618__auto__ = port;
    if (and__3618__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4274__auto__ = port == null ? null : port;
    return function() {
      var or__3630__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj15409 = {};
  return obj15409;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn1_handler) {
  if (function() {
    var and__3618__auto__ = port;
    if (and__3618__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__4274__auto__ = port == null ? null : port;
    return function() {
      var or__3630__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn1_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj15411 = {};
  return obj15411;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3618__auto__ = chan;
    if (and__3618__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4274__auto__ = chan == null ? null : chan;
    return function() {
      var or__3630__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function closed_QMARK_(chan) {
  if (function() {
    var and__3618__auto__ = chan;
    if (and__3618__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__4274__auto__ = chan == null ? null : chan;
    return function() {
      var or__3630__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj15413 = {};
  return obj15413;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3618__auto__ = h;
    if (and__3618__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4274__auto__ = h == null ? null : h;
    return function() {
      var or__3630__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3618__auto__ = h;
    if (and__3618__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4274__auto__ = h == null ? null : h;
    return function() {
      var or__3630__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj15415 = {};
  return obj15415;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3618__auto__ = b;
    if (and__3618__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4274__auto__ = b == null ? null : b;
    return function() {
      var or__3630__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3618__auto__ = b;
    if (and__3618__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4274__auto__ = b == null ? null : b;
    return function() {
      var or__3630__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function add_BANG__STAR_(b, itm) {
  if (function() {
    var and__3618__auto__ = b;
    if (and__3618__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__4274__auto__ = b == null ? null : b;
    return function() {
      var or__3630__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function() {
  var add_BANG_ = null;
  var add_BANG___1 = function(b) {
    return b;
  };
  var add_BANG___2 = function(b, itm) {
    if (!(itm == null)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "itm", "itm", -713282527, null)))))].join(""));
    }
    return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
  };
  add_BANG_ = function(b, itm) {
    switch(arguments.length) {
      case 1:
        return add_BANG___1.call(this, b);
      case 2:
        return add_BANG___2.call(this, b, itm);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_BANG_.cljs$core$IFn$_invoke$arity$1 = add_BANG___1;
  add_BANG_.cljs$core$IFn$_invoke$arity$2 = add_BANG___2;
  return add_BANG_;
}();
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj15417 = {};
  return obj15417;
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t15367 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t15367 = function(f, fn_handler, meta15368) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta15368 = meta15368;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t15367.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t15367.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t15367.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t15367.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15369) {
      var self__ = this;
      var _15369__$1 = this;
      return self__.meta15368;
    };
    cljs.core.async.impl.ioc_helpers.t15367.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15369, meta15368__$1) {
      var self__ = this;
      var _15369__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t15367(self__.f, self__.fn_handler, meta15368__$1);
    };
    cljs.core.async.impl.ioc_helpers.t15367.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t15367.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t15367";
    cljs.core.async.impl.ioc_helpers.t15367.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
      return cljs.core._write.call(null, writer__4218__auto__, "cljs.core.async.impl.ioc-helpers/t15367");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t15367 = function __GT_t15367(f__$1, fn_handler__$1, meta15368) {
      return new cljs.core.async.impl.ioc_helpers.t15367(f__$1, fn_handler__$1, meta15368);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t15367(f, fn_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 19, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 30, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 27, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core\\async\\impl\\ioc_helpers.cljs"], 
  null));
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e15371) {
    if (e15371 instanceof Object) {
      var ex = e15371;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e15371;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_15374_15376 = state;
    statearr_15374_15376[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_15374_15376[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_15375_15377 = state;
    statearr_15375_15377[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_15375_15377[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_15380_15382 = state;
    statearr_15380_15382[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_15380_15382[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_15381_15383 = state;
    statearr_15381_15383[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_15381_15383[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap, __hash) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4233__auto__, k__4234__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4233__auto____$1, k__4234__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4235__auto__, k15385, else__4236__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  var G__15387 = k15385 instanceof cljs.core.Keyword ? k15385.fqn : null;
  switch(G__15387) {
    case "prev":
      return self__.prev;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "catch-block":
      return self__.catch_block;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k15385, else__4236__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4247__auto__, writer__4248__auto__, opts__4249__auto__) {
  var self__ = this;
  var this__4247__auto____$1 = this;
  var pr_pair__4250__auto__ = function(this__4247__auto____$1) {
    return function(keyval__4251__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4248__auto__, cljs.core.pr_writer, "", " ", "", opts__4249__auto__, keyval__4251__auto__);
    };
  }(this__4247__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4248__auto__, pr_pair__4250__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4249__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4231__auto__) {
  var self__ = this;
  var this__4231__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4227__auto__) {
  var self__ = this;
  var this__4227__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4237__auto__) {
  var self__ = this;
  var this__4237__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4228__auto__) {
  var self__ = this;
  var this__4228__auto____$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_imap.call(null, this__4228__auto____$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4229__auto__, other__4230__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3618__auto__ = other__4230__auto__;
    if (cljs.core.truth_(and__3618__auto__)) {
      return this__4229__auto____$1.constructor === other__4230__auto__.constructor && cljs.core.equiv_map.call(null, this__4229__auto____$1, other__4230__auto__);
    } else {
      return and__3618__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4242__auto__, k__4243__auto__) {
  var self__ = this;
  var this__4242__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__4243__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4242__auto____$1), self__.__meta), k__4243__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4243__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4240__auto__, k__4241__auto__, G__15384) {
  var self__ = this;
  var this__4240__auto____$1 = this;
  var pred__15388 = cljs.core.keyword_identical_QMARK_;
  var expr__15389 = k__4241__auto__;
  if (cljs.core.truth_(pred__15388.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__15389))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__15384, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__15388.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__15389))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__15384, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__15388.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__15389))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__15384, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__15388.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__15389))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__15384, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__15388.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__15389))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__15384, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4241__auto__, G__15384), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4245__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4232__auto__, G__15384) {
  var self__ = this;
  var this__4232__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__15384, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4238__auto__, entry__4239__auto__) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4239__auto__)) {
    return cljs.core._assoc.call(null, this__4238__auto____$1, cljs.core._nth.call(null, entry__4239__auto__, 0), cljs.core._nth.call(null, entry__4239__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4238__auto____$1, entry__4239__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4267__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4267__auto__, writer__4268__auto__) {
  return cljs.core._write.call(null, writer__4268__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__15386) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__15386), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__15386), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__15386), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__15386), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__15386), null, cljs.core.dissoc.call(null, G__15386, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)), 
  null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_15393 = state;
  statearr_15393[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_15393;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3618__auto__ = exception;
      if (cljs.core.truth_(and__3618__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3618__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3618__auto__ = exception;
        if (cljs.core.truth_(and__3618__auto__)) {
          var and__3618__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3618__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3618__auto____$1;
          }
        } else {
          return and__3618__auto__;
        }
      }())) {
        var statearr_15399 = state;
        statearr_15399[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_15399[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_15399[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_15399[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_15399;
      } else {
        if (cljs.core.truth_(function() {
          var and__3618__auto__ = exception;
          if (cljs.core.truth_(and__3618__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3618__auto__;
          }
        }())) {
          var statearr_15400_15404 = state;
          statearr_15400_15404[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__15405 = state;
          state = G__15405;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3618__auto__ = exception;
            if (cljs.core.truth_(and__3618__auto__)) {
              var and__3618__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3618__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3618__auto____$1;
              }
            } else {
              return and__3618__auto__;
            }
          }())) {
            var statearr_15401 = state;
            statearr_15401[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_15401[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_15401;
          } else {
            if (cljs.core.truth_(function() {
              var and__3618__auto__ = cljs.core.not.call(null, exception);
              if (and__3618__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3618__auto__;
              }
            }())) {
              var statearr_15402 = state;
              statearr_15402[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_15402[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_15402;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_15403 = state;
                statearr_15403[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_15403[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_15403;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.functions");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener) {
    Channel = function() {
      var iframe = document.createElement("iframe");
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (e.origin != origin && e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined") {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      head = head.next;
      var cb = head.cb;
      head.cb = null;
      cb();
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement("script")) {
    return function(cb) {
      var script = document.createElement("script");
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__15418 = cnt + 1;
      cnt = G__15418;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4517__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4517__auto__) {
      var v_15419 = this$.pop();
      if (keep_QMARK_.call(null, v_15419)) {
        this$.unshift(v_15419);
      } else {
      }
      var G__15420 = x + 1;
      x = G__15420;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("om.dom");
goog.require("cljs.core");
om.dom.a = function() {
  var a__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var a = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return a__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__16126) {
    var opts__10568__auto__ = cljs.core.first(arglist__16126);
    var children__10569__auto__ = cljs.core.rest(arglist__16126);
    return a__delegate(opts__10568__auto__, children__10569__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var abbr = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return abbr__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__16127) {
    var opts__10568__auto__ = cljs.core.first(arglist__16127);
    var children__10569__auto__ = cljs.core.rest(arglist__16127);
    return abbr__delegate(opts__10568__auto__, children__10569__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var address = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return address__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__16128) {
    var opts__10568__auto__ = cljs.core.first(arglist__16128);
    var children__10569__auto__ = cljs.core.rest(arglist__16128);
    return address__delegate(opts__10568__auto__, children__10569__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var area = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return area__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__16129) {
    var opts__10568__auto__ = cljs.core.first(arglist__16129);
    var children__10569__auto__ = cljs.core.rest(arglist__16129);
    return area__delegate(opts__10568__auto__, children__10569__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var article = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return article__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__16130) {
    var opts__10568__auto__ = cljs.core.first(arglist__16130);
    var children__10569__auto__ = cljs.core.rest(arglist__16130);
    return article__delegate(opts__10568__auto__, children__10569__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var aside = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return aside__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__16131) {
    var opts__10568__auto__ = cljs.core.first(arglist__16131);
    var children__10569__auto__ = cljs.core.rest(arglist__16131);
    return aside__delegate(opts__10568__auto__, children__10569__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var audio = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return audio__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__16132) {
    var opts__10568__auto__ = cljs.core.first(arglist__16132);
    var children__10569__auto__ = cljs.core.rest(arglist__16132);
    return audio__delegate(opts__10568__auto__, children__10569__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var b = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return b__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__16133) {
    var opts__10568__auto__ = cljs.core.first(arglist__16133);
    var children__10569__auto__ = cljs.core.rest(arglist__16133);
    return b__delegate(opts__10568__auto__, children__10569__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var base = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return base__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__16134) {
    var opts__10568__auto__ = cljs.core.first(arglist__16134);
    var children__10569__auto__ = cljs.core.rest(arglist__16134);
    return base__delegate(opts__10568__auto__, children__10569__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var bdi = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdi__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__16135) {
    var opts__10568__auto__ = cljs.core.first(arglist__16135);
    var children__10569__auto__ = cljs.core.rest(arglist__16135);
    return bdi__delegate(opts__10568__auto__, children__10569__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var bdo = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdo__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__16136) {
    var opts__10568__auto__ = cljs.core.first(arglist__16136);
    var children__10569__auto__ = cljs.core.rest(arglist__16136);
    return bdo__delegate(opts__10568__auto__, children__10569__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var big = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return big__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__16137) {
    var opts__10568__auto__ = cljs.core.first(arglist__16137);
    var children__10569__auto__ = cljs.core.rest(arglist__16137);
    return big__delegate(opts__10568__auto__, children__10569__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var blockquote = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return blockquote__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__16138) {
    var opts__10568__auto__ = cljs.core.first(arglist__16138);
    var children__10569__auto__ = cljs.core.rest(arglist__16138);
    return blockquote__delegate(opts__10568__auto__, children__10569__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var body = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return body__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__16139) {
    var opts__10568__auto__ = cljs.core.first(arglist__16139);
    var children__10569__auto__ = cljs.core.rest(arglist__16139);
    return body__delegate(opts__10568__auto__, children__10569__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var br = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return br__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__16140) {
    var opts__10568__auto__ = cljs.core.first(arglist__16140);
    var children__10569__auto__ = cljs.core.rest(arglist__16140);
    return br__delegate(opts__10568__auto__, children__10569__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var button = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return button__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__16141) {
    var opts__10568__auto__ = cljs.core.first(arglist__16141);
    var children__10569__auto__ = cljs.core.rest(arglist__16141);
    return button__delegate(opts__10568__auto__, children__10569__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var canvas = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return canvas__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__16142) {
    var opts__10568__auto__ = cljs.core.first(arglist__16142);
    var children__10569__auto__ = cljs.core.rest(arglist__16142);
    return canvas__delegate(opts__10568__auto__, children__10569__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var caption = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return caption__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__16143) {
    var opts__10568__auto__ = cljs.core.first(arglist__16143);
    var children__10569__auto__ = cljs.core.rest(arglist__16143);
    return caption__delegate(opts__10568__auto__, children__10569__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var cite = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return cite__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__16144) {
    var opts__10568__auto__ = cljs.core.first(arglist__16144);
    var children__10569__auto__ = cljs.core.rest(arglist__16144);
    return cite__delegate(opts__10568__auto__, children__10569__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var code = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return code__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__16145) {
    var opts__10568__auto__ = cljs.core.first(arglist__16145);
    var children__10569__auto__ = cljs.core.rest(arglist__16145);
    return code__delegate(opts__10568__auto__, children__10569__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var col = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return col__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__16146) {
    var opts__10568__auto__ = cljs.core.first(arglist__16146);
    var children__10569__auto__ = cljs.core.rest(arglist__16146);
    return col__delegate(opts__10568__auto__, children__10569__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var colgroup = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return colgroup__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__16147) {
    var opts__10568__auto__ = cljs.core.first(arglist__16147);
    var children__10569__auto__ = cljs.core.rest(arglist__16147);
    return colgroup__delegate(opts__10568__auto__, children__10569__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var data = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return data__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__16148) {
    var opts__10568__auto__ = cljs.core.first(arglist__16148);
    var children__10569__auto__ = cljs.core.rest(arglist__16148);
    return data__delegate(opts__10568__auto__, children__10569__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var datalist = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return datalist__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__16149) {
    var opts__10568__auto__ = cljs.core.first(arglist__16149);
    var children__10569__auto__ = cljs.core.rest(arglist__16149);
    return datalist__delegate(opts__10568__auto__, children__10569__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var dd = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dd__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__16150) {
    var opts__10568__auto__ = cljs.core.first(arglist__16150);
    var children__10569__auto__ = cljs.core.rest(arglist__16150);
    return dd__delegate(opts__10568__auto__, children__10569__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var del = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return del__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__16151) {
    var opts__10568__auto__ = cljs.core.first(arglist__16151);
    var children__10569__auto__ = cljs.core.rest(arglist__16151);
    return del__delegate(opts__10568__auto__, children__10569__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var dfn = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dfn__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__16152) {
    var opts__10568__auto__ = cljs.core.first(arglist__16152);
    var children__10569__auto__ = cljs.core.rest(arglist__16152);
    return dfn__delegate(opts__10568__auto__, children__10569__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var div = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return div__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__16153) {
    var opts__10568__auto__ = cljs.core.first(arglist__16153);
    var children__10569__auto__ = cljs.core.rest(arglist__16153);
    return div__delegate(opts__10568__auto__, children__10569__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var dl = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dl__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__16154) {
    var opts__10568__auto__ = cljs.core.first(arglist__16154);
    var children__10569__auto__ = cljs.core.rest(arglist__16154);
    return dl__delegate(opts__10568__auto__, children__10569__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var dt = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dt__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__16155) {
    var opts__10568__auto__ = cljs.core.first(arglist__16155);
    var children__10569__auto__ = cljs.core.rest(arglist__16155);
    return dt__delegate(opts__10568__auto__, children__10569__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var em = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return em__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__16156) {
    var opts__10568__auto__ = cljs.core.first(arglist__16156);
    var children__10569__auto__ = cljs.core.rest(arglist__16156);
    return em__delegate(opts__10568__auto__, children__10569__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var embed = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return embed__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__16157) {
    var opts__10568__auto__ = cljs.core.first(arglist__16157);
    var children__10569__auto__ = cljs.core.rest(arglist__16157);
    return embed__delegate(opts__10568__auto__, children__10569__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var fieldset = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fieldset__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__16158) {
    var opts__10568__auto__ = cljs.core.first(arglist__16158);
    var children__10569__auto__ = cljs.core.rest(arglist__16158);
    return fieldset__delegate(opts__10568__auto__, children__10569__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var figcaption = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figcaption__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__16159) {
    var opts__10568__auto__ = cljs.core.first(arglist__16159);
    var children__10569__auto__ = cljs.core.rest(arglist__16159);
    return figcaption__delegate(opts__10568__auto__, children__10569__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var figure = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figure__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__16160) {
    var opts__10568__auto__ = cljs.core.first(arglist__16160);
    var children__10569__auto__ = cljs.core.rest(arglist__16160);
    return figure__delegate(opts__10568__auto__, children__10569__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var footer = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return footer__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__16161) {
    var opts__10568__auto__ = cljs.core.first(arglist__16161);
    var children__10569__auto__ = cljs.core.rest(arglist__16161);
    return footer__delegate(opts__10568__auto__, children__10569__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var form = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__16162) {
    var opts__10568__auto__ = cljs.core.first(arglist__16162);
    var children__10569__auto__ = cljs.core.rest(arglist__16162);
    return form__delegate(opts__10568__auto__, children__10569__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var h1 = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h1__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__16163) {
    var opts__10568__auto__ = cljs.core.first(arglist__16163);
    var children__10569__auto__ = cljs.core.rest(arglist__16163);
    return h1__delegate(opts__10568__auto__, children__10569__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var h2 = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h2__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__16164) {
    var opts__10568__auto__ = cljs.core.first(arglist__16164);
    var children__10569__auto__ = cljs.core.rest(arglist__16164);
    return h2__delegate(opts__10568__auto__, children__10569__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var h3 = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h3__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__16165) {
    var opts__10568__auto__ = cljs.core.first(arglist__16165);
    var children__10569__auto__ = cljs.core.rest(arglist__16165);
    return h3__delegate(opts__10568__auto__, children__10569__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var h4 = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h4__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__16166) {
    var opts__10568__auto__ = cljs.core.first(arglist__16166);
    var children__10569__auto__ = cljs.core.rest(arglist__16166);
    return h4__delegate(opts__10568__auto__, children__10569__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var h5 = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h5__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__16167) {
    var opts__10568__auto__ = cljs.core.first(arglist__16167);
    var children__10569__auto__ = cljs.core.rest(arglist__16167);
    return h5__delegate(opts__10568__auto__, children__10569__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var h6 = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h6__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__16168) {
    var opts__10568__auto__ = cljs.core.first(arglist__16168);
    var children__10569__auto__ = cljs.core.rest(arglist__16168);
    return h6__delegate(opts__10568__auto__, children__10569__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var head = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return head__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__16169) {
    var opts__10568__auto__ = cljs.core.first(arglist__16169);
    var children__10569__auto__ = cljs.core.rest(arglist__16169);
    return head__delegate(opts__10568__auto__, children__10569__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var header = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return header__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__16170) {
    var opts__10568__auto__ = cljs.core.first(arglist__16170);
    var children__10569__auto__ = cljs.core.rest(arglist__16170);
    return header__delegate(opts__10568__auto__, children__10569__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var hr = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hr__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__16171) {
    var opts__10568__auto__ = cljs.core.first(arglist__16171);
    var children__10569__auto__ = cljs.core.rest(arglist__16171);
    return hr__delegate(opts__10568__auto__, children__10569__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var html = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return html__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__16172) {
    var opts__10568__auto__ = cljs.core.first(arglist__16172);
    var children__10569__auto__ = cljs.core.rest(arglist__16172);
    return html__delegate(opts__10568__auto__, children__10569__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var i = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return i__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__16173) {
    var opts__10568__auto__ = cljs.core.first(arglist__16173);
    var children__10569__auto__ = cljs.core.rest(arglist__16173);
    return i__delegate(opts__10568__auto__, children__10569__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var iframe = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return iframe__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__16174) {
    var opts__10568__auto__ = cljs.core.first(arglist__16174);
    var children__10569__auto__ = cljs.core.rest(arglist__16174);
    return iframe__delegate(opts__10568__auto__, children__10569__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var img = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return img__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__16175) {
    var opts__10568__auto__ = cljs.core.first(arglist__16175);
    var children__10569__auto__ = cljs.core.rest(arglist__16175);
    return img__delegate(opts__10568__auto__, children__10569__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var ins = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ins__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__16176) {
    var opts__10568__auto__ = cljs.core.first(arglist__16176);
    var children__10569__auto__ = cljs.core.rest(arglist__16176);
    return ins__delegate(opts__10568__auto__, children__10569__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var kbd = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return kbd__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__16177) {
    var opts__10568__auto__ = cljs.core.first(arglist__16177);
    var children__10569__auto__ = cljs.core.rest(arglist__16177);
    return kbd__delegate(opts__10568__auto__, children__10569__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var keygen = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return keygen__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__16178) {
    var opts__10568__auto__ = cljs.core.first(arglist__16178);
    var children__10569__auto__ = cljs.core.rest(arglist__16178);
    return keygen__delegate(opts__10568__auto__, children__10569__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var label = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return label__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__16179) {
    var opts__10568__auto__ = cljs.core.first(arglist__16179);
    var children__10569__auto__ = cljs.core.rest(arglist__16179);
    return label__delegate(opts__10568__auto__, children__10569__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var legend = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return legend__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__16180) {
    var opts__10568__auto__ = cljs.core.first(arglist__16180);
    var children__10569__auto__ = cljs.core.rest(arglist__16180);
    return legend__delegate(opts__10568__auto__, children__10569__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var li = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return li__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__16181) {
    var opts__10568__auto__ = cljs.core.first(arglist__16181);
    var children__10569__auto__ = cljs.core.rest(arglist__16181);
    return li__delegate(opts__10568__auto__, children__10569__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var link = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__16182) {
    var opts__10568__auto__ = cljs.core.first(arglist__16182);
    var children__10569__auto__ = cljs.core.rest(arglist__16182);
    return link__delegate(opts__10568__auto__, children__10569__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var main = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return main__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__16183) {
    var opts__10568__auto__ = cljs.core.first(arglist__16183);
    var children__10569__auto__ = cljs.core.rest(arglist__16183);
    return main__delegate(opts__10568__auto__, children__10569__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var map = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__16184) {
    var opts__10568__auto__ = cljs.core.first(arglist__16184);
    var children__10569__auto__ = cljs.core.rest(arglist__16184);
    return map__delegate(opts__10568__auto__, children__10569__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var mark = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mark__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__16185) {
    var opts__10568__auto__ = cljs.core.first(arglist__16185);
    var children__10569__auto__ = cljs.core.rest(arglist__16185);
    return mark__delegate(opts__10568__auto__, children__10569__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.marquee = function() {
  var marquee__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.marquee.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var marquee = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return marquee__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  marquee.cljs$lang$maxFixedArity = 1;
  marquee.cljs$lang$applyTo = function(arglist__16186) {
    var opts__10568__auto__ = cljs.core.first(arglist__16186);
    var children__10569__auto__ = cljs.core.rest(arglist__16186);
    return marquee__delegate(opts__10568__auto__, children__10569__auto__);
  };
  marquee.cljs$core$IFn$_invoke$arity$variadic = marquee__delegate;
  return marquee;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var menu = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menu__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__16187) {
    var opts__10568__auto__ = cljs.core.first(arglist__16187);
    var children__10569__auto__ = cljs.core.rest(arglist__16187);
    return menu__delegate(opts__10568__auto__, children__10569__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var menuitem = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menuitem__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__16188) {
    var opts__10568__auto__ = cljs.core.first(arglist__16188);
    var children__10569__auto__ = cljs.core.rest(arglist__16188);
    return menuitem__delegate(opts__10568__auto__, children__10569__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var meta = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meta__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__16189) {
    var opts__10568__auto__ = cljs.core.first(arglist__16189);
    var children__10569__auto__ = cljs.core.rest(arglist__16189);
    return meta__delegate(opts__10568__auto__, children__10569__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var meter = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meter__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__16190) {
    var opts__10568__auto__ = cljs.core.first(arglist__16190);
    var children__10569__auto__ = cljs.core.rest(arglist__16190);
    return meter__delegate(opts__10568__auto__, children__10569__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var nav = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return nav__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__16191) {
    var opts__10568__auto__ = cljs.core.first(arglist__16191);
    var children__10569__auto__ = cljs.core.rest(arglist__16191);
    return nav__delegate(opts__10568__auto__, children__10569__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var noscript = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return noscript__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__16192) {
    var opts__10568__auto__ = cljs.core.first(arglist__16192);
    var children__10569__auto__ = cljs.core.rest(arglist__16192);
    return noscript__delegate(opts__10568__auto__, children__10569__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var object = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return object__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__16193) {
    var opts__10568__auto__ = cljs.core.first(arglist__16193);
    var children__10569__auto__ = cljs.core.rest(arglist__16193);
    return object__delegate(opts__10568__auto__, children__10569__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var ol = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ol__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__16194) {
    var opts__10568__auto__ = cljs.core.first(arglist__16194);
    var children__10569__auto__ = cljs.core.rest(arglist__16194);
    return ol__delegate(opts__10568__auto__, children__10569__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var optgroup = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return optgroup__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__16195) {
    var opts__10568__auto__ = cljs.core.first(arglist__16195);
    var children__10569__auto__ = cljs.core.rest(arglist__16195);
    return optgroup__delegate(opts__10568__auto__, children__10569__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var output = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return output__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__16196) {
    var opts__10568__auto__ = cljs.core.first(arglist__16196);
    var children__10569__auto__ = cljs.core.rest(arglist__16196);
    return output__delegate(opts__10568__auto__, children__10569__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var p = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return p__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__16197) {
    var opts__10568__auto__ = cljs.core.first(arglist__16197);
    var children__10569__auto__ = cljs.core.rest(arglist__16197);
    return p__delegate(opts__10568__auto__, children__10569__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var param = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return param__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__16198) {
    var opts__10568__auto__ = cljs.core.first(arglist__16198);
    var children__10569__auto__ = cljs.core.rest(arglist__16198);
    return param__delegate(opts__10568__auto__, children__10569__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var pre = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pre__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__16199) {
    var opts__10568__auto__ = cljs.core.first(arglist__16199);
    var children__10569__auto__ = cljs.core.rest(arglist__16199);
    return pre__delegate(opts__10568__auto__, children__10569__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var progress = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return progress__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__16200) {
    var opts__10568__auto__ = cljs.core.first(arglist__16200);
    var children__10569__auto__ = cljs.core.rest(arglist__16200);
    return progress__delegate(opts__10568__auto__, children__10569__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var q = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return q__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__16201) {
    var opts__10568__auto__ = cljs.core.first(arglist__16201);
    var children__10569__auto__ = cljs.core.rest(arglist__16201);
    return q__delegate(opts__10568__auto__, children__10569__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var rp = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rp__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__16202) {
    var opts__10568__auto__ = cljs.core.first(arglist__16202);
    var children__10569__auto__ = cljs.core.rest(arglist__16202);
    return rp__delegate(opts__10568__auto__, children__10569__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var rt = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rt__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__16203) {
    var opts__10568__auto__ = cljs.core.first(arglist__16203);
    var children__10569__auto__ = cljs.core.rest(arglist__16203);
    return rt__delegate(opts__10568__auto__, children__10569__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var ruby = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ruby__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__16204) {
    var opts__10568__auto__ = cljs.core.first(arglist__16204);
    var children__10569__auto__ = cljs.core.rest(arglist__16204);
    return ruby__delegate(opts__10568__auto__, children__10569__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var s = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return s__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__16205) {
    var opts__10568__auto__ = cljs.core.first(arglist__16205);
    var children__10569__auto__ = cljs.core.rest(arglist__16205);
    return s__delegate(opts__10568__auto__, children__10569__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var samp = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return samp__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__16206) {
    var opts__10568__auto__ = cljs.core.first(arglist__16206);
    var children__10569__auto__ = cljs.core.rest(arglist__16206);
    return samp__delegate(opts__10568__auto__, children__10569__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var script = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return script__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__16207) {
    var opts__10568__auto__ = cljs.core.first(arglist__16207);
    var children__10569__auto__ = cljs.core.rest(arglist__16207);
    return script__delegate(opts__10568__auto__, children__10569__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var section = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return section__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__16208) {
    var opts__10568__auto__ = cljs.core.first(arglist__16208);
    var children__10569__auto__ = cljs.core.rest(arglist__16208);
    return section__delegate(opts__10568__auto__, children__10569__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var select = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return select__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__16209) {
    var opts__10568__auto__ = cljs.core.first(arglist__16209);
    var children__10569__auto__ = cljs.core.rest(arglist__16209);
    return select__delegate(opts__10568__auto__, children__10569__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var small = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return small__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__16210) {
    var opts__10568__auto__ = cljs.core.first(arglist__16210);
    var children__10569__auto__ = cljs.core.rest(arglist__16210);
    return small__delegate(opts__10568__auto__, children__10569__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var source = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return source__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__16211) {
    var opts__10568__auto__ = cljs.core.first(arglist__16211);
    var children__10569__auto__ = cljs.core.rest(arglist__16211);
    return source__delegate(opts__10568__auto__, children__10569__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var span = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return span__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__16212) {
    var opts__10568__auto__ = cljs.core.first(arglist__16212);
    var children__10569__auto__ = cljs.core.rest(arglist__16212);
    return span__delegate(opts__10568__auto__, children__10569__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var strong = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return strong__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__16213) {
    var opts__10568__auto__ = cljs.core.first(arglist__16213);
    var children__10569__auto__ = cljs.core.rest(arglist__16213);
    return strong__delegate(opts__10568__auto__, children__10569__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var style = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return style__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__16214) {
    var opts__10568__auto__ = cljs.core.first(arglist__16214);
    var children__10569__auto__ = cljs.core.rest(arglist__16214);
    return style__delegate(opts__10568__auto__, children__10569__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var sub = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sub__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__16215) {
    var opts__10568__auto__ = cljs.core.first(arglist__16215);
    var children__10569__auto__ = cljs.core.rest(arglist__16215);
    return sub__delegate(opts__10568__auto__, children__10569__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var summary = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return summary__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__16216) {
    var opts__10568__auto__ = cljs.core.first(arglist__16216);
    var children__10569__auto__ = cljs.core.rest(arglist__16216);
    return summary__delegate(opts__10568__auto__, children__10569__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var sup = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sup__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__16217) {
    var opts__10568__auto__ = cljs.core.first(arglist__16217);
    var children__10569__auto__ = cljs.core.rest(arglist__16217);
    return sup__delegate(opts__10568__auto__, children__10569__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var table = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return table__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__16218) {
    var opts__10568__auto__ = cljs.core.first(arglist__16218);
    var children__10569__auto__ = cljs.core.rest(arglist__16218);
    return table__delegate(opts__10568__auto__, children__10569__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var tbody = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tbody__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__16219) {
    var opts__10568__auto__ = cljs.core.first(arglist__16219);
    var children__10569__auto__ = cljs.core.rest(arglist__16219);
    return tbody__delegate(opts__10568__auto__, children__10569__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var td = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return td__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__16220) {
    var opts__10568__auto__ = cljs.core.first(arglist__16220);
    var children__10569__auto__ = cljs.core.rest(arglist__16220);
    return td__delegate(opts__10568__auto__, children__10569__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var tfoot = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tfoot__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__16221) {
    var opts__10568__auto__ = cljs.core.first(arglist__16221);
    var children__10569__auto__ = cljs.core.rest(arglist__16221);
    return tfoot__delegate(opts__10568__auto__, children__10569__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var th = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return th__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__16222) {
    var opts__10568__auto__ = cljs.core.first(arglist__16222);
    var children__10569__auto__ = cljs.core.rest(arglist__16222);
    return th__delegate(opts__10568__auto__, children__10569__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var thead = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return thead__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__16223) {
    var opts__10568__auto__ = cljs.core.first(arglist__16223);
    var children__10569__auto__ = cljs.core.rest(arglist__16223);
    return thead__delegate(opts__10568__auto__, children__10569__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var time = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return time__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__16224) {
    var opts__10568__auto__ = cljs.core.first(arglist__16224);
    var children__10569__auto__ = cljs.core.rest(arglist__16224);
    return time__delegate(opts__10568__auto__, children__10569__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var title = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return title__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__16225) {
    var opts__10568__auto__ = cljs.core.first(arglist__16225);
    var children__10569__auto__ = cljs.core.rest(arglist__16225);
    return title__delegate(opts__10568__auto__, children__10569__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var tr = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tr__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__16226) {
    var opts__10568__auto__ = cljs.core.first(arglist__16226);
    var children__10569__auto__ = cljs.core.rest(arglist__16226);
    return tr__delegate(opts__10568__auto__, children__10569__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var track = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return track__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__16227) {
    var opts__10568__auto__ = cljs.core.first(arglist__16227);
    var children__10569__auto__ = cljs.core.rest(arglist__16227);
    return track__delegate(opts__10568__auto__, children__10569__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var u = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return u__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__16228) {
    var opts__10568__auto__ = cljs.core.first(arglist__16228);
    var children__10569__auto__ = cljs.core.rest(arglist__16228);
    return u__delegate(opts__10568__auto__, children__10569__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var ul = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ul__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__16229) {
    var opts__10568__auto__ = cljs.core.first(arglist__16229);
    var children__10569__auto__ = cljs.core.rest(arglist__16229);
    return ul__delegate(opts__10568__auto__, children__10569__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var var$ = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return var$__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__16230) {
    var opts__10568__auto__ = cljs.core.first(arglist__16230);
    var children__10569__auto__ = cljs.core.rest(arglist__16230);
    return var$__delegate(opts__10568__auto__, children__10569__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var video = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return video__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__16231) {
    var opts__10568__auto__ = cljs.core.first(arglist__16231);
    var children__10569__auto__ = cljs.core.rest(arglist__16231);
    return video__delegate(opts__10568__auto__, children__10569__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var wbr = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wbr__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__16232) {
    var opts__10568__auto__ = cljs.core.first(arglist__16232);
    var children__10569__auto__ = cljs.core.rest(arglist__16232);
    return wbr__delegate(opts__10568__auto__, children__10569__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var circle = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return circle__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__16233) {
    var opts__10568__auto__ = cljs.core.first(arglist__16233);
    var children__10569__auto__ = cljs.core.rest(arglist__16233);
    return circle__delegate(opts__10568__auto__, children__10569__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.ellipse = function() {
  var ellipse__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.ellipse.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var ellipse = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ellipse__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  ellipse.cljs$lang$maxFixedArity = 1;
  ellipse.cljs$lang$applyTo = function(arglist__16234) {
    var opts__10568__auto__ = cljs.core.first(arglist__16234);
    var children__10569__auto__ = cljs.core.rest(arglist__16234);
    return ellipse__delegate(opts__10568__auto__, children__10569__auto__);
  };
  ellipse.cljs$core$IFn$_invoke$arity$variadic = ellipse__delegate;
  return ellipse;
}();
om.dom.g = function() {
  var g__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var g = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return g__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__16235) {
    var opts__10568__auto__ = cljs.core.first(arglist__16235);
    var children__10569__auto__ = cljs.core.rest(arglist__16235);
    return g__delegate(opts__10568__auto__, children__10569__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var line = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return line__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__16236) {
    var opts__10568__auto__ = cljs.core.first(arglist__16236);
    var children__10569__auto__ = cljs.core.rest(arglist__16236);
    return line__delegate(opts__10568__auto__, children__10569__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var path = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return path__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__16237) {
    var opts__10568__auto__ = cljs.core.first(arglist__16237);
    var children__10569__auto__ = cljs.core.rest(arglist__16237);
    return path__delegate(opts__10568__auto__, children__10569__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var polyline = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polyline__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__16238) {
    var opts__10568__auto__ = cljs.core.first(arglist__16238);
    var children__10569__auto__ = cljs.core.rest(arglist__16238);
    return polyline__delegate(opts__10568__auto__, children__10569__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var rect = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rect__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__16239) {
    var opts__10568__auto__ = cljs.core.first(arglist__16239);
    var children__10569__auto__ = cljs.core.rest(arglist__16239);
    return rect__delegate(opts__10568__auto__, children__10569__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var svg = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return svg__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__16240) {
    var opts__10568__auto__ = cljs.core.first(arglist__16240);
    var children__10569__auto__ = cljs.core.rest(arglist__16240);
    return svg__delegate(opts__10568__auto__, children__10569__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var text = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return text__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__16241) {
    var opts__10568__auto__ = cljs.core.first(arglist__16241);
    var children__10569__auto__ = cljs.core.rest(arglist__16241);
    return text__delegate(opts__10568__auto__, children__10569__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.defs = function() {
  var defs__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.defs.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var defs = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return defs__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  defs.cljs$lang$maxFixedArity = 1;
  defs.cljs$lang$applyTo = function(arglist__16242) {
    var opts__10568__auto__ = cljs.core.first(arglist__16242);
    var children__10569__auto__ = cljs.core.rest(arglist__16242);
    return defs__delegate(opts__10568__auto__, children__10569__auto__);
  };
  defs.cljs$core$IFn$_invoke$arity$variadic = defs__delegate;
  return defs;
}();
om.dom.linearGradient = function() {
  var linearGradient__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.linearGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var linearGradient = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return linearGradient__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  linearGradient.cljs$lang$maxFixedArity = 1;
  linearGradient.cljs$lang$applyTo = function(arglist__16243) {
    var opts__10568__auto__ = cljs.core.first(arglist__16243);
    var children__10569__auto__ = cljs.core.rest(arglist__16243);
    return linearGradient__delegate(opts__10568__auto__, children__10569__auto__);
  };
  linearGradient.cljs$core$IFn$_invoke$arity$variadic = linearGradient__delegate;
  return linearGradient;
}();
om.dom.polygon = function() {
  var polygon__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.polygon.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var polygon = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polygon__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  polygon.cljs$lang$maxFixedArity = 1;
  polygon.cljs$lang$applyTo = function(arglist__16244) {
    var opts__10568__auto__ = cljs.core.first(arglist__16244);
    var children__10569__auto__ = cljs.core.rest(arglist__16244);
    return polygon__delegate(opts__10568__auto__, children__10569__auto__);
  };
  polygon.cljs$core$IFn$_invoke$arity$variadic = polygon__delegate;
  return polygon;
}();
om.dom.radialGradient = function() {
  var radialGradient__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.radialGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var radialGradient = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return radialGradient__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  radialGradient.cljs$lang$maxFixedArity = 1;
  radialGradient.cljs$lang$applyTo = function(arglist__16245) {
    var opts__10568__auto__ = cljs.core.first(arglist__16245);
    var children__10569__auto__ = cljs.core.rest(arglist__16245);
    return radialGradient__delegate(opts__10568__auto__, children__10569__auto__);
  };
  radialGradient.cljs$core$IFn$_invoke$arity$variadic = radialGradient__delegate;
  return radialGradient;
}();
om.dom.stop = function() {
  var stop__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.stop.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var stop = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return stop__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  stop.cljs$lang$maxFixedArity = 1;
  stop.cljs$lang$applyTo = function(arglist__16246) {
    var opts__10568__auto__ = cljs.core.first(arglist__16246);
    var children__10569__auto__ = cljs.core.rest(arglist__16246);
    return stop__delegate(opts__10568__auto__, children__10569__auto__);
  };
  stop.cljs$core$IFn$_invoke$arity$variadic = stop__delegate;
  return stop;
}();
om.dom.tspan = function() {
  var tspan__delegate = function(opts__10568__auto__, children__10569__auto__) {
    return React.DOM.tspan.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__10568__auto__, children__10569__auto__)));
  };
  var tspan = function(opts__10568__auto__, var_args) {
    var children__10569__auto__ = null;
    if (arguments.length > 1) {
      children__10569__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tspan__delegate.call(this, opts__10568__auto__, children__10569__auto__);
  };
  tspan.cljs$lang$maxFixedArity = 1;
  tspan.cljs$lang$applyTo = function(arglist__16247) {
    var opts__10568__auto__ = cljs.core.first(arglist__16247);
    var children__10569__auto__ = cljs.core.rest(arglist__16247);
    return tspan__delegate(opts__10568__auto__, children__10569__auto__);
  };
  tspan.cljs$core$IFn$_invoke$arity$variadic = tspan__delegate;
  return tspan;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createFactory(React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }}));
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input, "input");
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea, "textarea");
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option, "option");
om.dom.render = function render(component, el) {
  return React.render(component, el);
};
om.dom.render_to_str = function render_to_str(c) {
  return React.renderToString(c);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("goog.async.nextTick");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_15421 = 0;
  while (true) {
    var m_15422 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_15422 == null) {
    } else {
      m_15422.call(null);
      if (count_15421 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__15423 = count_15421 + 1;
        count_15421 = G__15423;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3618__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (cljs.core.truth_(and__3618__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3618__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t15427 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t15427 = function(val, box, meta15428) {
      this.val = val;
      this.box = box;
      this.meta15428 = meta15428;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t15427.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t15427.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15429) {
      var self__ = this;
      var _15429__$1 = this;
      return self__.meta15428;
    };
    cljs.core.async.impl.channels.t15427.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15429, meta15428__$1) {
      var self__ = this;
      var _15429__$1 = this;
      return new cljs.core.async.impl.channels.t15427(self__.val, self__.box, meta15428__$1);
    };
    cljs.core.async.impl.channels.t15427.cljs$lang$type = true;
    cljs.core.async.impl.channels.t15427.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t15427";
    cljs.core.async.impl.channels.t15427.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
      return cljs.core._write.call(null, writer__4218__auto__, "cljs.core.async.impl.channels/t15427");
    };
    cljs.core.async.impl.channels.__GT_t15427 = function __GT_t15427(val__$1, box__$1, meta15428) {
      return new cljs.core.async.impl.channels.t15427(val__$1, box__$1, meta15428);
    };
  }
  return new cljs.core.async.impl.channels.t15427(val, box, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 22, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 18, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 17, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core\\async\\impl\\channels.cljs"], 
  null));
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
  var obj15431 = {};
  return obj15431;
}();
cljs.core.async.impl.channels.abort = function abort(this$) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.cljs$core$async$impl$channels$MMC$abort$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core.async.impl.channels.abort["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__3618__auto__ = self__.buf;
      if (cljs.core.truth_(and__3618__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__3618__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_15432 = self__.takes.pop();
      if (taker_15432 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_15432)) {
          var take_cb_15433 = cljs.core.async.impl.protocols.commit.call(null, taker_15432);
          var val_15434 = cljs.core.truth_(function() {
            var and__3618__auto__ = self__.buf;
            if (cljs.core.truth_(and__3618__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__3618__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_15433, val_15434, taker_15432, this$__$1) {
            return function() {
              return take_cb_15433.call(null, val_15434);
            };
          }(take_cb_15433, val_15434, taker_15432, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
        } else {
          var putter_15435 = self__.puts.pop();
          if (putter_15435 == null) {
          } else {
            var put_handler_15436 = putter_15435.handler;
            var val_15437 = putter_15435.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_15436)) {
              var put_cb_15438 = cljs.core.async.impl.protocols.commit.call(null, put_handler_15436);
              cljs.core.async.impl.protocols.commit.call(null, handler);
              cljs.core.async.impl.dispatch.run.call(null, function(put_cb_15438, put_handler_15436, val_15437, putter_15435, _, retval, this$__$1) {
                return function() {
                  return put_cb_15438.call(null, true);
                };
              }(put_cb_15438, put_handler_15436, val_15437, putter_15435, _, retval, this$__$1));
              if (cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val_15437))) {
                cljs.core.async.impl.channels.abort.call(null, this$__$1);
              } else {
              }
            } else {
            }
            continue;
          }
        }
        break;
      }
      return retval;
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__3618__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__3618__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__3618__auto__;
            }
          }())) {
            var has_val = function() {
              var and__3618__auto__ = self__.buf;
              if (cljs.core.truth_(and__3618__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__3618__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, "takes", 
            "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
          }
          self__.takes.unbounded_unshift(handler);
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__3618__auto__ = self__.buf;
      if (cljs.core.truth_(and__3618__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__3618__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      while (true) {
        if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
          var taker_15439 = self__.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_15439)) {
            var take_cb_15440 = cljs.core.async.impl.protocols.commit.call(null, taker_15439);
            var val_15441__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
            cljs.core.async.impl.dispatch.run.call(null, function(take_cb_15440, val_15441__$1, taker_15439, done_QMARK_, closed__$1, this$__$1) {
              return function() {
                return take_cb_15440.call(null, val_15441__$1);
              };
            }(take_cb_15440, val_15441__$1, taker_15439, done_QMARK_, closed__$1, this$__$1));
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
          -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
        }
        self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_15442 = self__.puts.pop();
    if (putter_15442 == null) {
    } else {
      var put_handler_15443 = putter_15442.handler;
      var val_15444 = putter_15442.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_15443)) {
        var put_cb_15445 = cljs.core.async.impl.protocols.commit.call(null, put_handler_15443);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_15445, put_handler_15443, val_15444, putter_15442, this$__$1) {
          return function() {
            return put_cb_15445.call(null, true);
          };
        }(put_cb_15445, put_handler_15443, val_15444, putter_15442, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function handle(buf, exh, t) {
  var else$ = function() {
    var or__3630__auto__ = exh;
    if (cljs.core.truth_(or__3630__auto__)) {
      return or__3630__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function() {
  var chan = null;
  var chan__1 = function(buf) {
    return chan.call(null, buf, null);
  };
  var chan__2 = function(buf, xform) {
    return chan.call(null, buf, xform, null);
  };
  var chan__3 = function(buf, xform, exh) {
    return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
      var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
      return function(add_BANG_) {
        return function() {
          var G__15450 = null;
          var G__15450__1 = function(buf__$1) {
            try {
              return add_BANG_.call(null, buf__$1);
            } catch (e15448) {
              var t = e15448;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          var G__15450__2 = function(buf__$1, val) {
            try {
              return add_BANG_.call(null, buf__$1, val);
            } catch (e15449) {
              var t = e15449;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          G__15450 = function(buf__$1, val) {
            switch(arguments.length) {
              case 1:
                return G__15450__1.call(this, buf__$1);
              case 2:
                return G__15450__2.call(this, buf__$1, val);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15450.cljs$core$IFn$_invoke$arity$1 = G__15450__1;
          G__15450.cljs$core$IFn$_invoke$arity$2 = G__15450__2;
          return G__15450;
        }();
      }(add_BANG_);
    }());
  };
  chan = function(buf, xform, exh) {
    switch(arguments.length) {
      case 1:
        return chan__1.call(this, buf);
      case 2:
        return chan__2.call(this, buf, xform);
      case 3:
        return chan__3.call(this, buf, xform, exh);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = doc.documentElement;
    if (!body && !docEl) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element["getBoundingClientRect"]) ? element.getBoundingClientRect() : {"height":element.offsetHeight, "width":element.offsetWidth};
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.devicePixelRatio_;
goog.dom.getPixelRatio = goog.functions.cacheReturnValue(function() {
  var win = goog.dom.getWindow();
  var isFirefoxMobile = goog.userAgent.GECKO && goog.userAgent.MOBILE;
  if (goog.isDef(win.devicePixelRatio) && !isFirefoxMobile) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1;
    }
  }
  return 1;
});
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var iterator = goog.iter.toIterator(arguments);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.chainFromIterable = function(iterable) {
  return goog.iter.chain.apply(undefined, iterable);
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  return goog.iter.every(pairs, function(pair) {
    return pair[0] == pair[1];
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return!!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return[this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return[];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt((opt_end)) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return!goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  goog.uri.utils.phishingProtection_();
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.needsPhishingProtection_ = goog.userAgent.WEBKIT;
goog.uri.utils.phishingProtection_ = function() {
  if (goog.uri.utils.needsPhishingProtection_) {
    goog.uri.utils.needsPhishingProtection_ = false;
    var location = goog.global["location"];
    if (location) {
      var href = location["href"];
      if (href) {
        var domain = goog.uri.utils.getDomain(href);
        if (domain && domain != location["hostname"]) {
          goog.uri.utils.needsPhishingProtection_ = true;
          throw Error();
        }
      }
    }
  }
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var paramArr = [uri, "\x26", key];
  if (goog.isDefAndNotNull(opt_value)) {
    paramArr.push("\x3d", goog.string.urlEncode(opt_value));
  }
  return goog.uri.utils.appendQueryData_(paramArr);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":");
  }
  var domain = this.getDomain();
  if (domain) {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@");
    }
    out.push(goog.string.urlEncode(domain));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, (values));
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return(this.queryData_.get(paramName));
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : "";
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  if (goog.isString(unescapedPart)) {
    return encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("\x26");
      for (var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("\x3d");
        var name = null;
        var value = null;
        if (indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1);
        } else {
          name = pairs[i];
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "");
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ -= this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = (this.keyMap_.getValues());
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for (var j = 0;j < val.length;j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = (this.keyMap_.getValues());
    for (var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ -= this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ += values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__15603_SHARP_) {
      return max === p1__15603_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var union__1 = function(s1) {
    return s1;
  };
  var union__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
    }
  };
  var union__3 = function() {
    var G__15604__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__15604 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15604__delegate.call(this, s1, s2, sets);
    };
    G__15604.cljs$lang$maxFixedArity = 2;
    G__15604.cljs$lang$applyTo = function(arglist__15605) {
      var s1 = cljs.core.first(arglist__15605);
      arglist__15605 = cljs.core.next(arglist__15605);
      var s2 = cljs.core.first(arglist__15605);
      var sets = cljs.core.rest(arglist__15605);
      return G__15604__delegate(s1, s2, sets);
    };
    G__15604.cljs$core$IFn$_invoke$arity$variadic = G__15604__delegate;
    return G__15604;
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$core$IFn$_invoke$arity$0 = union__0;
  union.cljs$core$IFn$_invoke$arity$1 = union__1;
  union.cljs$core$IFn$_invoke$arity$2 = union__2;
  union.cljs$core$IFn$_invoke$arity$variadic = union__3.cljs$core$IFn$_invoke$arity$variadic;
  return union;
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1;
  };
  var intersection__2 = function(s1, s2) {
    while (true) {
      if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__15607 = s2;
        var G__15608 = s1;
        s1 = G__15607;
        s2 = G__15608;
        continue;
      } else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if (cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result;
            } else {
              return cljs.core.disj.call(null, result, item);
            }
          };
        }(s1, s2), s1, s1);
      }
      break;
    }
  };
  var intersection__3 = function() {
    var G__15609__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__15606_SHARP_) {
        return-cljs.core.count.call(null, p1__15606_SHARP_);
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__15609 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15609__delegate.call(this, s1, s2, sets);
    };
    G__15609.cljs$lang$maxFixedArity = 2;
    G__15609.cljs$lang$applyTo = function(arglist__15610) {
      var s1 = cljs.core.first(arglist__15610);
      arglist__15610 = cljs.core.next(arglist__15610);
      var s2 = cljs.core.first(arglist__15610);
      var sets = cljs.core.rest(arglist__15610);
      return G__15609__delegate(s1, s2, sets);
    };
    G__15609.cljs$core$IFn$_invoke$arity$variadic = G__15609__delegate;
    return G__15609;
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$core$IFn$_invoke$arity$1 = intersection__1;
  intersection.cljs$core$IFn$_invoke$arity$2 = intersection__2;
  intersection.cljs$core$IFn$_invoke$arity$variadic = intersection__3.cljs$core$IFn$_invoke$arity$variadic;
  return intersection;
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1;
  };
  var difference__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if (cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item);
        } else {
          return result;
        }
      }, s1, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
    }
  };
  var difference__3 = function() {
    var G__15611__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2));
    };
    var G__15611 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15611__delegate.call(this, s1, s2, sets);
    };
    G__15611.cljs$lang$maxFixedArity = 2;
    G__15611.cljs$lang$applyTo = function(arglist__15612) {
      var s1 = cljs.core.first(arglist__15612);
      arglist__15612 = cljs.core.next(arglist__15612);
      var s2 = cljs.core.first(arglist__15612);
      var sets = cljs.core.rest(arglist__15612);
      return G__15611__delegate(s1, s2, sets);
    };
    G__15611.cljs$core$IFn$_invoke$arity$variadic = G__15611__delegate;
    return G__15611;
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$core$IFn$_invoke$arity$1 = difference__1;
  difference.cljs$core$IFn$_invoke$arity$2 = difference__2;
  difference.cljs$core$IFn$_invoke$arity$variadic = difference__3.cljs$core$IFn$_invoke$arity$variadic;
  return difference;
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__15613_SHARP_) {
    return cljs.core.select_keys.call(null, p1__15613_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__15616) {
    var vec__15617 = p__15616;
    var old = cljs.core.nth.call(null, vec__15617, 0, null);
    var new$ = cljs.core.nth.call(null, vec__15617, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__15618_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__15618_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__15621) {
    var vec__15622 = p__15621;
    var k = cljs.core.nth.call(null, vec__15622, 0, null);
    var v = cljs.core.nth.call(null, vec__15622, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
      var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__15629 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
      var r = cljs.core.nth.call(null, vec__15629, 0, null);
      var s = cljs.core.nth.call(null, vec__15629, 1, null);
      var idx = clojure.set.index.call(null, r, ks);
      return cljs.core.reduce.call(null, function(ks, vec__15629, r, s, idx) {
        return function(ret, x) {
          var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
          if (cljs.core.truth_(found)) {
            return cljs.core.reduce.call(null, function(found, ks, vec__15629, r, s, idx) {
              return function(p1__15623_SHARP_, p2__15624_SHARP_) {
                return cljs.core.conj.call(null, p1__15623_SHARP_, cljs.core.merge.call(null, p2__15624_SHARP_, x));
              };
            }(found, ks, vec__15629, r, s, idx), ret, found);
          } else {
            return ret;
          }
        };
      }(ks, vec__15629, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__15630 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
    var r = cljs.core.nth.call(null, vec__15630, 0, null);
    var s = cljs.core.nth.call(null, vec__15630, 1, null);
    var k = cljs.core.nth.call(null, vec__15630, 2, null);
    var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
    return cljs.core.reduce.call(null, function(vec__15630, r, s, k, idx) {
      return function(ret, x) {
        var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, vec__15630, r, s, k, idx) {
            return function(p1__15625_SHARP_, p2__15626_SHARP_) {
              return cljs.core.conj.call(null, p1__15625_SHARP_, cljs.core.merge.call(null, p2__15626_SHARP_, x));
            };
          }(found, vec__15630, r, s, k, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(vec__15630, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  join.cljs$core$IFn$_invoke$arity$3 = join__3;
  return join;
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__15631_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__15631_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__15632_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__15632_SHARP_);
  }, set2);
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var G__15561 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var G__15562 = cljs.core.next.call(null, coll__$1);
        sb = G__15561;
        coll__$1 = G__15562;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  var join__2 = function(separator, coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var coll__$2 = cljs.core.next.call(null, coll__$1);
        if (coll__$2 == null) {
        } else {
          sb.append(separator);
        }
        var G__15563 = sb;
        var G__15564 = coll__$2;
        sb = G__15563;
        coll__$1 = G__15564;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__15565 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__15565;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__15569 = cljs.core._EQ_;
    var expr__15570 = limit;
    if (cljs.core.truth_(pred__15569.call(null, 1, expr__15570))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__15569.call(null, 2, expr__15570))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__15572 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__15573 = limit__$1 - 1;
            var G__15574 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__15572;
            limit__$1 = G__15573;
            parts = G__15574;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__15575 = index - 1;
        index = G__15575;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___15576 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___15576)) {
        var replacement_15577 = temp__4124__auto___15576;
        buffer.append([cljs.core.str(replacement_15577)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__15578 = index + 1;
      index = G__15578;
      continue;
    }
    break;
  }
};
goog.provide("sablono.util");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.set");
goog.require("goog.Uri");
sablono.util._STAR_base_url_STAR_ = null;
sablono.util.ToString = function() {
  var obj15584 = {};
  return obj15584;
}();
sablono.util.to_str = function to_str(x) {
  if (function() {
    var and__3618__auto__ = x;
    if (and__3618__auto__) {
      return x.sablono$util$ToString$to_str$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return x.sablono$util$ToString$to_str$arity$1(x);
  } else {
    var x__4274__auto__ = x == null ? null : x;
    return function() {
      var or__3630__auto__ = sablono.util.to_str[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = sablono.util.to_str["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ToString.to-str", x);
        }
      }
    }().call(null, x);
  }
};
sablono.util.ToURI = function() {
  var obj15586 = {};
  return obj15586;
}();
sablono.util.to_uri = function to_uri(x) {
  if (function() {
    var and__3618__auto__ = x;
    if (and__3618__auto__) {
      return x.sablono$util$ToURI$to_uri$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return x.sablono$util$ToURI$to_uri$arity$1(x);
  } else {
    var x__4274__auto__ = x == null ? null : x;
    return function() {
      var or__3630__auto__ = sablono.util.to_uri[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = sablono.util.to_uri["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ToURI.to-uri", x);
        }
      }
    }().call(null, x);
  }
};
sablono.util.as_str = function() {
  var as_str__delegate = function(xs) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, sablono.util.to_str, xs));
  };
  var as_str = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return as_str__delegate.call(this, xs);
  };
  as_str.cljs$lang$maxFixedArity = 0;
  as_str.cljs$lang$applyTo = function(arglist__15587) {
    var xs = cljs.core.seq(arglist__15587);
    return as_str__delegate(xs);
  };
  as_str.cljs$core$IFn$_invoke$arity$variadic = as_str__delegate;
  return as_str;
}();
sablono.util.camel_case = function camel_case(k) {
  if (cljs.core.truth_(k)) {
    var vec__15589 = clojure.string.split.call(null, cljs.core.name.call(null, k), /-/);
    var first_word = cljs.core.nth.call(null, vec__15589, 0, null);
    var words = cljs.core.nthnext.call(null, vec__15589, 1);
    if (cljs.core.empty_QMARK_.call(null, words) || cljs.core._EQ_.call(null, "aria", first_word) || cljs.core._EQ_.call(null, "data", first_word)) {
      return k;
    } else {
      return cljs.core.keyword.call(null, clojure.string.join.call(null, cljs.core.conj.call(null, cljs.core.map.call(null, clojure.string.capitalize, words), first_word)));
    }
  } else {
    return null;
  }
};
sablono.util.camel_case_keys = function camel_case_keys(m) {
  if (cljs.core.map_QMARK_.call(null, m)) {
    var ks = cljs.core.keys.call(null, m);
    var kmap = cljs.core.zipmap.call(null, ks, cljs.core.map.call(null, sablono.util.camel_case, ks));
    var G__15591 = clojure.set.rename_keys.call(null, m, kmap);
    var G__15591__$1 = cljs.core.map_QMARK_.call(null, (new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(m)) ? cljs.core.update_in.call(null, G__15591, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "style", "style", -496642736)], null), camel_case_keys) : G__15591;
    return G__15591__$1;
  } else {
    return m;
  }
};
sablono.util.html_to_dom_attrs = function html_to_dom_attrs(attrs) {
  return clojure.set.rename_keys.call(null, sablono.util.camel_case_keys.call(null, attrs), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.Keyword(null, "className", "className", -1983287057), new cljs.core.Keyword(null, "for", "for", -1323786319), new cljs.core.Keyword(null, "htmlFor", "htmlFor", -1050291720)], null));
};
sablono.util.compact_map = function compact_map(m) {
  return cljs.core.reduce.call(null, function(m__$1, k) {
    var v = cljs.core.get.call(null, m__$1, k);
    if (cljs.core.empty_QMARK_.call(null, v)) {
      return cljs.core.dissoc.call(null, m__$1, k);
    } else {
      return m__$1;
    }
  }, m, cljs.core.keys.call(null, m));
};
sablono.util.merge_with_class = function() {
  var merge_with_class__delegate = function(maps) {
    var classes = cljs.core.vec.call(null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.mapcat.call(null, function(p1__15592_SHARP_) {
      if (cljs.core.list_QMARK_.call(null, p1__15592_SHARP_)) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__15592_SHARP_], null);
      } else {
        if (cljs.core.sequential_QMARK_.call(null, p1__15592_SHARP_)) {
          return p1__15592_SHARP_;
        } else {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__15592_SHARP_], null);
        }
      }
    }, cljs.core.map.call(null, new cljs.core.Keyword(null, "class", "class", -2030961996), maps))));
    var maps__$1 = cljs.core.apply.call(null, cljs.core.merge, maps);
    if (cljs.core.empty_QMARK_.call(null, classes)) {
      return maps__$1;
    } else {
      return cljs.core.assoc.call(null, maps__$1, new cljs.core.Keyword(null, "class", "class", -2030961996), classes);
    }
  };
  var merge_with_class = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge_with_class__delegate.call(this, maps);
  };
  merge_with_class.cljs$lang$maxFixedArity = 0;
  merge_with_class.cljs$lang$applyTo = function(arglist__15593) {
    var maps = cljs.core.seq(arglist__15593);
    return merge_with_class__delegate(maps);
  };
  merge_with_class.cljs$core$IFn$_invoke$arity$variadic = merge_with_class__delegate;
  return merge_with_class;
}();
sablono.util.strip_css = function strip_css(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, s, /^[.#]/, "");
  } else {
    return null;
  }
};
sablono.util.match_tag = function match_tag(s) {
  var matches = cljs.core.re_seq.call(null, /[#.]?[^#.]+/, cljs.core.name.call(null, s));
  var vec__15597 = cljs.core.empty_QMARK_.call(null, matches) ? function() {
    throw cljs.core.ex_info.call(null, [cljs.core.str("Can't match CSS tag: "), cljs.core.str(s)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), s], null));
  }() : cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["#", null, ".", null], null), null)).call(null, cljs.core.ffirst.call(null, matches))) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["div", matches], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, matches), cljs.core.rest.call(null, matches)], null);
  var tag_name = cljs.core.nth.call(null, vec__15597, 0, null);
  var names = cljs.core.nth.call(null, vec__15597, 1, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_name, cljs.core.first.call(null, cljs.core.map.call(null, sablono.util.strip_css, cljs.core.filter.call(null, function(matches, vec__15597, tag_name, names) {
    return function(p1__15594_SHARP_) {
      return cljs.core._EQ_.call(null, "#", cljs.core.first.call(null, p1__15594_SHARP_));
    };
  }(matches, vec__15597, tag_name, names), names))), cljs.core.vec.call(null, cljs.core.map.call(null, sablono.util.strip_css, cljs.core.filter.call(null, function(matches, vec__15597, tag_name, names) {
    return function(p1__15595_SHARP_) {
      return cljs.core._EQ_.call(null, ".", cljs.core.first.call(null, p1__15595_SHARP_));
    };
  }(matches, vec__15597, tag_name, names), names)))], null);
};
sablono.util.normalize_element = function normalize_element(p__15598) {
  var vec__15601 = p__15598;
  var tag = cljs.core.nth.call(null, vec__15601, 0, null);
  var content = cljs.core.nthnext.call(null, vec__15601, 1);
  if (!(tag instanceof cljs.core.Keyword || tag instanceof cljs.core.Symbol || typeof tag === "string")) {
    throw cljs.core.ex_info.call(null, [cljs.core.str(tag), cljs.core.str(" is not a valid element name.")].join(""), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag, new cljs.core.Keyword(null, "content", "content", 15833224), content], null));
  } else {
  }
  var vec__15602 = sablono.util.match_tag.call(null, tag);
  var tag__$1 = cljs.core.nth.call(null, vec__15602, 0, null);
  var id = cljs.core.nth.call(null, vec__15602, 1, null);
  var class$ = cljs.core.nth.call(null, vec__15602, 2, null);
  var tag_attrs = sablono.util.compact_map.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), id, new cljs.core.Keyword(null, "class", "class", -2030961996), class$], null));
  var map_attrs = cljs.core.first.call(null, content);
  if (cljs.core.map_QMARK_.call(null, map_attrs)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, sablono.util.merge_with_class.call(null, tag_attrs, map_attrs), cljs.core.next.call(null, content)], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, tag_attrs, content], null);
  }
};
sablono.util.join_classes = function join_classes(classes) {
  return clojure.string.join.call(null, " ", cljs.core.flatten.call(null, classes));
};
sablono.util.react_symbol = function react_symbol(tag) {
  return cljs.core.symbol.call(null, "js", [cljs.core.str("React.DOM."), cljs.core.str(cljs.core.name.call(null, tag))].join(""));
};
sablono.util.react_fn = function react_fn(tag) {
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "textarea", "textarea", -650375824), null, new cljs.core.Keyword(null, "option", "option", 65132272), null, new cljs.core.Keyword(null, "input", "input", 556931961), null], null), null), cljs.core.keyword.call(null, tag))) {
    return cljs.core.symbol.call(null, "sablono.interpreter", cljs.core.name.call(null, tag));
  } else {
    return sablono.util.react_symbol.call(null, tag);
  }
};
sablono.util.attr_pattern = function attr_pattern(attr) {
  return cljs.core.re_pattern.call(null, [cljs.core.str("\\s+"), cljs.core.str(cljs.core.name.call(null, attr)), cljs.core.str("\\s*\x3d\\s*['\"][^\"']+['\"]")].join(""));
};
sablono.util.strip_attr = function strip_attr(s, attr) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, s, sablono.util.attr_pattern.call(null, attr), "");
  } else {
    return null;
  }
};
sablono.util.strip_outer = function strip_outer(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, clojure.string.replace.call(null, s, /^\s*<[^>]+>\s*/, ""), /\s*<\/[^>]+>\s*$/, "");
  } else {
    return null;
  }
};
sablono.util.ToString["_"] = true;
sablono.util.to_str["_"] = function(x) {
  return[cljs.core.str(x)].join("");
};
sablono.util.ToString["number"] = true;
sablono.util.to_str["number"] = function(x) {
  return[cljs.core.str(x)].join("");
};
sablono.util.ToString["null"] = true;
sablono.util.to_str["null"] = function(_) {
  return "";
};
goog.Uri.prototype.sablono$util$ToString$ = true;
goog.Uri.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  if (cljs.core.truth_(function() {
    var or__3630__auto__ = x__$1.hasDomain();
    if (cljs.core.truth_(or__3630__auto__)) {
      return or__3630__auto__;
    } else {
      return x__$1.getPath() == null || cljs.core.not.call(null, cljs.core.re_matches.call(null, /^\/.*/, x__$1.getPath()));
    }
  }())) {
    return[cljs.core.str(x__$1)].join("");
  } else {
    var base = [cljs.core.str(sablono.util._STAR_base_url_STAR_)].join("");
    if (cljs.core.truth_(cljs.core.re_matches.call(null, /.*\/$/, base))) {
      return[cljs.core.str(cljs.core.subs.call(null, base, 0, cljs.core.count.call(null, base) - 1)), cljs.core.str(x__$1)].join("");
    } else {
      return[cljs.core.str(base), cljs.core.str(x__$1)].join("");
    }
  }
};
cljs.core.Keyword.prototype.sablono$util$ToString$ = true;
cljs.core.Keyword.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  return cljs.core.name.call(null, x__$1);
};
sablono.util.ToURI["_"] = true;
sablono.util.to_uri["_"] = function(x) {
  return new goog.Uri([cljs.core.str(x)].join(""));
};
goog.Uri.prototype.sablono$util$ToURI$ = true;
goog.Uri.prototype.sablono$util$ToURI$to_uri$arity$1 = function(x) {
  var x__$1 = this;
  return x__$1;
};
goog.provide("sablono.interpreter");
goog.require("cljs.core");
goog.require("sablono.util");
goog.require("clojure.string");
sablono.interpreter.IInterpreter = function() {
  var obj15580 = {};
  return obj15580;
}();
sablono.interpreter.interpret = function interpret(this$) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.sablono$interpreter$IInterpreter$interpret$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.sablono$interpreter$IInterpreter$interpret$arity$1(this$);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = sablono.interpreter.interpret[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = sablono.interpreter.interpret["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInterpreter.interpret", this$);
        }
      }
    }().call(null, this$);
  }
};
sablono.interpreter.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
sablono.interpreter.input = sablono.interpreter.wrap_form_element.call(null, React.DOM.input, "input");
sablono.interpreter.option = sablono.interpreter.wrap_form_element.call(null, React.DOM.option, "option");
sablono.interpreter.textarea = sablono.interpreter.wrap_form_element.call(null, React.DOM.textarea, "textarea");
sablono.interpreter.dom_fn = function dom_fn(tag) {
  var temp__4124__auto__ = React.DOM[cljs.core.name.call(null, tag)];
  if (cljs.core.truth_(temp__4124__auto__)) {
    var dom_fn__$1 = temp__4124__auto__;
    return cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "input", "input", 556931961), sablono.interpreter.input, new cljs.core.Keyword(null, "option", "option", 65132272), sablono.interpreter.option, new cljs.core.Keyword(null, "textarea", "textarea", -650375824), sablono.interpreter.textarea], null), cljs.core.keyword.call(null, tag), dom_fn__$1);
  } else {
    throw cljs.core.ex_info.call(null, [cljs.core.str("Unsupported HTML tag: "), cljs.core.str(cljs.core.name.call(null, tag))].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag], null));
  }
};
sablono.interpreter.attributes = function attributes(attrs) {
  var attrs__$1 = cljs.core.clj__GT_js.call(null, sablono.util.html_to_dom_attrs.call(null, attrs));
  var class$ = attrs__$1.className;
  var class$__$1 = class$ instanceof Array ? clojure.string.join.call(null, " ", class$) : class$;
  if (cljs.core.truth_(clojure.string.blank_QMARK_.call(null, class$__$1))) {
    delete attrs__$1["className"];
  } else {
    attrs__$1.className = class$__$1;
  }
  return attrs__$1;
};
sablono.interpreter.element = function element(element__$1) {
  var vec__15582 = sablono.util.normalize_element.call(null, element__$1);
  var tag = cljs.core.nth.call(null, vec__15582, 0, null);
  var attrs = cljs.core.nth.call(null, vec__15582, 1, null);
  var content = cljs.core.nth.call(null, vec__15582, 2, null);
  var f = sablono.interpreter.dom_fn.call(null, tag);
  var js_attrs = sablono.interpreter.attributes.call(null, attrs);
  if (cljs.core.sequential_QMARK_.call(null, content) && cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, content))) {
    return f.call(null, js_attrs, sablono.interpreter.interpret.call(null, cljs.core.first.call(null, content)));
  } else {
    if (cljs.core.truth_(content)) {
      return cljs.core.apply.call(null, f, js_attrs, sablono.interpreter.interpret.call(null, content));
    } else {
      return f.call(null, js_attrs, null);
    }
  }
};
sablono.interpreter.interpret_seq = function interpret_seq(s) {
  return cljs.core.into_array.call(null, cljs.core.map.call(null, sablono.interpreter.interpret, s));
};
sablono.interpreter.IInterpreter["null"] = true;
sablono.interpreter.interpret["null"] = function(this$) {
  return null;
};
sablono.interpreter.IInterpreter["_"] = true;
sablono.interpreter.interpret["_"] = function(this$) {
  return this$;
};
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.element.call(null, this$__$1);
};
cljs.core.Subvec.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.Subvec.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.element.call(null, this$__$1);
};
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.List.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.List.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return ":" + (this.nextId_++).toString(36);
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__15340 = level + 1;
        level = G__15340;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_15341 = 0;
    while (true) {
      if (i_15341 < arr.length) {
        arr[i_15341] = null;
        var G__15342 = i_15341 + 1;
        i_15341 = G__15342;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__15343 = x_SINGLEQUOTE_;
                x__$1 = G__15343;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__15344 = x__$1;
        var G__15345 = k;
        var G__15346 = level - 1;
        var G__15347 = update;
        x = G__15344;
        k = G__15345;
        level = G__15346;
        update = G__15347;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_15348 = self__.level + 1;
      while (true) {
        if (i_15348 <= new_level + 1) {
          update[i_15348] = self__.header;
          var G__15349 = i_15348 + 1;
          i_15348 = G__15349;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_15350 = 0;
    while (true) {
      if (i_15350 <= self__.level) {
        var links_15351 = update[i_15350].forward;
        if (links_15351[i_15350] === x__$1) {
          links_15351[i_15350] = x__$1.forward[i_15350];
          var G__15352 = i_15350 + 1;
          i_15350 = G__15352;
          continue;
        } else {
          var G__15353 = i_15350 + 1;
          i_15350 = G__15353;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__15354 = x_SINGLEQUOTE_;
              x__$1 = G__15354;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__15355 = nx;
        var G__15356 = level__$1 - 1;
        x = G__15355;
        level__$1 = G__15356;
        continue;
      } else {
        var G__15357 = x;
        var G__15358 = level__$1 - 1;
        x = G__15357;
        level__$1 = G__15358;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__15359 = x_SINGLEQUOTE_;
              x__$1 = G__15359;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__15360 = nx;
        var G__15361 = level__$1 - 1;
        x = G__15360;
        level__$1 = G__15361;
        continue;
      } else {
        var G__15362 = x;
        var G__15363 = level__$1 - 1;
        x = G__15362;
        level__$1 = G__15363;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3630__auto__ = cljs.core.truth_(function() {
    var and__3618__auto__ = me;
    if (cljs.core.truth_(and__3618__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3618__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3630__auto__)) {
    return or__3630__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3630__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3630__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t12255 !== "undefined") {
  } else {
    cljs.core.async.t12255 = function(f, fn_handler, meta12256) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta12256 = meta12256;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t12255.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t12255.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t12255.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t12255.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12257) {
      var self__ = this;
      var _12257__$1 = this;
      return self__.meta12256;
    };
    cljs.core.async.t12255.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12257, meta12256__$1) {
      var self__ = this;
      var _12257__$1 = this;
      return new cljs.core.async.t12255(self__.f, self__.fn_handler, meta12256__$1);
    };
    cljs.core.async.t12255.cljs$lang$type = true;
    cljs.core.async.t12255.cljs$lang$ctorStr = "cljs.core.async/t12255";
    cljs.core.async.t12255.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
      return cljs.core._write.call(null, writer__4218__auto__, "cljs.core.async/t12255");
    };
    cljs.core.async.__GT_t12255 = function __GT_t12255(f__$1, fn_handler__$1, meta12256) {
      return new cljs.core.async.t12255(f__$1, fn_handler__$1, meta12256);
    };
  }
  return new cljs.core.async.t12255(f, fn_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 20, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 16, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 13, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core\\async.cljs"], 
  null));
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__12259 = buff;
  if (G__12259) {
    var bit__4311__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3630__auto__ = bit__4311__auto__;
      if (cljs.core.truth_(or__3630__auto__)) {
        return or__3630__auto__;
      } else {
        return G__12259.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__12259.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__12259);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__12259);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    return chan.call(null, buf_or_n, null, null);
  };
  var chan__2 = function(buf_or_n, xform) {
    return chan.call(null, buf_or_n, xform, null);
  };
  var chan__3 = function(buf_or_n, xform, ex_handler) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    if (cljs.core.truth_(xform)) {
      if (cljs.core.truth_(buf_or_n__$1)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("buffer must be supplied when transducer is"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "buf-or-n", "buf-or-n", -1646815050, null)))].join(""));
      }
    } else {
    }
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
  };
  chan = function(buf_or_n, xform, ex_handler) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
      case 2:
        return chan__2.call(this, buf_or_n, xform);
      case 3:
        return chan__3.call(this, buf_or_n, xform, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_12260 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_12260);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_12260, ret) {
          return function() {
            return fn1.call(null, val_12260);
          };
        }(val_12260, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var ret = temp__4124__auto__;
      return cljs.core.deref.call(null, ret);
    } else {
      return true;
    }
  };
  var put_BANG___3 = function(port, val, fn1) {
    return put_BANG_.call(null, port, val, fn1, true);
  };
  var put_BANG___4 = function(port, val, fn1, on_caller_QMARK_) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(temp__4124__auto__)) {
      var retb = temp__4124__auto__;
      var ret = cljs.core.deref.call(null, retb);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, ret);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4124__auto__) {
          return function() {
            return fn1.call(null, ret);
          };
        }(ret, retb, temp__4124__auto__));
      }
      return ret;
    } else {
      return true;
    }
  };
  put_BANG_ = function(port, val, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn1);
      case 4:
        return put_BANG___4.call(this, port, val, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4517__auto___12261 = n;
  var x_12262 = 0;
  while (true) {
    if (x_12262 < n__4517__auto___12261) {
      a[x_12262] = 0;
      var G__12263 = x_12262 + 1;
      x_12262 = G__12263;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__12264 = i + 1;
      i = G__12264;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t12268 !== "undefined") {
  } else {
    cljs.core.async.t12268 = function(flag, alt_flag, meta12269) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta12269 = meta12269;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t12268.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t12268.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t12268.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t12268.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_12270) {
        var self__ = this;
        var _12270__$1 = this;
        return self__.meta12269;
      };
    }(flag);
    cljs.core.async.t12268.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_12270, meta12269__$1) {
        var self__ = this;
        var _12270__$1 = this;
        return new cljs.core.async.t12268(self__.flag, self__.alt_flag, meta12269__$1);
      };
    }(flag);
    cljs.core.async.t12268.cljs$lang$type = true;
    cljs.core.async.t12268.cljs$lang$ctorStr = "cljs.core.async/t12268";
    cljs.core.async.t12268.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
        return cljs.core._write.call(null, writer__4218__auto__, "cljs.core.async/t12268");
      };
    }(flag);
    cljs.core.async.__GT_t12268 = function(flag) {
      return function __GT_t12268(flag__$1, alt_flag__$1, meta12269) {
        return new cljs.core.async.t12268(flag__$1, alt_flag__$1, meta12269);
      };
    }(flag);
  }
  return new cljs.core.async.t12268(flag, alt_flag, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 15, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 146, new cljs.core.Keyword(null, "column", "column", 2078222095), 5, new cljs.core.Keyword(null, "line", "line", 212345235), 141, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core\\async.cljs"], 
  null));
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t12274 !== "undefined") {
  } else {
    cljs.core.async.t12274 = function(cb, flag, alt_handler, meta12275) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta12275 = meta12275;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t12274.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t12274.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t12274.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t12274.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12276) {
      var self__ = this;
      var _12276__$1 = this;
      return self__.meta12275;
    };
    cljs.core.async.t12274.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12276, meta12275__$1) {
      var self__ = this;
      var _12276__$1 = this;
      return new cljs.core.async.t12274(self__.cb, self__.flag, self__.alt_handler, meta12275__$1);
    };
    cljs.core.async.t12274.cljs$lang$type = true;
    cljs.core.async.t12274.cljs$lang$ctorStr = "cljs.core.async/t12274";
    cljs.core.async.t12274.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
      return cljs.core._write.call(null, writer__4218__auto__, "cljs.core.async/t12274");
    };
    cljs.core.async.__GT_t12274 = function __GT_t12274(cb__$1, flag__$1, alt_handler__$1, meta12275) {
      return new cljs.core.async.t12274(cb__$1, flag__$1, alt_handler__$1, meta12275);
    };
  }
  return new cljs.core.async.t12274(cb, flag, alt_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 11, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 154, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 149, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core\\async.cljs"], 
  null));
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__12277_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__12277_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__12278_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__12278_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3630__auto__ = wport;
            if (cljs.core.truth_(or__3630__auto__)) {
              return or__3630__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__12279 = i + 1;
          i = G__12279;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3630__auto__ = ret;
  if (cljs.core.truth_(or__3630__auto__)) {
    return or__3630__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4126__auto__ = function() {
        var and__3618__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3618__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3618__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__12280) {
    var map__12282 = p__12280;
    var map__12282__$1 = cljs.core.seq_QMARK_.call(null, map__12282) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12282) : map__12282;
    var opts = map__12282__$1;
    throw new Error("alts! used not in (go ...) block");
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__12280 = null;
    if (arguments.length > 1) {
      p__12280 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__12280);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__12283) {
    var ports = cljs.core.first(arglist__12283);
    var p__12280 = cljs.core.rest(arglist__12283);
    return alts_BANG___delegate(ports, p__12280);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__6971__auto___12378 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6971__auto___12378) {
      return function() {
        var f__6972__auto__ = function() {
          var switch__6956__auto__ = function(c__6971__auto___12378) {
            return function(state_12354) {
              var state_val_12355 = state_12354[1];
              if (state_val_12355 === 7) {
                var inst_12350 = state_12354[2];
                var state_12354__$1 = state_12354;
                var statearr_12356_12379 = state_12354__$1;
                statearr_12356_12379[2] = inst_12350;
                statearr_12356_12379[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12355 === 1) {
                  var state_12354__$1 = state_12354;
                  var statearr_12357_12380 = state_12354__$1;
                  statearr_12357_12380[2] = null;
                  statearr_12357_12380[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12355 === 4) {
                    var inst_12333 = state_12354[7];
                    var inst_12333__$1 = state_12354[2];
                    var inst_12334 = inst_12333__$1 == null;
                    var state_12354__$1 = function() {
                      var statearr_12358 = state_12354;
                      statearr_12358[7] = inst_12333__$1;
                      return statearr_12358;
                    }();
                    if (cljs.core.truth_(inst_12334)) {
                      var statearr_12359_12381 = state_12354__$1;
                      statearr_12359_12381[1] = 5;
                    } else {
                      var statearr_12360_12382 = state_12354__$1;
                      statearr_12360_12382[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12355 === 13) {
                      var state_12354__$1 = state_12354;
                      var statearr_12361_12383 = state_12354__$1;
                      statearr_12361_12383[2] = null;
                      statearr_12361_12383[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12355 === 6) {
                        var inst_12333 = state_12354[7];
                        var state_12354__$1 = state_12354;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12354__$1, 11, to, inst_12333);
                      } else {
                        if (state_val_12355 === 3) {
                          var inst_12352 = state_12354[2];
                          var state_12354__$1 = state_12354;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12354__$1, inst_12352);
                        } else {
                          if (state_val_12355 === 12) {
                            var state_12354__$1 = state_12354;
                            var statearr_12362_12384 = state_12354__$1;
                            statearr_12362_12384[2] = null;
                            statearr_12362_12384[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12355 === 2) {
                              var state_12354__$1 = state_12354;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12354__$1, 4, from);
                            } else {
                              if (state_val_12355 === 11) {
                                var inst_12343 = state_12354[2];
                                var state_12354__$1 = state_12354;
                                if (cljs.core.truth_(inst_12343)) {
                                  var statearr_12363_12385 = state_12354__$1;
                                  statearr_12363_12385[1] = 12;
                                } else {
                                  var statearr_12364_12386 = state_12354__$1;
                                  statearr_12364_12386[1] = 13;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_12355 === 9) {
                                  var state_12354__$1 = state_12354;
                                  var statearr_12365_12387 = state_12354__$1;
                                  statearr_12365_12387[2] = null;
                                  statearr_12365_12387[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_12355 === 5) {
                                    var state_12354__$1 = state_12354;
                                    if (cljs.core.truth_(close_QMARK_)) {
                                      var statearr_12366_12388 = state_12354__$1;
                                      statearr_12366_12388[1] = 8;
                                    } else {
                                      var statearr_12367_12389 = state_12354__$1;
                                      statearr_12367_12389[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_12355 === 14) {
                                      var inst_12348 = state_12354[2];
                                      var state_12354__$1 = state_12354;
                                      var statearr_12368_12390 = state_12354__$1;
                                      statearr_12368_12390[2] = inst_12348;
                                      statearr_12368_12390[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_12355 === 10) {
                                        var inst_12340 = state_12354[2];
                                        var state_12354__$1 = state_12354;
                                        var statearr_12369_12391 = state_12354__$1;
                                        statearr_12369_12391[2] = inst_12340;
                                        statearr_12369_12391[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_12355 === 8) {
                                          var inst_12337 = cljs.core.async.close_BANG_.call(null, to);
                                          var state_12354__$1 = state_12354;
                                          var statearr_12370_12392 = state_12354__$1;
                                          statearr_12370_12392[2] = inst_12337;
                                          statearr_12370_12392[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6971__auto___12378);
          return function(switch__6956__auto__, c__6971__auto___12378) {
            return function() {
              var state_machine__6957__auto__ = null;
              var state_machine__6957__auto____0 = function() {
                var statearr_12374 = [null, null, null, null, null, null, null, null];
                statearr_12374[0] = state_machine__6957__auto__;
                statearr_12374[1] = 1;
                return statearr_12374;
              };
              var state_machine__6957__auto____1 = function(state_12354) {
                while (true) {
                  var ret_value__6958__auto__ = function() {
                    try {
                      while (true) {
                        var result__6959__auto__ = switch__6956__auto__.call(null, state_12354);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6959__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6959__auto__;
                        }
                        break;
                      }
                    } catch (e12375) {
                      if (e12375 instanceof Object) {
                        var ex__6960__auto__ = e12375;
                        var statearr_12376_12393 = state_12354;
                        statearr_12376_12393[5] = ex__6960__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12354);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e12375;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6958__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__12394 = state_12354;
                    state_12354 = G__12394;
                    continue;
                  } else {
                    return ret_value__6958__auto__;
                  }
                  break;
                }
              };
              state_machine__6957__auto__ = function(state_12354) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6957__auto____0.call(this);
                  case 1:
                    return state_machine__6957__auto____1.call(this, state_12354);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6957__auto____0;
              state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6957__auto____1;
              return state_machine__6957__auto__;
            }();
          }(switch__6956__auto__, c__6971__auto___12378);
        }();
        var state__6973__auto__ = function() {
          var statearr_12377 = f__6972__auto__.call(null);
          statearr_12377[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6971__auto___12378;
          return statearr_12377;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6973__auto__);
      };
    }(c__6971__auto___12378));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.pipeline_STAR_ = function pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null))))].join(""));
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__12578) {
      var vec__12579 = p__12578;
      var v = cljs.core.nth.call(null, vec__12579, 0, null);
      var p = cljs.core.nth.call(null, vec__12579, 1, null);
      var job = vec__12579;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__6971__auto___12761 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__6971__auto___12761, res, vec__12579, v, p, job, jobs, results) {
          return function() {
            var f__6972__auto__ = function() {
              var switch__6956__auto__ = function(c__6971__auto___12761, res, vec__12579, v, p, job, jobs, results) {
                return function(state_12584) {
                  var state_val_12585 = state_12584[1];
                  if (state_val_12585 === 2) {
                    var inst_12581 = state_12584[2];
                    var inst_12582 = cljs.core.async.close_BANG_.call(null, res);
                    var state_12584__$1 = function() {
                      var statearr_12586 = state_12584;
                      statearr_12586[7] = inst_12581;
                      return statearr_12586;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12584__$1, inst_12582);
                  } else {
                    if (state_val_12585 === 1) {
                      var state_12584__$1 = state_12584;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12584__$1, 2, res, v);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__6971__auto___12761, res, vec__12579, v, p, job, jobs, results);
              return function(switch__6956__auto__, c__6971__auto___12761, res, vec__12579, v, p, job, jobs, results) {
                return function() {
                  var state_machine__6957__auto__ = null;
                  var state_machine__6957__auto____0 = function() {
                    var statearr_12590 = [null, null, null, null, null, null, null, null];
                    statearr_12590[0] = state_machine__6957__auto__;
                    statearr_12590[1] = 1;
                    return statearr_12590;
                  };
                  var state_machine__6957__auto____1 = function(state_12584) {
                    while (true) {
                      var ret_value__6958__auto__ = function() {
                        try {
                          while (true) {
                            var result__6959__auto__ = switch__6956__auto__.call(null, state_12584);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__6959__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__6959__auto__;
                            }
                            break;
                          }
                        } catch (e12591) {
                          if (e12591 instanceof Object) {
                            var ex__6960__auto__ = e12591;
                            var statearr_12592_12762 = state_12584;
                            statearr_12592_12762[5] = ex__6960__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12584);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e12591;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6958__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__12763 = state_12584;
                        state_12584 = G__12763;
                        continue;
                      } else {
                        return ret_value__6958__auto__;
                      }
                      break;
                    }
                  };
                  state_machine__6957__auto__ = function(state_12584) {
                    switch(arguments.length) {
                      case 0:
                        return state_machine__6957__auto____0.call(this);
                      case 1:
                        return state_machine__6957__auto____1.call(this, state_12584);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6957__auto____0;
                  state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6957__auto____1;
                  return state_machine__6957__auto__;
                }();
              }(switch__6956__auto__, c__6971__auto___12761, res, vec__12579, v, p, job, jobs, results);
            }();
            var state__6973__auto__ = function() {
              var statearr_12593 = f__6972__auto__.call(null);
              statearr_12593[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6971__auto___12761;
              return statearr_12593;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6973__auto__);
          };
        }(c__6971__auto___12761, res, vec__12579, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__12594) {
      var vec__12595 = p__12594;
      var v = cljs.core.nth.call(null, vec__12595, 0, null);
      var p = cljs.core.nth.call(null, vec__12595, 1, null);
      var job = vec__12595;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__4517__auto___12764 = n;
  var __12765 = 0;
  while (true) {
    if (__12765 < n__4517__auto___12764) {
      var G__12596_12766 = type instanceof cljs.core.Keyword ? type.fqn : null;
      switch(G__12596_12766) {
        case "async":
          var c__6971__auto___12768 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__12765, c__6971__auto___12768, G__12596_12766, n__4517__auto___12764, jobs, results, process, async) {
            return function() {
              var f__6972__auto__ = function() {
                var switch__6956__auto__ = function(__12765, c__6971__auto___12768, G__12596_12766, n__4517__auto___12764, jobs, results, process, async) {
                  return function(state_12609) {
                    var state_val_12610 = state_12609[1];
                    if (state_val_12610 === 7) {
                      var inst_12605 = state_12609[2];
                      var state_12609__$1 = state_12609;
                      var statearr_12611_12769 = state_12609__$1;
                      statearr_12611_12769[2] = inst_12605;
                      statearr_12611_12769[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12610 === 6) {
                        var state_12609__$1 = state_12609;
                        var statearr_12612_12770 = state_12609__$1;
                        statearr_12612_12770[2] = null;
                        statearr_12612_12770[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12610 === 5) {
                          var state_12609__$1 = state_12609;
                          var statearr_12613_12771 = state_12609__$1;
                          statearr_12613_12771[2] = null;
                          statearr_12613_12771[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_12610 === 4) {
                            var inst_12599 = state_12609[2];
                            var inst_12600 = async.call(null, inst_12599);
                            var state_12609__$1 = state_12609;
                            if (cljs.core.truth_(inst_12600)) {
                              var statearr_12614_12772 = state_12609__$1;
                              statearr_12614_12772[1] = 5;
                            } else {
                              var statearr_12615_12773 = state_12609__$1;
                              statearr_12615_12773[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12610 === 3) {
                              var inst_12607 = state_12609[2];
                              var state_12609__$1 = state_12609;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12609__$1, inst_12607);
                            } else {
                              if (state_val_12610 === 2) {
                                var state_12609__$1 = state_12609;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12609__$1, 4, jobs);
                              } else {
                                if (state_val_12610 === 1) {
                                  var state_12609__$1 = state_12609;
                                  var statearr_12616_12774 = state_12609__$1;
                                  statearr_12616_12774[2] = null;
                                  statearr_12616_12774[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__12765, c__6971__auto___12768, G__12596_12766, n__4517__auto___12764, jobs, results, process, async);
                return function(__12765, switch__6956__auto__, c__6971__auto___12768, G__12596_12766, n__4517__auto___12764, jobs, results, process, async) {
                  return function() {
                    var state_machine__6957__auto__ = null;
                    var state_machine__6957__auto____0 = function() {
                      var statearr_12620 = [null, null, null, null, null, null, null];
                      statearr_12620[0] = state_machine__6957__auto__;
                      statearr_12620[1] = 1;
                      return statearr_12620;
                    };
                    var state_machine__6957__auto____1 = function(state_12609) {
                      while (true) {
                        var ret_value__6958__auto__ = function() {
                          try {
                            while (true) {
                              var result__6959__auto__ = switch__6956__auto__.call(null, state_12609);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6959__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6959__auto__;
                              }
                              break;
                            }
                          } catch (e12621) {
                            if (e12621 instanceof Object) {
                              var ex__6960__auto__ = e12621;
                              var statearr_12622_12775 = state_12609;
                              statearr_12622_12775[5] = ex__6960__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12609);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e12621;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6958__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__12776 = state_12609;
                          state_12609 = G__12776;
                          continue;
                        } else {
                          return ret_value__6958__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6957__auto__ = function(state_12609) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6957__auto____0.call(this);
                        case 1:
                          return state_machine__6957__auto____1.call(this, state_12609);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6957__auto____0;
                    state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6957__auto____1;
                    return state_machine__6957__auto__;
                  }();
                }(__12765, switch__6956__auto__, c__6971__auto___12768, G__12596_12766, n__4517__auto___12764, jobs, results, process, async);
              }();
              var state__6973__auto__ = function() {
                var statearr_12623 = f__6972__auto__.call(null);
                statearr_12623[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6971__auto___12768;
                return statearr_12623;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6973__auto__);
            };
          }(__12765, c__6971__auto___12768, G__12596_12766, n__4517__auto___12764, jobs, results, process, async));
          break;
        case "compute":
          var c__6971__auto___12777 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__12765, c__6971__auto___12777, G__12596_12766, n__4517__auto___12764, jobs, results, process, async) {
            return function() {
              var f__6972__auto__ = function() {
                var switch__6956__auto__ = function(__12765, c__6971__auto___12777, G__12596_12766, n__4517__auto___12764, jobs, results, process, async) {
                  return function(state_12636) {
                    var state_val_12637 = state_12636[1];
                    if (state_val_12637 === 7) {
                      var inst_12632 = state_12636[2];
                      var state_12636__$1 = state_12636;
                      var statearr_12638_12778 = state_12636__$1;
                      statearr_12638_12778[2] = inst_12632;
                      statearr_12638_12778[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12637 === 6) {
                        var state_12636__$1 = state_12636;
                        var statearr_12639_12779 = state_12636__$1;
                        statearr_12639_12779[2] = null;
                        statearr_12639_12779[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12637 === 5) {
                          var state_12636__$1 = state_12636;
                          var statearr_12640_12780 = state_12636__$1;
                          statearr_12640_12780[2] = null;
                          statearr_12640_12780[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_12637 === 4) {
                            var inst_12626 = state_12636[2];
                            var inst_12627 = process.call(null, inst_12626);
                            var state_12636__$1 = state_12636;
                            if (cljs.core.truth_(inst_12627)) {
                              var statearr_12641_12781 = state_12636__$1;
                              statearr_12641_12781[1] = 5;
                            } else {
                              var statearr_12642_12782 = state_12636__$1;
                              statearr_12642_12782[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12637 === 3) {
                              var inst_12634 = state_12636[2];
                              var state_12636__$1 = state_12636;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12636__$1, inst_12634);
                            } else {
                              if (state_val_12637 === 2) {
                                var state_12636__$1 = state_12636;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12636__$1, 4, jobs);
                              } else {
                                if (state_val_12637 === 1) {
                                  var state_12636__$1 = state_12636;
                                  var statearr_12643_12783 = state_12636__$1;
                                  statearr_12643_12783[2] = null;
                                  statearr_12643_12783[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__12765, c__6971__auto___12777, G__12596_12766, n__4517__auto___12764, jobs, results, process, async);
                return function(__12765, switch__6956__auto__, c__6971__auto___12777, G__12596_12766, n__4517__auto___12764, jobs, results, process, async) {
                  return function() {
                    var state_machine__6957__auto__ = null;
                    var state_machine__6957__auto____0 = function() {
                      var statearr_12647 = [null, null, null, null, null, null, null];
                      statearr_12647[0] = state_machine__6957__auto__;
                      statearr_12647[1] = 1;
                      return statearr_12647;
                    };
                    var state_machine__6957__auto____1 = function(state_12636) {
                      while (true) {
                        var ret_value__6958__auto__ = function() {
                          try {
                            while (true) {
                              var result__6959__auto__ = switch__6956__auto__.call(null, state_12636);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6959__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6959__auto__;
                              }
                              break;
                            }
                          } catch (e12648) {
                            if (e12648 instanceof Object) {
                              var ex__6960__auto__ = e12648;
                              var statearr_12649_12784 = state_12636;
                              statearr_12649_12784[5] = ex__6960__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12636);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e12648;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6958__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__12785 = state_12636;
                          state_12636 = G__12785;
                          continue;
                        } else {
                          return ret_value__6958__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6957__auto__ = function(state_12636) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6957__auto____0.call(this);
                        case 1:
                          return state_machine__6957__auto____1.call(this, state_12636);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6957__auto____0;
                    state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6957__auto____1;
                    return state_machine__6957__auto__;
                  }();
                }(__12765, switch__6956__auto__, c__6971__auto___12777, G__12596_12766, n__4517__auto___12764, jobs, results, process, async);
              }();
              var state__6973__auto__ = function() {
                var statearr_12650 = f__6972__auto__.call(null);
                statearr_12650[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6971__auto___12777;
                return statearr_12650;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6973__auto__);
            };
          }(__12765, c__6971__auto___12777, G__12596_12766, n__4517__auto___12764, jobs, results, process, async));
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
      }
      var G__12786 = __12765 + 1;
      __12765 = G__12786;
      continue;
    } else {
    }
    break;
  }
  var c__6971__auto___12787 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6971__auto___12787, jobs, results, process, async) {
    return function() {
      var f__6972__auto__ = function() {
        var switch__6956__auto__ = function(c__6971__auto___12787, jobs, results, process, async) {
          return function(state_12672) {
            var state_val_12673 = state_12672[1];
            if (state_val_12673 === 9) {
              var inst_12665 = state_12672[2];
              var state_12672__$1 = function() {
                var statearr_12674 = state_12672;
                statearr_12674[7] = inst_12665;
                return statearr_12674;
              }();
              var statearr_12675_12788 = state_12672__$1;
              statearr_12675_12788[2] = null;
              statearr_12675_12788[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_12673 === 8) {
                var inst_12658 = state_12672[8];
                var inst_12663 = state_12672[2];
                var state_12672__$1 = function() {
                  var statearr_12676 = state_12672;
                  statearr_12676[9] = inst_12663;
                  return statearr_12676;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12672__$1, 9, results, inst_12658);
              } else {
                if (state_val_12673 === 7) {
                  var inst_12668 = state_12672[2];
                  var state_12672__$1 = state_12672;
                  var statearr_12677_12789 = state_12672__$1;
                  statearr_12677_12789[2] = inst_12668;
                  statearr_12677_12789[1] = 3;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12673 === 6) {
                    var inst_12658 = state_12672[8];
                    var inst_12653 = state_12672[10];
                    var inst_12658__$1 = cljs.core.async.chan.call(null, 1);
                    var inst_12659 = cljs.core.PersistentVector.EMPTY_NODE;
                    var inst_12660 = [inst_12653, inst_12658__$1];
                    var inst_12661 = new cljs.core.PersistentVector(null, 2, 5, inst_12659, inst_12660, null);
                    var state_12672__$1 = function() {
                      var statearr_12678 = state_12672;
                      statearr_12678[8] = inst_12658__$1;
                      return statearr_12678;
                    }();
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12672__$1, 8, jobs, inst_12661);
                  } else {
                    if (state_val_12673 === 5) {
                      var inst_12656 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_12672__$1 = state_12672;
                      var statearr_12679_12790 = state_12672__$1;
                      statearr_12679_12790[2] = inst_12656;
                      statearr_12679_12790[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12673 === 4) {
                        var inst_12653 = state_12672[10];
                        var inst_12653__$1 = state_12672[2];
                        var inst_12654 = inst_12653__$1 == null;
                        var state_12672__$1 = function() {
                          var statearr_12680 = state_12672;
                          statearr_12680[10] = inst_12653__$1;
                          return statearr_12680;
                        }();
                        if (cljs.core.truth_(inst_12654)) {
                          var statearr_12681_12791 = state_12672__$1;
                          statearr_12681_12791[1] = 5;
                        } else {
                          var statearr_12682_12792 = state_12672__$1;
                          statearr_12682_12792[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12673 === 3) {
                          var inst_12670 = state_12672[2];
                          var state_12672__$1 = state_12672;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12672__$1, inst_12670);
                        } else {
                          if (state_val_12673 === 2) {
                            var state_12672__$1 = state_12672;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12672__$1, 4, from);
                          } else {
                            if (state_val_12673 === 1) {
                              var state_12672__$1 = state_12672;
                              var statearr_12683_12793 = state_12672__$1;
                              statearr_12683_12793[2] = null;
                              statearr_12683_12793[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6971__auto___12787, jobs, results, process, async);
        return function(switch__6956__auto__, c__6971__auto___12787, jobs, results, process, async) {
          return function() {
            var state_machine__6957__auto__ = null;
            var state_machine__6957__auto____0 = function() {
              var statearr_12687 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_12687[0] = state_machine__6957__auto__;
              statearr_12687[1] = 1;
              return statearr_12687;
            };
            var state_machine__6957__auto____1 = function(state_12672) {
              while (true) {
                var ret_value__6958__auto__ = function() {
                  try {
                    while (true) {
                      var result__6959__auto__ = switch__6956__auto__.call(null, state_12672);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6959__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6959__auto__;
                      }
                      break;
                    }
                  } catch (e12688) {
                    if (e12688 instanceof Object) {
                      var ex__6960__auto__ = e12688;
                      var statearr_12689_12794 = state_12672;
                      statearr_12689_12794[5] = ex__6960__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12672);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e12688;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6958__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__12795 = state_12672;
                  state_12672 = G__12795;
                  continue;
                } else {
                  return ret_value__6958__auto__;
                }
                break;
              }
            };
            state_machine__6957__auto__ = function(state_12672) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6957__auto____0.call(this);
                case 1:
                  return state_machine__6957__auto____1.call(this, state_12672);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6957__auto____0;
            state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6957__auto____1;
            return state_machine__6957__auto__;
          }();
        }(switch__6956__auto__, c__6971__auto___12787, jobs, results, process, async);
      }();
      var state__6973__auto__ = function() {
        var statearr_12690 = f__6972__auto__.call(null);
        statearr_12690[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6971__auto___12787;
        return statearr_12690;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6973__auto__);
    };
  }(c__6971__auto___12787, jobs, results, process, async));
  var c__6971__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6971__auto__, jobs, results, process, async) {
    return function() {
      var f__6972__auto__ = function() {
        var switch__6956__auto__ = function(c__6971__auto__, jobs, results, process, async) {
          return function(state_12728) {
            var state_val_12729 = state_12728[1];
            if (state_val_12729 === 7) {
              var inst_12724 = state_12728[2];
              var state_12728__$1 = state_12728;
              var statearr_12730_12796 = state_12728__$1;
              statearr_12730_12796[2] = inst_12724;
              statearr_12730_12796[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_12729 === 20) {
                var state_12728__$1 = state_12728;
                var statearr_12731_12797 = state_12728__$1;
                statearr_12731_12797[2] = null;
                statearr_12731_12797[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12729 === 1) {
                  var state_12728__$1 = state_12728;
                  var statearr_12732_12798 = state_12728__$1;
                  statearr_12732_12798[2] = null;
                  statearr_12732_12798[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12729 === 4) {
                    var inst_12693 = state_12728[7];
                    var inst_12693__$1 = state_12728[2];
                    var inst_12694 = inst_12693__$1 == null;
                    var state_12728__$1 = function() {
                      var statearr_12733 = state_12728;
                      statearr_12733[7] = inst_12693__$1;
                      return statearr_12733;
                    }();
                    if (cljs.core.truth_(inst_12694)) {
                      var statearr_12734_12799 = state_12728__$1;
                      statearr_12734_12799[1] = 5;
                    } else {
                      var statearr_12735_12800 = state_12728__$1;
                      statearr_12735_12800[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12729 === 15) {
                      var inst_12706 = state_12728[8];
                      var state_12728__$1 = state_12728;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12728__$1, 18, to, inst_12706);
                    } else {
                      if (state_val_12729 === 21) {
                        var inst_12719 = state_12728[2];
                        var state_12728__$1 = state_12728;
                        var statearr_12736_12801 = state_12728__$1;
                        statearr_12736_12801[2] = inst_12719;
                        statearr_12736_12801[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12729 === 13) {
                          var inst_12721 = state_12728[2];
                          var state_12728__$1 = function() {
                            var statearr_12737 = state_12728;
                            statearr_12737[9] = inst_12721;
                            return statearr_12737;
                          }();
                          var statearr_12738_12802 = state_12728__$1;
                          statearr_12738_12802[2] = null;
                          statearr_12738_12802[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_12729 === 6) {
                            var inst_12693 = state_12728[7];
                            var state_12728__$1 = state_12728;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12728__$1, 11, inst_12693);
                          } else {
                            if (state_val_12729 === 17) {
                              var inst_12714 = state_12728[2];
                              var state_12728__$1 = state_12728;
                              if (cljs.core.truth_(inst_12714)) {
                                var statearr_12739_12803 = state_12728__$1;
                                statearr_12739_12803[1] = 19;
                              } else {
                                var statearr_12740_12804 = state_12728__$1;
                                statearr_12740_12804[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_12729 === 3) {
                                var inst_12726 = state_12728[2];
                                var state_12728__$1 = state_12728;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12728__$1, inst_12726);
                              } else {
                                if (state_val_12729 === 12) {
                                  var inst_12703 = state_12728[10];
                                  var state_12728__$1 = state_12728;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12728__$1, 14, inst_12703);
                                } else {
                                  if (state_val_12729 === 2) {
                                    var state_12728__$1 = state_12728;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12728__$1, 4, results);
                                  } else {
                                    if (state_val_12729 === 19) {
                                      var state_12728__$1 = state_12728;
                                      var statearr_12741_12805 = state_12728__$1;
                                      statearr_12741_12805[2] = null;
                                      statearr_12741_12805[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_12729 === 11) {
                                        var inst_12703 = state_12728[2];
                                        var state_12728__$1 = function() {
                                          var statearr_12742 = state_12728;
                                          statearr_12742[10] = inst_12703;
                                          return statearr_12742;
                                        }();
                                        var statearr_12743_12806 = state_12728__$1;
                                        statearr_12743_12806[2] = null;
                                        statearr_12743_12806[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_12729 === 9) {
                                          var state_12728__$1 = state_12728;
                                          var statearr_12744_12807 = state_12728__$1;
                                          statearr_12744_12807[2] = null;
                                          statearr_12744_12807[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_12729 === 5) {
                                            var state_12728__$1 = state_12728;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_12745_12808 = state_12728__$1;
                                              statearr_12745_12808[1] = 8;
                                            } else {
                                              var statearr_12746_12809 = state_12728__$1;
                                              statearr_12746_12809[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_12729 === 14) {
                                              var inst_12706 = state_12728[8];
                                              var inst_12708 = state_12728[11];
                                              var inst_12706__$1 = state_12728[2];
                                              var inst_12707 = inst_12706__$1 == null;
                                              var inst_12708__$1 = cljs.core.not.call(null, inst_12707);
                                              var state_12728__$1 = function() {
                                                var statearr_12747 = state_12728;
                                                statearr_12747[8] = inst_12706__$1;
                                                statearr_12747[11] = inst_12708__$1;
                                                return statearr_12747;
                                              }();
                                              if (inst_12708__$1) {
                                                var statearr_12748_12810 = state_12728__$1;
                                                statearr_12748_12810[1] = 15;
                                              } else {
                                                var statearr_12749_12811 = state_12728__$1;
                                                statearr_12749_12811[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_12729 === 16) {
                                                var inst_12708 = state_12728[11];
                                                var state_12728__$1 = state_12728;
                                                var statearr_12750_12812 = state_12728__$1;
                                                statearr_12750_12812[2] = inst_12708;
                                                statearr_12750_12812[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_12729 === 10) {
                                                  var inst_12700 = state_12728[2];
                                                  var state_12728__$1 = state_12728;
                                                  var statearr_12751_12813 = state_12728__$1;
                                                  statearr_12751_12813[2] = inst_12700;
                                                  statearr_12751_12813[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_12729 === 18) {
                                                    var inst_12711 = state_12728[2];
                                                    var state_12728__$1 = state_12728;
                                                    var statearr_12752_12814 = state_12728__$1;
                                                    statearr_12752_12814[2] = inst_12711;
                                                    statearr_12752_12814[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_12729 === 8) {
                                                      var inst_12697 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_12728__$1 = state_12728;
                                                      var statearr_12753_12815 = state_12728__$1;
                                                      statearr_12753_12815[2] = inst_12697;
                                                      statearr_12753_12815[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6971__auto__, jobs, results, process, async);
        return function(switch__6956__auto__, c__6971__auto__, jobs, results, process, async) {
          return function() {
            var state_machine__6957__auto__ = null;
            var state_machine__6957__auto____0 = function() {
              var statearr_12757 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_12757[0] = state_machine__6957__auto__;
              statearr_12757[1] = 1;
              return statearr_12757;
            };
            var state_machine__6957__auto____1 = function(state_12728) {
              while (true) {
                var ret_value__6958__auto__ = function() {
                  try {
                    while (true) {
                      var result__6959__auto__ = switch__6956__auto__.call(null, state_12728);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6959__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6959__auto__;
                      }
                      break;
                    }
                  } catch (e12758) {
                    if (e12758 instanceof Object) {
                      var ex__6960__auto__ = e12758;
                      var statearr_12759_12816 = state_12728;
                      statearr_12759_12816[5] = ex__6960__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12728);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e12758;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6958__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__12817 = state_12728;
                  state_12728 = G__12817;
                  continue;
                } else {
                  return ret_value__6958__auto__;
                }
                break;
              }
            };
            state_machine__6957__auto__ = function(state_12728) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6957__auto____0.call(this);
                case 1:
                  return state_machine__6957__auto____1.call(this, state_12728);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6957__auto____0;
            state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6957__auto____1;
            return state_machine__6957__auto__;
          }();
        }(switch__6956__auto__, c__6971__auto__, jobs, results, process, async);
      }();
      var state__6973__auto__ = function() {
        var statearr_12760 = f__6972__auto__.call(null);
        statearr_12760[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6971__auto__;
        return statearr_12760;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6973__auto__);
    };
  }(c__6971__auto__, jobs, results, process, async));
  return c__6971__auto__;
};
cljs.core.async.pipeline_async = function() {
  var pipeline_async = null;
  var pipeline_async__4 = function(n, to, af, from) {
    return pipeline_async.call(null, n, to, af, from, true);
  };
  var pipeline_async__5 = function(n, to, af, from, close_QMARK_) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
  };
  pipeline_async = function(n, to, af, from, close_QMARK_) {
    switch(arguments.length) {
      case 4:
        return pipeline_async__4.call(this, n, to, af, from);
      case 5:
        return pipeline_async__5.call(this, n, to, af, from, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline_async.cljs$core$IFn$_invoke$arity$4 = pipeline_async__4;
  pipeline_async.cljs$core$IFn$_invoke$arity$5 = pipeline_async__5;
  return pipeline_async;
}();
cljs.core.async.pipeline = function() {
  var pipeline = null;
  var pipeline__4 = function(n, to, xf, from) {
    return pipeline.call(null, n, to, xf, from, true);
  };
  var pipeline__5 = function(n, to, xf, from, close_QMARK_) {
    return pipeline.call(null, n, to, xf, from, close_QMARK_, null);
  };
  var pipeline__6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
  };
  pipeline = function(n, to, xf, from, close_QMARK_, ex_handler) {
    switch(arguments.length) {
      case 4:
        return pipeline__4.call(this, n, to, xf, from);
      case 5:
        return pipeline__5.call(this, n, to, xf, from, close_QMARK_);
      case 6:
        return pipeline__6.call(this, n, to, xf, from, close_QMARK_, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline.cljs$core$IFn$_invoke$arity$4 = pipeline__4;
  pipeline.cljs$core$IFn$_invoke$arity$5 = pipeline__5;
  pipeline.cljs$core$IFn$_invoke$arity$6 = pipeline__6;
  return pipeline;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__6971__auto___12918 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6971__auto___12918, tc, fc) {
      return function() {
        var f__6972__auto__ = function() {
          var switch__6956__auto__ = function(c__6971__auto___12918, tc, fc) {
            return function(state_12893) {
              var state_val_12894 = state_12893[1];
              if (state_val_12894 === 7) {
                var inst_12889 = state_12893[2];
                var state_12893__$1 = state_12893;
                var statearr_12895_12919 = state_12893__$1;
                statearr_12895_12919[2] = inst_12889;
                statearr_12895_12919[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12894 === 1) {
                  var state_12893__$1 = state_12893;
                  var statearr_12896_12920 = state_12893__$1;
                  statearr_12896_12920[2] = null;
                  statearr_12896_12920[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12894 === 4) {
                    var inst_12870 = state_12893[7];
                    var inst_12870__$1 = state_12893[2];
                    var inst_12871 = inst_12870__$1 == null;
                    var state_12893__$1 = function() {
                      var statearr_12897 = state_12893;
                      statearr_12897[7] = inst_12870__$1;
                      return statearr_12897;
                    }();
                    if (cljs.core.truth_(inst_12871)) {
                      var statearr_12898_12921 = state_12893__$1;
                      statearr_12898_12921[1] = 5;
                    } else {
                      var statearr_12899_12922 = state_12893__$1;
                      statearr_12899_12922[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12894 === 13) {
                      var state_12893__$1 = state_12893;
                      var statearr_12900_12923 = state_12893__$1;
                      statearr_12900_12923[2] = null;
                      statearr_12900_12923[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12894 === 6) {
                        var inst_12870 = state_12893[7];
                        var inst_12876 = p.call(null, inst_12870);
                        var state_12893__$1 = state_12893;
                        if (cljs.core.truth_(inst_12876)) {
                          var statearr_12901_12924 = state_12893__$1;
                          statearr_12901_12924[1] = 9;
                        } else {
                          var statearr_12902_12925 = state_12893__$1;
                          statearr_12902_12925[1] = 10;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12894 === 3) {
                          var inst_12891 = state_12893[2];
                          var state_12893__$1 = state_12893;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12893__$1, inst_12891);
                        } else {
                          if (state_val_12894 === 12) {
                            var state_12893__$1 = state_12893;
                            var statearr_12903_12926 = state_12893__$1;
                            statearr_12903_12926[2] = null;
                            statearr_12903_12926[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12894 === 2) {
                              var state_12893__$1 = state_12893;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12893__$1, 4, ch);
                            } else {
                              if (state_val_12894 === 11) {
                                var inst_12870 = state_12893[7];
                                var inst_12880 = state_12893[2];
                                var state_12893__$1 = state_12893;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12893__$1, 8, inst_12880, inst_12870);
                              } else {
                                if (state_val_12894 === 9) {
                                  var state_12893__$1 = state_12893;
                                  var statearr_12904_12927 = state_12893__$1;
                                  statearr_12904_12927[2] = tc;
                                  statearr_12904_12927[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_12894 === 5) {
                                    var inst_12873 = cljs.core.async.close_BANG_.call(null, tc);
                                    var inst_12874 = cljs.core.async.close_BANG_.call(null, fc);
                                    var state_12893__$1 = function() {
                                      var statearr_12905 = state_12893;
                                      statearr_12905[8] = inst_12873;
                                      return statearr_12905;
                                    }();
                                    var statearr_12906_12928 = state_12893__$1;
                                    statearr_12906_12928[2] = inst_12874;
                                    statearr_12906_12928[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_12894 === 14) {
                                      var inst_12887 = state_12893[2];
                                      var state_12893__$1 = state_12893;
                                      var statearr_12907_12929 = state_12893__$1;
                                      statearr_12907_12929[2] = inst_12887;
                                      statearr_12907_12929[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_12894 === 10) {
                                        var state_12893__$1 = state_12893;
                                        var statearr_12908_12930 = state_12893__$1;
                                        statearr_12908_12930[2] = fc;
                                        statearr_12908_12930[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_12894 === 8) {
                                          var inst_12882 = state_12893[2];
                                          var state_12893__$1 = state_12893;
                                          if (cljs.core.truth_(inst_12882)) {
                                            var statearr_12909_12931 = state_12893__$1;
                                            statearr_12909_12931[1] = 12;
                                          } else {
                                            var statearr_12910_12932 = state_12893__$1;
                                            statearr_12910_12932[1] = 13;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6971__auto___12918, tc, fc);
          return function(switch__6956__auto__, c__6971__auto___12918, tc, fc) {
            return function() {
              var state_machine__6957__auto__ = null;
              var state_machine__6957__auto____0 = function() {
                var statearr_12914 = [null, null, null, null, null, null, null, null, null];
                statearr_12914[0] = state_machine__6957__auto__;
                statearr_12914[1] = 1;
                return statearr_12914;
              };
              var state_machine__6957__auto____1 = function(state_12893) {
                while (true) {
                  var ret_value__6958__auto__ = function() {
                    try {
                      while (true) {
                        var result__6959__auto__ = switch__6956__auto__.call(null, state_12893);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6959__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6959__auto__;
                        }
                        break;
                      }
                    } catch (e12915) {
                      if (e12915 instanceof Object) {
                        var ex__6960__auto__ = e12915;
                        var statearr_12916_12933 = state_12893;
                        statearr_12916_12933[5] = ex__6960__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12893);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e12915;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6958__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__12934 = state_12893;
                    state_12893 = G__12934;
                    continue;
                  } else {
                    return ret_value__6958__auto__;
                  }
                  break;
                }
              };
              state_machine__6957__auto__ = function(state_12893) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6957__auto____0.call(this);
                  case 1:
                    return state_machine__6957__auto____1.call(this, state_12893);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6957__auto____0;
              state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6957__auto____1;
              return state_machine__6957__auto__;
            }();
          }(switch__6956__auto__, c__6971__auto___12918, tc, fc);
        }();
        var state__6973__auto__ = function() {
          var statearr_12917 = f__6972__auto__.call(null);
          statearr_12917[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6971__auto___12918;
          return statearr_12917;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6973__auto__);
      };
    }(c__6971__auto___12918, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__6971__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6971__auto__) {
    return function() {
      var f__6972__auto__ = function() {
        var switch__6956__auto__ = function(c__6971__auto__) {
          return function(state_12981) {
            var state_val_12982 = state_12981[1];
            if (state_val_12982 === 7) {
              var inst_12977 = state_12981[2];
              var state_12981__$1 = state_12981;
              var statearr_12983_12999 = state_12981__$1;
              statearr_12983_12999[2] = inst_12977;
              statearr_12983_12999[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_12982 === 6) {
                var inst_12967 = state_12981[7];
                var inst_12970 = state_12981[8];
                var inst_12974 = f.call(null, inst_12967, inst_12970);
                var inst_12967__$1 = inst_12974;
                var state_12981__$1 = function() {
                  var statearr_12984 = state_12981;
                  statearr_12984[7] = inst_12967__$1;
                  return statearr_12984;
                }();
                var statearr_12985_13000 = state_12981__$1;
                statearr_12985_13000[2] = null;
                statearr_12985_13000[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12982 === 5) {
                  var inst_12967 = state_12981[7];
                  var state_12981__$1 = state_12981;
                  var statearr_12986_13001 = state_12981__$1;
                  statearr_12986_13001[2] = inst_12967;
                  statearr_12986_13001[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12982 === 4) {
                    var inst_12970 = state_12981[8];
                    var inst_12970__$1 = state_12981[2];
                    var inst_12971 = inst_12970__$1 == null;
                    var state_12981__$1 = function() {
                      var statearr_12987 = state_12981;
                      statearr_12987[8] = inst_12970__$1;
                      return statearr_12987;
                    }();
                    if (cljs.core.truth_(inst_12971)) {
                      var statearr_12988_13002 = state_12981__$1;
                      statearr_12988_13002[1] = 5;
                    } else {
                      var statearr_12989_13003 = state_12981__$1;
                      statearr_12989_13003[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12982 === 3) {
                      var inst_12979 = state_12981[2];
                      var state_12981__$1 = state_12981;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12981__$1, inst_12979);
                    } else {
                      if (state_val_12982 === 2) {
                        var state_12981__$1 = state_12981;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12981__$1, 4, ch);
                      } else {
                        if (state_val_12982 === 1) {
                          var inst_12967 = init;
                          var state_12981__$1 = function() {
                            var statearr_12990 = state_12981;
                            statearr_12990[7] = inst_12967;
                            return statearr_12990;
                          }();
                          var statearr_12991_13004 = state_12981__$1;
                          statearr_12991_13004[2] = null;
                          statearr_12991_13004[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6971__auto__);
        return function(switch__6956__auto__, c__6971__auto__) {
          return function() {
            var state_machine__6957__auto__ = null;
            var state_machine__6957__auto____0 = function() {
              var statearr_12995 = [null, null, null, null, null, null, null, null, null];
              statearr_12995[0] = state_machine__6957__auto__;
              statearr_12995[1] = 1;
              return statearr_12995;
            };
            var state_machine__6957__auto____1 = function(state_12981) {
              while (true) {
                var ret_value__6958__auto__ = function() {
                  try {
                    while (true) {
                      var result__6959__auto__ = switch__6956__auto__.call(null, state_12981);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6959__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6959__auto__;
                      }
                      break;
                    }
                  } catch (e12996) {
                    if (e12996 instanceof Object) {
                      var ex__6960__auto__ = e12996;
                      var statearr_12997_13005 = state_12981;
                      statearr_12997_13005[5] = ex__6960__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12981);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e12996;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6958__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__13006 = state_12981;
                  state_12981 = G__13006;
                  continue;
                } else {
                  return ret_value__6958__auto__;
                }
                break;
              }
            };
            state_machine__6957__auto__ = function(state_12981) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6957__auto____0.call(this);
                case 1:
                  return state_machine__6957__auto____1.call(this, state_12981);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6957__auto____0;
            state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6957__auto____1;
            return state_machine__6957__auto__;
          }();
        }(switch__6956__auto__, c__6971__auto__);
      }();
      var state__6973__auto__ = function() {
        var statearr_12998 = f__6972__auto__.call(null);
        statearr_12998[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6971__auto__;
        return statearr_12998;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6973__auto__);
    };
  }(c__6971__auto__));
  return c__6971__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__6971__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6971__auto__) {
      return function() {
        var f__6972__auto__ = function() {
          var switch__6956__auto__ = function(c__6971__auto__) {
            return function(state_13080) {
              var state_val_13081 = state_13080[1];
              if (state_val_13081 === 7) {
                var inst_13062 = state_13080[2];
                var state_13080__$1 = state_13080;
                var statearr_13082_13105 = state_13080__$1;
                statearr_13082_13105[2] = inst_13062;
                statearr_13082_13105[1] = 6;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_13081 === 1) {
                  var inst_13056 = cljs.core.seq.call(null, coll);
                  var inst_13057 = inst_13056;
                  var state_13080__$1 = function() {
                    var statearr_13083 = state_13080;
                    statearr_13083[7] = inst_13057;
                    return statearr_13083;
                  }();
                  var statearr_13084_13106 = state_13080__$1;
                  statearr_13084_13106[2] = null;
                  statearr_13084_13106[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13081 === 4) {
                    var inst_13057 = state_13080[7];
                    var inst_13060 = cljs.core.first.call(null, inst_13057);
                    var state_13080__$1 = state_13080;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13080__$1, 7, ch, inst_13060);
                  } else {
                    if (state_val_13081 === 13) {
                      var inst_13074 = state_13080[2];
                      var state_13080__$1 = state_13080;
                      var statearr_13085_13107 = state_13080__$1;
                      statearr_13085_13107[2] = inst_13074;
                      statearr_13085_13107[1] = 10;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13081 === 6) {
                        var inst_13065 = state_13080[2];
                        var state_13080__$1 = state_13080;
                        if (cljs.core.truth_(inst_13065)) {
                          var statearr_13086_13108 = state_13080__$1;
                          statearr_13086_13108[1] = 8;
                        } else {
                          var statearr_13087_13109 = state_13080__$1;
                          statearr_13087_13109[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_13081 === 3) {
                          var inst_13078 = state_13080[2];
                          var state_13080__$1 = state_13080;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13080__$1, inst_13078);
                        } else {
                          if (state_val_13081 === 12) {
                            var state_13080__$1 = state_13080;
                            var statearr_13088_13110 = state_13080__$1;
                            statearr_13088_13110[2] = null;
                            statearr_13088_13110[1] = 13;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_13081 === 2) {
                              var inst_13057 = state_13080[7];
                              var state_13080__$1 = state_13080;
                              if (cljs.core.truth_(inst_13057)) {
                                var statearr_13089_13111 = state_13080__$1;
                                statearr_13089_13111[1] = 4;
                              } else {
                                var statearr_13090_13112 = state_13080__$1;
                                statearr_13090_13112[1] = 5;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_13081 === 11) {
                                var inst_13071 = cljs.core.async.close_BANG_.call(null, ch);
                                var state_13080__$1 = state_13080;
                                var statearr_13091_13113 = state_13080__$1;
                                statearr_13091_13113[2] = inst_13071;
                                statearr_13091_13113[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_13081 === 9) {
                                  var state_13080__$1 = state_13080;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_13092_13114 = state_13080__$1;
                                    statearr_13092_13114[1] = 11;
                                  } else {
                                    var statearr_13093_13115 = state_13080__$1;
                                    statearr_13093_13115[1] = 12;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_13081 === 5) {
                                    var inst_13057 = state_13080[7];
                                    var state_13080__$1 = state_13080;
                                    var statearr_13094_13116 = state_13080__$1;
                                    statearr_13094_13116[2] = inst_13057;
                                    statearr_13094_13116[1] = 6;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_13081 === 10) {
                                      var inst_13076 = state_13080[2];
                                      var state_13080__$1 = state_13080;
                                      var statearr_13095_13117 = state_13080__$1;
                                      statearr_13095_13117[2] = inst_13076;
                                      statearr_13095_13117[1] = 3;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_13081 === 8) {
                                        var inst_13057 = state_13080[7];
                                        var inst_13067 = cljs.core.next.call(null, inst_13057);
                                        var inst_13057__$1 = inst_13067;
                                        var state_13080__$1 = function() {
                                          var statearr_13096 = state_13080;
                                          statearr_13096[7] = inst_13057__$1;
                                          return statearr_13096;
                                        }();
                                        var statearr_13097_13118 = state_13080__$1;
                                        statearr_13097_13118[2] = null;
                                        statearr_13097_13118[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6971__auto__);
          return function(switch__6956__auto__, c__6971__auto__) {
            return function() {
              var state_machine__6957__auto__ = null;
              var state_machine__6957__auto____0 = function() {
                var statearr_13101 = [null, null, null, null, null, null, null, null];
                statearr_13101[0] = state_machine__6957__auto__;
                statearr_13101[1] = 1;
                return statearr_13101;
              };
              var state_machine__6957__auto____1 = function(state_13080) {
                while (true) {
                  var ret_value__6958__auto__ = function() {
                    try {
                      while (true) {
                        var result__6959__auto__ = switch__6956__auto__.call(null, state_13080);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6959__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6959__auto__;
                        }
                        break;
                      }
                    } catch (e13102) {
                      if (e13102 instanceof Object) {
                        var ex__6960__auto__ = e13102;
                        var statearr_13103_13119 = state_13080;
                        statearr_13103_13119[5] = ex__6960__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13080);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e13102;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6958__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__13120 = state_13080;
                    state_13080 = G__13120;
                    continue;
                  } else {
                    return ret_value__6958__auto__;
                  }
                  break;
                }
              };
              state_machine__6957__auto__ = function(state_13080) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6957__auto____0.call(this);
                  case 1:
                    return state_machine__6957__auto____1.call(this, state_13080);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6957__auto____0;
              state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6957__auto____1;
              return state_machine__6957__auto__;
            }();
          }(switch__6956__auto__, c__6971__auto__);
        }();
        var state__6973__auto__ = function() {
          var statearr_13104 = f__6972__auto__.call(null);
          statearr_13104[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6971__auto__;
          return statearr_13104;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6973__auto__);
      };
    }(c__6971__auto__));
    return c__6971__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj13122 = {};
  return obj13122;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3618__auto__ = _;
    if (and__3618__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4274__auto__ = _ == null ? null : _;
    return function() {
      var or__3630__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj13124 = {};
  return obj13124;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3618__auto__ = m;
    if (and__3618__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4274__auto__ = m == null ? null : m;
    return function() {
      var or__3630__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3618__auto__ = m;
    if (and__3618__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4274__auto__ = m == null ? null : m;
    return function() {
      var or__3630__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3618__auto__ = m;
    if (and__3618__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4274__auto__ = m == null ? null : m;
    return function() {
      var or__3630__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t13346 !== "undefined") {
    } else {
      cljs.core.async.t13346 = function(cs, ch, mult, meta13347) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta13347 = meta13347;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t13346.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t13346.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t13346.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t13346.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t13346.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t13346.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t13346.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_13348) {
          var self__ = this;
          var _13348__$1 = this;
          return self__.meta13347;
        };
      }(cs);
      cljs.core.async.t13346.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_13348, meta13347__$1) {
          var self__ = this;
          var _13348__$1 = this;
          return new cljs.core.async.t13346(self__.cs, self__.ch, self__.mult, meta13347__$1);
        };
      }(cs);
      cljs.core.async.t13346.cljs$lang$type = true;
      cljs.core.async.t13346.cljs$lang$ctorStr = "cljs.core.async/t13346";
      cljs.core.async.t13346.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
          return cljs.core._write.call(null, writer__4218__auto__, "cljs.core.async/t13346");
        };
      }(cs);
      cljs.core.async.__GT_t13346 = function(cs) {
        return function __GT_t13346(cs__$1, ch__$1, mult__$1, meta13347) {
          return new cljs.core.async.t13346(cs__$1, ch__$1, mult__$1, meta13347);
        };
      }(cs);
    }
    return new cljs.core.async.t13346(cs, ch, mult, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 48, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 397, new cljs.core.Keyword(null, "column", "column", 2078222095), 11, new cljs.core.Keyword(null, "line", "line", 212345235), 390, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core\\async.cljs"], 
    null));
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__6971__auto___13567 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6971__auto___13567, cs, m, dchan, dctr, done) {
    return function() {
      var f__6972__auto__ = function() {
        var switch__6956__auto__ = function(c__6971__auto___13567, cs, m, dchan, dctr, done) {
          return function(state_13479) {
            var state_val_13480 = state_13479[1];
            if (state_val_13480 === 7) {
              var inst_13475 = state_13479[2];
              var state_13479__$1 = state_13479;
              var statearr_13481_13568 = state_13479__$1;
              statearr_13481_13568[2] = inst_13475;
              statearr_13481_13568[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_13480 === 20) {
                var inst_13380 = state_13479[7];
                var inst_13390 = cljs.core.first.call(null, inst_13380);
                var inst_13391 = cljs.core.nth.call(null, inst_13390, 0, null);
                var inst_13392 = cljs.core.nth.call(null, inst_13390, 1, null);
                var state_13479__$1 = function() {
                  var statearr_13482 = state_13479;
                  statearr_13482[8] = inst_13391;
                  return statearr_13482;
                }();
                if (cljs.core.truth_(inst_13392)) {
                  var statearr_13483_13569 = state_13479__$1;
                  statearr_13483_13569[1] = 22;
                } else {
                  var statearr_13484_13570 = state_13479__$1;
                  statearr_13484_13570[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_13480 === 27) {
                  var inst_13351 = state_13479[9];
                  var inst_13427 = state_13479[10];
                  var inst_13420 = state_13479[11];
                  var inst_13422 = state_13479[12];
                  var inst_13427__$1 = cljs.core._nth.call(null, inst_13420, inst_13422);
                  var inst_13428 = cljs.core.async.put_BANG_.call(null, inst_13427__$1, inst_13351, done);
                  var state_13479__$1 = function() {
                    var statearr_13485 = state_13479;
                    statearr_13485[10] = inst_13427__$1;
                    return statearr_13485;
                  }();
                  if (cljs.core.truth_(inst_13428)) {
                    var statearr_13486_13571 = state_13479__$1;
                    statearr_13486_13571[1] = 30;
                  } else {
                    var statearr_13487_13572 = state_13479__$1;
                    statearr_13487_13572[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13480 === 1) {
                    var state_13479__$1 = state_13479;
                    var statearr_13488_13573 = state_13479__$1;
                    statearr_13488_13573[2] = null;
                    statearr_13488_13573[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_13480 === 24) {
                      var inst_13380 = state_13479[7];
                      var inst_13397 = state_13479[2];
                      var inst_13398 = cljs.core.next.call(null, inst_13380);
                      var inst_13360 = inst_13398;
                      var inst_13361 = null;
                      var inst_13362 = 0;
                      var inst_13363 = 0;
                      var state_13479__$1 = function() {
                        var statearr_13489 = state_13479;
                        statearr_13489[13] = inst_13361;
                        statearr_13489[14] = inst_13397;
                        statearr_13489[15] = inst_13363;
                        statearr_13489[16] = inst_13362;
                        statearr_13489[17] = inst_13360;
                        return statearr_13489;
                      }();
                      var statearr_13490_13574 = state_13479__$1;
                      statearr_13490_13574[2] = null;
                      statearr_13490_13574[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13480 === 39) {
                        var state_13479__$1 = state_13479;
                        var statearr_13494_13575 = state_13479__$1;
                        statearr_13494_13575[2] = null;
                        statearr_13494_13575[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_13480 === 4) {
                          var inst_13351 = state_13479[9];
                          var inst_13351__$1 = state_13479[2];
                          var inst_13352 = inst_13351__$1 == null;
                          var state_13479__$1 = function() {
                            var statearr_13495 = state_13479;
                            statearr_13495[9] = inst_13351__$1;
                            return statearr_13495;
                          }();
                          if (cljs.core.truth_(inst_13352)) {
                            var statearr_13496_13576 = state_13479__$1;
                            statearr_13496_13576[1] = 5;
                          } else {
                            var statearr_13497_13577 = state_13479__$1;
                            statearr_13497_13577[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_13480 === 15) {
                            var inst_13361 = state_13479[13];
                            var inst_13363 = state_13479[15];
                            var inst_13362 = state_13479[16];
                            var inst_13360 = state_13479[17];
                            var inst_13376 = state_13479[2];
                            var inst_13377 = inst_13363 + 1;
                            var tmp13491 = inst_13361;
                            var tmp13492 = inst_13362;
                            var tmp13493 = inst_13360;
                            var inst_13360__$1 = tmp13493;
                            var inst_13361__$1 = tmp13491;
                            var inst_13362__$1 = tmp13492;
                            var inst_13363__$1 = inst_13377;
                            var state_13479__$1 = function() {
                              var statearr_13498 = state_13479;
                              statearr_13498[18] = inst_13376;
                              statearr_13498[13] = inst_13361__$1;
                              statearr_13498[15] = inst_13363__$1;
                              statearr_13498[16] = inst_13362__$1;
                              statearr_13498[17] = inst_13360__$1;
                              return statearr_13498;
                            }();
                            var statearr_13499_13578 = state_13479__$1;
                            statearr_13499_13578[2] = null;
                            statearr_13499_13578[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_13480 === 21) {
                              var inst_13401 = state_13479[2];
                              var state_13479__$1 = state_13479;
                              var statearr_13503_13579 = state_13479__$1;
                              statearr_13503_13579[2] = inst_13401;
                              statearr_13503_13579[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_13480 === 31) {
                                var inst_13427 = state_13479[10];
                                var inst_13431 = done.call(null, null);
                                var inst_13432 = cljs.core.async.untap_STAR_.call(null, m, inst_13427);
                                var state_13479__$1 = function() {
                                  var statearr_13504 = state_13479;
                                  statearr_13504[19] = inst_13431;
                                  return statearr_13504;
                                }();
                                var statearr_13505_13580 = state_13479__$1;
                                statearr_13505_13580[2] = inst_13432;
                                statearr_13505_13580[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_13480 === 32) {
                                  var inst_13419 = state_13479[20];
                                  var inst_13421 = state_13479[21];
                                  var inst_13420 = state_13479[11];
                                  var inst_13422 = state_13479[12];
                                  var inst_13434 = state_13479[2];
                                  var inst_13435 = inst_13422 + 1;
                                  var tmp13500 = inst_13419;
                                  var tmp13501 = inst_13421;
                                  var tmp13502 = inst_13420;
                                  var inst_13419__$1 = tmp13500;
                                  var inst_13420__$1 = tmp13502;
                                  var inst_13421__$1 = tmp13501;
                                  var inst_13422__$1 = inst_13435;
                                  var state_13479__$1 = function() {
                                    var statearr_13506 = state_13479;
                                    statearr_13506[22] = inst_13434;
                                    statearr_13506[20] = inst_13419__$1;
                                    statearr_13506[21] = inst_13421__$1;
                                    statearr_13506[11] = inst_13420__$1;
                                    statearr_13506[12] = inst_13422__$1;
                                    return statearr_13506;
                                  }();
                                  var statearr_13507_13581 = state_13479__$1;
                                  statearr_13507_13581[2] = null;
                                  statearr_13507_13581[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_13480 === 40) {
                                    var inst_13447 = state_13479[23];
                                    var inst_13451 = done.call(null, null);
                                    var inst_13452 = cljs.core.async.untap_STAR_.call(null, m, inst_13447);
                                    var state_13479__$1 = function() {
                                      var statearr_13508 = state_13479;
                                      statearr_13508[24] = inst_13451;
                                      return statearr_13508;
                                    }();
                                    var statearr_13509_13582 = state_13479__$1;
                                    statearr_13509_13582[2] = inst_13452;
                                    statearr_13509_13582[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_13480 === 33) {
                                      var inst_13438 = state_13479[25];
                                      var inst_13440 = cljs.core.chunked_seq_QMARK_.call(null, inst_13438);
                                      var state_13479__$1 = state_13479;
                                      if (inst_13440) {
                                        var statearr_13510_13583 = state_13479__$1;
                                        statearr_13510_13583[1] = 36;
                                      } else {
                                        var statearr_13511_13584 = state_13479__$1;
                                        statearr_13511_13584[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_13480 === 13) {
                                        var inst_13370 = state_13479[26];
                                        var inst_13373 = cljs.core.async.close_BANG_.call(null, inst_13370);
                                        var state_13479__$1 = state_13479;
                                        var statearr_13512_13585 = state_13479__$1;
                                        statearr_13512_13585[2] = inst_13373;
                                        statearr_13512_13585[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_13480 === 22) {
                                          var inst_13391 = state_13479[8];
                                          var inst_13394 = cljs.core.async.close_BANG_.call(null, inst_13391);
                                          var state_13479__$1 = state_13479;
                                          var statearr_13513_13586 = state_13479__$1;
                                          statearr_13513_13586[2] = inst_13394;
                                          statearr_13513_13586[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_13480 === 36) {
                                            var inst_13438 = state_13479[25];
                                            var inst_13442 = cljs.core.chunk_first.call(null, inst_13438);
                                            var inst_13443 = cljs.core.chunk_rest.call(null, inst_13438);
                                            var inst_13444 = cljs.core.count.call(null, inst_13442);
                                            var inst_13419 = inst_13443;
                                            var inst_13420 = inst_13442;
                                            var inst_13421 = inst_13444;
                                            var inst_13422 = 0;
                                            var state_13479__$1 = function() {
                                              var statearr_13514 = state_13479;
                                              statearr_13514[20] = inst_13419;
                                              statearr_13514[21] = inst_13421;
                                              statearr_13514[11] = inst_13420;
                                              statearr_13514[12] = inst_13422;
                                              return statearr_13514;
                                            }();
                                            var statearr_13515_13587 = state_13479__$1;
                                            statearr_13515_13587[2] = null;
                                            statearr_13515_13587[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_13480 === 41) {
                                              var inst_13438 = state_13479[25];
                                              var inst_13454 = state_13479[2];
                                              var inst_13455 = cljs.core.next.call(null, inst_13438);
                                              var inst_13419 = inst_13455;
                                              var inst_13420 = null;
                                              var inst_13421 = 0;
                                              var inst_13422 = 0;
                                              var state_13479__$1 = function() {
                                                var statearr_13516 = state_13479;
                                                statearr_13516[27] = inst_13454;
                                                statearr_13516[20] = inst_13419;
                                                statearr_13516[21] = inst_13421;
                                                statearr_13516[11] = inst_13420;
                                                statearr_13516[12] = inst_13422;
                                                return statearr_13516;
                                              }();
                                              var statearr_13517_13588 = state_13479__$1;
                                              statearr_13517_13588[2] = null;
                                              statearr_13517_13588[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_13480 === 43) {
                                                var state_13479__$1 = state_13479;
                                                var statearr_13518_13589 = state_13479__$1;
                                                statearr_13518_13589[2] = null;
                                                statearr_13518_13589[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_13480 === 29) {
                                                  var inst_13463 = state_13479[2];
                                                  var state_13479__$1 = state_13479;
                                                  var statearr_13519_13590 = state_13479__$1;
                                                  statearr_13519_13590[2] = inst_13463;
                                                  statearr_13519_13590[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_13480 === 44) {
                                                    var inst_13472 = state_13479[2];
                                                    var state_13479__$1 = function() {
                                                      var statearr_13520 = state_13479;
                                                      statearr_13520[28] = inst_13472;
                                                      return statearr_13520;
                                                    }();
                                                    var statearr_13521_13591 = state_13479__$1;
                                                    statearr_13521_13591[2] = null;
                                                    statearr_13521_13591[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_13480 === 6) {
                                                      var inst_13411 = state_13479[29];
                                                      var inst_13410 = cljs.core.deref.call(null, cs);
                                                      var inst_13411__$1 = cljs.core.keys.call(null, inst_13410);
                                                      var inst_13412 = cljs.core.count.call(null, inst_13411__$1);
                                                      var inst_13413 = cljs.core.reset_BANG_.call(null, dctr, inst_13412);
                                                      var inst_13418 = cljs.core.seq.call(null, inst_13411__$1);
                                                      var inst_13419 = inst_13418;
                                                      var inst_13420 = null;
                                                      var inst_13421 = 0;
                                                      var inst_13422 = 0;
                                                      var state_13479__$1 = function() {
                                                        var statearr_13522 = state_13479;
                                                        statearr_13522[20] = inst_13419;
                                                        statearr_13522[29] = inst_13411__$1;
                                                        statearr_13522[30] = inst_13413;
                                                        statearr_13522[21] = inst_13421;
                                                        statearr_13522[11] = inst_13420;
                                                        statearr_13522[12] = inst_13422;
                                                        return statearr_13522;
                                                      }();
                                                      var statearr_13523_13592 = state_13479__$1;
                                                      statearr_13523_13592[2] = null;
                                                      statearr_13523_13592[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_13480 === 28) {
                                                        var inst_13419 = state_13479[20];
                                                        var inst_13438 = state_13479[25];
                                                        var inst_13438__$1 = cljs.core.seq.call(null, inst_13419);
                                                        var state_13479__$1 = function() {
                                                          var statearr_13524 = state_13479;
                                                          statearr_13524[25] = inst_13438__$1;
                                                          return statearr_13524;
                                                        }();
                                                        if (inst_13438__$1) {
                                                          var statearr_13525_13593 = state_13479__$1;
                                                          statearr_13525_13593[1] = 33;
                                                        } else {
                                                          var statearr_13526_13594 = state_13479__$1;
                                                          statearr_13526_13594[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_13480 === 25) {
                                                          var inst_13421 = state_13479[21];
                                                          var inst_13422 = state_13479[12];
                                                          var inst_13424 = inst_13422 < inst_13421;
                                                          var inst_13425 = inst_13424;
                                                          var state_13479__$1 = state_13479;
                                                          if (cljs.core.truth_(inst_13425)) {
                                                            var statearr_13527_13595 = state_13479__$1;
                                                            statearr_13527_13595[1] = 27;
                                                          } else {
                                                            var statearr_13528_13596 = state_13479__$1;
                                                            statearr_13528_13596[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_13480 === 34) {
                                                            var state_13479__$1 = state_13479;
                                                            var statearr_13529_13597 = state_13479__$1;
                                                            statearr_13529_13597[2] = null;
                                                            statearr_13529_13597[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_13480 === 17) {
                                                              var state_13479__$1 = state_13479;
                                                              var statearr_13530_13598 = state_13479__$1;
                                                              statearr_13530_13598[2] = null;
                                                              statearr_13530_13598[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_13480 === 3) {
                                                                var inst_13477 = state_13479[2];
                                                                var state_13479__$1 = state_13479;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13479__$1, inst_13477);
                                                              } else {
                                                                if (state_val_13480 === 12) {
                                                                  var inst_13406 = state_13479[2];
                                                                  var state_13479__$1 = state_13479;
                                                                  var statearr_13531_13599 = state_13479__$1;
                                                                  statearr_13531_13599[2] = inst_13406;
                                                                  statearr_13531_13599[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_13480 === 2) {
                                                                    var state_13479__$1 = state_13479;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13479__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_13480 === 23) {
                                                                      var state_13479__$1 = state_13479;
                                                                      var statearr_13532_13600 = state_13479__$1;
                                                                      statearr_13532_13600[2] = null;
                                                                      statearr_13532_13600[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_13480 === 35) {
                                                                        var inst_13461 = state_13479[2];
                                                                        var state_13479__$1 = state_13479;
                                                                        var statearr_13533_13601 = state_13479__$1;
                                                                        statearr_13533_13601[2] = inst_13461;
                                                                        statearr_13533_13601[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_13480 === 19) {
                                                                          var inst_13380 = state_13479[7];
                                                                          var inst_13384 = cljs.core.chunk_first.call(null, inst_13380);
                                                                          var inst_13385 = cljs.core.chunk_rest.call(null, inst_13380);
                                                                          var inst_13386 = cljs.core.count.call(null, inst_13384);
                                                                          var inst_13360 = inst_13385;
                                                                          var inst_13361 = inst_13384;
                                                                          var inst_13362 = inst_13386;
                                                                          var inst_13363 = 0;
                                                                          var state_13479__$1 = function() {
                                                                            var statearr_13534 = state_13479;
                                                                            statearr_13534[13] = inst_13361;
                                                                            statearr_13534[15] = inst_13363;
                                                                            statearr_13534[16] = inst_13362;
                                                                            statearr_13534[17] = inst_13360;
                                                                            return statearr_13534;
                                                                          }();
                                                                          var statearr_13535_13602 = state_13479__$1;
                                                                          statearr_13535_13602[2] = null;
                                                                          statearr_13535_13602[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_13480 === 11) {
                                                                            var inst_13360 = state_13479[17];
                                                                            var inst_13380 = state_13479[7];
                                                                            var inst_13380__$1 = cljs.core.seq.call(null, inst_13360);
                                                                            var state_13479__$1 = function() {
                                                                              var statearr_13536 = state_13479;
                                                                              statearr_13536[7] = inst_13380__$1;
                                                                              return statearr_13536;
                                                                            }();
                                                                            if (inst_13380__$1) {
                                                                              var statearr_13537_13603 = state_13479__$1;
                                                                              statearr_13537_13603[1] = 16;
                                                                            } else {
                                                                              var statearr_13538_13604 = state_13479__$1;
                                                                              statearr_13538_13604[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_13480 === 9) {
                                                                              var inst_13408 = state_13479[2];
                                                                              var state_13479__$1 = state_13479;
                                                                              var statearr_13539_13605 = state_13479__$1;
                                                                              statearr_13539_13605[2] = inst_13408;
                                                                              statearr_13539_13605[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_13480 === 5) {
                                                                                var inst_13358 = cljs.core.deref.call(null, cs);
                                                                                var inst_13359 = cljs.core.seq.call(null, inst_13358);
                                                                                var inst_13360 = inst_13359;
                                                                                var inst_13361 = null;
                                                                                var inst_13362 = 0;
                                                                                var inst_13363 = 0;
                                                                                var state_13479__$1 = function() {
                                                                                  var statearr_13540 = state_13479;
                                                                                  statearr_13540[13] = inst_13361;
                                                                                  statearr_13540[15] = inst_13363;
                                                                                  statearr_13540[16] = inst_13362;
                                                                                  statearr_13540[17] = inst_13360;
                                                                                  return statearr_13540;
                                                                                }();
                                                                                var statearr_13541_13606 = state_13479__$1;
                                                                                statearr_13541_13606[2] = null;
                                                                                statearr_13541_13606[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_13480 === 14) {
                                                                                  var state_13479__$1 = state_13479;
                                                                                  var statearr_13542_13607 = state_13479__$1;
                                                                                  statearr_13542_13607[2] = null;
                                                                                  statearr_13542_13607[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_13480 === 45) {
                                                                                    var inst_13469 = state_13479[2];
                                                                                    var state_13479__$1 = state_13479;
                                                                                    var statearr_13543_13608 = state_13479__$1;
                                                                                    statearr_13543_13608[2] = inst_13469;
                                                                                    statearr_13543_13608[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_13480 === 26) {
                                                                                      var inst_13411 = state_13479[29];
                                                                                      var inst_13465 = state_13479[2];
                                                                                      var inst_13466 = cljs.core.seq.call(null, inst_13411);
                                                                                      var state_13479__$1 = function() {
                                                                                        var statearr_13544 = state_13479;
                                                                                        statearr_13544[31] = inst_13465;
                                                                                        return statearr_13544;
                                                                                      }();
                                                                                      if (inst_13466) {
                                                                                        var statearr_13545_13609 = state_13479__$1;
                                                                                        statearr_13545_13609[1] = 42;
                                                                                      } else {
                                                                                        var statearr_13546_13610 = state_13479__$1;
                                                                                        statearr_13546_13610[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_13480 === 16) {
                                                                                        var inst_13380 = state_13479[7];
                                                                                        var inst_13382 = cljs.core.chunked_seq_QMARK_.call(null, inst_13380);
                                                                                        var state_13479__$1 = state_13479;
                                                                                        if (inst_13382) {
                                                                                          var statearr_13547_13611 = state_13479__$1;
                                                                                          statearr_13547_13611[1] = 19;
                                                                                        } else {
                                                                                          var statearr_13548_13612 = state_13479__$1;
                                                                                          statearr_13548_13612[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_13480 === 38) {
                                                                                          var inst_13458 = state_13479[2];
                                                                                          var state_13479__$1 = state_13479;
                                                                                          var statearr_13549_13613 = state_13479__$1;
                                                                                          statearr_13549_13613[2] = inst_13458;
                                                                                          statearr_13549_13613[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_13480 === 30) {
                                                                                            var state_13479__$1 = state_13479;
                                                                                            var statearr_13550_13614 = state_13479__$1;
                                                                                            statearr_13550_13614[2] = null;
                                                                                            statearr_13550_13614[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_13480 === 10) {
                                                                                              var inst_13361 = state_13479[13];
                                                                                              var inst_13363 = state_13479[15];
                                                                                              var inst_13369 = cljs.core._nth.call(null, inst_13361, inst_13363);
                                                                                              var inst_13370 = cljs.core.nth.call(null, inst_13369, 0, null);
                                                                                              var inst_13371 = cljs.core.nth.call(null, inst_13369, 1, null);
                                                                                              var state_13479__$1 = function() {
                                                                                                var statearr_13551 = state_13479;
                                                                                                statearr_13551[26] = inst_13370;
                                                                                                return statearr_13551;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_13371)) {
                                                                                                var statearr_13552_13615 = state_13479__$1;
                                                                                                statearr_13552_13615[1] = 13;
                                                                                              } else {
                                                                                                var statearr_13553_13616 = state_13479__$1;
                                                                                                statearr_13553_13616[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_13480 === 18) {
                                                                                                var inst_13404 = state_13479[2];
                                                                                                var state_13479__$1 = state_13479;
                                                                                                var statearr_13554_13617 = state_13479__$1;
                                                                                                statearr_13554_13617[2] = inst_13404;
                                                                                                statearr_13554_13617[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_13480 === 42) {
                                                                                                  var state_13479__$1 = state_13479;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13479__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_13480 === 37) {
                                                                                                    var inst_13351 = state_13479[9];
                                                                                                    var inst_13438 = state_13479[25];
                                                                                                    var inst_13447 = state_13479[23];
                                                                                                    var inst_13447__$1 = cljs.core.first.call(null, inst_13438);
                                                                                                    var inst_13448 = cljs.core.async.put_BANG_.call(null, inst_13447__$1, inst_13351, done);
                                                                                                    var state_13479__$1 = function() {
                                                                                                      var statearr_13555 = state_13479;
                                                                                                      statearr_13555[23] = inst_13447__$1;
                                                                                                      return statearr_13555;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_13448)) {
                                                                                                      var statearr_13556_13618 = state_13479__$1;
                                                                                                      statearr_13556_13618[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_13557_13619 = state_13479__$1;
                                                                                                      statearr_13557_13619[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_13480 === 8) {
                                                                                                      var inst_13363 = state_13479[15];
                                                                                                      var inst_13362 = state_13479[16];
                                                                                                      var inst_13365 = inst_13363 < inst_13362;
                                                                                                      var inst_13366 = inst_13365;
                                                                                                      var state_13479__$1 = state_13479;
                                                                                                      if (cljs.core.truth_(inst_13366)) {
                                                                                                        var statearr_13558_13620 = state_13479__$1;
                                                                                                        statearr_13558_13620[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_13559_13621 = state_13479__$1;
                                                                                                        statearr_13559_13621[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6971__auto___13567, cs, m, dchan, dctr, done);
        return function(switch__6956__auto__, c__6971__auto___13567, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__6957__auto__ = null;
            var state_machine__6957__auto____0 = function() {
              var statearr_13563 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_13563[0] = state_machine__6957__auto__;
              statearr_13563[1] = 1;
              return statearr_13563;
            };
            var state_machine__6957__auto____1 = function(state_13479) {
              while (true) {
                var ret_value__6958__auto__ = function() {
                  try {
                    while (true) {
                      var result__6959__auto__ = switch__6956__auto__.call(null, state_13479);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6959__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6959__auto__;
                      }
                      break;
                    }
                  } catch (e13564) {
                    if (e13564 instanceof Object) {
                      var ex__6960__auto__ = e13564;
                      var statearr_13565_13622 = state_13479;
                      statearr_13565_13622[5] = ex__6960__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13479);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e13564;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6958__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__13623 = state_13479;
                  state_13479 = G__13623;
                  continue;
                } else {
                  return ret_value__6958__auto__;
                }
                break;
              }
            };
            state_machine__6957__auto__ = function(state_13479) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6957__auto____0.call(this);
                case 1:
                  return state_machine__6957__auto____1.call(this, state_13479);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6957__auto____0;
            state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6957__auto____1;
            return state_machine__6957__auto__;
          }();
        }(switch__6956__auto__, c__6971__auto___13567, cs, m, dchan, dctr, done);
      }();
      var state__6973__auto__ = function() {
        var statearr_13566 = f__6972__auto__.call(null);
        statearr_13566[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6971__auto___13567;
        return statearr_13566;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6973__auto__);
    };
  }(c__6971__auto___13567, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj13625 = {};
  return obj13625;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3618__auto__ = m;
    if (and__3618__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4274__auto__ = m == null ? null : m;
    return function() {
      var or__3630__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3618__auto__ = m;
    if (and__3618__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4274__auto__ = m == null ? null : m;
    return function() {
      var or__3630__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3618__auto__ = m;
    if (and__3618__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4274__auto__ = m == null ? null : m;
    return function() {
      var or__3630__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3618__auto__ = m;
    if (and__3618__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4274__auto__ = m == null ? null : m;
    return function() {
      var or__3630__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3618__auto__ = m;
    if (and__3618__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4274__auto__ = m == null ? null : m;
    return function() {
      var or__3630__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__13626) {
    var map__13631 = p__13626;
    var map__13631__$1 = cljs.core.seq_QMARK_.call(null, map__13631) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13631) : map__13631;
    var opts = map__13631__$1;
    var statearr_13632_13635 = state;
    statearr_13632_13635[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__13631, map__13631__$1, opts) {
      return function(val) {
        var statearr_13633_13636 = state;
        statearr_13633_13636[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__13631, map__13631__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_13634_13637 = state;
      statearr_13634_13637[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__13626 = null;
    if (arguments.length > 3) {
      p__13626 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__13626);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__13638) {
    var state = cljs.core.first(arglist__13638);
    arglist__13638 = cljs.core.next(arglist__13638);
    var cont_block = cljs.core.first(arglist__13638);
    arglist__13638 = cljs.core.next(arglist__13638);
    var ports = cljs.core.first(arglist__13638);
    var p__13626 = cljs.core.rest(arglist__13638);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__13626);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t13758 !== "undefined") {
    } else {
      cljs.core.async.t13758 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta13759) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta13759 = meta13759;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t13758.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t13758.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t13758.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t13758.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t13758.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t13758.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t13758.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t13758.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t13758.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_13760) {
          var self__ = this;
          var _13760__$1 = this;
          return self__.meta13759;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t13758.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_13760, meta13759__$1) {
          var self__ = this;
          var _13760__$1 = this;
          return new cljs.core.async.t13758(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta13759__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t13758.cljs$lang$type = true;
      cljs.core.async.t13758.cljs$lang$ctorStr = "cljs.core.async/t13758";
      cljs.core.async.t13758.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
          return cljs.core._write.call(null, writer__4218__auto__, "cljs.core.async/t13758");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t13758 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t13758(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta13759) {
          return new cljs.core.async.t13758(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta13759);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t13758(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 25, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 510, new cljs.core.Keyword(null, "column", "column", 2078222095), 11, new cljs.core.Keyword(null, "line", "line", 212345235), 499, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core\\async.cljs"], 
    null));
  }();
  var c__6971__auto___13877 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6971__auto___13877, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__6972__auto__ = function() {
        var switch__6956__auto__ = function(c__6971__auto___13877, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_13830) {
            var state_val_13831 = state_13830[1];
            if (state_val_13831 === 7) {
              var inst_13774 = state_13830[7];
              var inst_13779 = cljs.core.apply.call(null, cljs.core.hash_map, inst_13774);
              var state_13830__$1 = state_13830;
              var statearr_13832_13878 = state_13830__$1;
              statearr_13832_13878[2] = inst_13779;
              statearr_13832_13878[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_13831 === 20) {
                var inst_13789 = state_13830[8];
                var state_13830__$1 = state_13830;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13830__$1, 23, out, inst_13789);
              } else {
                if (state_val_13831 === 1) {
                  var inst_13764 = state_13830[9];
                  var inst_13764__$1 = calc_state.call(null);
                  var inst_13765 = cljs.core.seq_QMARK_.call(null, inst_13764__$1);
                  var state_13830__$1 = function() {
                    var statearr_13833 = state_13830;
                    statearr_13833[9] = inst_13764__$1;
                    return statearr_13833;
                  }();
                  if (inst_13765) {
                    var statearr_13834_13879 = state_13830__$1;
                    statearr_13834_13879[1] = 2;
                  } else {
                    var statearr_13835_13880 = state_13830__$1;
                    statearr_13835_13880[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13831 === 24) {
                    var inst_13782 = state_13830[10];
                    var inst_13774 = inst_13782;
                    var state_13830__$1 = function() {
                      var statearr_13836 = state_13830;
                      statearr_13836[7] = inst_13774;
                      return statearr_13836;
                    }();
                    var statearr_13837_13881 = state_13830__$1;
                    statearr_13837_13881[2] = null;
                    statearr_13837_13881[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_13831 === 4) {
                      var inst_13764 = state_13830[9];
                      var inst_13770 = state_13830[2];
                      var inst_13771 = cljs.core.get.call(null, inst_13770, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                      var inst_13772 = cljs.core.get.call(null, inst_13770, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                      var inst_13773 = cljs.core.get.call(null, inst_13770, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                      var inst_13774 = inst_13764;
                      var state_13830__$1 = function() {
                        var statearr_13838 = state_13830;
                        statearr_13838[11] = inst_13773;
                        statearr_13838[12] = inst_13772;
                        statearr_13838[7] = inst_13774;
                        statearr_13838[13] = inst_13771;
                        return statearr_13838;
                      }();
                      var statearr_13839_13882 = state_13830__$1;
                      statearr_13839_13882[2] = null;
                      statearr_13839_13882[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13831 === 15) {
                        var state_13830__$1 = state_13830;
                        var statearr_13840_13883 = state_13830__$1;
                        statearr_13840_13883[2] = null;
                        statearr_13840_13883[1] = 16;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_13831 === 21) {
                          var inst_13782 = state_13830[10];
                          var inst_13774 = inst_13782;
                          var state_13830__$1 = function() {
                            var statearr_13841 = state_13830;
                            statearr_13841[7] = inst_13774;
                            return statearr_13841;
                          }();
                          var statearr_13842_13884 = state_13830__$1;
                          statearr_13842_13884[2] = null;
                          statearr_13842_13884[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_13831 === 13) {
                            var inst_13826 = state_13830[2];
                            var state_13830__$1 = state_13830;
                            var statearr_13843_13885 = state_13830__$1;
                            statearr_13843_13885[2] = inst_13826;
                            statearr_13843_13885[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_13831 === 22) {
                              var inst_13824 = state_13830[2];
                              var state_13830__$1 = state_13830;
                              var statearr_13844_13886 = state_13830__$1;
                              statearr_13844_13886[2] = inst_13824;
                              statearr_13844_13886[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_13831 === 6) {
                                var inst_13828 = state_13830[2];
                                var state_13830__$1 = state_13830;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13830__$1, inst_13828);
                              } else {
                                if (state_val_13831 === 25) {
                                  var state_13830__$1 = state_13830;
                                  var statearr_13845_13887 = state_13830__$1;
                                  statearr_13845_13887[2] = null;
                                  statearr_13845_13887[1] = 26;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_13831 === 17) {
                                    var inst_13804 = state_13830[14];
                                    var state_13830__$1 = state_13830;
                                    var statearr_13846_13888 = state_13830__$1;
                                    statearr_13846_13888[2] = inst_13804;
                                    statearr_13846_13888[1] = 19;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_13831 === 3) {
                                      var inst_13764 = state_13830[9];
                                      var state_13830__$1 = state_13830;
                                      var statearr_13847_13889 = state_13830__$1;
                                      statearr_13847_13889[2] = inst_13764;
                                      statearr_13847_13889[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_13831 === 12) {
                                        var inst_13785 = state_13830[15];
                                        var inst_13804 = state_13830[14];
                                        var inst_13790 = state_13830[16];
                                        var inst_13804__$1 = inst_13785.call(null, inst_13790);
                                        var state_13830__$1 = function() {
                                          var statearr_13848 = state_13830;
                                          statearr_13848[14] = inst_13804__$1;
                                          return statearr_13848;
                                        }();
                                        if (cljs.core.truth_(inst_13804__$1)) {
                                          var statearr_13849_13890 = state_13830__$1;
                                          statearr_13849_13890[1] = 17;
                                        } else {
                                          var statearr_13850_13891 = state_13830__$1;
                                          statearr_13850_13891[1] = 18;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_13831 === 2) {
                                          var inst_13764 = state_13830[9];
                                          var inst_13767 = cljs.core.apply.call(null, cljs.core.hash_map, inst_13764);
                                          var state_13830__$1 = state_13830;
                                          var statearr_13851_13892 = state_13830__$1;
                                          statearr_13851_13892[2] = inst_13767;
                                          statearr_13851_13892[1] = 4;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_13831 === 23) {
                                            var inst_13815 = state_13830[2];
                                            var state_13830__$1 = state_13830;
                                            if (cljs.core.truth_(inst_13815)) {
                                              var statearr_13852_13893 = state_13830__$1;
                                              statearr_13852_13893[1] = 24;
                                            } else {
                                              var statearr_13853_13894 = state_13830__$1;
                                              statearr_13853_13894[1] = 25;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_13831 === 19) {
                                              var inst_13812 = state_13830[2];
                                              var state_13830__$1 = state_13830;
                                              if (cljs.core.truth_(inst_13812)) {
                                                var statearr_13854_13895 = state_13830__$1;
                                                statearr_13854_13895[1] = 20;
                                              } else {
                                                var statearr_13855_13896 = state_13830__$1;
                                                statearr_13855_13896[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_13831 === 11) {
                                                var inst_13789 = state_13830[8];
                                                var inst_13795 = inst_13789 == null;
                                                var state_13830__$1 = state_13830;
                                                if (cljs.core.truth_(inst_13795)) {
                                                  var statearr_13856_13897 = state_13830__$1;
                                                  statearr_13856_13897[1] = 14;
                                                } else {
                                                  var statearr_13857_13898 = state_13830__$1;
                                                  statearr_13857_13898[1] = 15;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_13831 === 9) {
                                                  var inst_13782 = state_13830[10];
                                                  var inst_13782__$1 = state_13830[2];
                                                  var inst_13783 = cljs.core.get.call(null, inst_13782__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                  var inst_13784 = cljs.core.get.call(null, inst_13782__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                  var inst_13785 = cljs.core.get.call(null, inst_13782__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                  var state_13830__$1 = function() {
                                                    var statearr_13858 = state_13830;
                                                    statearr_13858[10] = inst_13782__$1;
                                                    statearr_13858[15] = inst_13785;
                                                    statearr_13858[17] = inst_13784;
                                                    return statearr_13858;
                                                  }();
                                                  return cljs.core.async.ioc_alts_BANG_.call(null, state_13830__$1, 10, inst_13783);
                                                } else {
                                                  if (state_val_13831 === 5) {
                                                    var inst_13774 = state_13830[7];
                                                    var inst_13777 = cljs.core.seq_QMARK_.call(null, inst_13774);
                                                    var state_13830__$1 = state_13830;
                                                    if (inst_13777) {
                                                      var statearr_13859_13899 = state_13830__$1;
                                                      statearr_13859_13899[1] = 7;
                                                    } else {
                                                      var statearr_13860_13900 = state_13830__$1;
                                                      statearr_13860_13900[1] = 8;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_13831 === 14) {
                                                      var inst_13790 = state_13830[16];
                                                      var inst_13797 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_13790);
                                                      var state_13830__$1 = state_13830;
                                                      var statearr_13861_13901 = state_13830__$1;
                                                      statearr_13861_13901[2] = inst_13797;
                                                      statearr_13861_13901[1] = 16;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_13831 === 26) {
                                                        var inst_13820 = state_13830[2];
                                                        var state_13830__$1 = state_13830;
                                                        var statearr_13862_13902 = state_13830__$1;
                                                        statearr_13862_13902[2] = inst_13820;
                                                        statearr_13862_13902[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_13831 === 16) {
                                                          var inst_13800 = state_13830[2];
                                                          var inst_13801 = calc_state.call(null);
                                                          var inst_13774 = inst_13801;
                                                          var state_13830__$1 = function() {
                                                            var statearr_13863 = state_13830;
                                                            statearr_13863[7] = inst_13774;
                                                            statearr_13863[18] = inst_13800;
                                                            return statearr_13863;
                                                          }();
                                                          var statearr_13864_13903 = state_13830__$1;
                                                          statearr_13864_13903[2] = null;
                                                          statearr_13864_13903[1] = 5;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_13831 === 10) {
                                                            var inst_13789 = state_13830[8];
                                                            var inst_13790 = state_13830[16];
                                                            var inst_13788 = state_13830[2];
                                                            var inst_13789__$1 = cljs.core.nth.call(null, inst_13788, 0, null);
                                                            var inst_13790__$1 = cljs.core.nth.call(null, inst_13788, 1, null);
                                                            var inst_13791 = inst_13789__$1 == null;
                                                            var inst_13792 = cljs.core._EQ_.call(null, inst_13790__$1, change);
                                                            var inst_13793 = inst_13791 || inst_13792;
                                                            var state_13830__$1 = function() {
                                                              var statearr_13865 = state_13830;
                                                              statearr_13865[8] = inst_13789__$1;
                                                              statearr_13865[16] = inst_13790__$1;
                                                              return statearr_13865;
                                                            }();
                                                            if (cljs.core.truth_(inst_13793)) {
                                                              var statearr_13866_13904 = state_13830__$1;
                                                              statearr_13866_13904[1] = 11;
                                                            } else {
                                                              var statearr_13867_13905 = state_13830__$1;
                                                              statearr_13867_13905[1] = 12;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_13831 === 18) {
                                                              var inst_13785 = state_13830[15];
                                                              var inst_13784 = state_13830[17];
                                                              var inst_13790 = state_13830[16];
                                                              var inst_13807 = cljs.core.empty_QMARK_.call(null, inst_13785);
                                                              var inst_13808 = inst_13784.call(null, inst_13790);
                                                              var inst_13809 = cljs.core.not.call(null, inst_13808);
                                                              var inst_13810 = inst_13807 && inst_13809;
                                                              var state_13830__$1 = state_13830;
                                                              var statearr_13868_13906 = state_13830__$1;
                                                              statearr_13868_13906[2] = inst_13810;
                                                              statearr_13868_13906[1] = 19;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_13831 === 8) {
                                                                var inst_13774 = state_13830[7];
                                                                var state_13830__$1 = state_13830;
                                                                var statearr_13869_13907 = state_13830__$1;
                                                                statearr_13869_13907[2] = inst_13774;
                                                                statearr_13869_13907[1] = 9;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6971__auto___13877, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__6956__auto__, c__6971__auto___13877, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__6957__auto__ = null;
            var state_machine__6957__auto____0 = function() {
              var statearr_13873 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_13873[0] = state_machine__6957__auto__;
              statearr_13873[1] = 1;
              return statearr_13873;
            };
            var state_machine__6957__auto____1 = function(state_13830) {
              while (true) {
                var ret_value__6958__auto__ = function() {
                  try {
                    while (true) {
                      var result__6959__auto__ = switch__6956__auto__.call(null, state_13830);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6959__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6959__auto__;
                      }
                      break;
                    }
                  } catch (e13874) {
                    if (e13874 instanceof Object) {
                      var ex__6960__auto__ = e13874;
                      var statearr_13875_13908 = state_13830;
                      statearr_13875_13908[5] = ex__6960__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13830);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e13874;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6958__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__13909 = state_13830;
                  state_13830 = G__13909;
                  continue;
                } else {
                  return ret_value__6958__auto__;
                }
                break;
              }
            };
            state_machine__6957__auto__ = function(state_13830) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6957__auto____0.call(this);
                case 1:
                  return state_machine__6957__auto____1.call(this, state_13830);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6957__auto____0;
            state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6957__auto____1;
            return state_machine__6957__auto__;
          }();
        }(switch__6956__auto__, c__6971__auto___13877, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__6973__auto__ = function() {
        var statearr_13876 = f__6972__auto__.call(null);
        statearr_13876[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6971__auto___13877;
        return statearr_13876;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6973__auto__);
    };
  }(c__6971__auto___13877, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj13911 = {};
  return obj13911;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3618__auto__ = p;
    if (and__3618__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4274__auto__ = p == null ? null : p;
    return function() {
      var or__3630__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3618__auto__ = p;
    if (and__3618__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4274__auto__ = p == null ? null : p;
    return function() {
      var or__3630__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3618__auto__ = p;
      if (and__3618__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4274__auto__ = p == null ? null : p;
      return function() {
        var or__3630__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3618__auto__ = p;
      if (and__3618__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4274__auto__ = p == null ? null : p;
      return function() {
        var or__3630__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3630__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3630__auto__, mults) {
            return function(p1__13912_SHARP_) {
              if (cljs.core.truth_(p1__13912_SHARP_.call(null, topic))) {
                return p1__13912_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__13912_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3630__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t14035 !== "undefined") {
      } else {
        cljs.core.async.t14035 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta14036) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta14036 = meta14036;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t14035.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t14035.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t14035.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$1);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t14035.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t14035.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t14035.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t14035.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t14035.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_14037) {
            var self__ = this;
            var _14037__$1 = this;
            return self__.meta14036;
          };
        }(mults, ensure_mult);
        cljs.core.async.t14035.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_14037, meta14036__$1) {
            var self__ = this;
            var _14037__$1 = this;
            return new cljs.core.async.t14035(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta14036__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.t14035.cljs$lang$type = true;
        cljs.core.async.t14035.cljs$lang$ctorStr = "cljs.core.async/t14035";
        cljs.core.async.t14035.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
            return cljs.core._write.call(null, writer__4218__auto__, "cljs.core.async/t14035");
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t14035 = function(mults, ensure_mult) {
          return function __GT_t14035(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta14036) {
            return new cljs.core.async.t14035(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta14036);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t14035(ensure_mult, mults, buf_fn, topic_fn, ch, pub, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 65, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 603, new cljs.core.Keyword(null, "column", "column", 2078222095), 14, new cljs.core.Keyword(null, "line", "line", 212345235), 591, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core\\async.cljs"], 
      null));
    }();
    var c__6971__auto___14157 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6971__auto___14157, mults, ensure_mult, p) {
      return function() {
        var f__6972__auto__ = function() {
          var switch__6956__auto__ = function(c__6971__auto___14157, mults, ensure_mult, p) {
            return function(state_14109) {
              var state_val_14110 = state_14109[1];
              if (state_val_14110 === 7) {
                var inst_14105 = state_14109[2];
                var state_14109__$1 = state_14109;
                var statearr_14111_14158 = state_14109__$1;
                statearr_14111_14158[2] = inst_14105;
                statearr_14111_14158[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14110 === 20) {
                  var state_14109__$1 = state_14109;
                  var statearr_14112_14159 = state_14109__$1;
                  statearr_14112_14159[2] = null;
                  statearr_14112_14159[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14110 === 1) {
                    var state_14109__$1 = state_14109;
                    var statearr_14113_14160 = state_14109__$1;
                    statearr_14113_14160[2] = null;
                    statearr_14113_14160[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14110 === 24) {
                      var inst_14088 = state_14109[7];
                      var inst_14097 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_14088);
                      var state_14109__$1 = state_14109;
                      var statearr_14114_14161 = state_14109__$1;
                      statearr_14114_14161[2] = inst_14097;
                      statearr_14114_14161[1] = 25;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14110 === 4) {
                        var inst_14040 = state_14109[8];
                        var inst_14040__$1 = state_14109[2];
                        var inst_14041 = inst_14040__$1 == null;
                        var state_14109__$1 = function() {
                          var statearr_14115 = state_14109;
                          statearr_14115[8] = inst_14040__$1;
                          return statearr_14115;
                        }();
                        if (cljs.core.truth_(inst_14041)) {
                          var statearr_14116_14162 = state_14109__$1;
                          statearr_14116_14162[1] = 5;
                        } else {
                          var statearr_14117_14163 = state_14109__$1;
                          statearr_14117_14163[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_14110 === 15) {
                          var inst_14082 = state_14109[2];
                          var state_14109__$1 = state_14109;
                          var statearr_14118_14164 = state_14109__$1;
                          statearr_14118_14164[2] = inst_14082;
                          statearr_14118_14164[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14110 === 21) {
                            var inst_14102 = state_14109[2];
                            var state_14109__$1 = function() {
                              var statearr_14119 = state_14109;
                              statearr_14119[9] = inst_14102;
                              return statearr_14119;
                            }();
                            var statearr_14120_14165 = state_14109__$1;
                            statearr_14120_14165[2] = null;
                            statearr_14120_14165[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_14110 === 13) {
                              var inst_14064 = state_14109[10];
                              var inst_14066 = cljs.core.chunked_seq_QMARK_.call(null, inst_14064);
                              var state_14109__$1 = state_14109;
                              if (inst_14066) {
                                var statearr_14121_14166 = state_14109__$1;
                                statearr_14121_14166[1] = 16;
                              } else {
                                var statearr_14122_14167 = state_14109__$1;
                                statearr_14122_14167[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14110 === 22) {
                                var inst_14094 = state_14109[2];
                                var state_14109__$1 = state_14109;
                                if (cljs.core.truth_(inst_14094)) {
                                  var statearr_14123_14168 = state_14109__$1;
                                  statearr_14123_14168[1] = 23;
                                } else {
                                  var statearr_14124_14169 = state_14109__$1;
                                  statearr_14124_14169[1] = 24;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14110 === 6) {
                                  var inst_14088 = state_14109[7];
                                  var inst_14040 = state_14109[8];
                                  var inst_14090 = state_14109[11];
                                  var inst_14088__$1 = topic_fn.call(null, inst_14040);
                                  var inst_14089 = cljs.core.deref.call(null, mults);
                                  var inst_14090__$1 = cljs.core.get.call(null, inst_14089, inst_14088__$1);
                                  var state_14109__$1 = function() {
                                    var statearr_14125 = state_14109;
                                    statearr_14125[7] = inst_14088__$1;
                                    statearr_14125[11] = inst_14090__$1;
                                    return statearr_14125;
                                  }();
                                  if (cljs.core.truth_(inst_14090__$1)) {
                                    var statearr_14126_14170 = state_14109__$1;
                                    statearr_14126_14170[1] = 19;
                                  } else {
                                    var statearr_14127_14171 = state_14109__$1;
                                    statearr_14127_14171[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14110 === 25) {
                                    var inst_14099 = state_14109[2];
                                    var state_14109__$1 = state_14109;
                                    var statearr_14128_14172 = state_14109__$1;
                                    statearr_14128_14172[2] = inst_14099;
                                    statearr_14128_14172[1] = 21;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_14110 === 17) {
                                      var inst_14064 = state_14109[10];
                                      var inst_14073 = cljs.core.first.call(null, inst_14064);
                                      var inst_14074 = cljs.core.async.muxch_STAR_.call(null, inst_14073);
                                      var inst_14075 = cljs.core.async.close_BANG_.call(null, inst_14074);
                                      var inst_14076 = cljs.core.next.call(null, inst_14064);
                                      var inst_14050 = inst_14076;
                                      var inst_14051 = null;
                                      var inst_14052 = 0;
                                      var inst_14053 = 0;
                                      var state_14109__$1 = function() {
                                        var statearr_14129 = state_14109;
                                        statearr_14129[12] = inst_14050;
                                        statearr_14129[13] = inst_14075;
                                        statearr_14129[14] = inst_14052;
                                        statearr_14129[15] = inst_14051;
                                        statearr_14129[16] = inst_14053;
                                        return statearr_14129;
                                      }();
                                      var statearr_14130_14173 = state_14109__$1;
                                      statearr_14130_14173[2] = null;
                                      statearr_14130_14173[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_14110 === 3) {
                                        var inst_14107 = state_14109[2];
                                        var state_14109__$1 = state_14109;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14109__$1, inst_14107);
                                      } else {
                                        if (state_val_14110 === 12) {
                                          var inst_14084 = state_14109[2];
                                          var state_14109__$1 = state_14109;
                                          var statearr_14131_14174 = state_14109__$1;
                                          statearr_14131_14174[2] = inst_14084;
                                          statearr_14131_14174[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_14110 === 2) {
                                            var state_14109__$1 = state_14109;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14109__$1, 4, ch);
                                          } else {
                                            if (state_val_14110 === 23) {
                                              var state_14109__$1 = state_14109;
                                              var statearr_14132_14175 = state_14109__$1;
                                              statearr_14132_14175[2] = null;
                                              statearr_14132_14175[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_14110 === 19) {
                                                var inst_14040 = state_14109[8];
                                                var inst_14090 = state_14109[11];
                                                var inst_14092 = cljs.core.async.muxch_STAR_.call(null, inst_14090);
                                                var state_14109__$1 = state_14109;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14109__$1, 22, inst_14092, inst_14040);
                                              } else {
                                                if (state_val_14110 === 11) {
                                                  var inst_14050 = state_14109[12];
                                                  var inst_14064 = state_14109[10];
                                                  var inst_14064__$1 = cljs.core.seq.call(null, inst_14050);
                                                  var state_14109__$1 = function() {
                                                    var statearr_14133 = state_14109;
                                                    statearr_14133[10] = inst_14064__$1;
                                                    return statearr_14133;
                                                  }();
                                                  if (inst_14064__$1) {
                                                    var statearr_14134_14176 = state_14109__$1;
                                                    statearr_14134_14176[1] = 13;
                                                  } else {
                                                    var statearr_14135_14177 = state_14109__$1;
                                                    statearr_14135_14177[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_14110 === 9) {
                                                    var inst_14086 = state_14109[2];
                                                    var state_14109__$1 = state_14109;
                                                    var statearr_14136_14178 = state_14109__$1;
                                                    statearr_14136_14178[2] = inst_14086;
                                                    statearr_14136_14178[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_14110 === 5) {
                                                      var inst_14047 = cljs.core.deref.call(null, mults);
                                                      var inst_14048 = cljs.core.vals.call(null, inst_14047);
                                                      var inst_14049 = cljs.core.seq.call(null, inst_14048);
                                                      var inst_14050 = inst_14049;
                                                      var inst_14051 = null;
                                                      var inst_14052 = 0;
                                                      var inst_14053 = 0;
                                                      var state_14109__$1 = function() {
                                                        var statearr_14137 = state_14109;
                                                        statearr_14137[12] = inst_14050;
                                                        statearr_14137[14] = inst_14052;
                                                        statearr_14137[15] = inst_14051;
                                                        statearr_14137[16] = inst_14053;
                                                        return statearr_14137;
                                                      }();
                                                      var statearr_14138_14179 = state_14109__$1;
                                                      statearr_14138_14179[2] = null;
                                                      statearr_14138_14179[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_14110 === 14) {
                                                        var state_14109__$1 = state_14109;
                                                        var statearr_14142_14180 = state_14109__$1;
                                                        statearr_14142_14180[2] = null;
                                                        statearr_14142_14180[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_14110 === 16) {
                                                          var inst_14064 = state_14109[10];
                                                          var inst_14068 = cljs.core.chunk_first.call(null, inst_14064);
                                                          var inst_14069 = cljs.core.chunk_rest.call(null, inst_14064);
                                                          var inst_14070 = cljs.core.count.call(null, inst_14068);
                                                          var inst_14050 = inst_14069;
                                                          var inst_14051 = inst_14068;
                                                          var inst_14052 = inst_14070;
                                                          var inst_14053 = 0;
                                                          var state_14109__$1 = function() {
                                                            var statearr_14143 = state_14109;
                                                            statearr_14143[12] = inst_14050;
                                                            statearr_14143[14] = inst_14052;
                                                            statearr_14143[15] = inst_14051;
                                                            statearr_14143[16] = inst_14053;
                                                            return statearr_14143;
                                                          }();
                                                          var statearr_14144_14181 = state_14109__$1;
                                                          statearr_14144_14181[2] = null;
                                                          statearr_14144_14181[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_14110 === 10) {
                                                            var inst_14050 = state_14109[12];
                                                            var inst_14052 = state_14109[14];
                                                            var inst_14051 = state_14109[15];
                                                            var inst_14053 = state_14109[16];
                                                            var inst_14058 = cljs.core._nth.call(null, inst_14051, inst_14053);
                                                            var inst_14059 = cljs.core.async.muxch_STAR_.call(null, inst_14058);
                                                            var inst_14060 = cljs.core.async.close_BANG_.call(null, inst_14059);
                                                            var inst_14061 = inst_14053 + 1;
                                                            var tmp14139 = inst_14050;
                                                            var tmp14140 = inst_14052;
                                                            var tmp14141 = inst_14051;
                                                            var inst_14050__$1 = tmp14139;
                                                            var inst_14051__$1 = tmp14141;
                                                            var inst_14052__$1 = tmp14140;
                                                            var inst_14053__$1 = inst_14061;
                                                            var state_14109__$1 = function() {
                                                              var statearr_14145 = state_14109;
                                                              statearr_14145[12] = inst_14050__$1;
                                                              statearr_14145[14] = inst_14052__$1;
                                                              statearr_14145[15] = inst_14051__$1;
                                                              statearr_14145[17] = inst_14060;
                                                              statearr_14145[16] = inst_14053__$1;
                                                              return statearr_14145;
                                                            }();
                                                            var statearr_14146_14182 = state_14109__$1;
                                                            statearr_14146_14182[2] = null;
                                                            statearr_14146_14182[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_14110 === 18) {
                                                              var inst_14079 = state_14109[2];
                                                              var state_14109__$1 = state_14109;
                                                              var statearr_14147_14183 = state_14109__$1;
                                                              statearr_14147_14183[2] = inst_14079;
                                                              statearr_14147_14183[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_14110 === 8) {
                                                                var inst_14052 = state_14109[14];
                                                                var inst_14053 = state_14109[16];
                                                                var inst_14055 = inst_14053 < inst_14052;
                                                                var inst_14056 = inst_14055;
                                                                var state_14109__$1 = state_14109;
                                                                if (cljs.core.truth_(inst_14056)) {
                                                                  var statearr_14148_14184 = state_14109__$1;
                                                                  statearr_14148_14184[1] = 10;
                                                                } else {
                                                                  var statearr_14149_14185 = state_14109__$1;
                                                                  statearr_14149_14185[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6971__auto___14157, mults, ensure_mult, p);
          return function(switch__6956__auto__, c__6971__auto___14157, mults, ensure_mult, p) {
            return function() {
              var state_machine__6957__auto__ = null;
              var state_machine__6957__auto____0 = function() {
                var statearr_14153 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_14153[0] = state_machine__6957__auto__;
                statearr_14153[1] = 1;
                return statearr_14153;
              };
              var state_machine__6957__auto____1 = function(state_14109) {
                while (true) {
                  var ret_value__6958__auto__ = function() {
                    try {
                      while (true) {
                        var result__6959__auto__ = switch__6956__auto__.call(null, state_14109);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6959__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6959__auto__;
                        }
                        break;
                      }
                    } catch (e14154) {
                      if (e14154 instanceof Object) {
                        var ex__6960__auto__ = e14154;
                        var statearr_14155_14186 = state_14109;
                        statearr_14155_14186[5] = ex__6960__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14109);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e14154;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6958__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__14187 = state_14109;
                    state_14109 = G__14187;
                    continue;
                  } else {
                    return ret_value__6958__auto__;
                  }
                  break;
                }
              };
              state_machine__6957__auto__ = function(state_14109) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6957__auto____0.call(this);
                  case 1:
                    return state_machine__6957__auto____1.call(this, state_14109);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6957__auto____0;
              state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6957__auto____1;
              return state_machine__6957__auto__;
            }();
          }(switch__6956__auto__, c__6971__auto___14157, mults, ensure_mult, p);
        }();
        var state__6973__auto__ = function() {
          var statearr_14156 = f__6972__auto__.call(null);
          statearr_14156[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6971__auto___14157;
          return statearr_14156;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6973__auto__);
      };
    }(c__6971__auto___14157, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__6971__auto___14324 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6971__auto___14324, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__6972__auto__ = function() {
          var switch__6956__auto__ = function(c__6971__auto___14324, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_14294) {
              var state_val_14295 = state_14294[1];
              if (state_val_14295 === 7) {
                var state_14294__$1 = state_14294;
                var statearr_14296_14325 = state_14294__$1;
                statearr_14296_14325[2] = null;
                statearr_14296_14325[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14295 === 1) {
                  var state_14294__$1 = state_14294;
                  var statearr_14297_14326 = state_14294__$1;
                  statearr_14297_14326[2] = null;
                  statearr_14297_14326[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14295 === 4) {
                    var inst_14258 = state_14294[7];
                    var inst_14260 = inst_14258 < cnt;
                    var state_14294__$1 = state_14294;
                    if (cljs.core.truth_(inst_14260)) {
                      var statearr_14298_14327 = state_14294__$1;
                      statearr_14298_14327[1] = 6;
                    } else {
                      var statearr_14299_14328 = state_14294__$1;
                      statearr_14299_14328[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14295 === 15) {
                      var inst_14290 = state_14294[2];
                      var state_14294__$1 = state_14294;
                      var statearr_14300_14329 = state_14294__$1;
                      statearr_14300_14329[2] = inst_14290;
                      statearr_14300_14329[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14295 === 13) {
                        var inst_14283 = cljs.core.async.close_BANG_.call(null, out);
                        var state_14294__$1 = state_14294;
                        var statearr_14301_14330 = state_14294__$1;
                        statearr_14301_14330[2] = inst_14283;
                        statearr_14301_14330[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_14295 === 6) {
                          var state_14294__$1 = state_14294;
                          var statearr_14302_14331 = state_14294__$1;
                          statearr_14302_14331[2] = null;
                          statearr_14302_14331[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14295 === 3) {
                            var inst_14292 = state_14294[2];
                            var state_14294__$1 = state_14294;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14294__$1, inst_14292);
                          } else {
                            if (state_val_14295 === 12) {
                              var inst_14280 = state_14294[8];
                              var inst_14280__$1 = state_14294[2];
                              var inst_14281 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_14280__$1);
                              var state_14294__$1 = function() {
                                var statearr_14303 = state_14294;
                                statearr_14303[8] = inst_14280__$1;
                                return statearr_14303;
                              }();
                              if (cljs.core.truth_(inst_14281)) {
                                var statearr_14304_14332 = state_14294__$1;
                                statearr_14304_14332[1] = 13;
                              } else {
                                var statearr_14305_14333 = state_14294__$1;
                                statearr_14305_14333[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14295 === 2) {
                                var inst_14257 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_14258 = 0;
                                var state_14294__$1 = function() {
                                  var statearr_14306 = state_14294;
                                  statearr_14306[7] = inst_14258;
                                  statearr_14306[9] = inst_14257;
                                  return statearr_14306;
                                }();
                                var statearr_14307_14334 = state_14294__$1;
                                statearr_14307_14334[2] = null;
                                statearr_14307_14334[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14295 === 11) {
                                  var inst_14258 = state_14294[7];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_14294, 10, Object, null, 9);
                                  var inst_14267 = chs__$1.call(null, inst_14258);
                                  var inst_14268 = done.call(null, inst_14258);
                                  var inst_14269 = cljs.core.async.take_BANG_.call(null, inst_14267, inst_14268);
                                  var state_14294__$1 = state_14294;
                                  var statearr_14308_14335 = state_14294__$1;
                                  statearr_14308_14335[2] = inst_14269;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14294__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14295 === 9) {
                                    var inst_14258 = state_14294[7];
                                    var inst_14271 = state_14294[2];
                                    var inst_14272 = inst_14258 + 1;
                                    var inst_14258__$1 = inst_14272;
                                    var state_14294__$1 = function() {
                                      var statearr_14309 = state_14294;
                                      statearr_14309[7] = inst_14258__$1;
                                      statearr_14309[10] = inst_14271;
                                      return statearr_14309;
                                    }();
                                    var statearr_14310_14336 = state_14294__$1;
                                    statearr_14310_14336[2] = null;
                                    statearr_14310_14336[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_14295 === 5) {
                                      var inst_14278 = state_14294[2];
                                      var state_14294__$1 = function() {
                                        var statearr_14311 = state_14294;
                                        statearr_14311[11] = inst_14278;
                                        return statearr_14311;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14294__$1, 12, dchan);
                                    } else {
                                      if (state_val_14295 === 14) {
                                        var inst_14280 = state_14294[8];
                                        var inst_14285 = cljs.core.apply.call(null, f, inst_14280);
                                        var state_14294__$1 = state_14294;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14294__$1, 16, out, inst_14285);
                                      } else {
                                        if (state_val_14295 === 16) {
                                          var inst_14287 = state_14294[2];
                                          var state_14294__$1 = function() {
                                            var statearr_14312 = state_14294;
                                            statearr_14312[12] = inst_14287;
                                            return statearr_14312;
                                          }();
                                          var statearr_14313_14337 = state_14294__$1;
                                          statearr_14313_14337[2] = null;
                                          statearr_14313_14337[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_14295 === 10) {
                                            var inst_14262 = state_14294[2];
                                            var inst_14263 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_14294__$1 = function() {
                                              var statearr_14314 = state_14294;
                                              statearr_14314[13] = inst_14262;
                                              return statearr_14314;
                                            }();
                                            var statearr_14315_14338 = state_14294__$1;
                                            statearr_14315_14338[2] = inst_14263;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14294__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_14295 === 8) {
                                              var inst_14276 = state_14294[2];
                                              var state_14294__$1 = state_14294;
                                              var statearr_14316_14339 = state_14294__$1;
                                              statearr_14316_14339[2] = inst_14276;
                                              statearr_14316_14339[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6971__auto___14324, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__6956__auto__, c__6971__auto___14324, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__6957__auto__ = null;
              var state_machine__6957__auto____0 = function() {
                var statearr_14320 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_14320[0] = state_machine__6957__auto__;
                statearr_14320[1] = 1;
                return statearr_14320;
              };
              var state_machine__6957__auto____1 = function(state_14294) {
                while (true) {
                  var ret_value__6958__auto__ = function() {
                    try {
                      while (true) {
                        var result__6959__auto__ = switch__6956__auto__.call(null, state_14294);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6959__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6959__auto__;
                        }
                        break;
                      }
                    } catch (e14321) {
                      if (e14321 instanceof Object) {
                        var ex__6960__auto__ = e14321;
                        var statearr_14322_14340 = state_14294;
                        statearr_14322_14340[5] = ex__6960__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14294);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e14321;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6958__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__14341 = state_14294;
                    state_14294 = G__14341;
                    continue;
                  } else {
                    return ret_value__6958__auto__;
                  }
                  break;
                }
              };
              state_machine__6957__auto__ = function(state_14294) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6957__auto____0.call(this);
                  case 1:
                    return state_machine__6957__auto____1.call(this, state_14294);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6957__auto____0;
              state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6957__auto____1;
              return state_machine__6957__auto__;
            }();
          }(switch__6956__auto__, c__6971__auto___14324, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__6973__auto__ = function() {
          var statearr_14323 = f__6972__auto__.call(null);
          statearr_14323[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6971__auto___14324;
          return statearr_14323;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6973__auto__);
      };
    }(c__6971__auto___14324, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6971__auto___14449 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6971__auto___14449, out) {
      return function() {
        var f__6972__auto__ = function() {
          var switch__6956__auto__ = function(c__6971__auto___14449, out) {
            return function(state_14425) {
              var state_val_14426 = state_14425[1];
              if (state_val_14426 === 7) {
                var inst_14404 = state_14425[7];
                var inst_14405 = state_14425[8];
                var inst_14404__$1 = state_14425[2];
                var inst_14405__$1 = cljs.core.nth.call(null, inst_14404__$1, 0, null);
                var inst_14406 = cljs.core.nth.call(null, inst_14404__$1, 1, null);
                var inst_14407 = inst_14405__$1 == null;
                var state_14425__$1 = function() {
                  var statearr_14427 = state_14425;
                  statearr_14427[9] = inst_14406;
                  statearr_14427[7] = inst_14404__$1;
                  statearr_14427[8] = inst_14405__$1;
                  return statearr_14427;
                }();
                if (cljs.core.truth_(inst_14407)) {
                  var statearr_14428_14450 = state_14425__$1;
                  statearr_14428_14450[1] = 8;
                } else {
                  var statearr_14429_14451 = state_14425__$1;
                  statearr_14429_14451[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14426 === 1) {
                  var inst_14396 = cljs.core.vec.call(null, chs);
                  var inst_14397 = inst_14396;
                  var state_14425__$1 = function() {
                    var statearr_14430 = state_14425;
                    statearr_14430[10] = inst_14397;
                    return statearr_14430;
                  }();
                  var statearr_14431_14452 = state_14425__$1;
                  statearr_14431_14452[2] = null;
                  statearr_14431_14452[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14426 === 4) {
                    var inst_14397 = state_14425[10];
                    var state_14425__$1 = state_14425;
                    return cljs.core.async.ioc_alts_BANG_.call(null, state_14425__$1, 7, inst_14397);
                  } else {
                    if (state_val_14426 === 6) {
                      var inst_14421 = state_14425[2];
                      var state_14425__$1 = state_14425;
                      var statearr_14432_14453 = state_14425__$1;
                      statearr_14432_14453[2] = inst_14421;
                      statearr_14432_14453[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14426 === 3) {
                        var inst_14423 = state_14425[2];
                        var state_14425__$1 = state_14425;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14425__$1, inst_14423);
                      } else {
                        if (state_val_14426 === 2) {
                          var inst_14397 = state_14425[10];
                          var inst_14399 = cljs.core.count.call(null, inst_14397);
                          var inst_14400 = inst_14399 > 0;
                          var state_14425__$1 = state_14425;
                          if (cljs.core.truth_(inst_14400)) {
                            var statearr_14434_14454 = state_14425__$1;
                            statearr_14434_14454[1] = 4;
                          } else {
                            var statearr_14435_14455 = state_14425__$1;
                            statearr_14435_14455[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14426 === 11) {
                            var inst_14397 = state_14425[10];
                            var inst_14414 = state_14425[2];
                            var tmp14433 = inst_14397;
                            var inst_14397__$1 = tmp14433;
                            var state_14425__$1 = function() {
                              var statearr_14436 = state_14425;
                              statearr_14436[11] = inst_14414;
                              statearr_14436[10] = inst_14397__$1;
                              return statearr_14436;
                            }();
                            var statearr_14437_14456 = state_14425__$1;
                            statearr_14437_14456[2] = null;
                            statearr_14437_14456[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_14426 === 9) {
                              var inst_14405 = state_14425[8];
                              var state_14425__$1 = state_14425;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14425__$1, 11, out, inst_14405);
                            } else {
                              if (state_val_14426 === 5) {
                                var inst_14419 = cljs.core.async.close_BANG_.call(null, out);
                                var state_14425__$1 = state_14425;
                                var statearr_14438_14457 = state_14425__$1;
                                statearr_14438_14457[2] = inst_14419;
                                statearr_14438_14457[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14426 === 10) {
                                  var inst_14417 = state_14425[2];
                                  var state_14425__$1 = state_14425;
                                  var statearr_14439_14458 = state_14425__$1;
                                  statearr_14439_14458[2] = inst_14417;
                                  statearr_14439_14458[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14426 === 8) {
                                    var inst_14406 = state_14425[9];
                                    var inst_14404 = state_14425[7];
                                    var inst_14397 = state_14425[10];
                                    var inst_14405 = state_14425[8];
                                    var inst_14409 = function() {
                                      var c = inst_14406;
                                      var v = inst_14405;
                                      var vec__14402 = inst_14404;
                                      var cs = inst_14397;
                                      return function(c, v, vec__14402, cs, inst_14406, inst_14404, inst_14397, inst_14405, state_val_14426, c__6971__auto___14449, out) {
                                        return function(p1__14342_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__14342_SHARP_);
                                        };
                                      }(c, v, vec__14402, cs, inst_14406, inst_14404, inst_14397, inst_14405, state_val_14426, c__6971__auto___14449, out);
                                    }();
                                    var inst_14410 = cljs.core.filterv.call(null, inst_14409, inst_14397);
                                    var inst_14397__$1 = inst_14410;
                                    var state_14425__$1 = function() {
                                      var statearr_14440 = state_14425;
                                      statearr_14440[10] = inst_14397__$1;
                                      return statearr_14440;
                                    }();
                                    var statearr_14441_14459 = state_14425__$1;
                                    statearr_14441_14459[2] = null;
                                    statearr_14441_14459[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6971__auto___14449, out);
          return function(switch__6956__auto__, c__6971__auto___14449, out) {
            return function() {
              var state_machine__6957__auto__ = null;
              var state_machine__6957__auto____0 = function() {
                var statearr_14445 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_14445[0] = state_machine__6957__auto__;
                statearr_14445[1] = 1;
                return statearr_14445;
              };
              var state_machine__6957__auto____1 = function(state_14425) {
                while (true) {
                  var ret_value__6958__auto__ = function() {
                    try {
                      while (true) {
                        var result__6959__auto__ = switch__6956__auto__.call(null, state_14425);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6959__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6959__auto__;
                        }
                        break;
                      }
                    } catch (e14446) {
                      if (e14446 instanceof Object) {
                        var ex__6960__auto__ = e14446;
                        var statearr_14447_14460 = state_14425;
                        statearr_14447_14460[5] = ex__6960__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14425);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e14446;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6958__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__14461 = state_14425;
                    state_14425 = G__14461;
                    continue;
                  } else {
                    return ret_value__6958__auto__;
                  }
                  break;
                }
              };
              state_machine__6957__auto__ = function(state_14425) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6957__auto____0.call(this);
                  case 1:
                    return state_machine__6957__auto____1.call(this, state_14425);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6957__auto____0;
              state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6957__auto____1;
              return state_machine__6957__auto__;
            }();
          }(switch__6956__auto__, c__6971__auto___14449, out);
        }();
        var state__6973__auto__ = function() {
          var statearr_14448 = f__6972__auto__.call(null);
          statearr_14448[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6971__auto___14449;
          return statearr_14448;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6973__auto__);
      };
    }(c__6971__auto___14449, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6971__auto___14554 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6971__auto___14554, out) {
      return function() {
        var f__6972__auto__ = function() {
          var switch__6956__auto__ = function(c__6971__auto___14554, out) {
            return function(state_14531) {
              var state_val_14532 = state_14531[1];
              if (state_val_14532 === 7) {
                var inst_14513 = state_14531[7];
                var inst_14513__$1 = state_14531[2];
                var inst_14514 = inst_14513__$1 == null;
                var inst_14515 = cljs.core.not.call(null, inst_14514);
                var state_14531__$1 = function() {
                  var statearr_14533 = state_14531;
                  statearr_14533[7] = inst_14513__$1;
                  return statearr_14533;
                }();
                if (inst_14515) {
                  var statearr_14534_14555 = state_14531__$1;
                  statearr_14534_14555[1] = 8;
                } else {
                  var statearr_14535_14556 = state_14531__$1;
                  statearr_14535_14556[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14532 === 1) {
                  var inst_14508 = 0;
                  var state_14531__$1 = function() {
                    var statearr_14536 = state_14531;
                    statearr_14536[8] = inst_14508;
                    return statearr_14536;
                  }();
                  var statearr_14537_14557 = state_14531__$1;
                  statearr_14537_14557[2] = null;
                  statearr_14537_14557[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14532 === 4) {
                    var state_14531__$1 = state_14531;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14531__$1, 7, ch);
                  } else {
                    if (state_val_14532 === 6) {
                      var inst_14526 = state_14531[2];
                      var state_14531__$1 = state_14531;
                      var statearr_14538_14558 = state_14531__$1;
                      statearr_14538_14558[2] = inst_14526;
                      statearr_14538_14558[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14532 === 3) {
                        var inst_14528 = state_14531[2];
                        var inst_14529 = cljs.core.async.close_BANG_.call(null, out);
                        var state_14531__$1 = function() {
                          var statearr_14539 = state_14531;
                          statearr_14539[9] = inst_14528;
                          return statearr_14539;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14531__$1, inst_14529);
                      } else {
                        if (state_val_14532 === 2) {
                          var inst_14508 = state_14531[8];
                          var inst_14510 = inst_14508 < n;
                          var state_14531__$1 = state_14531;
                          if (cljs.core.truth_(inst_14510)) {
                            var statearr_14540_14559 = state_14531__$1;
                            statearr_14540_14559[1] = 4;
                          } else {
                            var statearr_14541_14560 = state_14531__$1;
                            statearr_14541_14560[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14532 === 11) {
                            var inst_14508 = state_14531[8];
                            var inst_14518 = state_14531[2];
                            var inst_14519 = inst_14508 + 1;
                            var inst_14508__$1 = inst_14519;
                            var state_14531__$1 = function() {
                              var statearr_14542 = state_14531;
                              statearr_14542[10] = inst_14518;
                              statearr_14542[8] = inst_14508__$1;
                              return statearr_14542;
                            }();
                            var statearr_14543_14561 = state_14531__$1;
                            statearr_14543_14561[2] = null;
                            statearr_14543_14561[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_14532 === 9) {
                              var state_14531__$1 = state_14531;
                              var statearr_14544_14562 = state_14531__$1;
                              statearr_14544_14562[2] = null;
                              statearr_14544_14562[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14532 === 5) {
                                var state_14531__$1 = state_14531;
                                var statearr_14545_14563 = state_14531__$1;
                                statearr_14545_14563[2] = null;
                                statearr_14545_14563[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14532 === 10) {
                                  var inst_14523 = state_14531[2];
                                  var state_14531__$1 = state_14531;
                                  var statearr_14546_14564 = state_14531__$1;
                                  statearr_14546_14564[2] = inst_14523;
                                  statearr_14546_14564[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14532 === 8) {
                                    var inst_14513 = state_14531[7];
                                    var state_14531__$1 = state_14531;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14531__$1, 11, out, inst_14513);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6971__auto___14554, out);
          return function(switch__6956__auto__, c__6971__auto___14554, out) {
            return function() {
              var state_machine__6957__auto__ = null;
              var state_machine__6957__auto____0 = function() {
                var statearr_14550 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_14550[0] = state_machine__6957__auto__;
                statearr_14550[1] = 1;
                return statearr_14550;
              };
              var state_machine__6957__auto____1 = function(state_14531) {
                while (true) {
                  var ret_value__6958__auto__ = function() {
                    try {
                      while (true) {
                        var result__6959__auto__ = switch__6956__auto__.call(null, state_14531);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6959__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6959__auto__;
                        }
                        break;
                      }
                    } catch (e14551) {
                      if (e14551 instanceof Object) {
                        var ex__6960__auto__ = e14551;
                        var statearr_14552_14565 = state_14531;
                        statearr_14552_14565[5] = ex__6960__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14531);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e14551;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6958__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__14566 = state_14531;
                    state_14531 = G__14566;
                    continue;
                  } else {
                    return ret_value__6958__auto__;
                  }
                  break;
                }
              };
              state_machine__6957__auto__ = function(state_14531) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6957__auto____0.call(this);
                  case 1:
                    return state_machine__6957__auto____1.call(this, state_14531);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6957__auto____0;
              state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6957__auto____1;
              return state_machine__6957__auto__;
            }();
          }(switch__6956__auto__, c__6971__auto___14554, out);
        }();
        var state__6973__auto__ = function() {
          var statearr_14553 = f__6972__auto__.call(null);
          statearr_14553[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6971__auto___14554;
          return statearr_14553;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6973__auto__);
      };
    }(c__6971__auto___14554, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t14574 !== "undefined") {
  } else {
    cljs.core.async.t14574 = function(ch, f, map_LT_, meta14575) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta14575 = meta14575;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t14574.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t14574.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t14574.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t14574.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t14577 !== "undefined") {
        } else {
          cljs.core.async.t14577 = function(fn1, _, meta14575, map_LT_, f, ch, meta14578) {
            this.fn1 = fn1;
            this._ = _;
            this.meta14575 = meta14575;
            this.map_LT_ = map_LT_;
            this.f = f;
            this.ch = ch;
            this.meta14578 = meta14578;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t14577.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t14577.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t14577.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__14567_SHARP_) {
                  return f1.call(null, p1__14567_SHARP_ == null ? null : self__.f.call(null, p1__14567_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t14577.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_14579) {
              var self__ = this;
              var _14579__$1 = this;
              return self__.meta14578;
            };
          }(___$1);
          cljs.core.async.t14577.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_14579, meta14578__$1) {
              var self__ = this;
              var _14579__$1 = this;
              return new cljs.core.async.t14577(self__.fn1, self__._, self__.meta14575, self__.map_LT_, self__.f, self__.ch, meta14578__$1);
            };
          }(___$1);
          cljs.core.async.t14577.cljs$lang$type = true;
          cljs.core.async.t14577.cljs$lang$ctorStr = "cljs.core.async/t14577";
          cljs.core.async.t14577.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
              return cljs.core._write.call(null, writer__4218__auto__, "cljs.core.async/t14577");
            };
          }(___$1);
          cljs.core.async.__GT_t14577 = function(___$1) {
            return function __GT_t14577(fn1__$1, ___$2, meta14575__$1, map_LT___$1, f__$1, ch__$1, meta14578) {
              return new cljs.core.async.t14577(fn1__$1, ___$2, meta14575__$1, map_LT___$1, f__$1, ch__$1, meta14578);
            };
          }(___$1);
        }
        return new cljs.core.async.t14577(fn1, ___$1, self__.meta14575, self__.map_LT_, self__.f, self__.ch, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 46, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 737, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 731, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core\\async.cljs"], 
        null));
      }());
      if (cljs.core.truth_(function() {
        var and__3618__auto__ = ret;
        if (cljs.core.truth_(and__3618__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3618__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t14574.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t14574.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t14574.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t14574.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14576) {
      var self__ = this;
      var _14576__$1 = this;
      return self__.meta14575;
    };
    cljs.core.async.t14574.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14576, meta14575__$1) {
      var self__ = this;
      var _14576__$1 = this;
      return new cljs.core.async.t14574(self__.ch, self__.f, self__.map_LT_, meta14575__$1);
    };
    cljs.core.async.t14574.cljs$lang$type = true;
    cljs.core.async.t14574.cljs$lang$ctorStr = "cljs.core.async/t14574";
    cljs.core.async.t14574.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
      return cljs.core._write.call(null, writer__4218__auto__, "cljs.core.async/t14574");
    };
    cljs.core.async.__GT_t14574 = function __GT_t14574(ch__$1, f__$1, map_LT___$1, meta14575) {
      return new cljs.core.async.t14574(ch__$1, f__$1, map_LT___$1, meta14575);
    };
  }
  return new cljs.core.async.t14574(ch, f, map_LT_, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 46, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 743, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 722, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core\\async.cljs"], 
  null));
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t14583 !== "undefined") {
  } else {
    cljs.core.async.t14583 = function(ch, f, map_GT_, meta14584) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta14584 = meta14584;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t14583.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t14583.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t14583.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t14583.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t14583.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t14583.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t14583.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14585) {
      var self__ = this;
      var _14585__$1 = this;
      return self__.meta14584;
    };
    cljs.core.async.t14583.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14585, meta14584__$1) {
      var self__ = this;
      var _14585__$1 = this;
      return new cljs.core.async.t14583(self__.ch, self__.f, self__.map_GT_, meta14584__$1);
    };
    cljs.core.async.t14583.cljs$lang$type = true;
    cljs.core.async.t14583.cljs$lang$ctorStr = "cljs.core.async/t14583";
    cljs.core.async.t14583.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
      return cljs.core._write.call(null, writer__4218__auto__, "cljs.core.async/t14583");
    };
    cljs.core.async.__GT_t14583 = function __GT_t14583(ch__$1, f__$1, map_GT___$1, meta14584) {
      return new cljs.core.async.t14583(ch__$1, f__$1, map_GT___$1, meta14584);
    };
  }
  return new cljs.core.async.t14583(ch, f, map_GT_, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 34, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 757, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 748, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core\\async.cljs"], 
  null));
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t14589 !== "undefined") {
  } else {
    cljs.core.async.t14589 = function(ch, p, filter_GT_, meta14590) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta14590 = meta14590;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t14589.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t14589.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t14589.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t14589.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t14589.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t14589.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t14589.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t14589.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14591) {
      var self__ = this;
      var _14591__$1 = this;
      return self__.meta14590;
    };
    cljs.core.async.t14589.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14591, meta14590__$1) {
      var self__ = this;
      var _14591__$1 = this;
      return new cljs.core.async.t14589(self__.ch, self__.p, self__.filter_GT_, meta14590__$1);
    };
    cljs.core.async.t14589.cljs$lang$type = true;
    cljs.core.async.t14589.cljs$lang$ctorStr = "cljs.core.async/t14589";
    cljs.core.async.t14589.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
      return cljs.core._write.call(null, writer__4218__auto__, "cljs.core.async/t14589");
    };
    cljs.core.async.__GT_t14589 = function __GT_t14589(ch__$1, p__$1, filter_GT___$1, meta14590) {
      return new cljs.core.async.t14589(ch__$1, p__$1, filter_GT___$1, meta14590);
    };
  }
  return new cljs.core.async.t14589(ch, p, filter_GT_, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 48, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 774, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 762, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\target\\cljsbuild-compiler-0\\cljs\\core\\async.cljs"], 
  null));
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6971__auto___14674 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6971__auto___14674, out) {
      return function() {
        var f__6972__auto__ = function() {
          var switch__6956__auto__ = function(c__6971__auto___14674, out) {
            return function(state_14653) {
              var state_val_14654 = state_14653[1];
              if (state_val_14654 === 7) {
                var inst_14649 = state_14653[2];
                var state_14653__$1 = state_14653;
                var statearr_14655_14675 = state_14653__$1;
                statearr_14655_14675[2] = inst_14649;
                statearr_14655_14675[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14654 === 1) {
                  var state_14653__$1 = state_14653;
                  var statearr_14656_14676 = state_14653__$1;
                  statearr_14656_14676[2] = null;
                  statearr_14656_14676[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14654 === 4) {
                    var inst_14635 = state_14653[7];
                    var inst_14635__$1 = state_14653[2];
                    var inst_14636 = inst_14635__$1 == null;
                    var state_14653__$1 = function() {
                      var statearr_14657 = state_14653;
                      statearr_14657[7] = inst_14635__$1;
                      return statearr_14657;
                    }();
                    if (cljs.core.truth_(inst_14636)) {
                      var statearr_14658_14677 = state_14653__$1;
                      statearr_14658_14677[1] = 5;
                    } else {
                      var statearr_14659_14678 = state_14653__$1;
                      statearr_14659_14678[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14654 === 6) {
                      var inst_14635 = state_14653[7];
                      var inst_14640 = p.call(null, inst_14635);
                      var state_14653__$1 = state_14653;
                      if (cljs.core.truth_(inst_14640)) {
                        var statearr_14660_14679 = state_14653__$1;
                        statearr_14660_14679[1] = 8;
                      } else {
                        var statearr_14661_14680 = state_14653__$1;
                        statearr_14661_14680[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14654 === 3) {
                        var inst_14651 = state_14653[2];
                        var state_14653__$1 = state_14653;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14653__$1, inst_14651);
                      } else {
                        if (state_val_14654 === 2) {
                          var state_14653__$1 = state_14653;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14653__$1, 4, ch);
                        } else {
                          if (state_val_14654 === 11) {
                            var inst_14643 = state_14653[2];
                            var state_14653__$1 = state_14653;
                            var statearr_14662_14681 = state_14653__$1;
                            statearr_14662_14681[2] = inst_14643;
                            statearr_14662_14681[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_14654 === 9) {
                              var state_14653__$1 = state_14653;
                              var statearr_14663_14682 = state_14653__$1;
                              statearr_14663_14682[2] = null;
                              statearr_14663_14682[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14654 === 5) {
                                var inst_14638 = cljs.core.async.close_BANG_.call(null, out);
                                var state_14653__$1 = state_14653;
                                var statearr_14664_14683 = state_14653__$1;
                                statearr_14664_14683[2] = inst_14638;
                                statearr_14664_14683[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14654 === 10) {
                                  var inst_14646 = state_14653[2];
                                  var state_14653__$1 = function() {
                                    var statearr_14665 = state_14653;
                                    statearr_14665[8] = inst_14646;
                                    return statearr_14665;
                                  }();
                                  var statearr_14666_14684 = state_14653__$1;
                                  statearr_14666_14684[2] = null;
                                  statearr_14666_14684[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14654 === 8) {
                                    var inst_14635 = state_14653[7];
                                    var state_14653__$1 = state_14653;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14653__$1, 11, out, inst_14635);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6971__auto___14674, out);
          return function(switch__6956__auto__, c__6971__auto___14674, out) {
            return function() {
              var state_machine__6957__auto__ = null;
              var state_machine__6957__auto____0 = function() {
                var statearr_14670 = [null, null, null, null, null, null, null, null, null];
                statearr_14670[0] = state_machine__6957__auto__;
                statearr_14670[1] = 1;
                return statearr_14670;
              };
              var state_machine__6957__auto____1 = function(state_14653) {
                while (true) {
                  var ret_value__6958__auto__ = function() {
                    try {
                      while (true) {
                        var result__6959__auto__ = switch__6956__auto__.call(null, state_14653);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6959__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6959__auto__;
                        }
                        break;
                      }
                    } catch (e14671) {
                      if (e14671 instanceof Object) {
                        var ex__6960__auto__ = e14671;
                        var statearr_14672_14685 = state_14653;
                        statearr_14672_14685[5] = ex__6960__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14653);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e14671;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6958__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__14686 = state_14653;
                    state_14653 = G__14686;
                    continue;
                  } else {
                    return ret_value__6958__auto__;
                  }
                  break;
                }
              };
              state_machine__6957__auto__ = function(state_14653) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6957__auto____0.call(this);
                  case 1:
                    return state_machine__6957__auto____1.call(this, state_14653);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6957__auto____0;
              state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6957__auto____1;
              return state_machine__6957__auto__;
            }();
          }(switch__6956__auto__, c__6971__auto___14674, out);
        }();
        var state__6973__auto__ = function() {
          var statearr_14673 = f__6972__auto__.call(null);
          statearr_14673[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6971__auto___14674;
          return statearr_14673;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6973__auto__);
      };
    }(c__6971__auto___14674, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__6971__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6971__auto__) {
    return function() {
      var f__6972__auto__ = function() {
        var switch__6956__auto__ = function(c__6971__auto__) {
          return function(state_14852) {
            var state_val_14853 = state_14852[1];
            if (state_val_14853 === 7) {
              var inst_14848 = state_14852[2];
              var state_14852__$1 = state_14852;
              var statearr_14854_14895 = state_14852__$1;
              statearr_14854_14895[2] = inst_14848;
              statearr_14854_14895[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_14853 === 20) {
                var inst_14818 = state_14852[7];
                var inst_14829 = state_14852[2];
                var inst_14830 = cljs.core.next.call(null, inst_14818);
                var inst_14804 = inst_14830;
                var inst_14805 = null;
                var inst_14806 = 0;
                var inst_14807 = 0;
                var state_14852__$1 = function() {
                  var statearr_14855 = state_14852;
                  statearr_14855[8] = inst_14804;
                  statearr_14855[9] = inst_14805;
                  statearr_14855[10] = inst_14829;
                  statearr_14855[11] = inst_14806;
                  statearr_14855[12] = inst_14807;
                  return statearr_14855;
                }();
                var statearr_14856_14896 = state_14852__$1;
                statearr_14856_14896[2] = null;
                statearr_14856_14896[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14853 === 1) {
                  var state_14852__$1 = state_14852;
                  var statearr_14857_14897 = state_14852__$1;
                  statearr_14857_14897[2] = null;
                  statearr_14857_14897[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14853 === 4) {
                    var inst_14793 = state_14852[13];
                    var inst_14793__$1 = state_14852[2];
                    var inst_14794 = inst_14793__$1 == null;
                    var state_14852__$1 = function() {
                      var statearr_14858 = state_14852;
                      statearr_14858[13] = inst_14793__$1;
                      return statearr_14858;
                    }();
                    if (cljs.core.truth_(inst_14794)) {
                      var statearr_14859_14898 = state_14852__$1;
                      statearr_14859_14898[1] = 5;
                    } else {
                      var statearr_14860_14899 = state_14852__$1;
                      statearr_14860_14899[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14853 === 15) {
                      var state_14852__$1 = state_14852;
                      var statearr_14864_14900 = state_14852__$1;
                      statearr_14864_14900[2] = null;
                      statearr_14864_14900[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14853 === 21) {
                        var state_14852__$1 = state_14852;
                        var statearr_14865_14901 = state_14852__$1;
                        statearr_14865_14901[2] = null;
                        statearr_14865_14901[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_14853 === 13) {
                          var inst_14804 = state_14852[8];
                          var inst_14805 = state_14852[9];
                          var inst_14806 = state_14852[11];
                          var inst_14807 = state_14852[12];
                          var inst_14814 = state_14852[2];
                          var inst_14815 = inst_14807 + 1;
                          var tmp14861 = inst_14804;
                          var tmp14862 = inst_14805;
                          var tmp14863 = inst_14806;
                          var inst_14804__$1 = tmp14861;
                          var inst_14805__$1 = tmp14862;
                          var inst_14806__$1 = tmp14863;
                          var inst_14807__$1 = inst_14815;
                          var state_14852__$1 = function() {
                            var statearr_14866 = state_14852;
                            statearr_14866[14] = inst_14814;
                            statearr_14866[8] = inst_14804__$1;
                            statearr_14866[9] = inst_14805__$1;
                            statearr_14866[11] = inst_14806__$1;
                            statearr_14866[12] = inst_14807__$1;
                            return statearr_14866;
                          }();
                          var statearr_14867_14902 = state_14852__$1;
                          statearr_14867_14902[2] = null;
                          statearr_14867_14902[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14853 === 22) {
                            var state_14852__$1 = state_14852;
                            var statearr_14868_14903 = state_14852__$1;
                            statearr_14868_14903[2] = null;
                            statearr_14868_14903[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_14853 === 6) {
                              var inst_14793 = state_14852[13];
                              var inst_14802 = f.call(null, inst_14793);
                              var inst_14803 = cljs.core.seq.call(null, inst_14802);
                              var inst_14804 = inst_14803;
                              var inst_14805 = null;
                              var inst_14806 = 0;
                              var inst_14807 = 0;
                              var state_14852__$1 = function() {
                                var statearr_14869 = state_14852;
                                statearr_14869[8] = inst_14804;
                                statearr_14869[9] = inst_14805;
                                statearr_14869[11] = inst_14806;
                                statearr_14869[12] = inst_14807;
                                return statearr_14869;
                              }();
                              var statearr_14870_14904 = state_14852__$1;
                              statearr_14870_14904[2] = null;
                              statearr_14870_14904[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14853 === 17) {
                                var inst_14818 = state_14852[7];
                                var inst_14822 = cljs.core.chunk_first.call(null, inst_14818);
                                var inst_14823 = cljs.core.chunk_rest.call(null, inst_14818);
                                var inst_14824 = cljs.core.count.call(null, inst_14822);
                                var inst_14804 = inst_14823;
                                var inst_14805 = inst_14822;
                                var inst_14806 = inst_14824;
                                var inst_14807 = 0;
                                var state_14852__$1 = function() {
                                  var statearr_14871 = state_14852;
                                  statearr_14871[8] = inst_14804;
                                  statearr_14871[9] = inst_14805;
                                  statearr_14871[11] = inst_14806;
                                  statearr_14871[12] = inst_14807;
                                  return statearr_14871;
                                }();
                                var statearr_14872_14905 = state_14852__$1;
                                statearr_14872_14905[2] = null;
                                statearr_14872_14905[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14853 === 3) {
                                  var inst_14850 = state_14852[2];
                                  var state_14852__$1 = state_14852;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14852__$1, inst_14850);
                                } else {
                                  if (state_val_14853 === 12) {
                                    var inst_14838 = state_14852[2];
                                    var state_14852__$1 = state_14852;
                                    var statearr_14873_14906 = state_14852__$1;
                                    statearr_14873_14906[2] = inst_14838;
                                    statearr_14873_14906[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_14853 === 2) {
                                      var state_14852__$1 = state_14852;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14852__$1, 4, in$);
                                    } else {
                                      if (state_val_14853 === 23) {
                                        var inst_14846 = state_14852[2];
                                        var state_14852__$1 = state_14852;
                                        var statearr_14874_14907 = state_14852__$1;
                                        statearr_14874_14907[2] = inst_14846;
                                        statearr_14874_14907[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_14853 === 19) {
                                          var inst_14833 = state_14852[2];
                                          var state_14852__$1 = state_14852;
                                          var statearr_14875_14908 = state_14852__$1;
                                          statearr_14875_14908[2] = inst_14833;
                                          statearr_14875_14908[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_14853 === 11) {
                                            var inst_14804 = state_14852[8];
                                            var inst_14818 = state_14852[7];
                                            var inst_14818__$1 = cljs.core.seq.call(null, inst_14804);
                                            var state_14852__$1 = function() {
                                              var statearr_14876 = state_14852;
                                              statearr_14876[7] = inst_14818__$1;
                                              return statearr_14876;
                                            }();
                                            if (inst_14818__$1) {
                                              var statearr_14877_14909 = state_14852__$1;
                                              statearr_14877_14909[1] = 14;
                                            } else {
                                              var statearr_14878_14910 = state_14852__$1;
                                              statearr_14878_14910[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_14853 === 9) {
                                              var inst_14840 = state_14852[2];
                                              var inst_14841 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_14852__$1 = function() {
                                                var statearr_14879 = state_14852;
                                                statearr_14879[15] = inst_14840;
                                                return statearr_14879;
                                              }();
                                              if (cljs.core.truth_(inst_14841)) {
                                                var statearr_14880_14911 = state_14852__$1;
                                                statearr_14880_14911[1] = 21;
                                              } else {
                                                var statearr_14881_14912 = state_14852__$1;
                                                statearr_14881_14912[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_14853 === 5) {
                                                var inst_14796 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_14852__$1 = state_14852;
                                                var statearr_14882_14913 = state_14852__$1;
                                                statearr_14882_14913[2] = inst_14796;
                                                statearr_14882_14913[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_14853 === 14) {
                                                  var inst_14818 = state_14852[7];
                                                  var inst_14820 = cljs.core.chunked_seq_QMARK_.call(null, inst_14818);
                                                  var state_14852__$1 = state_14852;
                                                  if (inst_14820) {
                                                    var statearr_14883_14914 = state_14852__$1;
                                                    statearr_14883_14914[1] = 17;
                                                  } else {
                                                    var statearr_14884_14915 = state_14852__$1;
                                                    statearr_14884_14915[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_14853 === 16) {
                                                    var inst_14836 = state_14852[2];
                                                    var state_14852__$1 = state_14852;
                                                    var statearr_14885_14916 = state_14852__$1;
                                                    statearr_14885_14916[2] = inst_14836;
                                                    statearr_14885_14916[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_14853 === 10) {
                                                      var inst_14805 = state_14852[9];
                                                      var inst_14807 = state_14852[12];
                                                      var inst_14812 = cljs.core._nth.call(null, inst_14805, inst_14807);
                                                      var state_14852__$1 = state_14852;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14852__$1, 13, out, inst_14812);
                                                    } else {
                                                      if (state_val_14853 === 18) {
                                                        var inst_14818 = state_14852[7];
                                                        var inst_14827 = cljs.core.first.call(null, inst_14818);
                                                        var state_14852__$1 = state_14852;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14852__$1, 20, out, inst_14827);
                                                      } else {
                                                        if (state_val_14853 === 8) {
                                                          var inst_14806 = state_14852[11];
                                                          var inst_14807 = state_14852[12];
                                                          var inst_14809 = inst_14807 < inst_14806;
                                                          var inst_14810 = inst_14809;
                                                          var state_14852__$1 = state_14852;
                                                          if (cljs.core.truth_(inst_14810)) {
                                                            var statearr_14886_14917 = state_14852__$1;
                                                            statearr_14886_14917[1] = 10;
                                                          } else {
                                                            var statearr_14887_14918 = state_14852__$1;
                                                            statearr_14887_14918[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6971__auto__);
        return function(switch__6956__auto__, c__6971__auto__) {
          return function() {
            var state_machine__6957__auto__ = null;
            var state_machine__6957__auto____0 = function() {
              var statearr_14891 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_14891[0] = state_machine__6957__auto__;
              statearr_14891[1] = 1;
              return statearr_14891;
            };
            var state_machine__6957__auto____1 = function(state_14852) {
              while (true) {
                var ret_value__6958__auto__ = function() {
                  try {
                    while (true) {
                      var result__6959__auto__ = switch__6956__auto__.call(null, state_14852);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6959__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6959__auto__;
                      }
                      break;
                    }
                  } catch (e14892) {
                    if (e14892 instanceof Object) {
                      var ex__6960__auto__ = e14892;
                      var statearr_14893_14919 = state_14852;
                      statearr_14893_14919[5] = ex__6960__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14852);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e14892;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6958__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__14920 = state_14852;
                  state_14852 = G__14920;
                  continue;
                } else {
                  return ret_value__6958__auto__;
                }
                break;
              }
            };
            state_machine__6957__auto__ = function(state_14852) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6957__auto____0.call(this);
                case 1:
                  return state_machine__6957__auto____1.call(this, state_14852);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6957__auto____0;
            state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6957__auto____1;
            return state_machine__6957__auto__;
          }();
        }(switch__6956__auto__, c__6971__auto__);
      }();
      var state__6973__auto__ = function() {
        var statearr_14894 = f__6972__auto__.call(null);
        statearr_14894[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6971__auto__;
        return statearr_14894;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6973__auto__);
    };
  }(c__6971__auto__));
  return c__6971__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6971__auto___15017 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6971__auto___15017, out) {
      return function() {
        var f__6972__auto__ = function() {
          var switch__6956__auto__ = function(c__6971__auto___15017, out) {
            return function(state_14992) {
              var state_val_14993 = state_14992[1];
              if (state_val_14993 === 7) {
                var inst_14987 = state_14992[2];
                var state_14992__$1 = state_14992;
                var statearr_14994_15018 = state_14992__$1;
                statearr_14994_15018[2] = inst_14987;
                statearr_14994_15018[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14993 === 1) {
                  var inst_14969 = null;
                  var state_14992__$1 = function() {
                    var statearr_14995 = state_14992;
                    statearr_14995[7] = inst_14969;
                    return statearr_14995;
                  }();
                  var statearr_14996_15019 = state_14992__$1;
                  statearr_14996_15019[2] = null;
                  statearr_14996_15019[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14993 === 4) {
                    var inst_14972 = state_14992[8];
                    var inst_14972__$1 = state_14992[2];
                    var inst_14973 = inst_14972__$1 == null;
                    var inst_14974 = cljs.core.not.call(null, inst_14973);
                    var state_14992__$1 = function() {
                      var statearr_14997 = state_14992;
                      statearr_14997[8] = inst_14972__$1;
                      return statearr_14997;
                    }();
                    if (inst_14974) {
                      var statearr_14998_15020 = state_14992__$1;
                      statearr_14998_15020[1] = 5;
                    } else {
                      var statearr_14999_15021 = state_14992__$1;
                      statearr_14999_15021[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14993 === 6) {
                      var state_14992__$1 = state_14992;
                      var statearr_15000_15022 = state_14992__$1;
                      statearr_15000_15022[2] = null;
                      statearr_15000_15022[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14993 === 3) {
                        var inst_14989 = state_14992[2];
                        var inst_14990 = cljs.core.async.close_BANG_.call(null, out);
                        var state_14992__$1 = function() {
                          var statearr_15001 = state_14992;
                          statearr_15001[9] = inst_14989;
                          return statearr_15001;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14992__$1, inst_14990);
                      } else {
                        if (state_val_14993 === 2) {
                          var state_14992__$1 = state_14992;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14992__$1, 4, ch);
                        } else {
                          if (state_val_14993 === 11) {
                            var inst_14972 = state_14992[8];
                            var inst_14981 = state_14992[2];
                            var inst_14969 = inst_14972;
                            var state_14992__$1 = function() {
                              var statearr_15002 = state_14992;
                              statearr_15002[7] = inst_14969;
                              statearr_15002[10] = inst_14981;
                              return statearr_15002;
                            }();
                            var statearr_15003_15023 = state_14992__$1;
                            statearr_15003_15023[2] = null;
                            statearr_15003_15023[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_14993 === 9) {
                              var inst_14972 = state_14992[8];
                              var state_14992__$1 = state_14992;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14992__$1, 11, out, inst_14972);
                            } else {
                              if (state_val_14993 === 5) {
                                var inst_14972 = state_14992[8];
                                var inst_14969 = state_14992[7];
                                var inst_14976 = cljs.core._EQ_.call(null, inst_14972, inst_14969);
                                var state_14992__$1 = state_14992;
                                if (inst_14976) {
                                  var statearr_15005_15024 = state_14992__$1;
                                  statearr_15005_15024[1] = 8;
                                } else {
                                  var statearr_15006_15025 = state_14992__$1;
                                  statearr_15006_15025[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14993 === 10) {
                                  var inst_14984 = state_14992[2];
                                  var state_14992__$1 = state_14992;
                                  var statearr_15007_15026 = state_14992__$1;
                                  statearr_15007_15026[2] = inst_14984;
                                  statearr_15007_15026[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14993 === 8) {
                                    var inst_14969 = state_14992[7];
                                    var tmp15004 = inst_14969;
                                    var inst_14969__$1 = tmp15004;
                                    var state_14992__$1 = function() {
                                      var statearr_15008 = state_14992;
                                      statearr_15008[7] = inst_14969__$1;
                                      return statearr_15008;
                                    }();
                                    var statearr_15009_15027 = state_14992__$1;
                                    statearr_15009_15027[2] = null;
                                    statearr_15009_15027[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6971__auto___15017, out);
          return function(switch__6956__auto__, c__6971__auto___15017, out) {
            return function() {
              var state_machine__6957__auto__ = null;
              var state_machine__6957__auto____0 = function() {
                var statearr_15013 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_15013[0] = state_machine__6957__auto__;
                statearr_15013[1] = 1;
                return statearr_15013;
              };
              var state_machine__6957__auto____1 = function(state_14992) {
                while (true) {
                  var ret_value__6958__auto__ = function() {
                    try {
                      while (true) {
                        var result__6959__auto__ = switch__6956__auto__.call(null, state_14992);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6959__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6959__auto__;
                        }
                        break;
                      }
                    } catch (e15014) {
                      if (e15014 instanceof Object) {
                        var ex__6960__auto__ = e15014;
                        var statearr_15015_15028 = state_14992;
                        statearr_15015_15028[5] = ex__6960__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14992);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e15014;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6958__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__15029 = state_14992;
                    state_14992 = G__15029;
                    continue;
                  } else {
                    return ret_value__6958__auto__;
                  }
                  break;
                }
              };
              state_machine__6957__auto__ = function(state_14992) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6957__auto____0.call(this);
                  case 1:
                    return state_machine__6957__auto____1.call(this, state_14992);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6957__auto____0;
              state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6957__auto____1;
              return state_machine__6957__auto__;
            }();
          }(switch__6956__auto__, c__6971__auto___15017, out);
        }();
        var state__6973__auto__ = function() {
          var statearr_15016 = f__6972__auto__.call(null);
          statearr_15016[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6971__auto___15017;
          return statearr_15016;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6973__auto__);
      };
    }(c__6971__auto___15017, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6971__auto___15164 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6971__auto___15164, out) {
      return function() {
        var f__6972__auto__ = function() {
          var switch__6956__auto__ = function(c__6971__auto___15164, out) {
            return function(state_15134) {
              var state_val_15135 = state_15134[1];
              if (state_val_15135 === 7) {
                var inst_15130 = state_15134[2];
                var state_15134__$1 = state_15134;
                var statearr_15136_15165 = state_15134__$1;
                statearr_15136_15165[2] = inst_15130;
                statearr_15136_15165[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15135 === 1) {
                  var inst_15097 = new Array(n);
                  var inst_15098 = inst_15097;
                  var inst_15099 = 0;
                  var state_15134__$1 = function() {
                    var statearr_15137 = state_15134;
                    statearr_15137[7] = inst_15099;
                    statearr_15137[8] = inst_15098;
                    return statearr_15137;
                  }();
                  var statearr_15138_15166 = state_15134__$1;
                  statearr_15138_15166[2] = null;
                  statearr_15138_15166[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_15135 === 4) {
                    var inst_15102 = state_15134[9];
                    var inst_15102__$1 = state_15134[2];
                    var inst_15103 = inst_15102__$1 == null;
                    var inst_15104 = cljs.core.not.call(null, inst_15103);
                    var state_15134__$1 = function() {
                      var statearr_15139 = state_15134;
                      statearr_15139[9] = inst_15102__$1;
                      return statearr_15139;
                    }();
                    if (inst_15104) {
                      var statearr_15140_15167 = state_15134__$1;
                      statearr_15140_15167[1] = 5;
                    } else {
                      var statearr_15141_15168 = state_15134__$1;
                      statearr_15141_15168[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_15135 === 15) {
                      var inst_15124 = state_15134[2];
                      var state_15134__$1 = state_15134;
                      var statearr_15142_15169 = state_15134__$1;
                      statearr_15142_15169[2] = inst_15124;
                      statearr_15142_15169[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15135 === 13) {
                        var state_15134__$1 = state_15134;
                        var statearr_15143_15170 = state_15134__$1;
                        statearr_15143_15170[2] = null;
                        statearr_15143_15170[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_15135 === 6) {
                          var inst_15099 = state_15134[7];
                          var inst_15120 = inst_15099 > 0;
                          var state_15134__$1 = state_15134;
                          if (cljs.core.truth_(inst_15120)) {
                            var statearr_15144_15171 = state_15134__$1;
                            statearr_15144_15171[1] = 12;
                          } else {
                            var statearr_15145_15172 = state_15134__$1;
                            statearr_15145_15172[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_15135 === 3) {
                            var inst_15132 = state_15134[2];
                            var state_15134__$1 = state_15134;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15134__$1, inst_15132);
                          } else {
                            if (state_val_15135 === 12) {
                              var inst_15098 = state_15134[8];
                              var inst_15122 = cljs.core.vec.call(null, inst_15098);
                              var state_15134__$1 = state_15134;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15134__$1, 15, out, inst_15122);
                            } else {
                              if (state_val_15135 === 2) {
                                var state_15134__$1 = state_15134;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15134__$1, 4, ch);
                              } else {
                                if (state_val_15135 === 11) {
                                  var inst_15114 = state_15134[2];
                                  var inst_15115 = new Array(n);
                                  var inst_15098 = inst_15115;
                                  var inst_15099 = 0;
                                  var state_15134__$1 = function() {
                                    var statearr_15146 = state_15134;
                                    statearr_15146[7] = inst_15099;
                                    statearr_15146[10] = inst_15114;
                                    statearr_15146[8] = inst_15098;
                                    return statearr_15146;
                                  }();
                                  var statearr_15147_15173 = state_15134__$1;
                                  statearr_15147_15173[2] = null;
                                  statearr_15147_15173[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_15135 === 9) {
                                    var inst_15098 = state_15134[8];
                                    var inst_15112 = cljs.core.vec.call(null, inst_15098);
                                    var state_15134__$1 = state_15134;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15134__$1, 11, out, inst_15112);
                                  } else {
                                    if (state_val_15135 === 5) {
                                      var inst_15102 = state_15134[9];
                                      var inst_15099 = state_15134[7];
                                      var inst_15107 = state_15134[11];
                                      var inst_15098 = state_15134[8];
                                      var inst_15106 = inst_15098[inst_15099] = inst_15102;
                                      var inst_15107__$1 = inst_15099 + 1;
                                      var inst_15108 = inst_15107__$1 < n;
                                      var state_15134__$1 = function() {
                                        var statearr_15148 = state_15134;
                                        statearr_15148[12] = inst_15106;
                                        statearr_15148[11] = inst_15107__$1;
                                        return statearr_15148;
                                      }();
                                      if (cljs.core.truth_(inst_15108)) {
                                        var statearr_15149_15174 = state_15134__$1;
                                        statearr_15149_15174[1] = 8;
                                      } else {
                                        var statearr_15150_15175 = state_15134__$1;
                                        statearr_15150_15175[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_15135 === 14) {
                                        var inst_15127 = state_15134[2];
                                        var inst_15128 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_15134__$1 = function() {
                                          var statearr_15152 = state_15134;
                                          statearr_15152[13] = inst_15127;
                                          return statearr_15152;
                                        }();
                                        var statearr_15153_15176 = state_15134__$1;
                                        statearr_15153_15176[2] = inst_15128;
                                        statearr_15153_15176[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_15135 === 10) {
                                          var inst_15118 = state_15134[2];
                                          var state_15134__$1 = state_15134;
                                          var statearr_15154_15177 = state_15134__$1;
                                          statearr_15154_15177[2] = inst_15118;
                                          statearr_15154_15177[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_15135 === 8) {
                                            var inst_15107 = state_15134[11];
                                            var inst_15098 = state_15134[8];
                                            var tmp15151 = inst_15098;
                                            var inst_15098__$1 = tmp15151;
                                            var inst_15099 = inst_15107;
                                            var state_15134__$1 = function() {
                                              var statearr_15155 = state_15134;
                                              statearr_15155[7] = inst_15099;
                                              statearr_15155[8] = inst_15098__$1;
                                              return statearr_15155;
                                            }();
                                            var statearr_15156_15178 = state_15134__$1;
                                            statearr_15156_15178[2] = null;
                                            statearr_15156_15178[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6971__auto___15164, out);
          return function(switch__6956__auto__, c__6971__auto___15164, out) {
            return function() {
              var state_machine__6957__auto__ = null;
              var state_machine__6957__auto____0 = function() {
                var statearr_15160 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_15160[0] = state_machine__6957__auto__;
                statearr_15160[1] = 1;
                return statearr_15160;
              };
              var state_machine__6957__auto____1 = function(state_15134) {
                while (true) {
                  var ret_value__6958__auto__ = function() {
                    try {
                      while (true) {
                        var result__6959__auto__ = switch__6956__auto__.call(null, state_15134);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6959__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6959__auto__;
                        }
                        break;
                      }
                    } catch (e15161) {
                      if (e15161 instanceof Object) {
                        var ex__6960__auto__ = e15161;
                        var statearr_15162_15179 = state_15134;
                        statearr_15162_15179[5] = ex__6960__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15134);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e15161;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6958__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__15180 = state_15134;
                    state_15134 = G__15180;
                    continue;
                  } else {
                    return ret_value__6958__auto__;
                  }
                  break;
                }
              };
              state_machine__6957__auto__ = function(state_15134) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6957__auto____0.call(this);
                  case 1:
                    return state_machine__6957__auto____1.call(this, state_15134);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6957__auto____0;
              state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6957__auto____1;
              return state_machine__6957__auto__;
            }();
          }(switch__6956__auto__, c__6971__auto___15164, out);
        }();
        var state__6973__auto__ = function() {
          var statearr_15163 = f__6972__auto__.call(null);
          statearr_15163[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6971__auto___15164;
          return statearr_15163;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6973__auto__);
      };
    }(c__6971__auto___15164, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6971__auto___15323 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6971__auto___15323, out) {
      return function() {
        var f__6972__auto__ = function() {
          var switch__6956__auto__ = function(c__6971__auto___15323, out) {
            return function(state_15293) {
              var state_val_15294 = state_15293[1];
              if (state_val_15294 === 7) {
                var inst_15289 = state_15293[2];
                var state_15293__$1 = state_15293;
                var statearr_15295_15324 = state_15293__$1;
                statearr_15295_15324[2] = inst_15289;
                statearr_15295_15324[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15294 === 1) {
                  var inst_15252 = [];
                  var inst_15253 = inst_15252;
                  var inst_15254 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                  var state_15293__$1 = function() {
                    var statearr_15296 = state_15293;
                    statearr_15296[7] = inst_15253;
                    statearr_15296[8] = inst_15254;
                    return statearr_15296;
                  }();
                  var statearr_15297_15325 = state_15293__$1;
                  statearr_15297_15325[2] = null;
                  statearr_15297_15325[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_15294 === 4) {
                    var inst_15257 = state_15293[9];
                    var inst_15257__$1 = state_15293[2];
                    var inst_15258 = inst_15257__$1 == null;
                    var inst_15259 = cljs.core.not.call(null, inst_15258);
                    var state_15293__$1 = function() {
                      var statearr_15298 = state_15293;
                      statearr_15298[9] = inst_15257__$1;
                      return statearr_15298;
                    }();
                    if (inst_15259) {
                      var statearr_15299_15326 = state_15293__$1;
                      statearr_15299_15326[1] = 5;
                    } else {
                      var statearr_15300_15327 = state_15293__$1;
                      statearr_15300_15327[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_15294 === 15) {
                      var inst_15283 = state_15293[2];
                      var state_15293__$1 = state_15293;
                      var statearr_15301_15328 = state_15293__$1;
                      statearr_15301_15328[2] = inst_15283;
                      statearr_15301_15328[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15294 === 13) {
                        var state_15293__$1 = state_15293;
                        var statearr_15302_15329 = state_15293__$1;
                        statearr_15302_15329[2] = null;
                        statearr_15302_15329[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_15294 === 6) {
                          var inst_15253 = state_15293[7];
                          var inst_15278 = inst_15253.length;
                          var inst_15279 = inst_15278 > 0;
                          var state_15293__$1 = state_15293;
                          if (cljs.core.truth_(inst_15279)) {
                            var statearr_15303_15330 = state_15293__$1;
                            statearr_15303_15330[1] = 12;
                          } else {
                            var statearr_15304_15331 = state_15293__$1;
                            statearr_15304_15331[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_15294 === 3) {
                            var inst_15291 = state_15293[2];
                            var state_15293__$1 = state_15293;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15293__$1, inst_15291);
                          } else {
                            if (state_val_15294 === 12) {
                              var inst_15253 = state_15293[7];
                              var inst_15281 = cljs.core.vec.call(null, inst_15253);
                              var state_15293__$1 = state_15293;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15293__$1, 15, out, inst_15281);
                            } else {
                              if (state_val_15294 === 2) {
                                var state_15293__$1 = state_15293;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15293__$1, 4, ch);
                              } else {
                                if (state_val_15294 === 11) {
                                  var inst_15257 = state_15293[9];
                                  var inst_15261 = state_15293[10];
                                  var inst_15271 = state_15293[2];
                                  var inst_15272 = [];
                                  var inst_15273 = inst_15272.push(inst_15257);
                                  var inst_15253 = inst_15272;
                                  var inst_15254 = inst_15261;
                                  var state_15293__$1 = function() {
                                    var statearr_15305 = state_15293;
                                    statearr_15305[7] = inst_15253;
                                    statearr_15305[11] = inst_15273;
                                    statearr_15305[8] = inst_15254;
                                    statearr_15305[12] = inst_15271;
                                    return statearr_15305;
                                  }();
                                  var statearr_15306_15332 = state_15293__$1;
                                  statearr_15306_15332[2] = null;
                                  statearr_15306_15332[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_15294 === 9) {
                                    var inst_15253 = state_15293[7];
                                    var inst_15269 = cljs.core.vec.call(null, inst_15253);
                                    var state_15293__$1 = state_15293;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15293__$1, 11, out, inst_15269);
                                  } else {
                                    if (state_val_15294 === 5) {
                                      var inst_15257 = state_15293[9];
                                      var inst_15261 = state_15293[10];
                                      var inst_15254 = state_15293[8];
                                      var inst_15261__$1 = f.call(null, inst_15257);
                                      var inst_15262 = cljs.core._EQ_.call(null, inst_15261__$1, inst_15254);
                                      var inst_15263 = cljs.core.keyword_identical_QMARK_.call(null, inst_15254, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                      var inst_15264 = inst_15262 || inst_15263;
                                      var state_15293__$1 = function() {
                                        var statearr_15307 = state_15293;
                                        statearr_15307[10] = inst_15261__$1;
                                        return statearr_15307;
                                      }();
                                      if (cljs.core.truth_(inst_15264)) {
                                        var statearr_15308_15333 = state_15293__$1;
                                        statearr_15308_15333[1] = 8;
                                      } else {
                                        var statearr_15309_15334 = state_15293__$1;
                                        statearr_15309_15334[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_15294 === 14) {
                                        var inst_15286 = state_15293[2];
                                        var inst_15287 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_15293__$1 = function() {
                                          var statearr_15311 = state_15293;
                                          statearr_15311[13] = inst_15286;
                                          return statearr_15311;
                                        }();
                                        var statearr_15312_15335 = state_15293__$1;
                                        statearr_15312_15335[2] = inst_15287;
                                        statearr_15312_15335[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_15294 === 10) {
                                          var inst_15276 = state_15293[2];
                                          var state_15293__$1 = state_15293;
                                          var statearr_15313_15336 = state_15293__$1;
                                          statearr_15313_15336[2] = inst_15276;
                                          statearr_15313_15336[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_15294 === 8) {
                                            var inst_15257 = state_15293[9];
                                            var inst_15253 = state_15293[7];
                                            var inst_15261 = state_15293[10];
                                            var inst_15266 = inst_15253.push(inst_15257);
                                            var tmp15310 = inst_15253;
                                            var inst_15253__$1 = tmp15310;
                                            var inst_15254 = inst_15261;
                                            var state_15293__$1 = function() {
                                              var statearr_15314 = state_15293;
                                              statearr_15314[14] = inst_15266;
                                              statearr_15314[7] = inst_15253__$1;
                                              statearr_15314[8] = inst_15254;
                                              return statearr_15314;
                                            }();
                                            var statearr_15315_15337 = state_15293__$1;
                                            statearr_15315_15337[2] = null;
                                            statearr_15315_15337[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6971__auto___15323, out);
          return function(switch__6956__auto__, c__6971__auto___15323, out) {
            return function() {
              var state_machine__6957__auto__ = null;
              var state_machine__6957__auto____0 = function() {
                var statearr_15319 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_15319[0] = state_machine__6957__auto__;
                statearr_15319[1] = 1;
                return statearr_15319;
              };
              var state_machine__6957__auto____1 = function(state_15293) {
                while (true) {
                  var ret_value__6958__auto__ = function() {
                    try {
                      while (true) {
                        var result__6959__auto__ = switch__6956__auto__.call(null, state_15293);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6959__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6959__auto__;
                        }
                        break;
                      }
                    } catch (e15320) {
                      if (e15320 instanceof Object) {
                        var ex__6960__auto__ = e15320;
                        var statearr_15321_15338 = state_15293;
                        statearr_15321_15338[5] = ex__6960__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15293);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e15320;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6958__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__15339 = state_15293;
                    state_15293 = G__15339;
                    continue;
                  } else {
                    return ret_value__6958__auto__;
                  }
                  break;
                }
              };
              state_machine__6957__auto__ = function(state_15293) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6957__auto____0.call(this);
                  case 1:
                    return state_machine__6957__auto____1.call(this, state_15293);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6957__auto____0;
              state_machine__6957__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6957__auto____1;
              return state_machine__6957__auto__;
            }();
          }(switch__6956__auto__, c__6971__auto___15323, out);
        }();
        var state__6973__auto__ = function() {
          var statearr_15322 = f__6972__auto__.call(null);
          statearr_15322[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6971__auto___15323;
          return statearr_15322;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6973__auto__);
      };
    }(c__6971__auto___15323, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function walk(inner, outer, form) {
  if (cljs.core.seq_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.coll_QMARK_.call(null, form)) {
      return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
    } else {
      return outer.call(null, form);
    }
  }
};
clojure.walk.postwalk = function postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, postwalk, f), f, form);
};
clojure.walk.prewalk = function prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function keywordize_keys(m) {
  var f = function(p__15555) {
    var vec__15556 = p__15555;
    var k = cljs.core.nth.call(null, vec__15556, 0, null);
    var v = cljs.core.nth.call(null, vec__15556, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.stringify_keys = function stringify_keys(m) {
  var f = function(p__15559) {
    var vec__15560 = p__15559;
    var k = cljs.core.nth.call(null, vec__15560, 0, null);
    var v = cljs.core.nth.call(null, vec__15560, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.prewalk_replace = function prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("sablono.core");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("sablono.interpreter");
goog.require("sablono.util");
goog.require("clojure.walk");
goog.require("clojure.string");
sablono.core.wrap_attrs = function wrap_attrs(func) {
  return function() {
    var G__15453__delegate = function(args) {
      if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, args))) {
        var vec__15452 = cljs.core.apply.call(null, func, cljs.core.rest.call(null, args));
        var tag = cljs.core.nth.call(null, vec__15452, 0, null);
        var body = cljs.core.nthnext.call(null, vec__15452, 1);
        if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, body))) {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.merge.call(null, cljs.core.first.call(null, body), cljs.core.first.call(null, args)), cljs.core.rest.call(null, body));
        } else {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.first.call(null, args), body);
        }
      } else {
        return cljs.core.apply.call(null, func, args);
      }
    };
    var G__15453 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__15453__delegate.call(this, args);
    };
    G__15453.cljs$lang$maxFixedArity = 0;
    G__15453.cljs$lang$applyTo = function(arglist__15454) {
      var args = cljs.core.seq(arglist__15454);
      return G__15453__delegate(args);
    };
    G__15453.cljs$core$IFn$_invoke$arity$variadic = G__15453__delegate;
    return G__15453;
  }();
};
sablono.core.update_arglists = function update_arglists(arglists) {
  var iter__4386__auto__ = function iter__15459(s__15460) {
    return new cljs.core.LazySeq(null, function() {
      var s__15460__$1 = s__15460;
      while (true) {
        var temp__4126__auto__ = cljs.core.seq.call(null, s__15460__$1);
        if (temp__4126__auto__) {
          var s__15460__$2 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__15460__$2)) {
            var c__4384__auto__ = cljs.core.chunk_first.call(null, s__15460__$2);
            var size__4385__auto__ = cljs.core.count.call(null, c__4384__auto__);
            var b__15462 = cljs.core.chunk_buffer.call(null, size__4385__auto__);
            if (function() {
              var i__15461 = 0;
              while (true) {
                if (i__15461 < size__4385__auto__) {
                  var args = cljs.core._nth.call(null, c__4384__auto__, i__15461);
                  cljs.core.chunk_append.call(null, b__15462, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", 116307443, null), args)));
                  var G__15463 = i__15461 + 1;
                  i__15461 = G__15463;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15462), iter__15459.call(null, cljs.core.chunk_rest.call(null, s__15460__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15462), null);
            }
          } else {
            var args = cljs.core.first.call(null, s__15460__$2);
            return cljs.core.cons.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", 116307443, null), args)), iter__15459.call(null, cljs.core.rest.call(null, s__15460__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__4386__auto__.call(null, arglists);
};
sablono.core.render = function render(component) {
  return React.renderComponentToString(component);
};
sablono.core.include_css = function() {
  var include_css__delegate = function(styles) {
    var iter__4386__auto__ = function iter__15468(s__15469) {
      return new cljs.core.LazySeq(null, function() {
        var s__15469__$1 = s__15469;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__15469__$1);
          if (temp__4126__auto__) {
            var s__15469__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__15469__$2)) {
              var c__4384__auto__ = cljs.core.chunk_first.call(null, s__15469__$2);
              var size__4385__auto__ = cljs.core.count.call(null, c__4384__auto__);
              var b__15471 = cljs.core.chunk_buffer.call(null, size__4385__auto__);
              if (function() {
                var i__15470 = 0;
                while (true) {
                  if (i__15470 < size__4385__auto__) {
                    var style = cljs.core._nth.call(null, c__4384__auto__, i__15470);
                    cljs.core.chunk_append.call(null, b__15471, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", -1769163468), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text/css", new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1378823488), "stylesheet"], null)], null));
                    var G__15472 = i__15470 + 1;
                    i__15470 = G__15472;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15471), iter__15468.call(null, cljs.core.chunk_rest.call(null, s__15469__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15471), null);
              }
            } else {
              var style = cljs.core.first.call(null, s__15469__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", -1769163468), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text/css", new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1378823488), "stylesheet"], null)], null), iter__15468.call(null, 
              cljs.core.rest.call(null, s__15469__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4386__auto__.call(null, styles);
  };
  var include_css = function(var_args) {
    var styles = null;
    if (arguments.length > 0) {
      styles = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return include_css__delegate.call(this, styles);
  };
  include_css.cljs$lang$maxFixedArity = 0;
  include_css.cljs$lang$applyTo = function(arglist__15473) {
    var styles = cljs.core.seq(arglist__15473);
    return include_css__delegate(styles);
  };
  include_css.cljs$core$IFn$_invoke$arity$variadic = include_css__delegate;
  return include_css;
}();
sablono.core.include_js = function include_js(src) {
  return goog.dom.appendChild(goog.dom.getDocument().body, goog.dom.createDom("script", {"src":src}));
};
sablono.core.include_react = function include_react() {
  return sablono.core.include_js.call(null, "http://fb.me/react-0.9.0.js");
};
sablono.core.link_to15474 = function() {
  var link_to15474__delegate = function(url, content) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, url)], null), content], null);
  };
  var link_to15474 = function(url, var_args) {
    var content = null;
    if (arguments.length > 1) {
      content = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link_to15474__delegate.call(this, url, content);
  };
  link_to15474.cljs$lang$maxFixedArity = 1;
  link_to15474.cljs$lang$applyTo = function(arglist__15475) {
    var url = cljs.core.first(arglist__15475);
    var content = cljs.core.rest(arglist__15475);
    return link_to15474__delegate(url, content);
  };
  link_to15474.cljs$core$IFn$_invoke$arity$variadic = link_to15474__delegate;
  return link_to15474;
}();
sablono.core.link_to = sablono.core.wrap_attrs.call(null, sablono.core.link_to15474);
sablono.core.mail_to15476 = function() {
  var mail_to15476__delegate = function(e_mail, p__15477) {
    var vec__15479 = p__15477;
    var content = cljs.core.nth.call(null, vec__15479, 0, null);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), [cljs.core.str("mailto:"), cljs.core.str(e_mail)].join("")], null), function() {
      var or__3630__auto__ = content;
      if (cljs.core.truth_(or__3630__auto__)) {
        return or__3630__auto__;
      } else {
        return e_mail;
      }
    }()], null);
  };
  var mail_to15476 = function(e_mail, var_args) {
    var p__15477 = null;
    if (arguments.length > 1) {
      p__15477 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mail_to15476__delegate.call(this, e_mail, p__15477);
  };
  mail_to15476.cljs$lang$maxFixedArity = 1;
  mail_to15476.cljs$lang$applyTo = function(arglist__15480) {
    var e_mail = cljs.core.first(arglist__15480);
    var p__15477 = cljs.core.rest(arglist__15480);
    return mail_to15476__delegate(e_mail, p__15477);
  };
  mail_to15476.cljs$core$IFn$_invoke$arity$variadic = mail_to15476__delegate;
  return mail_to15476;
}();
sablono.core.mail_to = sablono.core.wrap_attrs.call(null, sablono.core.mail_to15476);
sablono.core.unordered_list15481 = function unordered_list15481(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", -1349521403), function() {
    var iter__4386__auto__ = function iter__15486(s__15487) {
      return new cljs.core.LazySeq(null, function() {
        var s__15487__$1 = s__15487;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__15487__$1);
          if (temp__4126__auto__) {
            var s__15487__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__15487__$2)) {
              var c__4384__auto__ = cljs.core.chunk_first.call(null, s__15487__$2);
              var size__4385__auto__ = cljs.core.count.call(null, c__4384__auto__);
              var b__15489 = cljs.core.chunk_buffer.call(null, size__4385__auto__);
              if (function() {
                var i__15488 = 0;
                while (true) {
                  if (i__15488 < size__4385__auto__) {
                    var x = cljs.core._nth.call(null, c__4384__auto__, i__15488);
                    cljs.core.chunk_append.call(null, b__15489, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null));
                    var G__15490 = i__15488 + 1;
                    i__15488 = G__15490;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15489), iter__15486.call(null, cljs.core.chunk_rest.call(null, s__15487__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15489), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__15487__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null), iter__15486.call(null, cljs.core.rest.call(null, s__15487__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4386__auto__.call(null, coll);
  }()], null);
};
sablono.core.unordered_list = sablono.core.wrap_attrs.call(null, sablono.core.unordered_list15481);
sablono.core.ordered_list15491 = function ordered_list15491(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ol", "ol", 932524051), function() {
    var iter__4386__auto__ = function iter__15496(s__15497) {
      return new cljs.core.LazySeq(null, function() {
        var s__15497__$1 = s__15497;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__15497__$1);
          if (temp__4126__auto__) {
            var s__15497__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__15497__$2)) {
              var c__4384__auto__ = cljs.core.chunk_first.call(null, s__15497__$2);
              var size__4385__auto__ = cljs.core.count.call(null, c__4384__auto__);
              var b__15499 = cljs.core.chunk_buffer.call(null, size__4385__auto__);
              if (function() {
                var i__15498 = 0;
                while (true) {
                  if (i__15498 < size__4385__auto__) {
                    var x = cljs.core._nth.call(null, c__4384__auto__, i__15498);
                    cljs.core.chunk_append.call(null, b__15499, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null));
                    var G__15500 = i__15498 + 1;
                    i__15498 = G__15500;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15499), iter__15496.call(null, cljs.core.chunk_rest.call(null, s__15497__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15499), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__15497__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null), iter__15496.call(null, cljs.core.rest.call(null, s__15497__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4386__auto__.call(null, coll);
  }()], null);
};
sablono.core.ordered_list = sablono.core.wrap_attrs.call(null, sablono.core.ordered_list15491);
sablono.core.image15501 = function() {
  var image15501 = null;
  var image15501__1 = function(src) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "src", "src", -1651076051), sablono.util.as_str.call(null, src)], null)], null);
  };
  var image15501__2 = function(src, alt) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "src", "src", -1651076051), sablono.util.as_str.call(null, src), new cljs.core.Keyword(null, "alt", "alt", -3214426), alt], null)], null);
  };
  image15501 = function(src, alt) {
    switch(arguments.length) {
      case 1:
        return image15501__1.call(this, src);
      case 2:
        return image15501__2.call(this, src, alt);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  image15501.cljs$core$IFn$_invoke$arity$1 = image15501__1;
  image15501.cljs$core$IFn$_invoke$arity$2 = image15501__2;
  return image15501;
}();
sablono.core.image = sablono.core.wrap_attrs.call(null, sablono.core.image15501);
sablono.core._STAR_group_STAR_ = cljs.core.PersistentVector.EMPTY;
sablono.core.make_name = function make_name(name) {
  return cljs.core.reduce.call(null, function(p1__15502_SHARP_, p2__15503_SHARP_) {
    return[cljs.core.str(p1__15502_SHARP_), cljs.core.str("["), cljs.core.str(p2__15503_SHARP_), cljs.core.str("]")].join("");
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.make_id = function make_id(name) {
  return cljs.core.reduce.call(null, function(p1__15504_SHARP_, p2__15505_SHARP_) {
    return[cljs.core.str(p1__15504_SHARP_), cljs.core.str("-"), cljs.core.str(p2__15505_SHARP_)].join("");
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.input_field_STAR_ = function input_field_STAR_(type, name, value) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), type, new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 305978217), 
  value], null)], null);
};
sablono.core.color_field15506 = function() {
  var color_field15506 = null;
  var color_field15506__1 = function(name__5655__auto__) {
    return color_field15506.call(null, name__5655__auto__, null);
  };
  var color_field15506__2 = function(name__5655__auto__, value__5656__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "color", "color", -1642760596, null))].join(""), name__5655__auto__, value__5656__auto__);
  };
  color_field15506 = function(name__5655__auto__, value__5656__auto__) {
    switch(arguments.length) {
      case 1:
        return color_field15506__1.call(this, name__5655__auto__);
      case 2:
        return color_field15506__2.call(this, name__5655__auto__, value__5656__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  color_field15506.cljs$core$IFn$_invoke$arity$1 = color_field15506__1;
  color_field15506.cljs$core$IFn$_invoke$arity$2 = color_field15506__2;
  return color_field15506;
}();
sablono.core.color_field = sablono.core.wrap_attrs.call(null, sablono.core.color_field15506);
sablono.core.date_field15507 = function() {
  var date_field15507 = null;
  var date_field15507__1 = function(name__5655__auto__) {
    return date_field15507.call(null, name__5655__auto__, null);
  };
  var date_field15507__2 = function(name__5655__auto__, value__5656__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "date", "date", 177097065, null))].join(""), name__5655__auto__, value__5656__auto__);
  };
  date_field15507 = function(name__5655__auto__, value__5656__auto__) {
    switch(arguments.length) {
      case 1:
        return date_field15507__1.call(this, name__5655__auto__);
      case 2:
        return date_field15507__2.call(this, name__5655__auto__, value__5656__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  date_field15507.cljs$core$IFn$_invoke$arity$1 = date_field15507__1;
  date_field15507.cljs$core$IFn$_invoke$arity$2 = date_field15507__2;
  return date_field15507;
}();
sablono.core.date_field = sablono.core.wrap_attrs.call(null, sablono.core.date_field15507);
sablono.core.datetime_field15508 = function() {
  var datetime_field15508 = null;
  var datetime_field15508__1 = function(name__5655__auto__) {
    return datetime_field15508.call(null, name__5655__auto__, null);
  };
  var datetime_field15508__2 = function(name__5655__auto__, value__5656__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "datetime", "datetime", 2135207229, null))].join(""), name__5655__auto__, value__5656__auto__);
  };
  datetime_field15508 = function(name__5655__auto__, value__5656__auto__) {
    switch(arguments.length) {
      case 1:
        return datetime_field15508__1.call(this, name__5655__auto__);
      case 2:
        return datetime_field15508__2.call(this, name__5655__auto__, value__5656__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  datetime_field15508.cljs$core$IFn$_invoke$arity$1 = datetime_field15508__1;
  datetime_field15508.cljs$core$IFn$_invoke$arity$2 = datetime_field15508__2;
  return datetime_field15508;
}();
sablono.core.datetime_field = sablono.core.wrap_attrs.call(null, sablono.core.datetime_field15508);
sablono.core.datetime_local_field15509 = function() {
  var datetime_local_field15509 = null;
  var datetime_local_field15509__1 = function(name__5655__auto__) {
    return datetime_local_field15509.call(null, name__5655__auto__, null);
  };
  var datetime_local_field15509__2 = function(name__5655__auto__, value__5656__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "datetime-local", "datetime-local", -507312697, null))].join(""), name__5655__auto__, value__5656__auto__);
  };
  datetime_local_field15509 = function(name__5655__auto__, value__5656__auto__) {
    switch(arguments.length) {
      case 1:
        return datetime_local_field15509__1.call(this, name__5655__auto__);
      case 2:
        return datetime_local_field15509__2.call(this, name__5655__auto__, value__5656__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  datetime_local_field15509.cljs$core$IFn$_invoke$arity$1 = datetime_local_field15509__1;
  datetime_local_field15509.cljs$core$IFn$_invoke$arity$2 = datetime_local_field15509__2;
  return datetime_local_field15509;
}();
sablono.core.datetime_local_field = sablono.core.wrap_attrs.call(null, sablono.core.datetime_local_field15509);
sablono.core.email_field15510 = function() {
  var email_field15510 = null;
  var email_field15510__1 = function(name__5655__auto__) {
    return email_field15510.call(null, name__5655__auto__, null);
  };
  var email_field15510__2 = function(name__5655__auto__, value__5656__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "email", "email", -1238619063, null))].join(""), name__5655__auto__, value__5656__auto__);
  };
  email_field15510 = function(name__5655__auto__, value__5656__auto__) {
    switch(arguments.length) {
      case 1:
        return email_field15510__1.call(this, name__5655__auto__);
      case 2:
        return email_field15510__2.call(this, name__5655__auto__, value__5656__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  email_field15510.cljs$core$IFn$_invoke$arity$1 = email_field15510__1;
  email_field15510.cljs$core$IFn$_invoke$arity$2 = email_field15510__2;
  return email_field15510;
}();
sablono.core.email_field = sablono.core.wrap_attrs.call(null, sablono.core.email_field15510);
sablono.core.file_field15511 = function() {
  var file_field15511 = null;
  var file_field15511__1 = function(name__5655__auto__) {
    return file_field15511.call(null, name__5655__auto__, null);
  };
  var file_field15511__2 = function(name__5655__auto__, value__5656__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "file", "file", 370885649, null))].join(""), name__5655__auto__, value__5656__auto__);
  };
  file_field15511 = function(name__5655__auto__, value__5656__auto__) {
    switch(arguments.length) {
      case 1:
        return file_field15511__1.call(this, name__5655__auto__);
      case 2:
        return file_field15511__2.call(this, name__5655__auto__, value__5656__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  file_field15511.cljs$core$IFn$_invoke$arity$1 = file_field15511__1;
  file_field15511.cljs$core$IFn$_invoke$arity$2 = file_field15511__2;
  return file_field15511;
}();
sablono.core.file_field = sablono.core.wrap_attrs.call(null, sablono.core.file_field15511);
sablono.core.hidden_field15512 = function() {
  var hidden_field15512 = null;
  var hidden_field15512__1 = function(name__5655__auto__) {
    return hidden_field15512.call(null, name__5655__auto__, null);
  };
  var hidden_field15512__2 = function(name__5655__auto__, value__5656__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "hidden", "hidden", 1328025435, null))].join(""), name__5655__auto__, value__5656__auto__);
  };
  hidden_field15512 = function(name__5655__auto__, value__5656__auto__) {
    switch(arguments.length) {
      case 1:
        return hidden_field15512__1.call(this, name__5655__auto__);
      case 2:
        return hidden_field15512__2.call(this, name__5655__auto__, value__5656__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hidden_field15512.cljs$core$IFn$_invoke$arity$1 = hidden_field15512__1;
  hidden_field15512.cljs$core$IFn$_invoke$arity$2 = hidden_field15512__2;
  return hidden_field15512;
}();
sablono.core.hidden_field = sablono.core.wrap_attrs.call(null, sablono.core.hidden_field15512);
sablono.core.month_field15513 = function() {
  var month_field15513 = null;
  var month_field15513__1 = function(name__5655__auto__) {
    return month_field15513.call(null, name__5655__auto__, null);
  };
  var month_field15513__2 = function(name__5655__auto__, value__5656__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "month", "month", -319717006, null))].join(""), name__5655__auto__, value__5656__auto__);
  };
  month_field15513 = function(name__5655__auto__, value__5656__auto__) {
    switch(arguments.length) {
      case 1:
        return month_field15513__1.call(this, name__5655__auto__);
      case 2:
        return month_field15513__2.call(this, name__5655__auto__, value__5656__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  month_field15513.cljs$core$IFn$_invoke$arity$1 = month_field15513__1;
  month_field15513.cljs$core$IFn$_invoke$arity$2 = month_field15513__2;
  return month_field15513;
}();
sablono.core.month_field = sablono.core.wrap_attrs.call(null, sablono.core.month_field15513);
sablono.core.number_field15514 = function() {
  var number_field15514 = null;
  var number_field15514__1 = function(name__5655__auto__) {
    return number_field15514.call(null, name__5655__auto__, null);
  };
  var number_field15514__2 = function(name__5655__auto__, value__5656__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "number", "number", -1084057331, null))].join(""), name__5655__auto__, value__5656__auto__);
  };
  number_field15514 = function(name__5655__auto__, value__5656__auto__) {
    switch(arguments.length) {
      case 1:
        return number_field15514__1.call(this, name__5655__auto__);
      case 2:
        return number_field15514__2.call(this, name__5655__auto__, value__5656__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  number_field15514.cljs$core$IFn$_invoke$arity$1 = number_field15514__1;
  number_field15514.cljs$core$IFn$_invoke$arity$2 = number_field15514__2;
  return number_field15514;
}();
sablono.core.number_field = sablono.core.wrap_attrs.call(null, sablono.core.number_field15514);
sablono.core.password_field15515 = function() {
  var password_field15515 = null;
  var password_field15515__1 = function(name__5655__auto__) {
    return password_field15515.call(null, name__5655__auto__, null);
  };
  var password_field15515__2 = function(name__5655__auto__, value__5656__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "password", "password", 2057553998, null))].join(""), name__5655__auto__, value__5656__auto__);
  };
  password_field15515 = function(name__5655__auto__, value__5656__auto__) {
    switch(arguments.length) {
      case 1:
        return password_field15515__1.call(this, name__5655__auto__);
      case 2:
        return password_field15515__2.call(this, name__5655__auto__, value__5656__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  password_field15515.cljs$core$IFn$_invoke$arity$1 = password_field15515__1;
  password_field15515.cljs$core$IFn$_invoke$arity$2 = password_field15515__2;
  return password_field15515;
}();
sablono.core.password_field = sablono.core.wrap_attrs.call(null, sablono.core.password_field15515);
sablono.core.range_field15516 = function() {
  var range_field15516 = null;
  var range_field15516__1 = function(name__5655__auto__) {
    return range_field15516.call(null, name__5655__auto__, null);
  };
  var range_field15516__2 = function(name__5655__auto__, value__5656__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "range", "range", -1014743483, null))].join(""), name__5655__auto__, value__5656__auto__);
  };
  range_field15516 = function(name__5655__auto__, value__5656__auto__) {
    switch(arguments.length) {
      case 1:
        return range_field15516__1.call(this, name__5655__auto__);
      case 2:
        return range_field15516__2.call(this, name__5655__auto__, value__5656__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range_field15516.cljs$core$IFn$_invoke$arity$1 = range_field15516__1;
  range_field15516.cljs$core$IFn$_invoke$arity$2 = range_field15516__2;
  return range_field15516;
}();
sablono.core.range_field = sablono.core.wrap_attrs.call(null, sablono.core.range_field15516);
sablono.core.search_field15517 = function() {
  var search_field15517 = null;
  var search_field15517__1 = function(name__5655__auto__) {
    return search_field15517.call(null, name__5655__auto__, null);
  };
  var search_field15517__2 = function(name__5655__auto__, value__5656__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "search", "search", -1089495947, null))].join(""), name__5655__auto__, value__5656__auto__);
  };
  search_field15517 = function(name__5655__auto__, value__5656__auto__) {
    switch(arguments.length) {
      case 1:
        return search_field15517__1.call(this, name__5655__auto__);
      case 2:
        return search_field15517__2.call(this, name__5655__auto__, value__5656__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  search_field15517.cljs$core$IFn$_invoke$arity$1 = search_field15517__1;
  search_field15517.cljs$core$IFn$_invoke$arity$2 = search_field15517__2;
  return search_field15517;
}();
sablono.core.search_field = sablono.core.wrap_attrs.call(null, sablono.core.search_field15517);
sablono.core.tel_field15518 = function() {
  var tel_field15518 = null;
  var tel_field15518__1 = function(name__5655__auto__) {
    return tel_field15518.call(null, name__5655__auto__, null);
  };
  var tel_field15518__2 = function(name__5655__auto__, value__5656__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "tel", "tel", 1864669686, null))].join(""), name__5655__auto__, value__5656__auto__);
  };
  tel_field15518 = function(name__5655__auto__, value__5656__auto__) {
    switch(arguments.length) {
      case 1:
        return tel_field15518__1.call(this, name__5655__auto__);
      case 2:
        return tel_field15518__2.call(this, name__5655__auto__, value__5656__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tel_field15518.cljs$core$IFn$_invoke$arity$1 = tel_field15518__1;
  tel_field15518.cljs$core$IFn$_invoke$arity$2 = tel_field15518__2;
  return tel_field15518;
}();
sablono.core.tel_field = sablono.core.wrap_attrs.call(null, sablono.core.tel_field15518);
sablono.core.text_field15519 = function() {
  var text_field15519 = null;
  var text_field15519__1 = function(name__5655__auto__) {
    return text_field15519.call(null, name__5655__auto__, null);
  };
  var text_field15519__2 = function(name__5655__auto__, value__5656__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "text", "text", -150030170, null))].join(""), name__5655__auto__, value__5656__auto__);
  };
  text_field15519 = function(name__5655__auto__, value__5656__auto__) {
    switch(arguments.length) {
      case 1:
        return text_field15519__1.call(this, name__5655__auto__);
      case 2:
        return text_field15519__2.call(this, name__5655__auto__, value__5656__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text_field15519.cljs$core$IFn$_invoke$arity$1 = text_field15519__1;
  text_field15519.cljs$core$IFn$_invoke$arity$2 = text_field15519__2;
  return text_field15519;
}();
sablono.core.text_field = sablono.core.wrap_attrs.call(null, sablono.core.text_field15519);
sablono.core.time_field15520 = function() {
  var time_field15520 = null;
  var time_field15520__1 = function(name__5655__auto__) {
    return time_field15520.call(null, name__5655__auto__, null);
  };
  var time_field15520__2 = function(name__5655__auto__, value__5656__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "time", "time", -1268547887, null))].join(""), name__5655__auto__, value__5656__auto__);
  };
  time_field15520 = function(name__5655__auto__, value__5656__auto__) {
    switch(arguments.length) {
      case 1:
        return time_field15520__1.call(this, name__5655__auto__);
      case 2:
        return time_field15520__2.call(this, name__5655__auto__, value__5656__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  time_field15520.cljs$core$IFn$_invoke$arity$1 = time_field15520__1;
  time_field15520.cljs$core$IFn$_invoke$arity$2 = time_field15520__2;
  return time_field15520;
}();
sablono.core.time_field = sablono.core.wrap_attrs.call(null, sablono.core.time_field15520);
sablono.core.url_field15521 = function() {
  var url_field15521 = null;
  var url_field15521__1 = function(name__5655__auto__) {
    return url_field15521.call(null, name__5655__auto__, null);
  };
  var url_field15521__2 = function(name__5655__auto__, value__5656__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "url", "url", 1916828573, null))].join(""), name__5655__auto__, value__5656__auto__);
  };
  url_field15521 = function(name__5655__auto__, value__5656__auto__) {
    switch(arguments.length) {
      case 1:
        return url_field15521__1.call(this, name__5655__auto__);
      case 2:
        return url_field15521__2.call(this, name__5655__auto__, value__5656__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  url_field15521.cljs$core$IFn$_invoke$arity$1 = url_field15521__1;
  url_field15521.cljs$core$IFn$_invoke$arity$2 = url_field15521__2;
  return url_field15521;
}();
sablono.core.url_field = sablono.core.wrap_attrs.call(null, sablono.core.url_field15521);
sablono.core.week_field15522 = function() {
  var week_field15522 = null;
  var week_field15522__1 = function(name__5655__auto__) {
    return week_field15522.call(null, name__5655__auto__, null);
  };
  var week_field15522__2 = function(name__5655__auto__, value__5656__auto__) {
    return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "week", "week", 314058249, null))].join(""), name__5655__auto__, value__5656__auto__);
  };
  week_field15522 = function(name__5655__auto__, value__5656__auto__) {
    switch(arguments.length) {
      case 1:
        return week_field15522__1.call(this, name__5655__auto__);
      case 2:
        return week_field15522__2.call(this, name__5655__auto__, value__5656__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  week_field15522.cljs$core$IFn$_invoke$arity$1 = week_field15522__1;
  week_field15522.cljs$core$IFn$_invoke$arity$2 = week_field15522__2;
  return week_field15522;
}();
sablono.core.week_field = sablono.core.wrap_attrs.call(null, sablono.core.week_field15522);
sablono.core.file_upload = sablono.core.file_field;
sablono.core.check_box15523 = function() {
  var check_box15523 = null;
  var check_box15523__1 = function(name) {
    return check_box15523.call(null, name, null);
  };
  var check_box15523__2 = function(name, checked_QMARK_) {
    return check_box15523.call(null, name, checked_QMARK_, "true");
  };
  var check_box15523__3 = function(name, checked_QMARK_, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 
    305978217), value, new cljs.core.Keyword(null, "checked", "checked", -50955819), checked_QMARK_], null)], null);
  };
  check_box15523 = function(name, checked_QMARK_, value) {
    switch(arguments.length) {
      case 1:
        return check_box15523__1.call(this, name);
      case 2:
        return check_box15523__2.call(this, name, checked_QMARK_);
      case 3:
        return check_box15523__3.call(this, name, checked_QMARK_, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  check_box15523.cljs$core$IFn$_invoke$arity$1 = check_box15523__1;
  check_box15523.cljs$core$IFn$_invoke$arity$2 = check_box15523__2;
  check_box15523.cljs$core$IFn$_invoke$arity$3 = check_box15523__3;
  return check_box15523;
}();
sablono.core.check_box = sablono.core.wrap_attrs.call(null, sablono.core.check_box15523);
sablono.core.radio_button15524 = function() {
  var radio_button15524 = null;
  var radio_button15524__1 = function(group) {
    return radio_button15524.call(null, group, null);
  };
  var radio_button15524__2 = function(group, checked_QMARK_) {
    return radio_button15524.call(null, group, checked_QMARK_, "true");
  };
  var radio_button15524__3 = function(group, checked_QMARK_, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), "radio", new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, group), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, [cljs.core.str(sablono.util.as_str.call(null, group)), 
    cljs.core.str("-"), cljs.core.str(sablono.util.as_str.call(null, value))].join("")), new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "checked", "checked", -50955819), checked_QMARK_], null)], null);
  };
  radio_button15524 = function(group, checked_QMARK_, value) {
    switch(arguments.length) {
      case 1:
        return radio_button15524__1.call(this, group);
      case 2:
        return radio_button15524__2.call(this, group, checked_QMARK_);
      case 3:
        return radio_button15524__3.call(this, group, checked_QMARK_, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  radio_button15524.cljs$core$IFn$_invoke$arity$1 = radio_button15524__1;
  radio_button15524.cljs$core$IFn$_invoke$arity$2 = radio_button15524__2;
  radio_button15524.cljs$core$IFn$_invoke$arity$3 = radio_button15524__3;
  return radio_button15524;
}();
sablono.core.radio_button = sablono.core.wrap_attrs.call(null, sablono.core.radio_button15524);
sablono.core.select_options15525 = function() {
  var select_options15525 = null;
  var select_options15525__1 = function(coll) {
    return select_options15525.call(null, coll, null);
  };
  var select_options15525__2 = function(coll, selected) {
    var iter__4386__auto__ = function iter__15534(s__15535) {
      return new cljs.core.LazySeq(null, function() {
        var s__15535__$1 = s__15535;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__15535__$1);
          if (temp__4126__auto__) {
            var s__15535__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__15535__$2)) {
              var c__4384__auto__ = cljs.core.chunk_first.call(null, s__15535__$2);
              var size__4385__auto__ = cljs.core.count.call(null, c__4384__auto__);
              var b__15537 = cljs.core.chunk_buffer.call(null, size__4385__auto__);
              if (function() {
                var i__15536 = 0;
                while (true) {
                  if (i__15536 < size__4385__auto__) {
                    var x = cljs.core._nth.call(null, c__4384__auto__, i__15536);
                    cljs.core.chunk_append.call(null, b__15537, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                      var vec__15540 = x;
                      var text = cljs.core.nth.call(null, vec__15540, 0, null);
                      var val = cljs.core.nth.call(null, vec__15540, 1, null);
                      var disabled_QMARK_ = cljs.core.nth.call(null, vec__15540, 2, null);
                      var disabled_QMARK___$1 = cljs.core.boolean$.call(null, disabled_QMARK_);
                      if (cljs.core.sequential_QMARK_.call(null, val)) {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 1738282218), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "label", "label", 1718410804), text], null), select_options15525.call(null, val, selected)], null);
                      } else {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 305978217), val, new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, val, selected), new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), disabled_QMARK___$1], null), text], null);
                      }
                    }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, x, selected)], null), x], null));
                    var G__15542 = i__15536 + 1;
                    i__15536 = G__15542;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15537), iter__15534.call(null, cljs.core.chunk_rest.call(null, s__15535__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15537), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__15535__$2);
              return cljs.core.cons.call(null, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                var vec__15541 = x;
                var text = cljs.core.nth.call(null, vec__15541, 0, null);
                var val = cljs.core.nth.call(null, vec__15541, 1, null);
                var disabled_QMARK_ = cljs.core.nth.call(null, vec__15541, 2, null);
                var disabled_QMARK___$1 = cljs.core.boolean$.call(null, disabled_QMARK_);
                if (cljs.core.sequential_QMARK_.call(null, val)) {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 1738282218), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "label", "label", 1718410804), text], null), select_options15525.call(null, val, selected)], null);
                } else {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 305978217), val, new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, val, selected), new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), disabled_QMARK___$1], null), text], null);
                }
              }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, x, selected)], null), x], null), iter__15534.call(null, cljs.core.rest.call(null, s__15535__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4386__auto__.call(null, coll);
  };
  select_options15525 = function(coll, selected) {
    switch(arguments.length) {
      case 1:
        return select_options15525__1.call(this, coll);
      case 2:
        return select_options15525__2.call(this, coll, selected);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  select_options15525.cljs$core$IFn$_invoke$arity$1 = select_options15525__1;
  select_options15525.cljs$core$IFn$_invoke$arity$2 = select_options15525__2;
  return select_options15525;
}();
sablono.core.select_options = sablono.core.wrap_attrs.call(null, sablono.core.select_options15525);
sablono.core.drop_down15543 = function() {
  var drop_down15543 = null;
  var drop_down15543__2 = function(name, options) {
    return drop_down15543.call(null, name, options, null);
  };
  var drop_down15543__3 = function(name, options, selected) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 1147833503), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name)], null), sablono.core.select_options.call(null, options, selected)], null);
  };
  drop_down15543 = function(name, options, selected) {
    switch(arguments.length) {
      case 2:
        return drop_down15543__2.call(this, name, options);
      case 3:
        return drop_down15543__3.call(this, name, options, selected);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_down15543.cljs$core$IFn$_invoke$arity$2 = drop_down15543__2;
  drop_down15543.cljs$core$IFn$_invoke$arity$3 = drop_down15543__3;
  return drop_down15543;
}();
sablono.core.drop_down = sablono.core.wrap_attrs.call(null, sablono.core.drop_down15543);
sablono.core.text_area15544 = function() {
  var text_area15544 = null;
  var text_area15544__1 = function(name) {
    return text_area15544.call(null, name, null);
  };
  var text_area15544__2 = function(name, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "textarea", "textarea", -650375824), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 305978217), value], null)], null);
  };
  text_area15544 = function(name, value) {
    switch(arguments.length) {
      case 1:
        return text_area15544__1.call(this, name);
      case 2:
        return text_area15544__2.call(this, name, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text_area15544.cljs$core$IFn$_invoke$arity$1 = text_area15544__1;
  text_area15544.cljs$core$IFn$_invoke$arity$2 = text_area15544__2;
  return text_area15544;
}();
sablono.core.text_area = sablono.core.wrap_attrs.call(null, sablono.core.text_area15544);
sablono.core.label15545 = function label15545(name, text) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "htmlFor", "htmlFor", -1050291720), sablono.core.make_id.call(null, name)], null), text], null);
};
sablono.core.label = sablono.core.wrap_attrs.call(null, sablono.core.label15545);
sablono.core.submit_button15546 = function submit_button15546(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "submit", new cljs.core.Keyword(null, "value", "value", 305978217), text], null)], null);
};
sablono.core.submit_button = sablono.core.wrap_attrs.call(null, sablono.core.submit_button15546);
sablono.core.reset_button15547 = function reset_button15547(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "reset", new cljs.core.Keyword(null, "value", "value", 305978217), text], null)], null);
};
sablono.core.reset_button = sablono.core.wrap_attrs.call(null, sablono.core.reset_button15547);
sablono.core.form_to15548 = function() {
  var form_to15548__delegate = function(p__15549, body) {
    var vec__15551 = p__15549;
    var method = cljs.core.nth.call(null, vec__15551, 0, null);
    var action = cljs.core.nth.call(null, vec__15551, 1, null);
    var method_str = clojure.string.upper_case.call(null, cljs.core.name.call(null, method));
    var action_uri = sablono.util.to_uri.call(null, action);
    return cljs.core.vec.call(null, cljs.core.concat.call(null, cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "get", "get", 1683182755), null, new cljs.core.Keyword(null, "post", "post", 269697687), null], null), null), method) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.PersistentArrayMap(null, 
    2, [new cljs.core.Keyword(null, "method", "method", 55703592), method_str, new cljs.core.Keyword(null, "action", "action", -811238024), action_uri], null)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), "POST", new cljs.core.Keyword(null, "action", "action", -811238024), action_uri], null), 
    sablono.core.hidden_field.call(null, "_method", method_str)], null), body));
  };
  var form_to15548 = function(p__15549, var_args) {
    var body = null;
    if (arguments.length > 1) {
      body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form_to15548__delegate.call(this, p__15549, body);
  };
  form_to15548.cljs$lang$maxFixedArity = 1;
  form_to15548.cljs$lang$applyTo = function(arglist__15552) {
    var p__15549 = cljs.core.first(arglist__15552);
    var body = cljs.core.rest(arglist__15552);
    return form_to15548__delegate(p__15549, body);
  };
  form_to15548.cljs$core$IFn$_invoke$arity$variadic = form_to15548__delegate;
  return form_to15548;
}();
sablono.core.form_to = sablono.core.wrap_attrs.call(null, sablono.core.form_to15548);
goog.provide("om.core");
goog.require("cljs.core");
goog.require("goog.ui.IdGenerator");
goog.require("goog.dom");
goog.require("om.dom");
om.core._STAR_parent_STAR_ = null;
om.core._STAR_instrument_STAR_ = null;
om.core._STAR_descriptor_STAR_ = null;
om.core._STAR_state_STAR_ = null;
om.core._STAR_root_key_STAR_ = null;
om.core.IDisplayName = function() {
  var obj15634 = {};
  return obj15634;
}();
om.core.display_name = function display_name(this$) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IDisplayName$display_name$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IDisplayName$display_name$arity$1(this$);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core.display_name[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core.display_name["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisplayName.display-name", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IInitState = function() {
  var obj15636 = {};
  return obj15636;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core.init_state[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core.init_state["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj15638 = {};
  return obj15638;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core.should_update[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core.should_update["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj15640 = {};
  return obj15640;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core.will_mount[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core.will_mount["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj15642 = {};
  return obj15642;
}();
om.core.did_mount = function did_mount(this$) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core.did_mount[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core.did_mount["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj15644 = {};
  return obj15644;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core.will_unmount[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core.will_unmount["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj15646 = {};
  return obj15646;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core.will_update[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core.will_update["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj15648 = {};
  return obj15648;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core.did_update[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core.did_update["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IWillReceiveProps = function() {
  var obj15650 = {};
  return obj15650;
}();
om.core.will_receive_props = function will_receive_props(this$, next_props) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IWillReceiveProps$will_receive_props$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IWillReceiveProps$will_receive_props$arity$2(this$, next_props);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core.will_receive_props[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core.will_receive_props["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillReceiveProps.will-receive-props", this$);
        }
      }
    }().call(null, this$, next_props);
  }
};
om.core.IRender = function() {
  var obj15652 = {};
  return obj15652;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core.render[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core.render["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderProps = function() {
  var obj15654 = {};
  return obj15654;
}();
om.core.render_props = function render_props(this$, props, state) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IRenderProps$render_props$arity$3;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IRenderProps$render_props$arity$3(this$, props, state);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core.render_props[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core.render_props["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderProps.render-props", this$);
        }
      }
    }().call(null, this$, props, state);
  }
};
om.core.IRenderState = function() {
  var obj15656 = {};
  return obj15656;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core.render_state[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core.render_state["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.ICheckState = function() {
  var obj15658 = {};
  return obj15658;
}();
om.core.IOmSwap = function() {
  var obj15660 = {};
  return obj15660;
}();
om.core._om_swap_BANG_ = function _om_swap_BANG_(this$, cursor, korks, f, tag) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5(this$, cursor, korks, f, tag);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core._om_swap_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core._om_swap_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmSwap.-om-swap!", this$);
        }
      }
    }().call(null, this$, cursor, korks, f, tag);
  }
};
om.core.IGetState = function() {
  var obj15662 = {};
  return obj15662;
}();
om.core._get_state = function() {
  var _get_state = null;
  var _get_state__1 = function(this$) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.om$core$IGetState$_get_state$arity$1;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$1(this$);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = om.core._get_state[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = om.core._get_state["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_state__2 = function(this$, ks) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.om$core$IGetState$_get_state$arity$2;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$2(this$, ks);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = om.core._get_state[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = om.core._get_state["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_state__1.call(this, this$);
      case 2:
        return _get_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_state.cljs$core$IFn$_invoke$arity$1 = _get_state__1;
  _get_state.cljs$core$IFn$_invoke$arity$2 = _get_state__2;
  return _get_state;
}();
om.core.IGetRenderState = function() {
  var obj15664 = {};
  return obj15664;
}();
om.core._get_render_state = function() {
  var _get_render_state = null;
  var _get_render_state__1 = function(this$) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$1;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$1(this$);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = om.core._get_render_state[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = om.core._get_render_state["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_render_state__2 = function(this$, ks) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$2;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$2(this$, ks);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = om.core._get_render_state[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = om.core._get_render_state["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_render_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_render_state__1.call(this, this$);
      case 2:
        return _get_render_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_render_state.cljs$core$IFn$_invoke$arity$1 = _get_render_state__1;
  _get_render_state.cljs$core$IFn$_invoke$arity$2 = _get_render_state__2;
  return _get_render_state;
}();
om.core.ISetState = function() {
  var obj15666 = {};
  return obj15666;
}();
om.core._set_state_BANG_ = function() {
  var _set_state_BANG_ = null;
  var _set_state_BANG___3 = function(this$, val, render) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$3;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$3(this$, val, render);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, val, render);
    }
  };
  var _set_state_BANG___4 = function(this$, ks, val, render) {
    if (function() {
      var and__3618__auto__ = this$;
      if (and__3618__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$4;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$4(this$, ks, val, render);
    } else {
      var x__4274__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3630__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, ks, val, render);
    }
  };
  _set_state_BANG_ = function(this$, ks, val, render) {
    switch(arguments.length) {
      case 3:
        return _set_state_BANG___3.call(this, this$, ks, val);
      case 4:
        return _set_state_BANG___4.call(this, this$, ks, val, render);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = _set_state_BANG___3;
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$4 = _set_state_BANG___4;
  return _set_state_BANG_;
}();
om.core.IRenderQueue = function() {
  var obj15668 = {};
  return obj15668;
}();
om.core._get_queue = function _get_queue(this$) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IRenderQueue$_get_queue$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_get_queue$arity$1(this$);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core._get_queue[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core._get_queue["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-get-queue", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._queue_render_BANG_ = function _queue_render_BANG_(this$, c) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2(this$, c);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core._queue_render_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core._queue_render_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-queue-render!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._empty_queue_BANG_ = function _empty_queue_BANG_(this$) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1(this$);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core._empty_queue_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core._empty_queue_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-empty-queue!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IValue = function() {
  var obj15670 = {};
  return obj15670;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3618__auto__ = x;
    if (and__3618__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4274__auto__ = x == null ? null : x;
    return function() {
      var or__3630__auto__ = om.core._value[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core._value["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj15672 = {};
  return obj15672;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3618__auto__ = cursor;
    if (and__3618__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4274__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3630__auto__ = om.core._path[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core._path["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3618__auto__ = cursor;
    if (and__3618__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4274__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3630__auto__ = om.core._state[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core._state["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj15674 = {};
  return obj15674;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3618__auto__ = value;
      if (and__3618__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4274__auto__ = value == null ? null : value;
      return function() {
        var or__3630__auto__ = om.core._to_cursor[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = om.core._to_cursor["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3618__auto__ = value;
      if (and__3618__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3618__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4274__auto__ = value == null ? null : value;
      return function() {
        var or__3630__auto__ = om.core._to_cursor[goog.typeOf(x__4274__auto__)];
        if (or__3630__auto__) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = om.core._to_cursor["_"];
          if (or__3630__auto____$1) {
            return or__3630__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  _to_cursor = function(value, state, path) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  return _to_cursor;
}();
om.core.ICursorDerive = function() {
  var obj15676 = {};
  return obj15676;
}();
om.core._derive = function _derive(cursor, derived, state, path) {
  if (function() {
    var and__3618__auto__ = cursor;
    if (and__3618__auto__) {
      return cursor.om$core$ICursorDerive$_derive$arity$4;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return cursor.om$core$ICursorDerive$_derive$arity$4(cursor, derived, state, path);
  } else {
    var x__4274__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3630__auto__ = om.core._derive[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core._derive["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursorDerive.-derive", cursor);
        }
      }
    }().call(null, cursor, derived, state, path);
  }
};
om.core.ICursorDerive["_"] = true;
om.core._derive["_"] = function(this$, derived, state, path) {
  return om.core.to_cursor.call(null, derived, state, path);
};
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.state = function state(cursor) {
  return om.core._state.call(null, cursor);
};
om.core.ITransact = function() {
  var obj15678 = {};
  return obj15678;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, korks, f, tag) {
  if (function() {
    var and__3618__auto__ = cursor;
    if (and__3618__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$4;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$4(cursor, korks, f, tag);
  } else {
    var x__4274__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3630__auto__ = om.core._transact_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f, tag);
  }
};
om.core.INotify = function() {
  var obj15680 = {};
  return obj15680;
}();
om.core._listen_BANG_ = function _listen_BANG_(x, key, tx_listen) {
  if (function() {
    var and__3618__auto__ = x;
    if (and__3618__auto__) {
      return x.om$core$INotify$_listen_BANG_$arity$3;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return x.om$core$INotify$_listen_BANG_$arity$3(x, key, tx_listen);
  } else {
    var x__4274__auto__ = x == null ? null : x;
    return function() {
      var or__3630__auto__ = om.core._listen_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core._listen_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-listen!", x);
        }
      }
    }().call(null, x, key, tx_listen);
  }
};
om.core._unlisten_BANG_ = function _unlisten_BANG_(x, key) {
  if (function() {
    var and__3618__auto__ = x;
    if (and__3618__auto__) {
      return x.om$core$INotify$_unlisten_BANG_$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return x.om$core$INotify$_unlisten_BANG_$arity$2(x, key);
  } else {
    var x__4274__auto__ = x == null ? null : x;
    return function() {
      var or__3630__auto__ = om.core._unlisten_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core._unlisten_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-unlisten!", x);
        }
      }
    }().call(null, x, key);
  }
};
om.core._notify_BANG_ = function _notify_BANG_(x, tx_data, root_cursor) {
  if (function() {
    var and__3618__auto__ = x;
    if (and__3618__auto__) {
      return x.om$core$INotify$_notify_BANG_$arity$3;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify_BANG_$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4274__auto__ = x == null ? null : x;
    return function() {
      var or__3630__auto__ = om.core._notify_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core._notify_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify!", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.IRootProperties = function() {
  var obj15682 = {};
  return obj15682;
}();
om.core._set_property_BANG_ = function _set_property_BANG_(this$, id, p, val) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IRootProperties$_set_property_BANG_$arity$4;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IRootProperties$_set_property_BANG_$arity$4(this$, id, p, val);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core._set_property_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core._set_property_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootProperties.-set-property!", this$);
        }
      }
    }().call(null, this$, id, p, val);
  }
};
om.core._remove_property_BANG_ = function _remove_property_BANG_(this$, id, p) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IRootProperties$_remove_property_BANG_$arity$3;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IRootProperties$_remove_property_BANG_$arity$3(this$, id, p);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core._remove_property_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core._remove_property_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootProperties.-remove-property!", this$);
        }
      }
    }().call(null, this$, id, p);
  }
};
om.core._remove_properties_BANG_ = function _remove_properties_BANG_(this$, id) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IRootProperties$_remove_properties_BANG_$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IRootProperties$_remove_properties_BANG_$arity$2(this$, id);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core._remove_properties_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core._remove_properties_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootProperties.-remove-properties!", this$);
        }
      }
    }().call(null, this$, id);
  }
};
om.core._get_property = function _get_property(this$, id, p) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IRootProperties$_get_property$arity$3;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IRootProperties$_get_property$arity$3(this$, id, p);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core._get_property[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core._get_property["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootProperties.-get-property", this$);
        }
      }
    }().call(null, this$, id, p);
  }
};
om.core.IRootKey = function() {
  var obj15684 = {};
  return obj15684;
}();
om.core._root_key = function _root_key(cursor) {
  if (function() {
    var and__3618__auto__ = cursor;
    if (and__3618__auto__) {
      return cursor.om$core$IRootKey$_root_key$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return cursor.om$core$IRootKey$_root_key$arity$1(cursor);
  } else {
    var x__4274__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3630__auto__ = om.core._root_key[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core._root_key["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootKey.-root-key", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IAdapt = function() {
  var obj15686 = {};
  return obj15686;
}();
om.core._adapt = function _adapt(this$, other) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IAdapt$_adapt$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IAdapt$_adapt$arity$2(this$, other);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core._adapt[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core._adapt["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAdapt.-adapt", this$);
        }
      }
    }().call(null, this$, other);
  }
};
om.core.IAdapt["_"] = true;
om.core._adapt["_"] = function(_, other) {
  return other;
};
om.core.adapt = function adapt(x, other) {
  return om.core._adapt.call(null, x, other);
};
om.core.IOmRef = function() {
  var obj15688 = {};
  return obj15688;
}();
om.core._add_dep_BANG_ = function _add_dep_BANG_(this$, c) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IOmRef$_add_dep_BANG_$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IOmRef$_add_dep_BANG_$arity$2(this$, c);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core._add_dep_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core._add_dep_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmRef.-add-dep!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._remove_dep_BANG_ = function _remove_dep_BANG_(this$, c) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IOmRef$_remove_dep_BANG_$arity$2;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IOmRef$_remove_dep_BANG_$arity$2(this$, c);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core._remove_dep_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core._remove_dep_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmRef.-remove-dep!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._refresh_deps_BANG_ = function _refresh_deps_BANG_(this$) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IOmRef$_refresh_deps_BANG_$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IOmRef$_refresh_deps_BANG_$arity$1(this$);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core._refresh_deps_BANG_[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core._refresh_deps_BANG_["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmRef.-refresh-deps!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._get_deps = function _get_deps(this$) {
  if (function() {
    var and__3618__auto__ = this$;
    if (and__3618__auto__) {
      return this$.om$core$IOmRef$_get_deps$arity$1;
    } else {
      return and__3618__auto__;
    }
  }()) {
    return this$.om$core$IOmRef$_get_deps$arity$1(this$);
  } else {
    var x__4274__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3630__auto__ = om.core._get_deps[goog.typeOf(x__4274__auto__)];
      if (or__3630__auto__) {
        return or__3630__auto__;
      } else {
        var or__3630__auto____$1 = om.core._get_deps["_"];
        if (or__3630__auto____$1) {
          return or__3630__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmRef.-get-deps", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.transact_STAR_ = function transact_STAR_(state, cursor, korks, f, tag) {
  var old_state = cljs.core.deref.call(null, state);
  var path = cljs.core.into.call(null, om.core.path.call(null, cursor), korks);
  var ret = function() {
    var G__15690 = state;
    if (G__15690) {
      var bit__4311__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3630__auto__ = bit__4311__auto__;
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return G__15690.om$core$IOmSwap$;
        }
      }())) {
        return true;
      } else {
        if (!G__15690.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__15690);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__15690);
    }
  }() ? om.core._om_swap_BANG_.call(null, state, cursor, korks, f, tag) : cljs.core.empty_QMARK_.call(null, path) ? cljs.core.swap_BANG_.call(null, state, f) : cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f);
  if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "defer", "om.core/defer", -1038866178))) {
    return null;
  } else {
    var tx_data = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "old-value", "old-value", 862546795), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 1087038368), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1039580704), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 
    -490349212), cljs.core.deref.call(null, state)], null);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  }
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__15692 = x;
  if (G__15692) {
    var bit__4311__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3630__auto__ = bit__4311__auto__;
      if (cljs.core.truth_(or__3630__auto__)) {
        return or__3630__auto__;
      } else {
        return G__15692.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__15692.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__15692);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__15692);
  }
};
om.core.component_QMARK_ = function component_QMARK_(x) {
  return x["isOmComponent"];
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.ifn_QMARK_.call(null, c)) {
    return node.props.children = c.call(null, node);
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, x))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))))].join(""));
  }
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    return om.core._get_state.call(null, owner);
  };
  var get_state__2 = function(owner, korks) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_state.call(null, owner, ks);
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    if (owner == null) {
      return null;
    } else {
      return owner.props["__om_shared"];
    }
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4126__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var pending_state = temp__4126__auto__;
    var G__15694 = state;
    G__15694["__om_prev_state"] = state["__om_state"];
    G__15694["__om_state"] = pending_state;
    G__15694["__om_pending_state"] = null;
    return G__15694;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3630__auto__ = props;
      if (cljs.core.truth_(or__3630__auto__)) {
        return or__3630__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4126__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4126__auto__)) {
      var props_state = temp__4126__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3630__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.ref_changed_QMARK_ = function ref_changed_QMARK_(ref) {
  var val = om.core.value.call(null, ref);
  var val_SINGLEQUOTE_ = cljs.core.get_in.call(null, cljs.core.deref.call(null, om.core.state.call(null, ref)), om.core.path.call(null, ref), new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275));
  return cljs.core.not_EQ_.call(null, val, val_SINGLEQUOTE_);
};
om.core.update_refs = function update_refs(c) {
  var cstate = c.state;
  var refs = cstate["__om_refs"];
  if (cljs.core.count.call(null, refs) === 0) {
    return null;
  } else {
    return cstate["__om_refs"] = cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.filter.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, function(cstate, refs) {
      return function(ref) {
        var ref_val = om.core.value.call(null, ref);
        var ref_state = om.core.state.call(null, ref);
        var ref_path = om.core.path.call(null, ref);
        var ref_val_SINGLEQUOTE_ = cljs.core.get_in.call(null, cljs.core.deref.call(null, ref_state), ref_path, new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275));
        if (cljs.core.not_EQ_.call(null, ref_val, new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275))) {
          if (cljs.core.not_EQ_.call(null, ref_val, ref_val_SINGLEQUOTE_)) {
            return om.core.adapt.call(null, ref, om.core.to_cursor.call(null, ref_val_SINGLEQUOTE_, ref_state, ref_path));
          } else {
            return ref;
          }
        } else {
          return null;
        }
      };
    }(cstate, refs), refs)));
  }
};
om.core.pure_methods = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", -1983477981), new cljs.core.Keyword(null, "isOmComponent", "isOmComponent", -2070015162), new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), new cljs.core.Keyword(null, "componentWillReceiveProps", "componentWillReceiveProps", 559988974), new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), 
new cljs.core.Keyword(null, "render", "render", -1408033454), new cljs.core.Keyword(null, "componentWillUpdate", "componentWillUpdate", 657390932), new cljs.core.Keyword(null, "getInitialState", "getInitialState", 1541760916), new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 955710936), new cljs.core.Keyword(null, "getDisplayName", "getDisplayName", 1324429466), new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619)], [function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__15696 = c;
    if (G__15696) {
      var bit__4311__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3630__auto__ = bit__4311__auto__;
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return G__15696.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__15696.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__15696);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__15696);
    }
  }()) {
    var state_15717 = this$.state;
    om.core.did_update.call(null, c, om.core.get_props.call(null, {"isOmComponent":true, "props":prev_props}), function() {
      var or__3630__auto__ = state_15717["__om_prev_state"];
      if (cljs.core.truth_(or__3630__auto__)) {
        return or__3630__auto__;
      } else {
        return state_15717["__om_state"];
      }
    }());
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, true, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var cursor = this$.props["__om_cursor"];
  if (function() {
    var G__15697 = c;
    if (G__15697) {
      var bit__4311__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3630__auto__ = bit__4311__auto__;
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return G__15697.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__15697.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__15697);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__15697);
    }
  }()) {
    om.core.will_unmount.call(null, c);
  } else {
  }
  var temp__4126__auto__ = cljs.core.seq.call(null, this$.state["__om_refs"]);
  if (temp__4126__auto__) {
    var refs = temp__4126__auto__;
    var seq__15698 = cljs.core.seq.call(null, refs);
    var chunk__15699 = null;
    var count__15700 = 0;
    var i__15701 = 0;
    while (true) {
      if (i__15701 < count__15700) {
        var ref = cljs.core._nth.call(null, chunk__15699, i__15701);
        om.core.unobserve.call(null, this$, ref);
        var G__15718 = seq__15698;
        var G__15719 = chunk__15699;
        var G__15720 = count__15700;
        var G__15721 = i__15701 + 1;
        seq__15698 = G__15718;
        chunk__15699 = G__15719;
        count__15700 = G__15720;
        i__15701 = G__15721;
        continue;
      } else {
        var temp__4126__auto____$1 = cljs.core.seq.call(null, seq__15698);
        if (temp__4126__auto____$1) {
          var seq__15698__$1 = temp__4126__auto____$1;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__15698__$1)) {
            var c__4417__auto__ = cljs.core.chunk_first.call(null, seq__15698__$1);
            var G__15722 = cljs.core.chunk_rest.call(null, seq__15698__$1);
            var G__15723 = c__4417__auto__;
            var G__15724 = cljs.core.count.call(null, c__4417__auto__);
            var G__15725 = 0;
            seq__15698 = G__15722;
            chunk__15699 = G__15723;
            count__15700 = G__15724;
            i__15701 = G__15725;
            continue;
          } else {
            var ref = cljs.core.first.call(null, seq__15698__$1);
            om.core.unobserve.call(null, this$, ref);
            var G__15726 = cljs.core.next.call(null, seq__15698__$1);
            var G__15727 = null;
            var G__15728 = 0;
            var G__15729 = 0;
            seq__15698 = G__15726;
            chunk__15699 = G__15727;
            count__15700 = G__15728;
            i__15701 = G__15729;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  } else {
    return null;
  }
}, function(next_props) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__15702 = c;
    if (G__15702) {
      var bit__4311__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3630__auto__ = bit__4311__auto__;
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return G__15702.om$core$IWillReceiveProps$;
        }
      }())) {
        return true;
      } else {
        if (!G__15702.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__15702);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__15702);
    }
  }()) {
    return om.core.will_receive_props.call(null, c, om.core.get_props.call(null, {"isOmComponent":true, "props":next_props}));
  } else {
    return null;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var props = this$.props;
  var state = this$.state;
  var c = om.core.children.call(null, this$);
  om.core.merge_props_state.call(null, this$, next_props);
  if (function() {
    var G__15703 = c;
    if (G__15703) {
      var bit__4311__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3630__auto__ = bit__4311__auto__;
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return G__15703.om$core$IShouldUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__15703.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__15703);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__15703);
    }
  }()) {
    return om.core.should_update.call(null, c, om.core.get_props.call(null, {"isOmComponent":true, "props":next_props}), om.core._get_state.call(null, this$));
  } else {
    var cursor = props["__om_cursor"];
    var next_cursor = next_props["__om_cursor"];
    if (cljs.core.not_EQ_.call(null, om.core._value.call(null, cursor), om.core._value.call(null, next_cursor))) {
      return true;
    } else {
      if (om.core.cursor_QMARK_.call(null, cursor) && om.core.cursor_QMARK_.call(null, next_cursor) && cljs.core.not_EQ_.call(null, om.core._path.call(null, cursor), om.core._path.call(null, next_cursor))) {
        return true;
      } else {
        if (cljs.core.not_EQ_.call(null, om.core._get_state.call(null, this$), om.core._get_render_state.call(null, this$))) {
          return true;
        } else {
          if (cljs.core.truth_(function() {
            var and__3618__auto__ = !(cljs.core.count.call(null, state["__om_refs"]) === 0);
            if (and__3618__auto__) {
              return cljs.core.some.call(null, function(and__3618__auto__, cursor, next_cursor, props, state, c, this$) {
                return function(p1__15695_SHARP_) {
                  return om.core.ref_changed_QMARK_.call(null, p1__15695_SHARP_);
                };
              }(and__3618__auto__, cursor, next_cursor, props, state, c, this$), state["__om_refs"]);
            } else {
              return and__3618__auto__;
            }
          }())) {
            return true;
          } else {
            if (!(props["__om_index"] === next_props["__om_index"])) {
              return true;
            } else {
              return false;
            }
          }
        }
      }
    }
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var _STAR_parent_STAR_15704 = om.core._STAR_parent_STAR_;
  var _STAR_state_STAR_15705 = om.core._STAR_state_STAR_;
  var _STAR_instrument_STAR_15706 = om.core._STAR_instrument_STAR_;
  var _STAR_descriptor_STAR_15707 = om.core._STAR_descriptor_STAR_;
  var _STAR_root_key_STAR_15708 = om.core._STAR_root_key_STAR_;
  try {
    om.core._STAR_parent_STAR_ = this$;
    om.core._STAR_state_STAR_ = props["__om_app_state"];
    om.core._STAR_instrument_STAR_ = props["__om_instrument"];
    om.core._STAR_descriptor_STAR_ = props["__om_descriptor"];
    om.core._STAR_root_key_STAR_ = props["__om_root_key"];
    if (function() {
      var G__15709 = c;
      if (G__15709) {
        var bit__4311__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3630__auto__ = bit__4311__auto__;
          if (cljs.core.truth_(or__3630__auto__)) {
            return or__3630__auto__;
          } else {
            return G__15709.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__15709.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__15709);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__15709);
      }
    }()) {
      return om.core.render.call(null, c);
    } else {
      if (function() {
        var G__15710 = c;
        if (G__15710) {
          var bit__4311__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3630__auto__ = bit__4311__auto__;
            if (cljs.core.truth_(or__3630__auto__)) {
              return or__3630__auto__;
            } else {
              return G__15710.om$core$IRenderProps$;
            }
          }())) {
            return true;
          } else {
            if (!G__15710.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderProps, G__15710);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderProps, G__15710);
        }
      }()) {
        return om.core.render_props.call(null, c, props["__om_cursor"], om.core.get_state.call(null, this$));
      } else {
        if (function() {
          var G__15711 = c;
          if (G__15711) {
            var bit__4311__auto__ = null;
            if (cljs.core.truth_(function() {
              var or__3630__auto__ = bit__4311__auto__;
              if (cljs.core.truth_(or__3630__auto__)) {
                return or__3630__auto__;
              } else {
                return G__15711.om$core$IRenderState$;
              }
            }())) {
              return true;
            } else {
              if (!G__15711.cljs$lang$protocol_mask$partition$) {
                return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__15711);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__15711);
          }
        }()) {
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } else {
          return c;
        }
      }
    }
  } finally {
    om.core._STAR_root_key_STAR_ = _STAR_root_key_STAR_15708;
    om.core._STAR_descriptor_STAR_ = _STAR_descriptor_STAR_15707;
    om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_15706;
    om.core._STAR_state_STAR_ = _STAR_state_STAR_15705;
    om.core._STAR_parent_STAR_ = _STAR_parent_STAR_15704;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var c_15730 = om.core.children.call(null, this$);
  if (function() {
    var G__15712 = c_15730;
    if (G__15712) {
      var bit__4311__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3630__auto__ = bit__4311__auto__;
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return G__15712.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__15712.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__15712);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__15712);
    }
  }()) {
    var state_15731 = this$.state;
    om.core.will_update.call(null, c_15730, om.core.get_props.call(null, {"isOmComponent":true, "props":next_props}), om.core._get_state.call(null, this$));
  } else {
  }
  om.core.merge_pending_state.call(null, this$);
  return om.core.update_refs.call(null, this$);
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3630__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3630__auto__)) {
      return or__3630__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var id = (new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)).cljs$core$IFn$_invoke$arity$1(istate);
  var ret = {"__om_state":cljs.core.merge.call(null, function() {
    var G__15713 = c;
    if (G__15713) {
      var bit__4311__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3630__auto__ = bit__4311__auto__;
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return G__15713.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__15713.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__15713);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__15713);
    }
  }() ? om.core.init_state.call(null, c) : null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693))), "__om_id":function() {
    var or__3630__auto__ = id;
    if (cljs.core.truth_(or__3630__auto__)) {
      return or__3630__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }()};
  props["__om_init_state"] = null;
  return ret;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var cursor = this$.props["__om_cursor"];
  if (function() {
    var G__15714 = c;
    if (G__15714) {
      var bit__4311__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3630__auto__ = bit__4311__auto__;
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return G__15714.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__15714.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__15714);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__15714);
    }
  }()) {
    return om.core.did_mount.call(null, c);
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__15715 = c;
    if (G__15715) {
      var bit__4311__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3630__auto__ = bit__4311__auto__;
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return G__15715.om$core$IDisplayName$;
        }
      }())) {
        return true;
      } else {
        if (!G__15715.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__15715);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__15715);
    }
  }()) {
    return om.core.display_name.call(null, c);
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_15732 = om.core.children.call(null, this$);
  if (function() {
    var G__15716 = c_15732;
    if (G__15716) {
      var bit__4311__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3630__auto__ = bit__4311__auto__;
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return G__15716.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__15716.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__15716);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__15716);
    }
  }()) {
    om.core.will_mount.call(null, c_15732);
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}]);
om.core.specify_state_methods_BANG_ = function specify_state_methods_BANG_(obj) {
  var x15734 = obj;
  x15734.om$core$IGetState$ = true;
  x15734.om$core$IGetState$_get_state$arity$1 = function(x15734) {
    return function(this$) {
      var this$__$1 = this;
      var state = this$__$1.state;
      var or__3630__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__3630__auto__)) {
        return or__3630__auto__;
      } else {
        return state["__om_state"];
      }
    };
  }(x15734);
  x15734.om$core$IGetState$_get_state$arity$2 = function(x15734) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x15734);
  x15734.om$core$IGetRenderState$ = true;
  x15734.om$core$IGetRenderState$_get_render_state$arity$1 = function(x15734) {
    return function(this$) {
      var this$__$1 = this;
      return this$__$1.state["__om_state"];
    };
  }(x15734);
  x15734.om$core$IGetRenderState$_get_render_state$arity$2 = function(x15734) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x15734);
  x15734.om$core$ISetState$ = true;
  x15734.om$core$ISetState$_set_state_BANG_$arity$3 = function(x15734) {
    return function(this$, val, render) {
      var this$__$1 = this;
      var props = this$__$1.props;
      var app_state = props["__om_app_state"];
      this$__$1.state["__om_pending_state"] = val;
      if (cljs.core.truth_(function() {
        var and__3618__auto__ = !(app_state == null);
        if (and__3618__auto__) {
          return render;
        } else {
          return and__3618__auto__;
        }
      }())) {
        return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
      } else {
        return null;
      }
    };
  }(x15734);
  x15734.om$core$ISetState$_set_state_BANG_$arity$4 = function(x15734) {
    return function(this$, ks, val, render) {
      var this$__$1 = this;
      var props = this$__$1.props;
      var state = this$__$1.state;
      var pstate = om.core._get_state.call(null, this$__$1);
      var app_state = props["__om_app_state"];
      state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, ks, val);
      if (cljs.core.truth_(function() {
        var and__3618__auto__ = !(app_state == null);
        if (and__3618__auto__) {
          return render;
        } else {
          return and__3618__auto__;
        }
      }())) {
        return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
      } else {
        return null;
      }
    };
  }(x15734);
  return x15734;
};
om.core.pure_descriptor = om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods));
om.core.react_id = function react_id(x) {
  var id = x["_rootNodeID"];
  if (cljs.core.truth_(id)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "id", "id", 252129435, null)))].join(""));
  }
  return id;
};
om.core.get_gstate = function get_gstate(owner) {
  return owner.props["__om_app_state"];
};
om.core.no_local_merge_pending_state = function no_local_merge_pending_state(owner) {
  var gstate = om.core.get_gstate.call(null, owner);
  var spath = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, owner)], null);
  var states = cljs.core.get_in.call(null, cljs.core.deref.call(null, gstate), spath);
  if (cljs.core.truth_((new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973)).cljs$core$IFn$_invoke$arity$1(states))) {
    return cljs.core.swap_BANG_.call(null, gstate, cljs.core.update_in, spath, function(gstate, spath, states) {
      return function(states__$1) {
        return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, cljs.core.assoc.call(null, states__$1, new cljs.core.Keyword(null, "previous-state", "previous-state", 1888227923), (new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)).cljs$core$IFn$_invoke$arity$1(states__$1)), new cljs.core.Keyword(null, "render-state", "render-state", 2053902270), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)).cljs$core$IFn$_invoke$arity$1(states__$1), 
        (new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973)).cljs$core$IFn$_invoke$arity$1(states__$1))), new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973));
      };
    }(gstate, spath, states));
  } else {
    return null;
  }
};
om.core.no_local_state_methods = cljs.core.assoc.call(null, om.core.pure_methods, new cljs.core.Keyword(null, "getInitialState", "getInitialState", 1541760916), function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3630__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3630__auto__)) {
      return or__3630__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var om_id = function() {
    var or__3630__auto__ = (new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)).cljs$core$IFn$_invoke$arity$1(istate);
    if (cljs.core.truth_(or__3630__auto__)) {
      return or__3630__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }();
  var state = cljs.core.merge.call(null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)), function() {
    var G__15735 = c;
    if (G__15735) {
      var bit__4311__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3630__auto__ = bit__4311__auto__;
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return G__15735.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__15735.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__15735);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__15735);
    }
  }() ? om.core.init_state.call(null, c) : null);
  var spath = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$), new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)], null);
  props["__om_init_state"] = null;
  cljs.core.swap_BANG_.call(null, om.core.get_gstate.call(null, this$), cljs.core.assoc_in, spath, state);
  return{"__om_id":om_id};
}, new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619), function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_15744 = om.core.children.call(null, this$);
  if (function() {
    var G__15736 = c_15744;
    if (G__15736) {
      var bit__4311__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3630__auto__ = bit__4311__auto__;
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return G__15736.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__15736.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__15736);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__15736);
    }
  }()) {
    om.core.will_mount.call(null, c_15744);
  } else {
  }
  return om.core.no_local_merge_pending_state.call(null, this$);
}, new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var spath = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$)], null);
  if (function() {
    var G__15737 = c;
    if (G__15737) {
      var bit__4311__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3630__auto__ = bit__4311__auto__;
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return G__15737.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__15737.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__15737);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__15737);
    }
  }()) {
    om.core.will_unmount.call(null, c);
  } else {
  }
  cljs.core.swap_BANG_.call(null, om.core.get_gstate.call(null, this$), cljs.core.update_in, spath, cljs.core.dissoc);
  var temp__4126__auto__ = cljs.core.seq.call(null, this$.state["__om_refs"]);
  if (temp__4126__auto__) {
    var refs = temp__4126__auto__;
    var seq__15738 = cljs.core.seq.call(null, refs);
    var chunk__15739 = null;
    var count__15740 = 0;
    var i__15741 = 0;
    while (true) {
      if (i__15741 < count__15740) {
        var ref = cljs.core._nth.call(null, chunk__15739, i__15741);
        om.core.unobserve.call(null, this$, ref);
        var G__15745 = seq__15738;
        var G__15746 = chunk__15739;
        var G__15747 = count__15740;
        var G__15748 = i__15741 + 1;
        seq__15738 = G__15745;
        chunk__15739 = G__15746;
        count__15740 = G__15747;
        i__15741 = G__15748;
        continue;
      } else {
        var temp__4126__auto____$1 = cljs.core.seq.call(null, seq__15738);
        if (temp__4126__auto____$1) {
          var seq__15738__$1 = temp__4126__auto____$1;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__15738__$1)) {
            var c__4417__auto__ = cljs.core.chunk_first.call(null, seq__15738__$1);
            var G__15749 = cljs.core.chunk_rest.call(null, seq__15738__$1);
            var G__15750 = c__4417__auto__;
            var G__15751 = cljs.core.count.call(null, c__4417__auto__);
            var G__15752 = 0;
            seq__15738 = G__15749;
            chunk__15739 = G__15750;
            count__15740 = G__15751;
            i__15741 = G__15752;
            continue;
          } else {
            var ref = cljs.core.first.call(null, seq__15738__$1);
            om.core.unobserve.call(null, this$, ref);
            var G__15753 = cljs.core.next.call(null, seq__15738__$1);
            var G__15754 = null;
            var G__15755 = 0;
            var G__15756 = 0;
            seq__15738 = G__15753;
            chunk__15739 = G__15754;
            count__15740 = G__15755;
            i__15741 = G__15756;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  } else {
    return null;
  }
}, new cljs.core.Keyword(null, "componentWillUpdate", "componentWillUpdate", 657390932), function(next_props, next_state) {
  var this$ = this;
  var props_15757 = this$.props;
  var c_15758 = om.core.children.call(null, this$);
  if (function() {
    var G__15742 = c_15758;
    if (G__15742) {
      var bit__4311__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3630__auto__ = bit__4311__auto__;
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return G__15742.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__15742.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__15742);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__15742);
    }
  }()) {
    var state_15759 = this$.state;
    om.core.will_update.call(null, c_15758, om.core.get_props.call(null, {"isOmComponent":true, "props":next_props}), om.core._get_state.call(null, this$));
  } else {
  }
  om.core.no_local_merge_pending_state.call(null, this$);
  return om.core.update_refs.call(null, this$);
}, new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", -1983477981), function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var gstate = om.core.get_gstate.call(null, this$);
  var states = cljs.core.get_in.call(null, cljs.core.deref.call(null, gstate), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$)], null));
  var spath = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$)], null);
  if (function() {
    var G__15743 = c;
    if (G__15743) {
      var bit__4311__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3630__auto__ = bit__4311__auto__;
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return G__15743.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__15743.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__15743);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__15743);
    }
  }()) {
    var state_15760 = this$.state;
    om.core.did_update.call(null, c, om.core.get_props.call(null, {"isOmComponent":true, "props":prev_props}), function() {
      var or__3630__auto__ = (new cljs.core.Keyword(null, "previous-state", "previous-state", 1888227923)).cljs$core$IFn$_invoke$arity$1(states);
      if (cljs.core.truth_(or__3630__auto__)) {
        return or__3630__auto__;
      } else {
        return(new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)).cljs$core$IFn$_invoke$arity$1(states);
      }
    }());
  } else {
  }
  if (cljs.core.truth_((new cljs.core.Keyword(null, "previous-state", "previous-state", 1888227923)).cljs$core$IFn$_invoke$arity$1(states))) {
    return cljs.core.swap_BANG_.call(null, gstate, cljs.core.update_in, spath, cljs.core.dissoc, new cljs.core.Keyword(null, "previous-state", "previous-state", 1888227923));
  } else {
    return null;
  }
});
om.core.no_local_descriptor = function no_local_descriptor(methods$) {
  var x15762 = cljs.core.clj__GT_js.call(null, methods$);
  x15762.om$core$IGetState$ = true;
  x15762.om$core$IGetState$_get_state$arity$1 = function(x15762) {
    return function(this$) {
      var this$__$1 = this;
      var spath = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$__$1)], null);
      var states = cljs.core.get_in.call(null, cljs.core.deref.call(null, om.core.get_gstate.call(null, this$__$1)), spath);
      var or__3630__auto__ = (new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973)).cljs$core$IFn$_invoke$arity$1(states);
      if (cljs.core.truth_(or__3630__auto__)) {
        return or__3630__auto__;
      } else {
        return(new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)).cljs$core$IFn$_invoke$arity$1(states);
      }
    };
  }(x15762);
  x15762.om$core$IGetState$_get_state$arity$2 = function(x15762) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x15762);
  x15762.om$core$IGetRenderState$ = true;
  x15762.om$core$IGetRenderState$_get_render_state$arity$1 = function(x15762) {
    return function(this$) {
      var this$__$1 = this;
      var spath = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$__$1), new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)], null);
      return cljs.core.get_in.call(null, cljs.core.deref.call(null, om.core.get_gstate.call(null, this$__$1)), spath);
    };
  }(x15762);
  x15762.om$core$IGetRenderState$_get_render_state$arity$2 = function(x15762) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x15762);
  x15762.om$core$ISetState$ = true;
  x15762.om$core$ISetState$_set_state_BANG_$arity$3 = function(x15762) {
    return function(this$, val, render) {
      var this$__$1 = this;
      var gstate = om.core.get_gstate.call(null, this$__$1);
      var spath = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$__$1), new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973)], null);
      cljs.core.swap_BANG_.call(null, om.core.get_gstate.call(null, this$__$1), cljs.core.assoc_in, spath, val);
      if (cljs.core.truth_(function() {
        var and__3618__auto__ = !(gstate == null);
        if (and__3618__auto__) {
          return render;
        } else {
          return and__3618__auto__;
        }
      }())) {
        return om.core._queue_render_BANG_.call(null, gstate, this$__$1);
      } else {
        return null;
      }
    };
  }(x15762);
  x15762.om$core$ISetState$_set_state_BANG_$arity$4 = function(x15762) {
    return function(this$, ks, val, render) {
      var this$__$1 = this;
      return om.core._set_state_BANG_.call(null, this$__$1, cljs.core.assoc_in.call(null, om.core._get_state.call(null, this$__$1), ks, val), render);
    };
  }(x15762);
  return x15762;
};
om.core.valid_QMARK_ = function valid_QMARK_(x) {
  if (function() {
    var G__15764 = x;
    if (G__15764) {
      var bit__4311__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3630__auto__ = bit__4311__auto__;
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return G__15764.om$core$ICursor$;
        }
      }())) {
        return true;
      } else {
        if (!G__15764.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__15764);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__15764);
    }
  }()) {
    return!cljs.core.keyword_identical_QMARK_.call(null, cljs.core.deref.call(null, x), new cljs.core.Keyword("om.core", "invalid", "om.core/invalid", 1948827993));
  } else {
    return true;
  }
};
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2163640079;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var v = cljs.core._lookup.call(null, self__.value, k, new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275));
  if (!cljs.core._EQ_.call(null, v, new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275))) {
    return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k));
  } else {
    return not_found;
  }
};
om.core.MapCursor.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._kv_reduce.call(null, self__.value, f, init);
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._pr_writer.call(null, self__.value, writer, opts);
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.meta.call(null, self__.value);
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._count.call(null, self__.value);
};
om.core.MapCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash.call(null, self__.value);
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core.cursor_QMARK_.call(null, other)) {
    return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
  } else {
    return cljs.core._EQ_.call(null, self__.value, other);
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.MapCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.count.call(null, self__.value) > 0) {
    return cljs.core.map.call(null, function(this$__$1) {
      return function(p__15766) {
        var vec__15767 = p__15766;
        var k = cljs.core.nth.call(null, vec__15767, 0, null);
        var v = cljs.core.nth.call(null, vec__15767, 1, null);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
      };
    }(this$__$1), self__.value);
  } else {
    return null;
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
};
om.core.MapCursor.prototype.call = function() {
  var G__15768 = null;
  var G__15768__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k);
  };
  var G__15768__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k, not_found);
  };
  G__15768 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15768__2.call(this, self__, k);
      case 3:
        return G__15768__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15768.cljs$core$IFn$_invoke$arity$2 = G__15768__2;
  G__15768.cljs$core$IFn$_invoke$arity$3 = G__15768__3;
  return G__15768;
}();
om.core.MapCursor.prototype.apply = function(self__, args15765) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15765)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k, not_found);
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path, new cljs.core.Keyword("om.core", "invalid", "om.core/invalid", 1948827993));
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "om.core/MapCursor");
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2180424479;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._nth.call(null, this$__$1, n, null);
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._nth.call(null, this$__$1, n, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._kv_reduce.call(null, self__.value, f, init);
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (n < cljs.core._count.call(null, self__.value)) {
    return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n, not_found), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    return not_found;
  }
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._pr_writer.call(null, self__.value, writer, opts);
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.meta.call(null, self__.value);
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._count.call(null, self__.value);
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return om.core._derive.call(null, this$__$1, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return om.core._derive.call(null, this$__$1, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash.call(null, self__.value);
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core.cursor_QMARK_.call(null, other)) {
    return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
  } else {
    return cljs.core._EQ_.call(null, self__.value, other);
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.IndexedCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, n, v) {
  var self__ = this;
  var this$__$1 = this;
  return om.core._derive.call(null, this$__$1, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.count.call(null, self__.value) > 0) {
    return cljs.core.map.call(null, function(this$__$1) {
      return function(v, i) {
        return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, i));
      };
    }(this$__$1), self__.value, cljs.core.range.call(null));
  } else {
    return null;
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.call = function() {
  var G__15770 = null;
  var G__15770__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k);
  };
  var G__15770__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k, not_found);
  };
  G__15770 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15770__2.call(this, self__, k);
      case 3:
        return G__15770__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15770.cljs$core$IFn$_invoke$arity$2 = G__15770__2;
  G__15770.cljs$core$IFn$_invoke$arity$3 = G__15770__3;
  return G__15770;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args15769) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15769)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path, new cljs.core.Keyword("om.core", "invalid", "om.core/invalid", 1948827993));
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "om.core/IndexedCursor");
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path) {
  var x15772 = cljs.core.clone.call(null, val);
  x15772.cljs$core$IEquiv$ = true;
  x15772.cljs$core$IEquiv$_equiv$arity$2 = function(x15772) {
    return function(_, other) {
      var ___$1 = this;
      if (om.core.cursor_QMARK_.call(null, other)) {
        return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
      } else {
        return cljs.core._EQ_.call(null, val, other);
      }
    };
  }(x15772);
  x15772.om$core$ITransact$ = true;
  x15772.om$core$ITransact$_transact_BANG_$arity$4 = function(x15772) {
    return function(this$, korks, f, tag) {
      var this$__$1 = this;
      return om.core.transact_STAR_.call(null, state, this$__$1, korks, f, tag);
    };
  }(x15772);
  x15772.om$core$ICursor$ = true;
  x15772.om$core$ICursor$_path$arity$1 = function(x15772) {
    return function(_) {
      var ___$1 = this;
      return path;
    };
  }(x15772);
  x15772.om$core$ICursor$_state$arity$1 = function(x15772) {
    return function(_) {
      var ___$1 = this;
      return state;
    };
  }(x15772);
  x15772.cljs$core$IDeref$ = true;
  x15772.cljs$core$IDeref$_deref$arity$1 = function(x15772) {
    return function(this$) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path, new cljs.core.Keyword("om.core", "invalid", "om.core/invalid", 1948827993));
    };
  }(x15772);
  return x15772;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__3 = function(val, state, path) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__15775 = val;
        if (G__15775) {
          var bit__4311__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3630__auto__ = bit__4311__auto__;
            if (cljs.core.truth_(or__3630__auto__)) {
              return or__3630__auto__;
            } else {
              return G__15775.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__15775.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__15775);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__15775);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path);
          } else {
            if (function() {
              var G__15776 = val;
              if (G__15776) {
                var bit__4311__auto__ = G__15776.cljs$lang$protocol_mask$partition1$ & 8192;
                if (bit__4311__auto__ || G__15776.cljs$core$ICloneable$) {
                  return true;
                } else {
                  if (!G__15776.cljs$lang$protocol_mask$partition1$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__15776);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__15776);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path);
            } else {
              return val;
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  return to_cursor;
}();
om.core.notify_STAR_ = function notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify_BANG_.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.root_cursor = function root_cursor(atom) {
  if (function() {
    var G__15778 = atom;
    if (G__15778) {
      var bit__4311__auto__ = G__15778.cljs$lang$protocol_mask$partition0$ & 32768;
      if (bit__4311__auto__ || G__15778.cljs$core$IDeref$) {
        return true;
      } else {
        if (!G__15778.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__15778);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__15778);
    }
  }()) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IDeref", "IDeref", 1738423197, null), new cljs.core.Symbol(null, "atom", "atom", 1243487874, null))))].join(""));
  }
  return om.core.to_cursor.call(null, cljs.core.deref.call(null, atom), atom, cljs.core.PersistentVector.EMPTY);
};
om.core._refs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.ref_sub_cursor = function ref_sub_cursor(x, parent) {
  var x15780 = cljs.core.clone.call(null, x);
  x15780.om$core$ITransact$ = true;
  x15780.om$core$ITransact$_transact_BANG_$arity$4 = function(x15780) {
    return function(cursor, korks, f, tag) {
      var cursor__$1 = this;
      om.core.commit_BANG_.call(null, cursor__$1, korks, f);
      return om.core._refresh_deps_BANG_.call(null, parent);
    };
  }(x15780);
  x15780.om$core$ICursorDerive$ = true;
  x15780.om$core$ICursorDerive$_derive$arity$4 = function(x15780) {
    return function(this$, derived, state, path) {
      var this$__$1 = this;
      var cursor_SINGLEQUOTE_ = om.core.to_cursor.call(null, derived, state, path);
      if (om.core.cursor_QMARK_.call(null, cursor_SINGLEQUOTE_)) {
        return om.core.adapt.call(null, this$__$1, cursor_SINGLEQUOTE_);
      } else {
        return cursor_SINGLEQUOTE_;
      }
    };
  }(x15780);
  x15780.om$core$IAdapt$ = true;
  x15780.om$core$IAdapt$_adapt$arity$2 = function(x15780) {
    return function(this$, other) {
      var this$__$1 = this;
      return ref_sub_cursor.call(null, om.core.adapt.call(null, x, other), parent);
    };
  }(x15780);
  x15780.cljs$core$ICloneable$ = true;
  x15780.cljs$core$ICloneable$_clone$arity$1 = function(x15780) {
    return function(this$) {
      var this$__$1 = this;
      return ref_sub_cursor.call(null, cljs.core.clone.call(null, x), parent);
    };
  }(x15780);
  return x15780;
};
om.core.ref_cursor = function ref_cursor(cursor) {
  if (om.core.cursor_QMARK_.call(null, cursor)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
  }
  if (function() {
    var G__15787 = cursor;
    if (G__15787) {
      var bit__4311__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3630__auto__ = bit__4311__auto__;
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return G__15787.om$core$IOmRef$;
        }
      }())) {
        return true;
      } else {
        if (!G__15787.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmRef, G__15787);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmRef, G__15787);
    }
  }()) {
    return cursor;
  } else {
    var path = om.core.path.call(null, cursor);
    var storage = cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, om.core._refs, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null), cljs.core.fnil.call(null, cljs.core.identity, cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY))), path);
    var x15788 = cljs.core.clone.call(null, cursor);
    x15788.om$core$ITransact$ = true;
    x15788.om$core$ITransact$_transact_BANG_$arity$4 = function(x15788, path, storage) {
      return function(cursor__$1, korks, f, tag) {
        var cursor__$2 = this;
        om.core.commit_BANG_.call(null, cursor__$2, korks, f);
        return om.core._refresh_deps_BANG_.call(null, cursor__$2);
      };
    }(x15788, path, storage);
    x15788.om$core$IOmRef$ = true;
    x15788.om$core$IOmRef$_add_dep_BANG_$arity$2 = function(x15788, path, storage) {
      return function(_, c) {
        var ___$1 = this;
        return cljs.core.swap_BANG_.call(null, storage, cljs.core.assoc, om.core.id.call(null, c), c);
      };
    }(x15788, path, storage);
    x15788.om$core$IOmRef$_remove_dep_BANG_$arity$2 = function(x15788, path, storage) {
      return function(_, c) {
        var ___$1 = this;
        var m = cljs.core.swap_BANG_.call(null, storage, cljs.core.dissoc, om.core.id.call(null, c));
        if (cljs.core.count.call(null, m) === 0) {
          return cljs.core.swap_BANG_.call(null, om.core._refs, cljs.core.dissoc, path);
        } else {
          return null;
        }
      };
    }(x15788, path, storage);
    x15788.om$core$IOmRef$_refresh_deps_BANG_$arity$1 = function(x15788, path, storage) {
      return function(_) {
        var ___$1 = this;
        var seq__15789 = cljs.core.seq.call(null, cljs.core.vals.call(null, cljs.core.deref.call(null, storage)));
        var chunk__15790 = null;
        var count__15791 = 0;
        var i__15792 = 0;
        while (true) {
          if (i__15792 < count__15791) {
            var c = cljs.core._nth.call(null, chunk__15790, i__15792);
            om.core._queue_render_BANG_.call(null, om.core.state.call(null, cursor), c);
            var G__15793 = seq__15789;
            var G__15794 = chunk__15790;
            var G__15795 = count__15791;
            var G__15796 = i__15792 + 1;
            seq__15789 = G__15793;
            chunk__15790 = G__15794;
            count__15791 = G__15795;
            i__15792 = G__15796;
            continue;
          } else {
            var temp__4126__auto__ = cljs.core.seq.call(null, seq__15789);
            if (temp__4126__auto__) {
              var seq__15789__$1 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__15789__$1)) {
                var c__4417__auto__ = cljs.core.chunk_first.call(null, seq__15789__$1);
                var G__15797 = cljs.core.chunk_rest.call(null, seq__15789__$1);
                var G__15798 = c__4417__auto__;
                var G__15799 = cljs.core.count.call(null, c__4417__auto__);
                var G__15800 = 0;
                seq__15789 = G__15797;
                chunk__15790 = G__15798;
                count__15791 = G__15799;
                i__15792 = G__15800;
                continue;
              } else {
                var c = cljs.core.first.call(null, seq__15789__$1);
                om.core._queue_render_BANG_.call(null, om.core.state.call(null, cursor), c);
                var G__15801 = cljs.core.next.call(null, seq__15789__$1);
                var G__15802 = null;
                var G__15803 = 0;
                var G__15804 = 0;
                seq__15789 = G__15801;
                chunk__15790 = G__15802;
                count__15791 = G__15803;
                i__15792 = G__15804;
                continue;
              }
            } else {
              return null;
            }
          }
          break;
        }
      };
    }(x15788, path, storage);
    x15788.om$core$IOmRef$_get_deps$arity$1 = function(x15788, path, storage) {
      return function(_) {
        var ___$1 = this;
        return cljs.core.deref.call(null, storage);
      };
    }(x15788, path, storage);
    x15788.om$core$ICursorDerive$ = true;
    x15788.om$core$ICursorDerive$_derive$arity$4 = function(x15788, path, storage) {
      return function(this$, derived, state, path__$1) {
        var this$__$1 = this;
        var cursor_SINGLEQUOTE_ = om.core.to_cursor.call(null, derived, state, path__$1);
        if (om.core.cursor_QMARK_.call(null, cursor_SINGLEQUOTE_)) {
          return om.core.ref_sub_cursor.call(null, cursor_SINGLEQUOTE_, this$__$1);
        } else {
          return cursor_SINGLEQUOTE_;
        }
      };
    }(x15788, path, storage);
    return x15788;
  }
};
om.core.add_ref_to_component_BANG_ = function add_ref_to_component_BANG_(c, ref) {
  var state = c.state;
  var refs = function() {
    var or__3630__auto__ = state["__om_refs"];
    if (cljs.core.truth_(or__3630__auto__)) {
      return or__3630__auto__;
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  }();
  if (cljs.core.contains_QMARK_.call(null, refs, ref)) {
    return null;
  } else {
    return state["__om_refs"] = cljs.core.conj.call(null, refs, ref);
  }
};
om.core.remove_ref_from_component_BANG_ = function remove_ref_from_component_BANG_(c, ref) {
  var state = c.state;
  var refs = state["__om_refs"];
  if (cljs.core.contains_QMARK_.call(null, refs, ref)) {
    return state["__om_refs"] = cljs.core.disj.call(null, refs, ref);
  } else {
    return null;
  }
};
om.core.observe = function observe(c, ref) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  if (om.core.cursor_QMARK_.call(null, ref)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))].join(""));
  }
  om.core.add_ref_to_component_BANG_.call(null, c, ref);
  om.core._add_dep_BANG_.call(null, ref, c);
  return ref;
};
om.core.unobserve = function unobserve(c, ref) {
  om.core.remove_ref_from_component_BANG_.call(null, c, ref);
  om.core._remove_dep_BANG_.call(null, ref, c);
  return ref;
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.get_renderT = function get_renderT(state) {
  var or__3630__auto__ = state.om$render$T;
  if (cljs.core.truth_(or__3630__auto__)) {
    return or__3630__auto__;
  } else {
    return 0;
  }
};
om.core.render_all = function() {
  var render_all = null;
  var render_all__0 = function() {
    return render_all.call(null, null);
  };
  var render_all__1 = function(state) {
    om.core.refresh_queued = false;
    var seq__15809_15813 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
    var chunk__15810_15814 = null;
    var count__15811_15815 = 0;
    var i__15812_15816 = 0;
    while (true) {
      if (i__15812_15816 < count__15811_15815) {
        var f_15817 = cljs.core._nth.call(null, chunk__15810_15814, i__15812_15816);
        f_15817.call(null);
        var G__15818 = seq__15809_15813;
        var G__15819 = chunk__15810_15814;
        var G__15820 = count__15811_15815;
        var G__15821 = i__15812_15816 + 1;
        seq__15809_15813 = G__15818;
        chunk__15810_15814 = G__15819;
        count__15811_15815 = G__15820;
        i__15812_15816 = G__15821;
        continue;
      } else {
        var temp__4126__auto___15822 = cljs.core.seq.call(null, seq__15809_15813);
        if (temp__4126__auto___15822) {
          var seq__15809_15823__$1 = temp__4126__auto___15822;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__15809_15823__$1)) {
            var c__4417__auto___15824 = cljs.core.chunk_first.call(null, seq__15809_15823__$1);
            var G__15825 = cljs.core.chunk_rest.call(null, seq__15809_15823__$1);
            var G__15826 = c__4417__auto___15824;
            var G__15827 = cljs.core.count.call(null, c__4417__auto___15824);
            var G__15828 = 0;
            seq__15809_15813 = G__15825;
            chunk__15810_15814 = G__15826;
            count__15811_15815 = G__15827;
            i__15812_15816 = G__15828;
            continue;
          } else {
            var f_15829 = cljs.core.first.call(null, seq__15809_15823__$1);
            f_15829.call(null);
            var G__15830 = cljs.core.next.call(null, seq__15809_15823__$1);
            var G__15831 = null;
            var G__15832 = 0;
            var G__15833 = 0;
            seq__15809_15813 = G__15830;
            chunk__15810_15814 = G__15831;
            count__15811_15815 = G__15832;
            i__15812_15816 = G__15833;
            continue;
          }
        } else {
        }
      }
      break;
    }
    if (state == null) {
      return null;
    } else {
      return state.om$render$T = om.core.get_renderT.call(null, state) + 1;
    }
  };
  render_all = function(state) {
    switch(arguments.length) {
      case 0:
        return render_all__0.call(this);
      case 1:
        return render_all__1.call(this, state);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  render_all.cljs$core$IFn$_invoke$arity$0 = render_all__0;
  render_all.cljs$core$IFn$_invoke$arity$1 = render_all__1;
  return render_all;
}();
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_component_QMARK_ = function valid_component_QMARK_(x, f) {
  if (function() {
    var or__3630__auto__ = function() {
      var G__15840 = x;
      if (G__15840) {
        var bit__4311__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3630__auto__ = bit__4311__auto__;
          if (cljs.core.truth_(or__3630__auto__)) {
            return or__3630__auto__;
          } else {
            return G__15840.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__15840.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__15840);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__15840);
      }
    }();
    if (or__3630__auto__) {
      return or__3630__auto__;
    } else {
      var or__3630__auto____$1 = function() {
        var G__15842 = x;
        if (G__15842) {
          var bit__4311__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3630__auto____$1 = bit__4311__auto__;
            if (cljs.core.truth_(or__3630__auto____$1)) {
              return or__3630__auto____$1;
            } else {
              return G__15842.om$core$IRenderProps$;
            }
          }())) {
            return true;
          } else {
            if (!G__15842.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderProps, G__15842);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderProps, G__15842);
        }
      }();
      if (or__3630__auto____$1) {
        return or__3630__auto____$1;
      } else {
        var G__15843 = x;
        if (G__15843) {
          var bit__4311__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3630__auto____$2 = bit__4311__auto__;
            if (cljs.core.truth_(or__3630__auto____$2)) {
              return or__3630__auto____$2;
            } else {
              return G__15843.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__15843.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__15843);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__15843);
        }
      }
    }
  }()) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Invalid Om component fn, "), cljs.core.str(f.name), cljs.core.str(" does not return valid instance")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRender", "IRender", 590822196, null), new cljs.core.Symbol(null, 
    "x", "x", -555367584, null)), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRenderProps", "IRenderProps", 2115139472, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRenderState", "IRenderState", -897673898, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))))].join(""));
  }
};
om.core.valid_opts_QMARK_ = function valid_opts_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "instrument", "instrument", -960698844), null, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), null, new cljs.core.Keyword(null, "key", "key", -1516042587), null, new cljs.core.Keyword(null, "init-state", 
  "init-state", 1450863212), null, new cljs.core.Keyword(null, "state", "state", -1988618099), null, new cljs.core.Keyword(null, "key-fn", "key-fn", -636154479), null, new cljs.core.Keyword(null, "opts", "opts", 155075701), null, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), null, new cljs.core.Keyword(null, "shared", "shared", -384145993), null], null), null), cljs.core.keys.call(null, m));
};
om.core.id = function id(owner) {
  return owner.state["__om_id"];
};
om.core.get_descriptor = function() {
  var get_descriptor = null;
  var get_descriptor__1 = function(f) {
    return get_descriptor.call(null, f, null);
  };
  var get_descriptor__2 = function(f, descriptor) {
    if (f["om$descriptor"] == null) {
      f["om$descriptor"] = React.createFactory(React.createClass(function() {
        var or__3630__auto__ = descriptor;
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          var or__3630__auto____$1 = om.core._STAR_descriptor_STAR_;
          if (cljs.core.truth_(or__3630__auto____$1)) {
            return or__3630__auto____$1;
          } else {
            return om.core.pure_descriptor;
          }
        }
      }()));
    } else {
    }
    return f["om$descriptor"];
  };
  get_descriptor = function(f, descriptor) {
    switch(arguments.length) {
      case 1:
        return get_descriptor__1.call(this, f);
      case 2:
        return get_descriptor__2.call(this, f, descriptor);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_descriptor.cljs$core$IFn$_invoke$arity$1 = get_descriptor__1;
  get_descriptor.cljs$core$IFn$_invoke$arity$2 = get_descriptor__2;
  return get_descriptor;
}();
om.core.getf = function() {
  var getf = null;
  var getf__2 = function(f, cursor) {
    if (f instanceof cljs.core.MultiFn) {
      var dv = f.dispatch_fn.call(null, cursor, null);
      return cljs.core.get_method.call(null, f, dv);
    } else {
      return f;
    }
  };
  var getf__3 = function(f, cursor, opts) {
    if (f instanceof cljs.core.MultiFn) {
      var dv = f.dispatch_fn.call(null, cursor, null, opts);
      return cljs.core.get_method.call(null, f, dv);
    } else {
      return f;
    }
  };
  getf = function(f, cursor, opts) {
    switch(arguments.length) {
      case 2:
        return getf__2.call(this, f, cursor);
      case 3:
        return getf__3.call(this, f, cursor, opts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  getf.cljs$core$IFn$_invoke$arity$2 = getf__2;
  getf.cljs$core$IFn$_invoke$arity$3 = getf__3;
  return getf;
}();
om.core.build_STAR_ = function() {
  var build_STAR_ = null;
  var build_STAR___2 = function(f, cursor) {
    return build_STAR_.call(null, f, cursor, null);
  };
  var build_STAR___3 = function(f, cursor, m) {
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    if (m == null || cljs.core.map_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)))))].join(""));
    }
    if (om.core.valid_opts_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :key-fn :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid-opts?", "valid-opts?", 1000038576, null), new cljs.core.Symbol(null, "m", "m", 
      -1021758608, null))))].join(""));
    }
    if (m == null) {
      var shared = om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
      var ctor = om.core.get_descriptor.call(null, om.core.getf.call(null, f, cursor));
      return ctor.call(null, {"children":function(shared, ctor) {
        return function(this$) {
          var ret = f.call(null, cursor, this$);
          om.core.valid_component_QMARK_.call(null, ret, f);
          return ret;
        };
      }(shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_descriptor":om.core._STAR_descriptor_STAR_, "__om_app_state":om.core._STAR_state_STAR_, "__om_root_key":om.core._STAR_root_key_STAR_, "__om_shared":shared, "__om_cursor":cursor});
    } else {
      var map__15845 = m;
      var map__15845__$1 = cljs.core.seq_QMARK_.call(null, map__15845) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15845) : map__15845;
      var opts = cljs.core.get.call(null, map__15845__$1, new cljs.core.Keyword(null, "opts", "opts", 155075701));
      var init_state = cljs.core.get.call(null, map__15845__$1, new cljs.core.Keyword(null, "init-state", "init-state", 1450863212));
      var state = cljs.core.get.call(null, map__15845__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
      var key_fn = cljs.core.get.call(null, map__15845__$1, new cljs.core.Keyword(null, "key-fn", "key-fn", -636154479));
      var key = cljs.core.get.call(null, map__15845__$1, new cljs.core.Keyword(null, "key", "key", -1516042587));
      var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", -1175266204));
      var cursor_SINGLEQUOTE_ = !(dataf == null) ? function() {
        var temp__4124__auto__ = (new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var i = temp__4124__auto__;
          return dataf.call(null, cursor, i);
        } else {
          return dataf.call(null, cursor);
        }
      }() : cursor;
      var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : !(key_fn == null) ? key_fn.call(null, cursor_SINGLEQUOTE_) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348));
      var shared = function() {
        var or__3630__auto__ = (new cljs.core.Keyword(null, "shared", "shared", -384145993)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = om.core.get_descriptor.call(null, om.core.getf.call(null, f, cursor_SINGLEQUOTE_, opts), (new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018)).cljs$core$IFn$_invoke$arity$1(m));
      return ctor.call(null, {"__om_state":state, "__om_instrument":om.core._STAR_instrument_STAR_, "children":opts == null ? function(map__15845, map__15845__$1, opts, init_state, state, key_fn, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var ret = f.call(null, cursor_SINGLEQUOTE_, this$);
          om.core.valid_component_QMARK_.call(null, ret, f);
          return ret;
        };
      }(map__15845, map__15845__$1, opts, init_state, state, key_fn, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) : function(map__15845, map__15845__$1, opts, init_state, state, key_fn, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var ret = f.call(null, cursor_SINGLEQUOTE_, this$, opts);
          om.core.valid_component_QMARK_.call(null, ret, f);
          return ret;
        };
      }(map__15845, map__15845__$1, opts, init_state, state, key_fn, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor), "__om_init_state":init_state, "key":function() {
        var or__3630__auto__ = rkey;
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return undefined;
        }
      }(), "__om_app_state":om.core._STAR_state_STAR_, "__om_cursor":cursor_SINGLEQUOTE_, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m), "__om_shared":shared, "__om_descriptor":om.core._STAR_descriptor_STAR_, "__om_root_key":om.core._STAR_root_key_STAR_});
    }
  };
  build_STAR_ = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build_STAR___2.call(this, f, cursor);
      case 3:
        return build_STAR___3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_STAR_.cljs$core$IFn$_invoke$arity$2 = build_STAR___2;
  build_STAR_.cljs$core$IFn$_invoke$arity$3 = build_STAR___3;
  return build_STAR_;
}();
om.core.build = function() {
  var build = null;
  var build__2 = function(f, x) {
    return build.call(null, f, x, null);
  };
  var build__3 = function(f, x, m) {
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    if (m == null || cljs.core.map_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)))))].join(""));
    }
    if (!(om.core._STAR_instrument_STAR_ == null)) {
      var ret = om.core._STAR_instrument_STAR_.call(null, f, x, m);
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "pass", "om.core/pass", -1453289268))) {
        return om.core.build_STAR_.call(null, f, x, m);
      } else {
        return ret;
      }
    } else {
      return om.core.build_STAR_.call(null, f, x, m);
    }
  };
  build = function(f, x, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, x);
      case 3:
        return build__3.call(this, f, x, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    if (m == null || cljs.core.map_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)))))].join(""));
    }
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.setup = function setup(state, key, tx_listen) {
  if (function() {
    var G__15854 = state;
    if (G__15854) {
      var bit__4311__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3630__auto__ = bit__4311__auto__;
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return G__15854.om$core$INotify$;
        }
      }())) {
        return true;
      } else {
        if (!G__15854.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__15854);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__15854);
    }
  }()) {
  } else {
    var properties_15862 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var listeners_15863 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var render_queue_15864 = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
    var x15855_15865 = state;
    x15855_15865.om$core$IRenderQueue$ = true;
    x15855_15865.om$core$IRenderQueue$_get_queue$arity$1 = function(x15855_15865, properties_15862, listeners_15863, render_queue_15864) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.deref.call(null, render_queue_15864);
      };
    }(x15855_15865, properties_15862, listeners_15863, render_queue_15864);
    x15855_15865.om$core$IRenderQueue$_queue_render_BANG_$arity$2 = function(x15855_15865, properties_15862, listeners_15863, render_queue_15864) {
      return function(this$, c) {
        var this$__$1 = this;
        if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, render_queue_15864), c)) {
          return null;
        } else {
          cljs.core.swap_BANG_.call(null, render_queue_15864, cljs.core.conj, c);
          return cljs.core.swap_BANG_.call(null, this$__$1, cljs.core.identity);
        }
      };
    }(x15855_15865, properties_15862, listeners_15863, render_queue_15864);
    x15855_15865.om$core$IRenderQueue$_empty_queue_BANG_$arity$1 = function(x15855_15865, properties_15862, listeners_15863, render_queue_15864) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.swap_BANG_.call(null, render_queue_15864, cljs.core.empty);
      };
    }(x15855_15865, properties_15862, listeners_15863, render_queue_15864);
    x15855_15865.om$core$INotify$ = true;
    x15855_15865.om$core$INotify$_listen_BANG_$arity$3 = function(x15855_15865, properties_15862, listeners_15863, render_queue_15864) {
      return function(this$, key__$1, tx_listen__$1) {
        var this$__$1 = this;
        if (tx_listen__$1 == null) {
        } else {
          cljs.core.swap_BANG_.call(null, listeners_15863, cljs.core.assoc, key__$1, tx_listen__$1);
        }
        return this$__$1;
      };
    }(x15855_15865, properties_15862, listeners_15863, render_queue_15864);
    x15855_15865.om$core$INotify$_unlisten_BANG_$arity$2 = function(x15855_15865, properties_15862, listeners_15863, render_queue_15864) {
      return function(this$, key__$1) {
        var this$__$1 = this;
        cljs.core.swap_BANG_.call(null, listeners_15863, cljs.core.dissoc, key__$1);
        return this$__$1;
      };
    }(x15855_15865, properties_15862, listeners_15863, render_queue_15864);
    x15855_15865.om$core$INotify$_notify_BANG_$arity$3 = function(x15855_15865, properties_15862, listeners_15863, render_queue_15864) {
      return function(this$, tx_data, root_cursor) {
        var this$__$1 = this;
        var seq__15856_15866 = cljs.core.seq.call(null, cljs.core.deref.call(null, listeners_15863));
        var chunk__15857_15867 = null;
        var count__15858_15868 = 0;
        var i__15859_15869 = 0;
        while (true) {
          if (i__15859_15869 < count__15858_15868) {
            var vec__15860_15870 = cljs.core._nth.call(null, chunk__15857_15867, i__15859_15869);
            var __15871 = cljs.core.nth.call(null, vec__15860_15870, 0, null);
            var f_15872 = cljs.core.nth.call(null, vec__15860_15870, 1, null);
            f_15872.call(null, tx_data, root_cursor);
            var G__15873 = seq__15856_15866;
            var G__15874 = chunk__15857_15867;
            var G__15875 = count__15858_15868;
            var G__15876 = i__15859_15869 + 1;
            seq__15856_15866 = G__15873;
            chunk__15857_15867 = G__15874;
            count__15858_15868 = G__15875;
            i__15859_15869 = G__15876;
            continue;
          } else {
            var temp__4126__auto___15877 = cljs.core.seq.call(null, seq__15856_15866);
            if (temp__4126__auto___15877) {
              var seq__15856_15878__$1 = temp__4126__auto___15877;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__15856_15878__$1)) {
                var c__4417__auto___15879 = cljs.core.chunk_first.call(null, seq__15856_15878__$1);
                var G__15880 = cljs.core.chunk_rest.call(null, seq__15856_15878__$1);
                var G__15881 = c__4417__auto___15879;
                var G__15882 = cljs.core.count.call(null, c__4417__auto___15879);
                var G__15883 = 0;
                seq__15856_15866 = G__15880;
                chunk__15857_15867 = G__15881;
                count__15858_15868 = G__15882;
                i__15859_15869 = G__15883;
                continue;
              } else {
                var vec__15861_15884 = cljs.core.first.call(null, seq__15856_15878__$1);
                var __15885 = cljs.core.nth.call(null, vec__15861_15884, 0, null);
                var f_15886 = cljs.core.nth.call(null, vec__15861_15884, 1, null);
                f_15886.call(null, tx_data, root_cursor);
                var G__15887 = cljs.core.next.call(null, seq__15856_15878__$1);
                var G__15888 = null;
                var G__15889 = 0;
                var G__15890 = 0;
                seq__15856_15866 = G__15887;
                chunk__15857_15867 = G__15888;
                count__15858_15868 = G__15889;
                i__15859_15869 = G__15890;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return this$__$1;
      };
    }(x15855_15865, properties_15862, listeners_15863, render_queue_15864);
    x15855_15865.om$core$IRootProperties$ = true;
    x15855_15865.om$core$IRootProperties$_set_property_BANG_$arity$4 = function(x15855_15865, properties_15862, listeners_15863, render_queue_15864) {
      return function(_, id, k, v) {
        var ___$1 = this;
        return cljs.core.swap_BANG_.call(null, properties_15862, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [id, k], null), v);
      };
    }(x15855_15865, properties_15862, listeners_15863, render_queue_15864);
    x15855_15865.om$core$IRootProperties$_remove_property_BANG_$arity$3 = function(x15855_15865, properties_15862, listeners_15863, render_queue_15864) {
      return function(_, id, k) {
        var ___$1 = this;
        return cljs.core.swap_BANG_.call(null, properties_15862, cljs.core.dissoc, id, k);
      };
    }(x15855_15865, properties_15862, listeners_15863, render_queue_15864);
    x15855_15865.om$core$IRootProperties$_remove_properties_BANG_$arity$2 = function(x15855_15865, properties_15862, listeners_15863, render_queue_15864) {
      return function(_, id) {
        var ___$1 = this;
        return cljs.core.swap_BANG_.call(null, properties_15862, cljs.core.dissoc, id);
      };
    }(x15855_15865, properties_15862, listeners_15863, render_queue_15864);
    x15855_15865.om$core$IRootProperties$_get_property$arity$3 = function(x15855_15865, properties_15862, listeners_15863, render_queue_15864) {
      return function(_, id, k) {
        var ___$1 = this;
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, properties_15862), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [id, k], null));
      };
    }(x15855_15865, properties_15862, listeners_15863, render_queue_15864);
  }
  return om.core._listen_BANG_.call(null, state, key, tx_listen);
};
om.core.tear_down = function tear_down(state, key) {
  return om.core._unlisten_BANG_.call(null, state, key);
};
om.core.tag_root_key = function tag_root_key(cursor, root_key) {
  if (om.core.cursor_QMARK_.call(null, cursor)) {
    var x15892 = cljs.core.clone.call(null, cursor);
    x15892.om$core$IRootKey$ = true;
    x15892.om$core$IRootKey$_root_key$arity$1 = function(x15892) {
      return function(this$) {
        var this$__$1 = this;
        return root_key;
      };
    }(x15892);
    x15892.om$core$IAdapt$ = true;
    x15892.om$core$IAdapt$_adapt$arity$2 = function(x15892) {
      return function(this$, other) {
        var this$__$1 = this;
        return tag_root_key.call(null, om.core.adapt.call(null, cursor, other), root_key);
      };
    }(x15892);
    x15892.cljs$core$ICloneable$ = true;
    x15892.cljs$core$ICloneable$_clone$arity$1 = function(x15892) {
      return function(this$) {
        var this$__$1 = this;
        return tag_root_key.call(null, cljs.core.clone.call(null, cursor), root_key);
      };
    }(x15892);
    return x15892;
  } else {
    return cursor;
  }
};
om.core.root = function root(f, value, p__15893) {
  var map__15956 = p__15893;
  var map__15956__$1 = cljs.core.seq_QMARK_.call(null, map__15956) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15956) : map__15956;
  var options = map__15956__$1;
  var raf = cljs.core.get.call(null, map__15956__$1, new cljs.core.Keyword(null, "raf", "raf", -1295410152));
  var adapt = cljs.core.get.call(null, map__15956__$1, new cljs.core.Keyword(null, "adapt", "adapt", -1817022327));
  var descriptor = cljs.core.get.call(null, map__15956__$1, new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018));
  var instrument = cljs.core.get.call(null, map__15956__$1, new cljs.core.Keyword(null, "instrument", "instrument", -960698844));
  var path = cljs.core.get.call(null, map__15956__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
  var tx_listen = cljs.core.get.call(null, map__15956__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367));
  var target = cljs.core.get.call(null, map__15956__$1, new cljs.core.Keyword(null, "target", "target", 253001721));
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("First argument must be a function"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  if (!(target == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("No target specified to om.core/root"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "target", "target", 1893533248, null)))))].join(""));
  }
  var roots_SINGLEQUOTE__16018 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__16018, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__16018, target).call(null);
  } else {
  }
  var watch_key = cljs.core.gensym.call(null);
  var state = function() {
    var G__15957 = value;
    if (G__15957) {
      var bit__4311__auto__ = G__15957.cljs$lang$protocol_mask$partition1$ & 16384;
      if (bit__4311__auto__ || G__15957.cljs$core$IAtom$) {
        return true;
      } else {
        if (!G__15957.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__15957);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__15957);
    }
  }() ? value : cljs.core.atom.call(null, value);
  var state__$1 = om.core.setup.call(null, state, watch_key, tx_listen);
  var adapt__$1 = function() {
    var or__3630__auto__ = adapt;
    if (cljs.core.truth_(or__3630__auto__)) {
      return or__3630__auto__;
    } else {
      return cljs.core.identity;
    }
  }();
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 253001721), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367), new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, "adapt", "adapt", -1817022327));
  var ret = cljs.core.atom.call(null, null);
  var rootf = function(watch_key, state, state__$1, adapt__$1, m, ret, map__15956, map__15956__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target) {
    return function rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = adapt__$1.call(null, om.core.tag_root_key.call(null, path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path), watch_key));
      if (cljs.core.truth_(om.core._get_property.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "skip-render-root", "skip-render-root", -5219643)))) {
      } else {
        var c_16019 = om.dom.render.call(null, function() {
          var _STAR_descriptor_STAR_15988 = om.core._STAR_descriptor_STAR_;
          var _STAR_instrument_STAR_15989 = om.core._STAR_instrument_STAR_;
          var _STAR_state_STAR_15990 = om.core._STAR_state_STAR_;
          var _STAR_root_key_STAR_15991 = om.core._STAR_root_key_STAR_;
          try {
            om.core._STAR_descriptor_STAR_ = descriptor;
            om.core._STAR_instrument_STAR_ = instrument;
            om.core._STAR_state_STAR_ = state__$1;
            om.core._STAR_root_key_STAR_ = watch_key;
            return om.core.build.call(null, f, cursor, m);
          } finally {
            om.core._STAR_root_key_STAR_ = _STAR_root_key_STAR_15991;
            om.core._STAR_state_STAR_ = _STAR_state_STAR_15990;
            om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_15989;
            om.core._STAR_descriptor_STAR_ = _STAR_descriptor_STAR_15988;
          }
        }(), target);
        if (cljs.core.deref.call(null, ret) == null) {
          cljs.core.reset_BANG_.call(null, ret, c_16019);
        } else {
        }
      }
      var queue_16020 = om.core._get_queue.call(null, state__$1);
      if (cljs.core.empty_QMARK_.call(null, queue_16020)) {
      } else {
        var seq__15992_16021 = cljs.core.seq.call(null, queue_16020);
        var chunk__15993_16022 = null;
        var count__15994_16023 = 0;
        var i__15995_16024 = 0;
        while (true) {
          if (i__15995_16024 < count__15994_16023) {
            var c_16025 = cljs.core._nth.call(null, chunk__15993_16022, i__15995_16024);
            if (cljs.core.truth_(c_16025.isMounted())) {
              var temp__4126__auto___16026 = c_16025.state["__om_next_cursor"];
              if (cljs.core.truth_(temp__4126__auto___16026)) {
                var next_props_16027 = temp__4126__auto___16026;
                c_16025.props["__om_cursor"] = next_props_16027;
                c_16025.state["__om_next_cursor"] = null;
              } else {
              }
              if (cljs.core.truth_(function() {
                var or__3630__auto__ = !function() {
                  var G__15997 = om.core.children.call(null, c_16025);
                  if (G__15997) {
                    var bit__4311__auto__ = null;
                    if (cljs.core.truth_(function() {
                      var or__3630__auto__ = bit__4311__auto__;
                      if (cljs.core.truth_(or__3630__auto__)) {
                        return or__3630__auto__;
                      } else {
                        return G__15997.om$core$ICheckState$;
                      }
                    }())) {
                      return true;
                    } else {
                      if (!G__15997.cljs$lang$protocol_mask$partition$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICheckState, G__15997);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICheckState, G__15997);
                  }
                }();
                if (or__3630__auto__) {
                  return or__3630__auto__;
                } else {
                  return c_16025.shouldComponentUpdate(c_16025.props, c_16025.state);
                }
              }())) {
                c_16025.forceUpdate();
              } else {
              }
            } else {
            }
            var G__16028 = seq__15992_16021;
            var G__16029 = chunk__15993_16022;
            var G__16030 = count__15994_16023;
            var G__16031 = i__15995_16024 + 1;
            seq__15992_16021 = G__16028;
            chunk__15993_16022 = G__16029;
            count__15994_16023 = G__16030;
            i__15995_16024 = G__16031;
            continue;
          } else {
            var temp__4126__auto___16032 = cljs.core.seq.call(null, seq__15992_16021);
            if (temp__4126__auto___16032) {
              var seq__15992_16033__$1 = temp__4126__auto___16032;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__15992_16033__$1)) {
                var c__4417__auto___16034 = cljs.core.chunk_first.call(null, seq__15992_16033__$1);
                var G__16035 = cljs.core.chunk_rest.call(null, seq__15992_16033__$1);
                var G__16036 = c__4417__auto___16034;
                var G__16037 = cljs.core.count.call(null, c__4417__auto___16034);
                var G__16038 = 0;
                seq__15992_16021 = G__16035;
                chunk__15993_16022 = G__16036;
                count__15994_16023 = G__16037;
                i__15995_16024 = G__16038;
                continue;
              } else {
                var c_16039 = cljs.core.first.call(null, seq__15992_16033__$1);
                if (cljs.core.truth_(c_16039.isMounted())) {
                  var temp__4126__auto___16040__$1 = c_16039.state["__om_next_cursor"];
                  if (cljs.core.truth_(temp__4126__auto___16040__$1)) {
                    var next_props_16041 = temp__4126__auto___16040__$1;
                    c_16039.props["__om_cursor"] = next_props_16041;
                    c_16039.state["__om_next_cursor"] = null;
                  } else {
                  }
                  if (cljs.core.truth_(function() {
                    var or__3630__auto__ = !function() {
                      var G__15999 = om.core.children.call(null, c_16039);
                      if (G__15999) {
                        var bit__4311__auto__ = null;
                        if (cljs.core.truth_(function() {
                          var or__3630__auto__ = bit__4311__auto__;
                          if (cljs.core.truth_(or__3630__auto__)) {
                            return or__3630__auto__;
                          } else {
                            return G__15999.om$core$ICheckState$;
                          }
                        }())) {
                          return true;
                        } else {
                          if (!G__15999.cljs$lang$protocol_mask$partition$) {
                            return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICheckState, G__15999);
                          } else {
                            return false;
                          }
                        }
                      } else {
                        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICheckState, G__15999);
                      }
                    }();
                    if (or__3630__auto__) {
                      return or__3630__auto__;
                    } else {
                      return c_16039.shouldComponentUpdate(c_16039.props, c_16039.state);
                    }
                  }())) {
                    c_16039.forceUpdate();
                  } else {
                  }
                } else {
                }
                var G__16042 = cljs.core.next.call(null, seq__15992_16033__$1);
                var G__16043 = null;
                var G__16044 = 0;
                var G__16045 = 0;
                seq__15992_16021 = G__16042;
                chunk__15993_16022 = G__16043;
                count__15994_16023 = G__16044;
                i__15995_16024 = G__16045;
                continue;
              }
            } else {
            }
          }
          break;
        }
        om.core._empty_queue_BANG_.call(null, state__$1);
      }
      var _refs_16046 = cljs.core.deref.call(null, om.core._refs);
      if (cljs.core.empty_QMARK_.call(null, _refs_16046)) {
      } else {
        var seq__16000_16047 = cljs.core.seq.call(null, _refs_16046);
        var chunk__16001_16048 = null;
        var count__16002_16049 = 0;
        var i__16003_16050 = 0;
        while (true) {
          if (i__16003_16050 < count__16002_16049) {
            var vec__16004_16051 = cljs.core._nth.call(null, chunk__16001_16048, i__16003_16050);
            var path_16052__$1 = cljs.core.nth.call(null, vec__16004_16051, 0, null);
            var cs_16053 = cljs.core.nth.call(null, vec__16004_16051, 1, null);
            var cs_16054__$1 = cljs.core.deref.call(null, cs_16053);
            var seq__16005_16055 = cljs.core.seq.call(null, cs_16054__$1);
            var chunk__16006_16056 = null;
            var count__16007_16057 = 0;
            var i__16008_16058 = 0;
            while (true) {
              if (i__16008_16058 < count__16007_16057) {
                var vec__16009_16059 = cljs.core._nth.call(null, chunk__16006_16056, i__16008_16058);
                var id_16060 = cljs.core.nth.call(null, vec__16009_16059, 0, null);
                var c_16061 = cljs.core.nth.call(null, vec__16009_16059, 1, null);
                if (cljs.core.truth_(c_16061.shouldComponentUpdate(c_16061.props, c_16061.state))) {
                  c_16061.forceUpdate();
                } else {
                }
                var G__16062 = seq__16005_16055;
                var G__16063 = chunk__16006_16056;
                var G__16064 = count__16007_16057;
                var G__16065 = i__16008_16058 + 1;
                seq__16005_16055 = G__16062;
                chunk__16006_16056 = G__16063;
                count__16007_16057 = G__16064;
                i__16008_16058 = G__16065;
                continue;
              } else {
                var temp__4126__auto___16066 = cljs.core.seq.call(null, seq__16005_16055);
                if (temp__4126__auto___16066) {
                  var seq__16005_16067__$1 = temp__4126__auto___16066;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__16005_16067__$1)) {
                    var c__4417__auto___16068 = cljs.core.chunk_first.call(null, seq__16005_16067__$1);
                    var G__16069 = cljs.core.chunk_rest.call(null, seq__16005_16067__$1);
                    var G__16070 = c__4417__auto___16068;
                    var G__16071 = cljs.core.count.call(null, c__4417__auto___16068);
                    var G__16072 = 0;
                    seq__16005_16055 = G__16069;
                    chunk__16006_16056 = G__16070;
                    count__16007_16057 = G__16071;
                    i__16008_16058 = G__16072;
                    continue;
                  } else {
                    var vec__16010_16073 = cljs.core.first.call(null, seq__16005_16067__$1);
                    var id_16074 = cljs.core.nth.call(null, vec__16010_16073, 0, null);
                    var c_16075 = cljs.core.nth.call(null, vec__16010_16073, 1, null);
                    if (cljs.core.truth_(c_16075.shouldComponentUpdate(c_16075.props, c_16075.state))) {
                      c_16075.forceUpdate();
                    } else {
                    }
                    var G__16076 = cljs.core.next.call(null, seq__16005_16067__$1);
                    var G__16077 = null;
                    var G__16078 = 0;
                    var G__16079 = 0;
                    seq__16005_16055 = G__16076;
                    chunk__16006_16056 = G__16077;
                    count__16007_16057 = G__16078;
                    i__16008_16058 = G__16079;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            var G__16080 = seq__16000_16047;
            var G__16081 = chunk__16001_16048;
            var G__16082 = count__16002_16049;
            var G__16083 = i__16003_16050 + 1;
            seq__16000_16047 = G__16080;
            chunk__16001_16048 = G__16081;
            count__16002_16049 = G__16082;
            i__16003_16050 = G__16083;
            continue;
          } else {
            var temp__4126__auto___16084 = cljs.core.seq.call(null, seq__16000_16047);
            if (temp__4126__auto___16084) {
              var seq__16000_16085__$1 = temp__4126__auto___16084;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__16000_16085__$1)) {
                var c__4417__auto___16086 = cljs.core.chunk_first.call(null, seq__16000_16085__$1);
                var G__16087 = cljs.core.chunk_rest.call(null, seq__16000_16085__$1);
                var G__16088 = c__4417__auto___16086;
                var G__16089 = cljs.core.count.call(null, c__4417__auto___16086);
                var G__16090 = 0;
                seq__16000_16047 = G__16087;
                chunk__16001_16048 = G__16088;
                count__16002_16049 = G__16089;
                i__16003_16050 = G__16090;
                continue;
              } else {
                var vec__16011_16091 = cljs.core.first.call(null, seq__16000_16085__$1);
                var path_16092__$1 = cljs.core.nth.call(null, vec__16011_16091, 0, null);
                var cs_16093 = cljs.core.nth.call(null, vec__16011_16091, 1, null);
                var cs_16094__$1 = cljs.core.deref.call(null, cs_16093);
                var seq__16012_16095 = cljs.core.seq.call(null, cs_16094__$1);
                var chunk__16013_16096 = null;
                var count__16014_16097 = 0;
                var i__16015_16098 = 0;
                while (true) {
                  if (i__16015_16098 < count__16014_16097) {
                    var vec__16016_16099 = cljs.core._nth.call(null, chunk__16013_16096, i__16015_16098);
                    var id_16100 = cljs.core.nth.call(null, vec__16016_16099, 0, null);
                    var c_16101 = cljs.core.nth.call(null, vec__16016_16099, 1, null);
                    if (cljs.core.truth_(c_16101.shouldComponentUpdate(c_16101.props, c_16101.state))) {
                      c_16101.forceUpdate();
                    } else {
                    }
                    var G__16102 = seq__16012_16095;
                    var G__16103 = chunk__16013_16096;
                    var G__16104 = count__16014_16097;
                    var G__16105 = i__16015_16098 + 1;
                    seq__16012_16095 = G__16102;
                    chunk__16013_16096 = G__16103;
                    count__16014_16097 = G__16104;
                    i__16015_16098 = G__16105;
                    continue;
                  } else {
                    var temp__4126__auto___16106__$1 = cljs.core.seq.call(null, seq__16012_16095);
                    if (temp__4126__auto___16106__$1) {
                      var seq__16012_16107__$1 = temp__4126__auto___16106__$1;
                      if (cljs.core.chunked_seq_QMARK_.call(null, seq__16012_16107__$1)) {
                        var c__4417__auto___16108 = cljs.core.chunk_first.call(null, seq__16012_16107__$1);
                        var G__16109 = cljs.core.chunk_rest.call(null, seq__16012_16107__$1);
                        var G__16110 = c__4417__auto___16108;
                        var G__16111 = cljs.core.count.call(null, c__4417__auto___16108);
                        var G__16112 = 0;
                        seq__16012_16095 = G__16109;
                        chunk__16013_16096 = G__16110;
                        count__16014_16097 = G__16111;
                        i__16015_16098 = G__16112;
                        continue;
                      } else {
                        var vec__16017_16113 = cljs.core.first.call(null, seq__16012_16107__$1);
                        var id_16114 = cljs.core.nth.call(null, vec__16017_16113, 0, null);
                        var c_16115 = cljs.core.nth.call(null, vec__16017_16113, 1, null);
                        if (cljs.core.truth_(c_16115.shouldComponentUpdate(c_16115.props, c_16115.state))) {
                          c_16115.forceUpdate();
                        } else {
                        }
                        var G__16116 = cljs.core.next.call(null, seq__16012_16107__$1);
                        var G__16117 = null;
                        var G__16118 = 0;
                        var G__16119 = 0;
                        seq__16012_16095 = G__16116;
                        chunk__16013_16096 = G__16117;
                        count__16014_16097 = G__16118;
                        i__16015_16098 = G__16119;
                        continue;
                      }
                    } else {
                    }
                  }
                  break;
                }
                var G__16120 = cljs.core.next.call(null, seq__16000_16085__$1);
                var G__16121 = null;
                var G__16122 = 0;
                var G__16123 = 0;
                seq__16000_16047 = G__16120;
                chunk__16001_16048 = G__16121;
                count__16002_16049 = G__16122;
                i__16003_16050 = G__16123;
                continue;
              }
            } else {
            }
          }
          break;
        }
      }
      om.core._set_property_BANG_.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "skip-render-root", "skip-render-root", -5219643), true);
      return cljs.core.deref.call(null, ret);
    };
  }(watch_key, state, state__$1, adapt__$1, m, ret, map__15956, map__15956__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__15956, map__15956__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target) {
    return function(_, ___$1, o, n) {
      if (cljs.core.not.call(null, om.core._get_property.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "ignore", "ignore", -1631542033))) && !(o === n)) {
        om.core._set_property_BANG_.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "skip-render-root", "skip-render-root", -5219643), false);
      } else {
      }
      om.core._set_property_BANG_.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "ignore", "ignore", -1631542033), false);
      if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
      } else {
        cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
      }
      if (cljs.core.truth_(om.core.refresh_queued)) {
        return null;
      } else {
        om.core.refresh_queued = true;
        if (raf === false || !(typeof requestAnimationFrame !== "undefined")) {
          return setTimeout(function(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__15956, map__15956__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target) {
            return function() {
              return om.core.render_all.call(null, state__$1);
            };
          }(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__15956, map__15956__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target), 16);
        } else {
          if (cljs.core.fn_QMARK_.call(null, raf)) {
            return raf.call(null);
          } else {
            return requestAnimationFrame(function(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__15956, map__15956__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target) {
              return function() {
                return om.core.render_all.call(null, state__$1);
              };
            }(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__15956, map__15956__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target));
          }
        }
      }
    };
  }(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__15956, map__15956__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target));
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__15956, map__15956__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target) {
    return function() {
      om.core._remove_properties_BANG_.call(null, state__$1, watch_key);
      cljs.core.remove_watch.call(null, state__$1, watch_key);
      om.core.tear_down.call(null, state__$1, watch_key);
      cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
      return React.unmountComponentAtNode(target);
    };
  }(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__15956, map__15956__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target));
  return rootf.call(null);
};
om.core.detach_root = function detach_root(target) {
  if (cljs.core.truth_(goog.dom.isElement(target))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("gdom", "isElement", "gdom/isElement", 465934354, null), new cljs.core.Symbol(null, "target", "target", 1893533248, null))))].join(""));
  }
  var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, om.core.roots), target);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    return f.call(null);
  } else {
    return null;
  }
};
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return transact_BANG_.call(null, cursor, korks, f, null);
  };
  var transact_BANG___4 = function(cursor, korks, f, tag) {
    if (om.core.cursor_QMARK_.call(null, cursor)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
    }
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._transact_BANG_.call(null, cursor, korks__$1, f, tag);
  };
  transact_BANG_ = function(cursor, korks, f, tag) {
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, v) {
    if (om.core.cursor_QMARK_.call(null, cursor)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
    }
    return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
      return v;
    }, null);
  };
  var update_BANG___3 = function(cursor, korks, v) {
    if (om.core.cursor_QMARK_.call(null, cursor)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
    }
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, null);
  };
  var update_BANG___4 = function(cursor, korks, v, tag) {
    if (om.core.cursor_QMARK_.call(null, cursor)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
    }
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, tag);
  };
  update_BANG_ = function(cursor, korks, v, tag) {
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, korks);
      case 3:
        return update_BANG___3.call(this, cursor, korks, v);
      case 4:
        return update_BANG___4.call(this, cursor, korks, v, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  return update_BANG_;
}();
om.core.commit_BANG_ = function commit_BANG_(cursor, korks, f) {
  if (om.core.cursor_QMARK_.call(null, cursor)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
  }
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  var key = function() {
    var G__16125 = cursor;
    if (G__16125) {
      var bit__4311__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3630__auto__ = bit__4311__auto__;
        if (cljs.core.truth_(or__3630__auto__)) {
          return or__3630__auto__;
        } else {
          return G__16125.om$core$IRootKey$;
        }
      }())) {
        return true;
      } else {
        if (!G__16125.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRootKey, G__16125);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRootKey, G__16125);
    }
  }() ? om.core._root_key.call(null, cursor) : null;
  var app_state = om.core.state.call(null, cursor);
  var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
  var cpath = om.core.path.call(null, cursor);
  var rpath = cljs.core.into.call(null, cpath, korks__$1);
  if (cljs.core.truth_(key)) {
    om.core._set_property_BANG_.call(null, app_state, key, new cljs.core.Keyword(null, "ignore", "ignore", -1631542033), true);
  } else {
  }
  if (cljs.core.empty_QMARK_.call(null, rpath)) {
    return cljs.core.swap_BANG_.call(null, app_state, f);
  } else {
    return cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, rpath, f);
  }
};
om.core.get_node = function() {
  var get_node = null;
  var get_node__1 = function(owner) {
    return owner.getDOMNode();
  };
  var get_node__2 = function(owner, name) {
    if (typeof name === "string") {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "string?", "string?", -1129175764, null), new cljs.core.Symbol(null, "name", "name", -810760592, null))))].join(""));
    }
    var temp__4126__auto__ = owner.refs;
    if (cljs.core.truth_(temp__4126__auto__)) {
      var refs = temp__4126__auto__;
      return refs[name].getDOMNode();
    } else {
      return null;
    }
  };
  get_node = function(owner, name) {
    switch(arguments.length) {
      case 1:
        return get_node__1.call(this, owner);
      case 2:
        return get_node__2.call(this, owner, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_node.cljs$core$IFn$_invoke$arity$1 = get_node__1;
  get_node.cljs$core$IFn$_invoke$arity$2 = get_node__2;
  return get_node;
}();
om.core.mounted_QMARK_ = function mounted_QMARK_(owner) {
  return owner.isMounted();
};
om.core.set_state_BANG_ = function() {
  var set_state_BANG_ = null;
  var set_state_BANG___2 = function(owner, v) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    return om.core._set_state_BANG_.call(null, owner, v, true);
  };
  var set_state_BANG___3 = function(owner, korks, v) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, true);
  };
  set_state_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_BANG___2;
  set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_BANG___3;
  return set_state_BANG_;
}();
om.core.set_state_nr_BANG_ = function() {
  var set_state_nr_BANG_ = null;
  var set_state_nr_BANG___2 = function(owner, v) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    return om.core._set_state_BANG_.call(null, owner, v, false);
  };
  var set_state_nr_BANG___3 = function(owner, korks, v) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, false);
  };
  set_state_nr_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_nr_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_nr_BANG___2;
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_nr_BANG___3;
  return set_state_nr_BANG_;
}();
om.core.update_state_BANG_ = function() {
  var update_state_BANG_ = null;
  var update_state_BANG___2 = function(owner, f) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    return om.core.set_state_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_BANG___3 = function(owner, korks, f) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    return om.core.set_state_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_BANG___2;
  update_state_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_BANG___3;
  return update_state_BANG_;
}();
om.core.update_state_nr_BANG_ = function() {
  var update_state_nr_BANG_ = null;
  var update_state_nr_BANG___2 = function(owner, f) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    return om.core.set_state_nr_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_nr_BANG___3 = function(owner, korks, f) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    return om.core.set_state_nr_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_nr_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_nr_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_nr_BANG___2;
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_nr_BANG___3;
  return update_state_nr_BANG_;
}();
om.core.refresh_BANG_ = function refresh_BANG_(owner) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  return om.core.update_state_BANG_.call(null, owner, cljs.core.identity);
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    return om.core._get_render_state.call(null, owner);
  };
  var get_render_state__2 = function(owner, korks) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_render_state.call(null, owner, ks);
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
goog.provide("gridlife.langton");
goog.require("cljs.core");
goog.require("gridlife.gamemodel");
goog.require("gridlife.gridmodel");
gridlife.langton.LangtonAnt = function(location, heading, __meta, __extmap, __hash) {
  this.location = location;
  this.heading = heading;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
gridlife.langton.LangtonAnt.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4233__auto__, k__4234__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4233__auto____$1, k__4234__auto__, null);
};
gridlife.langton.LangtonAnt.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4235__auto__, k11010, else__4236__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  var G__11012 = k11010 instanceof cljs.core.Keyword ? k11010.fqn : null;
  switch(G__11012) {
    case "heading":
      return self__.heading;
      break;
    case "location":
      return self__.location;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k11010, else__4236__auto__);
  }
};
gridlife.langton.LangtonAnt.prototype.gridlife$gamemodel$game$ = true;
gridlife.langton.LangtonAnt.prototype.gridlife$gamemodel$game$game_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return "Langton's Ant";
};
gridlife.langton.LangtonAnt.prototype.gridlife$gamemodel$game$to_str$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  [cljs.core.str("Langton's Ant: ")].join("");
  return self__.heading;
};
gridlife.langton.LangtonAnt.prototype.gridlife$gamemodel$game$tick$arity$2 = function(_, gridmodel) {
  var self__ = this;
  var ___$1 = this;
  var model = (new cljs.core.Keyword(null, "model", "model", 331153215)).cljs$core$IFn$_invoke$arity$1(gridmodel);
  var cells_wide = (new cljs.core.Keyword(null, "cells-wide", "cells-wide", -1579921448)).cljs$core$IFn$_invoke$arity$1(gridmodel);
  var cells_high = (new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465)).cljs$core$IFn$_invoke$arity$1(gridmodel);
  var current_cell_contents = cljs.core.get.call(null, model, self__.location);
  var new_cell_contents = gridlife.gridmodel.toggle_color.call(null, current_cell_contents);
  var new_heading_f = gridlife.gridmodel.white_QMARK_.call(null, current_cell_contents) ? gridlife.gridmodel.turn_left : gridlife.gridmodel.turn_right;
  var new_heading = new_heading_f.call(null, self__.heading);
  var new_model = cljs.core.assoc.call(null, model, self__.location, new_cell_contents);
  var new_location = gridlife.gridmodel.new_location.call(null, cells_wide, cells_high, self__.location, new_heading, 1);
  var new_ant = new gridlife.langton.LangtonAnt(new_location, new_heading, null, null, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, gridmodel, new cljs.core.Keyword(null, "model", "model", 331153215), new_model), new_ant, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new_location, "red"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.location, 
  cljs.core.name.call(null, new_cell_contents)], null)], null)], null);
};
gridlife.langton.LangtonAnt.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4247__auto__, writer__4248__auto__, opts__4249__auto__) {
  var self__ = this;
  var this__4247__auto____$1 = this;
  var pr_pair__4250__auto__ = function(this__4247__auto____$1) {
    return function(keyval__4251__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4248__auto__, cljs.core.pr_writer, "", " ", "", opts__4249__auto__, keyval__4251__auto__);
    };
  }(this__4247__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4248__auto__, pr_pair__4250__auto__, "#gridlife.langton.LangtonAnt{", ", ", "}", opts__4249__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "location", "location", 1815599388), self__.location], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "heading", "heading", -1312171873), self__.heading], null)], null), self__.__extmap));
};
gridlife.langton.LangtonAnt.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4231__auto__) {
  var self__ = this;
  var this__4231__auto____$1 = this;
  return self__.__meta;
};
gridlife.langton.LangtonAnt.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4227__auto__) {
  var self__ = this;
  var this__4227__auto____$1 = this;
  return new gridlife.langton.LangtonAnt(self__.location, self__.heading, self__.__meta, self__.__extmap, self__.__hash);
};
gridlife.langton.LangtonAnt.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4237__auto__) {
  var self__ = this;
  var this__4237__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
gridlife.langton.LangtonAnt.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4228__auto__) {
  var self__ = this;
  var this__4228__auto____$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_imap.call(null, this__4228__auto____$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
gridlife.langton.LangtonAnt.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4229__auto__, other__4230__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3618__auto__ = other__4230__auto__;
    if (cljs.core.truth_(and__3618__auto__)) {
      return this__4229__auto____$1.constructor === other__4230__auto__.constructor && cljs.core.equiv_map.call(null, this__4229__auto____$1, other__4230__auto__);
    } else {
      return and__3618__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
gridlife.langton.LangtonAnt.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4242__auto__, k__4243__auto__) {
  var self__ = this;
  var this__4242__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "location", "location", 1815599388), null, new cljs.core.Keyword(null, "heading", "heading", -1312171873), null], null), null), k__4243__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4242__auto____$1), self__.__meta), k__4243__auto__);
  } else {
    return new gridlife.langton.LangtonAnt(self__.location, self__.heading, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4243__auto__)), null);
  }
};
gridlife.langton.LangtonAnt.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4240__auto__, k__4241__auto__, G__11009) {
  var self__ = this;
  var this__4240__auto____$1 = this;
  var pred__11013 = cljs.core.keyword_identical_QMARK_;
  var expr__11014 = k__4241__auto__;
  if (cljs.core.truth_(pred__11013.call(null, new cljs.core.Keyword(null, "location", "location", 1815599388), expr__11014))) {
    return new gridlife.langton.LangtonAnt(G__11009, self__.heading, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__11013.call(null, new cljs.core.Keyword(null, "heading", "heading", -1312171873), expr__11014))) {
      return new gridlife.langton.LangtonAnt(self__.location, G__11009, self__.__meta, self__.__extmap, null);
    } else {
      return new gridlife.langton.LangtonAnt(self__.location, self__.heading, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4241__auto__, G__11009), null);
    }
  }
};
gridlife.langton.LangtonAnt.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4245__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "location", "location", 1815599388), self__.location], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "heading", "heading", -1312171873), self__.heading], null)], null), self__.__extmap));
};
gridlife.langton.LangtonAnt.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4232__auto__, G__11009) {
  var self__ = this;
  var this__4232__auto____$1 = this;
  return new gridlife.langton.LangtonAnt(self__.location, self__.heading, G__11009, self__.__extmap, self__.__hash);
};
gridlife.langton.LangtonAnt.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4238__auto__, entry__4239__auto__) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4239__auto__)) {
    return cljs.core._assoc.call(null, this__4238__auto____$1, cljs.core._nth.call(null, entry__4239__auto__, 0), cljs.core._nth.call(null, entry__4239__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4238__auto____$1, entry__4239__auto__);
  }
};
gridlife.langton.LangtonAnt.cljs$lang$type = true;
gridlife.langton.LangtonAnt.cljs$lang$ctorPrSeq = function(this__4267__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "gridlife.langton/LangtonAnt");
};
gridlife.langton.LangtonAnt.cljs$lang$ctorPrWriter = function(this__4267__auto__, writer__4268__auto__) {
  return cljs.core._write.call(null, writer__4268__auto__, "gridlife.langton/LangtonAnt");
};
gridlife.langton.__GT_LangtonAnt = function __GT_LangtonAnt(location, heading) {
  return new gridlife.langton.LangtonAnt(location, heading, null, null, null);
};
gridlife.langton.map__GT_LangtonAnt = function map__GT_LangtonAnt(G__11011) {
  return new gridlife.langton.LangtonAnt((new cljs.core.Keyword(null, "location", "location", 1815599388)).cljs$core$IFn$_invoke$arity$1(G__11011), (new cljs.core.Keyword(null, "heading", "heading", -1312171873)).cljs$core$IFn$_invoke$arity$1(G__11011), null, cljs.core.dissoc.call(null, G__11011, new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Keyword(null, "heading", "heading", -1312171873)), null);
};
gridlife.langton.new_ant = function new_ant(start_location) {
  return new gridlife.langton.LangtonAnt(start_location, new cljs.core.Keyword(null, "north", "north", 651323902), null, null, null);
};
goog.provide("gridlife.gridui");
goog.require("cljs.core");
goog.require("gridlife.gamemodel");
goog.require("gridlife.gridmodel");
goog.require("cljs.core.async");
goog.require("gridlife.langton");
goog.require("sablono.core");
goog.require("gridlife.random");
goog.require("om.core");
cljs.core.enable_console_print_BANG_.call(null);
gridlife.gridui.empty_model = function empty_model(cells_wide, cells_high) {
  var keys = function() {
    var iter__4386__auto__ = function iter__10878(s__10879) {
      return new cljs.core.LazySeq(null, function() {
        var s__10879__$1 = s__10879;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__10879__$1);
          if (temp__4126__auto__) {
            var xs__4624__auto__ = temp__4126__auto__;
            var x = cljs.core.first.call(null, xs__4624__auto__);
            var iterys__4382__auto__ = function(s__10879__$1, x, xs__4624__auto__, temp__4126__auto__) {
              return function iter__10880(s__10881) {
                return new cljs.core.LazySeq(null, function(s__10879__$1, x, xs__4624__auto__, temp__4126__auto__) {
                  return function() {
                    var s__10881__$1 = s__10881;
                    while (true) {
                      var temp__4126__auto____$1 = cljs.core.seq.call(null, s__10881__$1);
                      if (temp__4126__auto____$1) {
                        var s__10881__$2 = temp__4126__auto____$1;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__10881__$2)) {
                          var c__4384__auto__ = cljs.core.chunk_first.call(null, s__10881__$2);
                          var size__4385__auto__ = cljs.core.count.call(null, c__4384__auto__);
                          var b__10883 = cljs.core.chunk_buffer.call(null, size__4385__auto__);
                          if (function() {
                            var i__10882 = 0;
                            while (true) {
                              if (i__10882 < size__4385__auto__) {
                                var y = cljs.core._nth.call(null, c__4384__auto__, i__10882);
                                cljs.core.chunk_append.call(null, b__10883, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), x, new cljs.core.Keyword(null, "y", "y", -1757859776), y], null));
                                var G__10884 = i__10882 + 1;
                                i__10882 = G__10884;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10883), iter__10880.call(null, cljs.core.chunk_rest.call(null, s__10881__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10883), null);
                          }
                        } else {
                          var y = cljs.core.first.call(null, s__10881__$2);
                          return cljs.core.cons.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), x, new cljs.core.Keyword(null, "y", "y", -1757859776), y], null), iter__10880.call(null, cljs.core.rest.call(null, s__10881__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(s__10879__$1, x, xs__4624__auto__, temp__4126__auto__), null, null);
              };
            }(s__10879__$1, x, xs__4624__auto__, temp__4126__auto__);
            var fs__4383__auto__ = cljs.core.seq.call(null, iterys__4382__auto__.call(null, cljs.core.range.call(null, 0, cells_high)));
            if (fs__4383__auto__) {
              return cljs.core.concat.call(null, fs__4383__auto__, iter__10878.call(null, cljs.core.rest.call(null, s__10879__$1)));
            } else {
              var G__10885 = cljs.core.rest.call(null, s__10879__$1);
              s__10879__$1 = G__10885;
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4386__auto__.call(null, cljs.core.range.call(null, 0, cells_wide));
  }();
  return cljs.core.zipmap.call(null, keys, cljs.core.repeat.call(null, new cljs.core.Keyword(null, "white", "white", -483998618)));
};
gridlife.gridui.cells_wide = 50;
gridlife.gridui.cells_high = 50;
gridlife.gridui.cell_size = 12;
gridlife.gridui.default_ant = function default_ant() {
  return gridlife.langton.new_ant.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), Math.floor(gridlife.gridui.cells_wide / 2), new cljs.core.Keyword(null, "y", "y", -1757859776), Math.floor(gridlife.gridui.cells_high / 2)], null));
};
gridlife.gridui.default_games = function default_games() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [gridlife.random.new_random_noise.call(null), gridlife.gridui.default_ant.call(null)], null);
};
gridlife.gridui.empty_gridmodel = function empty_gridmodel() {
  return new gridlife.gridmodel.GridModel(gridlife.gridui.empty_model.call(null, gridlife.gridui.cells_wide, gridlife.gridui.cells_high), gridlife.gridui.cells_wide, gridlife.gridui.cells_high, null, null, null);
};
gridlife.gridui.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "gridmodel", "gridmodel", 2082730461), gridlife.gridui.empty_gridmodel.call(null), new cljs.core.Keyword(null, "games", "games", 1927565374), gridlife.gridui.default_games.call(null), new cljs.core.Keyword(null, "enabled-games", "enabled-games", 18345606), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "run", "run", -1821166653), false], null));
gridlife.gridui.enabled_QMARK_ = function enabled_QMARK_(game) {
  var enabled_games = (new cljs.core.Keyword(null, "enabled-games", "enabled-games", 18345606)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, gridlife.gridui.app_state));
  return cljs.core.some.call(null, function(enabled_games) {
    return function(p1__10886_SHARP_) {
      return cljs.core._EQ_.call(null, gridlife.gamemodel.game_name.call(null, game), p1__10886_SHARP_);
    };
  }(enabled_games), enabled_games);
};
gridlife.gridui.toggle_enabled = function toggle_enabled(game) {
  var enabled_games = (new cljs.core.Keyword(null, "enabled-games", "enabled-games", 18345606)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, gridlife.gridui.app_state));
  var name = gridlife.gamemodel.game_name.call(null, game);
  cljs.core.println.call(null, [cljs.core.str("toggling: "), cljs.core.str(name)].join(""));
  if (cljs.core.truth_(gridlife.gridui.enabled_QMARK_.call(null, game))) {
    return om.core.update_BANG_.call(null, cljs.core.deref.call(null, gridlife.gridui.app_state), new cljs.core.Keyword(null, "enabled-games", "enabled-games", 18345606), cljs.core.remove.call(null, function(enabled_games, name) {
      return function(p1__10887_SHARP_) {
        return cljs.core._EQ_.call(null, game, p1__10887_SHARP_);
      };
    }(enabled_games, name)));
  } else {
    return om.core.update_BANG_.call(null, cljs.core.deref.call(null, gridlife.gridui.app_state), new cljs.core.Keyword(null, "enabled-games", "enabled-games", 18345606), cljs.core.cons.call(null, name, enabled_games));
  }
};
gridlife.gridui.render_chan = cljs.core.async.chan.call(null);
gridlife.gridui.paint_cell = function paint_cell(x, y, color) {
  var x_px_pos = x * gridlife.gridui.cell_size;
  var y_px_pos = y * gridlife.gridui.cell_size;
  var canvas = document.getElementById("canvas");
  var context = canvas.getContext("2d");
  context.fillStyle = color;
  context.fillRect(x_px_pos, y_px_pos, gridlife.gridui.cell_size, gridlife.gridui.cell_size);
  return context.stroke();
};
gridlife.gridui.reset_grid = function reset_grid(app) {
  om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "gridmodel", "gridmodel", 2082730461), gridlife.gridui.empty_gridmodel.call(null));
  om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "games", "games", 1927565374), gridlife.gridui.default_games.call(null));
  var seq__10892 = cljs.core.seq.call(null, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "model", "model", 331153215)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "gridmodel", "gridmodel", 2082730461)).cljs$core$IFn$_invoke$arity$1(app))));
  var chunk__10893 = null;
  var count__10894 = 0;
  var i__10895 = 0;
  while (true) {
    if (i__10895 < count__10894) {
      var location = cljs.core._nth.call(null, chunk__10893, i__10895);
      gridlife.gridui.paint_cell.call(null, (new cljs.core.Keyword(null, "x", "x", 2099068185)).cljs$core$IFn$_invoke$arity$1(location), (new cljs.core.Keyword(null, "y", "y", -1757859776)).cljs$core$IFn$_invoke$arity$1(location), "white");
      var G__10896 = seq__10892;
      var G__10897 = chunk__10893;
      var G__10898 = count__10894;
      var G__10899 = i__10895 + 1;
      seq__10892 = G__10896;
      chunk__10893 = G__10897;
      count__10894 = G__10898;
      i__10895 = G__10899;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__10892);
      if (temp__4126__auto__) {
        var seq__10892__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10892__$1)) {
          var c__4417__auto__ = cljs.core.chunk_first.call(null, seq__10892__$1);
          var G__10900 = cljs.core.chunk_rest.call(null, seq__10892__$1);
          var G__10901 = c__4417__auto__;
          var G__10902 = cljs.core.count.call(null, c__4417__auto__);
          var G__10903 = 0;
          seq__10892 = G__10900;
          chunk__10893 = G__10901;
          count__10894 = G__10902;
          i__10895 = G__10903;
          continue;
        } else {
          var location = cljs.core.first.call(null, seq__10892__$1);
          gridlife.gridui.paint_cell.call(null, (new cljs.core.Keyword(null, "x", "x", 2099068185)).cljs$core$IFn$_invoke$arity$1(location), (new cljs.core.Keyword(null, "y", "y", -1757859776)).cljs$core$IFn$_invoke$arity$1(location), "white");
          var G__10904 = cljs.core.next.call(null, seq__10892__$1);
          var G__10905 = null;
          var G__10906 = 0;
          var G__10907 = 0;
          seq__10892 = G__10904;
          chunk__10893 = G__10905;
          count__10894 = G__10906;
          i__10895 = G__10907;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
gridlife.gridui.handle_render_cell = function handle_render_cell() {
  var c__6970__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6970__auto__) {
    return function() {
      var f__6971__auto__ = function() {
        var switch__6955__auto__ = function(c__6970__auto__) {
          return function(state_10946) {
            var state_val_10947 = state_10946[1];
            if (state_val_10947 === 4) {
              var inst_10936 = state_10946[2];
              var inst_10937 = cljs.core.nth.call(null, inst_10936, 0, null);
              var inst_10938 = cljs.core.nth.call(null, inst_10936, 1, null);
              var inst_10939 = (new cljs.core.Keyword(null, "x", "x", 2099068185)).cljs$core$IFn$_invoke$arity$1(inst_10937);
              var inst_10940 = (new cljs.core.Keyword(null, "y", "y", -1757859776)).cljs$core$IFn$_invoke$arity$1(inst_10937);
              var inst_10941 = gridlife.gridui.paint_cell.call(null, inst_10939, inst_10940, inst_10938);
              var state_10946__$1 = function() {
                var statearr_10948 = state_10946;
                statearr_10948[7] = inst_10941;
                return statearr_10948;
              }();
              var statearr_10949_10958 = state_10946__$1;
              statearr_10949_10958[2] = null;
              statearr_10949_10958[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_10947 === 3) {
                var inst_10944 = state_10946[2];
                var state_10946__$1 = state_10946;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10946__$1, inst_10944);
              } else {
                if (state_val_10947 === 2) {
                  var state_10946__$1 = state_10946;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10946__$1, 4, gridlife.gridui.render_chan);
                } else {
                  if (state_val_10947 === 1) {
                    var state_10946__$1 = state_10946;
                    var statearr_10950_10959 = state_10946__$1;
                    statearr_10950_10959[2] = null;
                    statearr_10950_10959[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    return null;
                  }
                }
              }
            }
          };
        }(c__6970__auto__);
        return function(switch__6955__auto__, c__6970__auto__) {
          return function() {
            var state_machine__6956__auto__ = null;
            var state_machine__6956__auto____0 = function() {
              var statearr_10954 = [null, null, null, null, null, null, null, null];
              statearr_10954[0] = state_machine__6956__auto__;
              statearr_10954[1] = 1;
              return statearr_10954;
            };
            var state_machine__6956__auto____1 = function(state_10946) {
              while (true) {
                var ret_value__6957__auto__ = function() {
                  try {
                    while (true) {
                      var result__6958__auto__ = switch__6955__auto__.call(null, state_10946);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6958__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6958__auto__;
                      }
                      break;
                    }
                  } catch (e10955) {
                    if (e10955 instanceof Object) {
                      var ex__6959__auto__ = e10955;
                      var statearr_10956_10960 = state_10946;
                      statearr_10956_10960[5] = ex__6959__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10946);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e10955;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6957__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__10961 = state_10946;
                  state_10946 = G__10961;
                  continue;
                } else {
                  return ret_value__6957__auto__;
                }
                break;
              }
            };
            state_machine__6956__auto__ = function(state_10946) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6956__auto____0.call(this);
                case 1:
                  return state_machine__6956__auto____1.call(this, state_10946);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6956__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6956__auto____0;
            state_machine__6956__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6956__auto____1;
            return state_machine__6956__auto__;
          }();
        }(switch__6955__auto__, c__6970__auto__);
      }();
      var state__6972__auto__ = function() {
        var statearr_10957 = f__6971__auto__.call(null);
        statearr_10957[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6970__auto__;
        return statearr_10957;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6972__auto__);
    };
  }(c__6970__auto__));
  return c__6970__auto__;
};
gridlife.gridui.set_request_anim_frame_function = function set_request_anim_frame_function() {
  var std_function = window.requestAnimationFrame;
  var webkit_function = window.webkitRequestAnimationFrame;
  var moz_function = window.mozRequestAnimationFrame;
  var fallback_function = function(std_function, webkit_function, moz_function) {
    return function(callback) {
      return window.setTimeout(callback, 1E3 / 30);
    };
  }(std_function, webkit_function, moz_function);
  var use = function() {
    var or__3630__auto__ = std_function;
    if (cljs.core.truth_(or__3630__auto__)) {
      return or__3630__auto__;
    } else {
      var or__3630__auto____$1 = webkit_function;
      if (cljs.core.truth_(or__3630__auto____$1)) {
        return or__3630__auto____$1;
      } else {
        var or__3630__auto____$2 = moz_function;
        if (cljs.core.truth_(or__3630__auto____$2)) {
          return or__3630__auto____$2;
        } else {
          return fallback_function;
        }
      }
    }
  }();
  return window.requestAnimFrame = use;
};
gridlife.gridui.reduce_games = function reduce_games(result, game) {
  var vec__10964 = result;
  var gridmodel = cljs.core.nth.call(null, vec__10964, 0, null);
  var games = cljs.core.nth.call(null, vec__10964, 1, null);
  var repaint_instructions = cljs.core.nth.call(null, vec__10964, 2, null);
  var vec__10965 = cljs.core.truth_(gridlife.gridui.enabled_QMARK_.call(null, game)) ? gridlife.gamemodel.tick.call(null, game, gridmodel) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [gridmodel, game, repaint_instructions], null);
  var next_gridmodel = cljs.core.nth.call(null, vec__10965, 0, null);
  var new_game = cljs.core.nth.call(null, vec__10965, 1, null);
  var new_repaint_instructions = cljs.core.nth.call(null, vec__10965, 2, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [next_gridmodel, cljs.core.cons.call(null, new_game, games), cljs.core.into.call(null, repaint_instructions, new_repaint_instructions)], null);
};
gridlife.gridui.repaint = function repaint(repaint_instructions) {
  var seq__10970 = cljs.core.seq.call(null, repaint_instructions);
  var chunk__10971 = null;
  var count__10972 = 0;
  var i__10973 = 0;
  while (true) {
    if (i__10973 < count__10972) {
      var location_color = cljs.core._nth.call(null, chunk__10971, i__10973);
      cljs.core.async.put_BANG_.call(null, gridlife.gridui.render_chan, location_color);
      var G__10974 = seq__10970;
      var G__10975 = chunk__10971;
      var G__10976 = count__10972;
      var G__10977 = i__10973 + 1;
      seq__10970 = G__10974;
      chunk__10971 = G__10975;
      count__10972 = G__10976;
      i__10973 = G__10977;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__10970);
      if (temp__4126__auto__) {
        var seq__10970__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10970__$1)) {
          var c__4417__auto__ = cljs.core.chunk_first.call(null, seq__10970__$1);
          var G__10978 = cljs.core.chunk_rest.call(null, seq__10970__$1);
          var G__10979 = c__4417__auto__;
          var G__10980 = cljs.core.count.call(null, c__4417__auto__);
          var G__10981 = 0;
          seq__10970 = G__10978;
          chunk__10971 = G__10979;
          count__10972 = G__10980;
          i__10973 = G__10981;
          continue;
        } else {
          var location_color = cljs.core.first.call(null, seq__10970__$1);
          cljs.core.async.put_BANG_.call(null, gridlife.gridui.render_chan, location_color);
          var G__10982 = cljs.core.next.call(null, seq__10970__$1);
          var G__10983 = null;
          var G__10984 = 0;
          var G__10985 = 0;
          seq__10970 = G__10982;
          chunk__10971 = G__10983;
          count__10972 = G__10984;
          i__10973 = G__10985;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
gridlife.gridui.run_frame = function run_frame(app, last_time) {
  var current_time = (new Date).getTime();
  var difference = current_time - last_time;
  var max_moves_per_second = 15;
  var frame_rate_millis = 1E3 / max_moves_per_second;
  var gridmodel = (new cljs.core.Keyword(null, "gridmodel", "gridmodel", 2082730461)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app));
  if (cljs.core.truth_(function() {
    var and__3618__auto__ = difference > frame_rate_millis;
    if (and__3618__auto__) {
      return(new cljs.core.Keyword(null, "run", "run", -1821166653)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app));
    } else {
      return and__3618__auto__;
    }
  }())) {
    var vec__10987 = cljs.core.reduce.call(null, gridlife.gridui.reduce_games, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [gridmodel, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY], null), (new cljs.core.Keyword(null, "games", "games", 1927565374)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app)));
    var new_gridmodel = cljs.core.nth.call(null, vec__10987, 0, null);
    var new_games = cljs.core.nth.call(null, vec__10987, 1, null);
    var repaint_instructions = cljs.core.nth.call(null, vec__10987, 2, null);
    om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "gridmodel", "gridmodel", 2082730461), new_gridmodel);
    om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "games", "games", 1927565374), new_games);
    gridlife.gridui.repaint.call(null, repaint_instructions);
    return window.requestAnimFrame(function(vec__10987, new_gridmodel, new_games, repaint_instructions, current_time, difference, max_moves_per_second, frame_rate_millis, gridmodel) {
      return function() {
        return run_frame.call(null, app, current_time);
      };
    }(vec__10987, new_gridmodel, new_games, repaint_instructions, current_time, difference, max_moves_per_second, frame_rate_millis, gridmodel));
  } else {
    return window.requestAnimFrame(function(current_time, difference, max_moves_per_second, frame_rate_millis, gridmodel) {
      return function() {
        return run_frame.call(null, app, last_time);
      };
    }(current_time, difference, max_moves_per_second, frame_rate_millis, gridmodel));
  }
};
gridlife.gridui.init_grid_rendering = function init_grid_rendering(app) {
  gridlife.gridui.set_request_anim_frame_function.call(null);
  return window.requestAnimFrame(function() {
    return gridlife.gridui.run_frame.call(null, app, (new Date).getTime());
  });
};
gridlife.gridui.game_checkbox = function game_checkbox(game, _) {
  if (typeof gridlife.gridui.t10992 !== "undefined") {
  } else {
    gridlife.gridui.t10992 = function(_, game, game_checkbox, meta10993) {
      this._ = _;
      this.game = game;
      this.game_checkbox = game_checkbox;
      this.meta10993 = meta10993;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    gridlife.gridui.t10992.prototype.om$core$IRender$ = true;
    gridlife.gridui.t10992.prototype.om$core$IRender$render$arity$1 = function(___$1) {
      var self__ = this;
      var ___$2 = this;
      return React.DOM.div(null, sablono.interpreter.input.call(null, {"type":"checkbox", "checked":gridlife.gridui.enabled_QMARK_.call(null, cljs.core.deref.call(null, self__.game)), "onClick":function(___$2) {
        return function() {
          return gridlife.gridui.toggle_enabled.call(null, cljs.core.deref.call(null, self__.game));
        };
      }(___$2)}), function() {
        var attrs10995 = gridlife.gamemodel.game_name.call(null, cljs.core.deref.call(null, self__.game));
        return cljs.core.apply.call(null, React.DOM.label, cljs.core.map_QMARK_.call(null, attrs10995) ? sablono.interpreter.attributes.call(null, attrs10995) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs10995) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs10995)], null)));
      }());
    };
    gridlife.gridui.t10992.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10994) {
      var self__ = this;
      var _10994__$1 = this;
      return self__.meta10993;
    };
    gridlife.gridui.t10992.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10994, meta10993__$1) {
      var self__ = this;
      var _10994__$1 = this;
      return new gridlife.gridui.t10992(self__._, self__.game, self__.game_checkbox, meta10993__$1);
    };
    gridlife.gridui.t10992.cljs$lang$type = true;
    gridlife.gridui.t10992.cljs$lang$ctorStr = "gridlife.gridui/t10992";
    gridlife.gridui.t10992.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
      return cljs.core._write.call(null, writer__4218__auto__, "gridlife.gridui/t10992");
    };
    gridlife.gridui.__GT_t10992 = function __GT_t10992(___$1, game__$1, game_checkbox__$1, meta10993) {
      return new gridlife.gridui.t10992(___$1, game__$1, game_checkbox__$1, meta10993);
    };
  }
  return new gridlife.gridui.t10992(_, game, game_checkbox, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 12, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 183, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 175, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\src\\gridlife\\gridui.cljs"], 
  null));
};
gridlife.gridui.controls_component = function controls_component(app, _) {
  if (typeof gridlife.gridui.t11000 !== "undefined") {
  } else {
    gridlife.gridui.t11000 = function(_, app, controls_component, meta11001) {
      this._ = _;
      this.app = app;
      this.controls_component = controls_component;
      this.meta11001 = meta11001;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    gridlife.gridui.t11000.prototype.om$core$IRender$ = true;
    gridlife.gridui.t11000.prototype.om$core$IRender$render$arity$1 = function(___$1) {
      var self__ = this;
      var ___$2 = this;
      return React.DOM.div(null, React.DOM.div({"className":"btn-group btn-group-sm", "id":"buttons", "role":"group"}, React.DOM.button({"className":"btn btn-default", "type":"button", "onClick":function(___$2) {
        return function() {
          return om.core.transact_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "run", "run", -1821166653), cljs.core.not);
        };
      }(___$2)}, cljs.core.truth_((new cljs.core.Keyword(null, "run", "run", -1821166653)).cljs$core$IFn$_invoke$arity$1(self__.app)) ? "Stop" : "Start"), React.DOM.button({"className":"btn btn-default", "type":"button", "onClick":function(___$2) {
        return function() {
          return gridlife.gridui.reset_grid.call(null, self__.app);
        };
      }(___$2)}, "Reset")), function() {
        var attrs11003 = om.core.build_all.call(null, gridlife.gridui.game_checkbox, cljs.core.get.call(null, self__.app, new cljs.core.Keyword(null, "games", "games", 1927565374)));
        return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs11003) ? sablono.interpreter.attributes.call(null, attrs11003) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs11003) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs11003)], null)));
      }());
    };
    gridlife.gridui.t11000.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11002) {
      var self__ = this;
      var _11002__$1 = this;
      return self__.meta11001;
    };
    gridlife.gridui.t11000.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11002, meta11001__$1) {
      var self__ = this;
      var _11002__$1 = this;
      return new gridlife.gridui.t11000(self__._, self__.app, self__.controls_component, meta11001__$1);
    };
    gridlife.gridui.t11000.cljs$lang$type = true;
    gridlife.gridui.t11000.cljs$lang$ctorStr = "gridlife.gridui/t11000";
    gridlife.gridui.t11000.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
      return cljs.core._write.call(null, writer__4218__auto__, "gridlife.gridui/t11000");
    };
    gridlife.gridui.__GT_t11000 = function __GT_t11000(___$1, app__$1, controls_component__$1, meta11001) {
      return new gridlife.gridui.t11000(___$1, app__$1, controls_component__$1, meta11001);
    };
  }
  return new gridlife.gridui.t11000(_, app, controls_component, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 14, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 200, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 189, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\src\\gridlife\\gridui.cljs"], 
  null));
};
gridlife.gridui.grid_component = function grid_component(app, _) {
  if (typeof gridlife.gridui.t11007 !== "undefined") {
  } else {
    gridlife.gridui.t11007 = function(_, app, grid_component, meta11008) {
      this._ = _;
      this.app = app;
      this.grid_component = grid_component;
      this.meta11008 = meta11008;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    gridlife.gridui.t11007.prototype.om$core$IRender$ = true;
    gridlife.gridui.t11007.prototype.om$core$IRender$render$arity$1 = function(___$1) {
      var self__ = this;
      var ___$2 = this;
      var cells_wide = (new cljs.core.Keyword(null, "cells-wide", "cells-wide", -1579921448)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "gridmodel", "gridmodel", 2082730461)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.app)));
      var cells_high = (new cljs.core.Keyword(null, "cells-high", "cells-high", 1240084465)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "gridmodel", "gridmodel", 2082730461)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.app)));
      var pxwidth = gridlife.gridui.cell_size * cells_wide;
      var pxheight = gridlife.gridui.cell_size * cells_high;
      return React.DOM.div(null, React.DOM.canvas({"className":"canvas", "id":"canvas", "width":pxwidth, "height":pxheight}));
    };
    gridlife.gridui.t11007.prototype.om$core$IDidMount$ = true;
    gridlife.gridui.t11007.prototype.om$core$IDidMount$did_mount$arity$1 = function(___$1) {
      var self__ = this;
      var ___$2 = this;
      gridlife.gridui.reset_grid.call(null, self__.app);
      gridlife.gridui.handle_render_cell.call(null);
      return gridlife.gridui.init_grid_rendering.call(null, self__.app);
    };
    gridlife.gridui.t11007.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11009) {
      var self__ = this;
      var _11009__$1 = this;
      return self__.meta11008;
    };
    gridlife.gridui.t11007.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11009, meta11008__$1) {
      var self__ = this;
      var _11009__$1 = this;
      return new gridlife.gridui.t11007(self__._, self__.app, self__.grid_component, meta11008__$1);
    };
    gridlife.gridui.t11007.cljs$lang$type = true;
    gridlife.gridui.t11007.cljs$lang$ctorStr = "gridlife.gridui/t11007";
    gridlife.gridui.t11007.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
      return cljs.core._write.call(null, writer__4218__auto__, "gridlife.gridui/t11007");
    };
    gridlife.gridui.__GT_t11007 = function __GT_t11007(___$1, app__$1, grid_component__$1, meta11008) {
      return new gridlife.gridui.t11007(___$1, app__$1, grid_component__$1, meta11008);
    };
  }
  return new gridlife.gridui.t11007(_, app, grid_component, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 15, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 219, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 204, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\Users\\mhurd\\development\\gridlife\\src\\gridlife\\gridui.cljs"], 
  null));
};
om.core.root.call(null, gridlife.gridui.controls_component, gridlife.gridui.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById("controls")], null));
om.core.root.call(null, gridlife.gridui.grid_component, gridlife.gridui.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById("content")], null));
